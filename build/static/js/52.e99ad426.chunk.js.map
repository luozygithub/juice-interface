{"version":3,"sources":["utils/orEmpty.ts","constants/v2/currency.ts","providers/v2/V2CurrencyProvider.tsx","pages/create/ProjectPreview.tsx","pages/create/ProjectConfigurationFieldsContainer.tsx","components/v2/shared/FundingCycleConfigurationDrawers/NFTDrawer/PaymentThresholdFormItem.tsx","../node_modules/@ant-design/icons-svg/es/asn/UploadOutlined.js","../node_modules/@ant-design/icons/es/icons/UploadOutlined.js","components/v2/shared/FundingCycleConfigurationDrawers/NFTDrawer/NFTUpload.tsx","components/v2/shared/FundingCycleConfigurationDrawers/NFTDrawer/MaxSupplyFormItem.tsx","components/v2/shared/FundingCycleConfigurationDrawers/NFTDrawer/NFTRewardTierModal.tsx","components/v2/shared/FundingCycleConfigurationDrawers/NFTDrawer/NFTRewardTierCard.tsx","components/v2/shared/FundingCycleConfigurationDrawers/NFTDrawer/index.tsx","hooks/v2/nftRewards/NFTRewardsToIPFS.ts","utils/featureFlags.ts","pages/create/FundingCycleExplainer.tsx","pages/create/tabs/ReviewDeployTab/DeployProjectButton.tsx","hooks/v2/transactor/LaunchProjectTx.ts","pages/create/tabs/ReviewDeployTab/ProjectDetailsSection.tsx","pages/create/tabs/ReviewDeployTab/FundingSummarySection.tsx","pages/create/tabs/ReviewDeployTab/NFTSummarySection.tsx","pages/create/StartOverButton.tsx","pages/create/tabs/ReviewDeployTab/index.tsx","pages/create/V2WarningBanner.tsx","pages/create/index.tsx","pages/create/tabs/ProjectDetailsTab/ProjectDetailsTabContent.tsx","pages/create/tabs/FundingCycleTab/FundingCycleTabContent.tsx"],"names":["orEmpty","str","trim","length","V2_CURRENCY_CONTEXT","currencyMetadata","V2_CURRENCY_METADATA","currencies","ETH","V2_CURRENCY_ETH","USD","V2_CURRENCY_USD","V2CurrencyProvider","children","Provider","value","ProjectPreview","singleColumnLayout","projectMetadata","payoutGroupedSplits","reservedTokensGroupedSplits","useAppSelector","state","editingV2Project","fundingCycleMetadata","useEditingV2FundingCycleMetadataSelector","fundingCycleData","useEditingV2FundingCycleDataSelector","fundAccessConstraints","useEditingV2FundAccessConstraintsSelector","userAddress","useContext","NetworkContext","fundingCycle","number","BigNumber","from","configuration","basedOn","start","Date","now","div","metadata","fundAccessConstraint","getDefaultFundAccessConstraint","project","isPreviewMode","cv","isArchived","projectId","handle","undefined","createdAt","distributionLimit","distributionLimitCurrency","eq","payoutSplits","splits","reservedTokensSplits","usedDistributionLimit","ETHBalance","totalVolume","balanceInDistributionLimitCurrency","tokenAddress","terminals","primaryTerminal","tokenSymbol","projectOwnerAddress","ballotState","primaryTerminalCurrentOverflow","totalTokenSupply","loading","ETHBalanceLoading","balanceInDistributionLimitCurrencyLoading","distributionLimitLoading","fundingCycleLoading","usedDistributionLimitLoading","V2Project","expandFundingCycleCard","ProjectConfigurationFieldsContainer","showPreview","theme","colors","ThemeContext","gutter","md","xs","style","color","text","secondary","border","stroke","tertiary","padding","PaymentThresholdFormItem","form","Item","name","label","extra","rules","required","validator","getFieldValue","Promise","reject","resolve","FormattedNumberInput","accessory","InputAccessoryButton","content","disabled","UploadOutlined","props","ref","React","AntdIcon","_objectSpread","icon","UploadOutlinedSvg","displayName","ALLOWED_FILE_TYPES","NFTUpload","setLoading","useState","iconStyle","fontSize","action","primary","imageUrl","uploadButton","LoadingOutlined","marginTop","width","TooltipLabel","tip","listType","showUploadList","beforeUpload","file","fileIsAllowed","includes","type","isLt5000M","size","emitErrorNotification","customRequest","async","cid","newUrl","ipfsCidUrl","setFieldsValue","setValue","pinFileToIpfs","req","IpfsHash","src","alt","height","MaxSupplyFormItem","max","onClick","maxSupply","isInteger","NFTRewardTierModal","visible","rewardTier","onClose","mode","onChange","nftForm","useForm","useEffect","externalLink","description","paymentThreshold","okText","onOk","validateFields","newTier","parseFloat","resetFields","onCancel","title","NFT_REWARDS_EXPLAINATION","layout","autoComplete","TextArea","maxLength","showCount","autoSize","NFTRewardTierCard","onDelete","editTierModalVisible","setEditTierModalVisible","linkHover","setLinkHover","background","l0","display","cursor","justifyContent","flexDirection","alignItems","marginLeft","fontWeight","href","e","stopPropagation","onMouseEnter","onMouseLeave","LinkOutlined","Paragraph","characterLimit","DeleteOutlined","float","isCreate","NFTDrawer","dispatch","useAppDispatch","nftRewardTiers","addTierModalVisible","setAddTierModalVisible","submitLoading","setSubmitLoading","rewardTiers","setRewardTiers","onNftFormSaved","useCallback","nftRewards","toISOString","args","forEach","push","edition","isBooleanAmount","shouldPreferSymbol","minter","publishers","date","uri","image","attributes_tiers","attributes_supply","rights","console","info","response","fetch","method","headers","body","JSON","stringify","json","format","useNFTRewardsToIPFS","editingV2ProjectActions","setNftRewardTiers","setNftRewardsCid","FundingCycleDrawer","marginBottom","shadowCard","direction","map","index","newRewardTier","tier","i","handleEditRewardTier","handleDeleteRewardTier","tierIndex","slice","block","htmlType","FEATURE_FLAG_DEFAULTS","featureFlagKey","baseKey","readNetwork","featureFlagEnabled","featureFlag","defaultEnabled","featureFlagDefaultEnabled","parse","localStorage","getItem","FundingCycleExplainer","Callout","DeployProjectButton","launchProjectTx","transactor","contracts","V2UserContext","projectMetadataCID","groupedSplits","mustStartAtOrAfter","txOpts","JBController","JBETHPaymentTerminal","onDone","JUICEBOX_MONEY_METADATA_DOMAIN","address","useLaunchProjectTx","history","useHistory","onSelectWallet","deployLoading","setDeployLoading","transactionPending","setTransactionPending","nftRewardsCid","deployProject","Error","uploadedMetadata","uploadProjectMetadata","error","result","txHash","transaction","hash","txReceipt","receipt","retries","readProvider","getTransactionReceipt","r","setTimeout","findTransactionReceipt","projectIdHex","logs","topics","toNumber","getProjectIdFromReceipt","resetState","v2ProjectRoute","onCancelled","TransactionModal","ProjectDetailsSection","isMobile","useMobile","rowGutter","payButton","twitter","discord","wordBreak","ProjectLogo","logoUri","infoUri","payDisclosure","FundingSummarySection","currencyName","V2CurrencyName","hasDistributionLimit","Boolean","gte","MAX_DISTRIBUTION_LIMIT","unsafeFundingCycleProperties","getUnsafeV2FundingCycleProperties","duration","hasDuration","gt","initialIssuanceRate","formattedNum","formatIssuanceRate","weightedAmount","weight","reservedRate","parseEther","reservedPercentage","formatReservedRate","showDetail","showWarning","isInitial","inflationRate","toString","issuanceRate","discountRate","redemptionRate","pausePay","allowMinting","ballotAddress","ballot","currency","totalValue","showSplitValues","fundingCycleDuration","NFTSummarySection","borderBottom","paddingBottom","StartOverButton","startOverModalVisible","setStartOverModalVisible","useDispatch","go","V2WarningBanner","themeOption","brand","textAlign","ThemeOption","dark","over","InfoCircleOutlined","ExternalLink","textDecoration","helpPagePath","TabPane","Tabs","TabText","TABS","component","onFinish","projectForm","dispatchFormData","fields","getFieldsValue","setName","setInfoUri","setLogoUri","setDescription","setTwitter","setDiscord","setPayButton","setPayDisclosure","onProjectFormSaved","resetProjectForm","ProjectDetailsForm","hideProjectHandle","onValuesChange","saveButton","fundingDrawerVisible","setFundingDrawerVisible","tokenDrawerVisible","setTokenDrawerVisible","rulesDrawerVisible","setRulesDrawerVisible","NFTDrawerVisible","setNFTDrawerVisible","fundingDrawerSeen","setFundingDrawerSeen","tokenDrawerSeen","setTokenDrawerSeen","rulesDrawerSeen","setRulesDrawerSeen","NFTDrawerSeen","setNFTDrawerSeen","seenColor","closeDrawer","isNFTRewardsEnabled","RichButton","prefix","heading","CheckCircleFilled","primaryColor","FundingDrawer","TokenDrawer","RulesDrawer","V2Create","activeTab","setActiveTab","maxWidth","margin","activeKey","tabBarGutter","tab","idx","window","scrollTo"],"mappings":"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","file":"static/js/52.e99ad426.chunk.js","sourcesContent":["export const orEmpty = (str?: string) => (str && str.trim().length ? str : '--')\r\n","import {\r\n  V2_CURRENCY_ETH,\r\n  V2_CURRENCY_METADATA,\r\n  V2_CURRENCY_USD,\r\n} from 'utils/v2/currency'\r\n\r\nexport const V2_CURRENCY_CONTEXT = {\r\n  currencyMetadata: V2_CURRENCY_METADATA,\r\n  currencies: { ETH: V2_CURRENCY_ETH, USD: V2_CURRENCY_USD },\r\n}\r\n","import { CurrencyContext } from 'contexts/currencyContext'\r\nimport React from 'react'\r\n\r\nimport { V2_CURRENCY_CONTEXT } from 'constants/v2/currency'\r\n\r\nexport const V2CurrencyProvider: React.FC = ({ children }) => {\r\n  return (\r\n    <CurrencyContext.Provider value={V2_CURRENCY_CONTEXT}>\r\n      {children}\r\n    </CurrencyContext.Provider>\r\n  )\r\n}\r\n","import {\r\n  V2ProjectContext,\r\n  V2ProjectContextType,\r\n} from 'contexts/v2/projectContext'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { useContext } from 'react'\r\n\r\nimport {\r\n  useAppSelector,\r\n  useEditingV2FundAccessConstraintsSelector,\r\n  useEditingV2FundingCycleDataSelector,\r\n  useEditingV2FundingCycleMetadataSelector,\r\n} from 'hooks/AppSelector'\r\n\r\nimport { NetworkContext } from 'contexts/networkContext'\r\n\r\nimport { V2FundingCycle } from 'models/v2/fundingCycle'\r\n\r\nimport { getDefaultFundAccessConstraint } from 'utils/v2/fundingCycle'\r\nimport { V2_CURRENCY_ETH } from 'utils/v2/currency'\r\n\r\nimport V2Project from '../../components/v2/V2Project'\r\n\r\nexport default function ProjectPreview({\r\n  singleColumnLayout,\r\n}: {\r\n  singleColumnLayout?: boolean\r\n}) {\r\n  const { projectMetadata, payoutGroupedSplits, reservedTokensGroupedSplits } =\r\n    useAppSelector(state => state.editingV2Project)\r\n  const fundingCycleMetadata = useEditingV2FundingCycleMetadataSelector()\r\n  const fundingCycleData = useEditingV2FundingCycleDataSelector()\r\n  const fundAccessConstraints = useEditingV2FundAccessConstraintsSelector()\r\n  const { userAddress } = useContext(NetworkContext)\r\n\r\n  const fundingCycle: V2FundingCycle = {\r\n    ...fundingCycleData,\r\n    number: BigNumber.from(1),\r\n    configuration: BigNumber.from(0),\r\n    basedOn: BigNumber.from(0),\r\n    start: BigNumber.from(Date.now()).div(1000),\r\n    metadata: BigNumber.from(0),\r\n  }\r\n\r\n  const fundAccessConstraint = getDefaultFundAccessConstraint(\r\n    fundAccessConstraints,\r\n  )\r\n\r\n  const project: V2ProjectContextType = {\r\n    isPreviewMode: true,\r\n    cv: '2',\r\n    isArchived: false,\r\n\r\n    projectId: 0,\r\n    handle: undefined,\r\n    projectMetadata,\r\n\r\n    createdAt: undefined,\r\n\r\n    fundingCycle,\r\n    fundingCycleMetadata,\r\n\r\n    distributionLimit: fundAccessConstraint?.distributionLimit,\r\n    distributionLimitCurrency:\r\n      !fundAccessConstraint?.distributionLimitCurrency.eq(0)\r\n        ? fundAccessConstraint?.distributionLimitCurrency\r\n        : BigNumber.from(V2_CURRENCY_ETH),\r\n\r\n    payoutSplits: payoutGroupedSplits?.splits,\r\n    reservedTokensSplits: reservedTokensGroupedSplits?.splits,\r\n\r\n    usedDistributionLimit: BigNumber.from(0),\r\n    ETHBalance: BigNumber.from(0),\r\n    totalVolume: BigNumber.from(0),\r\n    balanceInDistributionLimitCurrency: BigNumber.from(0),\r\n\r\n    tokenAddress: undefined,\r\n    terminals: [],\r\n    primaryTerminal: undefined,\r\n    tokenSymbol: undefined,\r\n    projectOwnerAddress: userAddress,\r\n    ballotState: undefined,\r\n    primaryTerminalCurrentOverflow: undefined,\r\n    totalTokenSupply: undefined,\r\n\r\n    loading: {\r\n      ETHBalanceLoading: false,\r\n      balanceInDistributionLimitCurrencyLoading: false,\r\n      distributionLimitLoading: false,\r\n      fundingCycleLoading: false,\r\n      usedDistributionLimitLoading: false,\r\n    },\r\n  }\r\n\r\n  return (\r\n    <V2ProjectContext.Provider value={project}>\r\n      <div>\r\n        <V2Project\r\n          singleColumnLayout={singleColumnLayout}\r\n          expandFundingCycleCard\r\n        />\r\n      </div>\r\n    </V2ProjectContext.Provider>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { Col, Row } from 'antd'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { PropsWithChildren, useContext } from 'react'\r\n\r\nimport ProjectPreview from './ProjectPreview'\r\n\r\nconst FULL_WIDTH_PX = 24\r\n\r\nexport default function ProjectConfigurationFieldsContainer({\r\n  showPreview,\r\n  children,\r\n}: PropsWithChildren<{ showPreview?: boolean }>) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n  if (!showPreview) return <>{children}</>\r\n\r\n  return (\r\n    <Row gutter={50}>\r\n      <Col md={12} xs={FULL_WIDTH_PX}>\r\n        {children}\r\n      </Col>\r\n      <Col md={12} xs={FULL_WIDTH_PX}>\r\n        <h3\r\n          style={{\r\n            color: colors.text.secondary,\r\n          }}\r\n        >\r\n          <Trans>Preview</Trans>\r\n        </h3>\r\n\r\n        <div\r\n          style={{\r\n            border: `1px solid ${colors.stroke.tertiary}`,\r\n            padding: '1rem',\r\n          }}\r\n        >\r\n          <ProjectPreview singleColumnLayout />\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n","import { t, Trans } from '@lingui/macro'\r\nimport { Form, FormInstance } from 'antd'\r\nimport InputAccessoryButton from 'components/InputAccessoryButton'\r\nimport FormattedNumberInput from 'components/inputs/FormattedNumberInput'\r\n\r\nimport { NFTFormFields } from './NFTRewardTierModal'\r\n\r\nexport default function PaymentThresholdFormItem({\r\n  form,\r\n}: {\r\n  form: FormInstance<NFTFormFields>\r\n}) {\r\n  const validatePaymentThresholdAmount = () => {\r\n    const value = form.getFieldValue('paymentThreshold')\r\n    if (value === undefined || value <= 0) {\r\n      return Promise.reject(t`Amount required`)\r\n    }\r\n    return Promise.resolve()\r\n  }\r\n\r\n  return (\r\n    <Form.Item\r\n      name={'paymentThreshold'}\r\n      label={<Trans>Contribution threshold</Trans>}\r\n      extra={t`Contributors receive the NFT when they contribute at least this amount.`}\r\n      rules={[{ required: true, validator: validatePaymentThresholdAmount }]}\r\n    >\r\n      <FormattedNumberInput\r\n        accessory={<InputAccessoryButton content={'ETH'} disabled />}\r\n      />\r\n    </Form.Item>\r\n  )\r\n}\r\n","// This icon file is generated automatically.\nvar UploadOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M400 317.7h73.9V656c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V317.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 163a8 8 0 00-12.6 0l-112 141.7c-4.1 5.3-.4 13 6.3 13zM878 626h-60c-4.4 0-8 3.6-8 8v154H214V634c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v198c0 17.7 14.3 32 32 32h684c17.7 0 32-14.3 32-32V634c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"upload\", \"theme\": \"outlined\" };\nexport default UploadOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport UploadOutlinedSvg from \"@ant-design/icons-svg/es/asn/UploadOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar UploadOutlined = function UploadOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: UploadOutlinedSvg\n  }));\n};\n\nUploadOutlined.displayName = 'UploadOutlined';\nexport default /*#__PURE__*/React.forwardRef(UploadOutlined);","import { t, Trans } from '@lingui/macro'\r\nimport { Form, FormInstance, Upload } from 'antd'\r\nimport { RcFile } from 'antd/lib/upload'\r\nimport TooltipLabel from 'components/TooltipLabel'\r\nimport { CSSProperties, useContext, useState } from 'react'\r\n\r\nimport { LoadingOutlined, UploadOutlined } from '@ant-design/icons'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { emitErrorNotification } from 'utils/notifications'\r\nimport { ipfsCidUrl, pinFileToIpfs } from 'utils/ipfs'\r\n\r\nconst ALLOWED_FILE_TYPES = [\r\n  'image/jpeg',\r\n  'image/png',\r\n  'image/gif',\r\n  'video/mp4',\r\n  'video/webm',\r\n]\r\n\r\nexport default function NFTUpload({ form }: { form: FormInstance }) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n  const [loading, setLoading] = useState<boolean>()\r\n\r\n  const setValue = (cid?: string) => {\r\n    const newUrl = cid ? ipfsCidUrl(cid) : undefined\r\n    form.setFieldsValue({ imageUrl: newUrl })\r\n    setLoading(false)\r\n  }\r\n\r\n  // check file type and size\r\n  const beforeUpload = (file: RcFile) => {\r\n    const fileIsAllowed = ALLOWED_FILE_TYPES.includes(file.type)\r\n    const isLt5000M = file.size / 1024 / 1024 < 5000\r\n\r\n    if (!isLt5000M) {\r\n      emitErrorNotification('File must be less than 5000MB')\r\n    }\r\n    if (!fileIsAllowed) {\r\n      emitErrorNotification('File must be a JPG, PNG, GIF, MP4 or WEBM.')\r\n    }\r\n\r\n    return fileIsAllowed && isLt5000M\r\n  }\r\n\r\n  const iconStyle: CSSProperties = {\r\n    fontSize: '20px',\r\n    color: colors.text.action.primary,\r\n  }\r\n\r\n  const imageUrl = form.getFieldValue('imageUrl')\r\n\r\n  const validateImageUrl = () => {\r\n    if (imageUrl === undefined) {\r\n      return Promise.reject()\r\n    }\r\n    return Promise.resolve()\r\n  }\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      {loading ? (\r\n        <LoadingOutlined style={iconStyle} />\r\n      ) : (\r\n        <UploadOutlined style={iconStyle} />\r\n      )}\r\n      <div\r\n        style={{\r\n          marginTop: 8,\r\n          width: '100%',\r\n        }}\r\n      >\r\n        <div style={{ fontSize: 14 }}>\r\n          <strong>\r\n            <Trans>Upload an image or video</Trans>\r\n          </strong>\r\n        </div>\r\n        <div style={{ color: colors.text.tertiary, fontSize: 12 }}>\r\n          JPG, PNG, GIF, MP4, WEBM\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <Form.Item\r\n      name={'NFT'}\r\n      label={\r\n        <TooltipLabel\r\n          label={t`Image file`}\r\n          tip={t`Attach the image to be associated with this NFT.`}\r\n        />\r\n      }\r\n      rules={[{ required: true, validator: validateImageUrl }]}\r\n    >\r\n      <Upload\r\n        name=\"NFT\"\r\n        listType=\"picture-card\"\r\n        showUploadList={false}\r\n        beforeUpload={beforeUpload}\r\n        customRequest={async req => {\r\n          setLoading(true)\r\n          const res = await pinFileToIpfs(req.file)\r\n          setValue(res.IpfsHash)\r\n        }}\r\n      >\r\n        {imageUrl ? (\r\n          <img\r\n            src={imageUrl}\r\n            alt={form.getFieldValue('name') ?? 'new NFT'}\r\n            style={{\r\n              height: '100%',\r\n            }}\r\n          />\r\n        ) : (\r\n          uploadButton\r\n        )}\r\n      </Upload>\r\n    </Form.Item>\r\n  )\r\n}\r\n","import { t, Trans } from '@lingui/macro'\r\nimport { Form, FormInstance } from 'antd'\r\nimport InputAccessoryButton from 'components/InputAccessoryButton'\r\nimport FormattedNumberInput from 'components/inputs/FormattedNumberInput'\r\n\r\nimport { NFTFormFields } from './NFTRewardTierModal'\r\n\r\nexport default function MaxSupplyFormItem({\r\n  form,\r\n}: {\r\n  form: FormInstance<NFTFormFields>\r\n}) {\r\n  const validateMaxSupply = () => {\r\n    const value = form.getFieldValue('maxSupply')\r\n    if (value === undefined || value <= 0) {\r\n      return Promise.reject(t`Maximum supply required`)\r\n    }\r\n    return Promise.resolve()\r\n  }\r\n\r\n  return (\r\n    <Form.Item\r\n      name={'maxSupply'}\r\n      label={<Trans>Maximum supply</Trans>}\r\n      style={{ width: '100%' }}\r\n      extra={t`The maximum quantity of this NFT that can ever be minted.`}\r\n      rules={[{ required: true, validator: validateMaxSupply }]}\r\n    >\r\n      <FormattedNumberInput\r\n        max={1000}\r\n        accessory={\r\n          <InputAccessoryButton\r\n            content={t`MAX`}\r\n            onClick={() => form.setFieldsValue({ maxSupply: 1000 })}\r\n          />\r\n        }\r\n        isInteger\r\n      />\r\n    </Form.Item>\r\n  )\r\n}\r\n","import { t } from '@lingui/macro'\r\nimport { Form, Input, Modal } from 'antd'\r\nimport { useForm } from 'antd/lib/form/Form'\r\nimport { ModalMode } from 'components/formItems/formHelpers'\r\nimport { NFTRewardTier } from 'models/v2/nftRewardTier'\r\nimport TooltipLabel from 'components/TooltipLabel'\r\nimport { useEffect } from 'react'\r\n\r\nimport PaymentThresholdFormItem from './PaymentThresholdFormItem'\r\nimport NFTUpload from './NFTUpload'\r\nimport MaxSupplyFormItem from './MaxSupplyFormItem'\r\nimport { NFT_REWARDS_EXPLAINATION } from '.'\r\n\r\nexport type NFTFormFields = {\r\n  paymentThreshold: number\r\n  maxSupply: number\r\n  name: string\r\n  externalLink: string\r\n  description: string\r\n  imageUrl: string // IPFS link\r\n}\r\n\r\nexport default function NFTRewardTierModal({\r\n  visible,\r\n  rewardTier,\r\n  onClose,\r\n  mode,\r\n  onChange,\r\n}: {\r\n  visible: boolean\r\n  rewardTier?: NFTRewardTier // null when mode === 'Add'\r\n  onClose: VoidFunction\r\n  isCreate?: boolean\r\n  mode: ModalMode\r\n  onChange: (rewardTier: NFTRewardTier) => void\r\n}) {\r\n  const [nftForm] = useForm<NFTFormFields>()\r\n\r\n  const onFormSaved = async () => {\r\n    await nftForm.validateFields()\r\n\r\n    const newTier = {\r\n      paymentThreshold: parseFloat(nftForm.getFieldValue('paymentThreshold')),\r\n      maxSupply: nftForm.getFieldValue('maxSupply'),\r\n      imageUrl: nftForm.getFieldValue('imageUrl'),\r\n      name: nftForm.getFieldValue('name'),\r\n      externalLink: nftForm.getFieldValue('externalLink'),\r\n      description: nftForm.getFieldValue('description'),\r\n    } as NFTRewardTier\r\n\r\n    onChange(newTier)\r\n    onClose()\r\n\r\n    if (mode === 'Add') {\r\n      nftForm.resetFields()\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (rewardTier) {\r\n      nftForm.setFieldsValue({\r\n        imageUrl: rewardTier.imageUrl,\r\n        name: rewardTier.name,\r\n        externalLink: rewardTier.externalLink,\r\n        description: rewardTier.description,\r\n        paymentThreshold: rewardTier.paymentThreshold,\r\n        maxSupply: rewardTier.maxSupply,\r\n      })\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      okText={mode === 'Edit' ? t`Save NFT reward` : t`Add NFT reward`}\r\n      onOk={onFormSaved}\r\n      onCancel={onClose}\r\n      title={mode === 'Edit' ? t`Edit NFT reward` : t`Add NFT reward`}\r\n    >\r\n      <p>{NFT_REWARDS_EXPLAINATION}</p>\r\n      <Form layout=\"vertical\" form={nftForm}>\r\n        <PaymentThresholdFormItem form={nftForm} />\r\n        <MaxSupplyFormItem form={nftForm} />\r\n        <NFTUpload form={nftForm} />\r\n        <Form.Item\r\n          name={'name'}\r\n          label={\r\n            <TooltipLabel label={t`Name`} tip={t`Give this NFT a name.`} />\r\n          }\r\n          rules={[{ required: true }]}\r\n        >\r\n          <Input type=\"string\" autoComplete=\"off\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name={'externalLink'}\r\n          label={\r\n            <TooltipLabel\r\n              label={t`Website`}\r\n              tip={t`Provide a link to additional information about this NFT.`}\r\n            />\r\n          }\r\n        >\r\n          <Input type=\"string\" autoComplete=\"off\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={t`Description`}\r\n          name=\"description\"\r\n          rules={[{ max: 256 }]}\r\n        >\r\n          <Input.TextArea\r\n            maxLength={256} // TODO: unknown\r\n            showCount\r\n            autoSize\r\n          />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  )\r\n}\r\n","import { Button, Col, Row, Tooltip } from 'antd'\r\nimport Paragraph from 'components/Paragraph'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { NFTRewardTier } from 'models/v2/nftRewardTier'\r\nimport { useContext, useState } from 'react'\r\nimport { LinkOutlined, DeleteOutlined } from '@ant-design/icons'\r\nimport { Trans } from '@lingui/macro'\r\n\r\nimport NFTRewardTierModal from './NFTRewardTierModal'\r\n\r\nexport default function NFTRewardTierCard({\r\n  rewardTier,\r\n  onChange,\r\n  onDelete,\r\n}: {\r\n  rewardTier: NFTRewardTier\r\n  onChange: (rewardTier: NFTRewardTier) => void\r\n  onDelete: VoidFunction\r\n}) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n  const [editTierModalVisible, setEditTierModalVisible] =\r\n    useState<boolean>(false)\r\n  const [linkHover, setLinkHover] = useState<boolean>(false)\r\n\r\n  if (!rewardTier) return null\r\n  return (\r\n    <>\r\n      <Row\r\n        style={{\r\n          background: colors.background.l0,\r\n          border: `1px solid ${colors.stroke.tertiary}`,\r\n          display: 'flex',\r\n          width: '100%',\r\n          cursor: 'pointer',\r\n          padding: '15px 8px 15px 20px',\r\n        }}\r\n        onClick={() => setEditTierModalVisible(true)}\r\n      >\r\n        <Col\r\n          md={16}\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            flexDirection: 'column',\r\n          }}\r\n        >\r\n          <div style={{ display: 'flex', alignItems: 'center', fontSize: 17 }}>\r\n            <div style={{ color: colors.text.action.primary }}>\r\n              {rewardTier.paymentThreshold} ETH\r\n            </div>\r\n            <div style={{ display: 'flex', marginLeft: 45, fontWeight: 500 }}>\r\n              <span>{rewardTier.name}</span>\r\n              {rewardTier.externalLink ? (\r\n                <a\r\n                  href={rewardTier.externalLink}\r\n                  onClick={e => e.stopPropagation()}\r\n                  onMouseEnter={() => {\r\n                    setLinkHover(true)\r\n                  }}\r\n                  onMouseLeave={() => {\r\n                    setLinkHover(false)\r\n                  }}\r\n                  style={{\r\n                    marginLeft: 10,\r\n                    color: linkHover\r\n                      ? colors.text.action.primary\r\n                      : colors.text.primary,\r\n                  }}\r\n                >\r\n                  <LinkOutlined />\r\n                </a>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          {rewardTier.description && (\r\n            <div style={{ fontSize: 13, marginTop: 15 }}>\r\n              <Paragraph\r\n                description={rewardTier.description}\r\n                characterLimit={74}\r\n              />\r\n            </div>\r\n          )}\r\n        </Col>\r\n        <Col\r\n          md={5}\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <img src={rewardTier.imageUrl} alt={rewardTier.name} height=\"75px\" />\r\n        </Col>\r\n        <Col md={3}>\r\n          <Tooltip title={<Trans>Delete NFT</Trans>}>\r\n            <Button\r\n              type=\"text\"\r\n              onClick={e => {\r\n                onDelete()\r\n                // prevent opening modal\r\n                e.stopPropagation()\r\n              }}\r\n              icon={<DeleteOutlined />}\r\n              style={{ height: 16, float: 'right' }}\r\n            />\r\n          </Tooltip>\r\n        </Col>\r\n      </Row>\r\n      <NFTRewardTierModal\r\n        visible={editTierModalVisible}\r\n        rewardTier={rewardTier}\r\n        mode=\"Edit\"\r\n        onClose={() => setEditTierModalVisible(false)}\r\n        onChange={onChange}\r\n        isCreate\r\n      />\r\n    </>\r\n  )\r\n}\r\n","import { t, Trans } from '@lingui/macro'\r\nimport { Button, Space } from 'antd'\r\nimport NFTRewardTierModal from 'components/v2/shared/FundingCycleConfigurationDrawers/NFTDrawer/NFTRewardTierModal'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\n\r\nimport { useAppDispatch } from 'hooks/AppDispatch'\r\nimport { useAppSelector } from 'hooks/AppSelector'\r\nimport { NFTRewardTier } from 'models/v2/nftRewardTier'\r\nimport { useCallback, useContext, useState } from 'react'\r\nimport { editingV2ProjectActions } from 'redux/slices/editingV2Project'\r\nimport useNFTRewardsToIPFS from 'hooks/v2/nftRewards/NFTRewardsToIPFS'\r\n\r\nimport { shadowCard } from 'constants/styles/shadowCard'\r\n\r\nimport FundingCycleDrawer from '../FundingCycleDrawer'\r\nimport NFTRewardTierCard from './NFTRewardTierCard'\r\n\r\nexport const NFT_REWARDS_EXPLAINATION: JSX.Element = (\r\n  <Trans>\r\n    Reward contributors with NFTs when they meet your configured funding\r\n    criteria.\r\n  </Trans>\r\n)\r\n\r\nexport default function NFTDrawer({\r\n  visible,\r\n  onClose,\r\n}: {\r\n  visible: boolean\r\n  onClose: VoidFunction\r\n}) {\r\n  const {\r\n    theme,\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n  const dispatch = useAppDispatch()\r\n  const { nftRewardTiers } = useAppSelector(state => state.editingV2Project)\r\n\r\n  const [addTierModalVisible, setAddTierModalVisible] = useState<boolean>(false)\r\n  const [submitLoading, setSubmitLoading] = useState<boolean>(false)\r\n\r\n  const [rewardTiers, setRewardTiers] = useState<NFTRewardTier[]>(\r\n    nftRewardTiers ?? [],\r\n  )\r\n\r\n  const onNftFormSaved = useCallback(async () => {\r\n    setSubmitLoading(true)\r\n    // Calls cloud function to store NFTRewards to IPFS\r\n    const cid = await useNFTRewardsToIPFS(rewardTiers)\r\n    dispatch(editingV2ProjectActions.setNftRewardTiers(rewardTiers))\r\n    // Store cid (link to nfts on IPFS) to be used later in the deploy tx\r\n    dispatch(editingV2ProjectActions.setNftRewardsCid(cid))\r\n    setSubmitLoading(false)\r\n    onClose?.()\r\n  }, [rewardTiers, dispatch, onClose])\r\n\r\n  const handleAddRewardTier = (newRewardTier: NFTRewardTier) => {\r\n    setRewardTiers([...rewardTiers, newRewardTier])\r\n  }\r\n\r\n  const handleEditRewardTier = ({\r\n    index,\r\n    newRewardTier,\r\n  }: {\r\n    index: number\r\n    newRewardTier: NFTRewardTier\r\n  }) => {\r\n    return rewardTiers.map((tier, i) =>\r\n      i === index\r\n        ? {\r\n            ...tier,\r\n            ...newRewardTier,\r\n          }\r\n        : tier,\r\n    )\r\n  }\r\n\r\n  const handleDeleteRewardTier = (tierIndex: number) => {\r\n    setRewardTiers([\r\n      ...rewardTiers.slice(0, tierIndex),\r\n      ...rewardTiers.slice(tierIndex + 1),\r\n    ])\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <FundingCycleDrawer\r\n        title={t`NFT rewards`}\r\n        visible={visible}\r\n        onClose={onClose}\r\n      >\r\n        <div\r\n          style={{\r\n            padding: '2rem',\r\n            marginBottom: 10,\r\n            ...shadowCard(theme),\r\n            color: colors.text.primary,\r\n          }}\r\n        >\r\n          <p>{NFT_REWARDS_EXPLAINATION}</p>\r\n          <Space direction=\"vertical\" size=\"large\" style={{ width: '100%' }}>\r\n            {rewardTiers.map((rewardTier, index) => (\r\n              <NFTRewardTierCard\r\n                key={index}\r\n                rewardTier={rewardTier}\r\n                onChange={newRewardTier =>\r\n                  handleEditRewardTier({ newRewardTier, index })\r\n                }\r\n                onDelete={() => handleDeleteRewardTier(index)}\r\n              />\r\n            ))}\r\n          </Space>\r\n          <Button\r\n            type=\"dashed\"\r\n            onClick={() => {\r\n              setAddTierModalVisible(true)\r\n            }}\r\n            style={{ marginTop: 15 }}\r\n            block\r\n          >\r\n            <Trans>Add reward tier</Trans>\r\n          </Button>\r\n        </div>\r\n        <Button\r\n          onClick={onNftFormSaved}\r\n          htmlType=\"submit\"\r\n          type=\"primary\"\r\n          loading={submitLoading}\r\n          style={{ marginTop: 30 }}\r\n        >\r\n          <span>\r\n            <Trans>Save NFT rewards</Trans>\r\n          </span>\r\n        </Button>\r\n      </FundingCycleDrawer>\r\n      <NFTRewardTierModal\r\n        visible={addTierModalVisible}\r\n        onChange={handleAddRewardTier}\r\n        mode=\"Add\"\r\n        onClose={() => setAddTierModalVisible(false)}\r\n        isCreate\r\n      />\r\n    </>\r\n  )\r\n}\r\n","import { NFTRewardTier } from 'models/v2/nftRewardTier'\r\n\r\ntype CloudFunctionRewardTier = {\r\n  edition: number\r\n  isBooleanAmount: boolean\r\n  name: string\r\n  description: string\r\n  shouldPreferSymbol: boolean\r\n  minter: string\r\n  publishers: string\r\n  date: string //\"2022-03-04T12:09:18.159Z\",\r\n  uri: string\r\n  image: string\r\n  attributes_tiers: number\r\n  attributes_supply: number\r\n  rights: string\r\n}\r\n\r\n// Calls a cloudfunction to upload to IPFS created by @tankbottoms\r\n// Returns cid which points to where this NFT data is stored on IPFS\r\nexport default async function useNFTRewardsToIPFS(\r\n  nftRewards: NFTRewardTier[],\r\n): Promise<string> {\r\n  const now = new Date().toISOString()\r\n  const args: CloudFunctionRewardTier[] = []\r\n  nftRewards.forEach(rewardTier => {\r\n    args.push({\r\n      edition: 0,\r\n      isBooleanAmount: true,\r\n      name: rewardTier.name,\r\n      description: rewardTier.description ?? '',\r\n      shouldPreferSymbol: false,\r\n      minter: 'JuiceboxDAO',\r\n      publishers: 'JuiceboxDAO',\r\n      date: now,\r\n      uri: rewardTier.externalLink,\r\n      image: rewardTier.imageUrl,\r\n      attributes_tiers: rewardTier.paymentThreshold,\r\n      attributes_supply: rewardTier.maxSupply,\r\n      rights: '',\r\n    })\r\n  })\r\n\r\n  console.info('>>> Calling IPFS CloudFunction with args: ', args)\r\n\r\n  const response = await fetch(\r\n    'https://us-central1-ipfs-scratch-space.cloudfunctions.net/pinning',\r\n    {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        json: args,\r\n        format: 'json',\r\n      }),\r\n    },\r\n  )\r\n\r\n  const { cid } = await response.json()\r\n  console.info('>>> IPFS CloudFunction returned cid: ', cid)\r\n  return cid\r\n}\r\n","import { readNetwork } from 'constants/networks'\r\n\r\nconst FEATURE_FLAG_DEFAULTS: { [k: string]: { [j: string]: boolean } } = {}\r\n\r\nconst featureFlagKey = (baseKey: string) => {\r\n  return `${baseKey}_${readNetwork.name}`\r\n}\r\n\r\nconst setFeatureFlag = (featureFlag: string, enabled: boolean) => {\r\n  localStorage.setItem(featureFlagKey(featureFlag), JSON.stringify(enabled))\r\n}\r\n\r\nexport const enableFeatureFlag = (featureFlag: string) => {\r\n  setFeatureFlag(featureFlag, true)\r\n}\r\n\r\nexport const disableFeatureFlag = (featureFlag: string) => {\r\n  setFeatureFlag(featureFlag, false)\r\n}\r\n\r\nconst featureFlagDefaultEnabled = (featureFlag: string) => {\r\n  // if default-enabled for this environment, return true\r\n  const defaultEnabled =\r\n    FEATURE_FLAG_DEFAULTS[featureFlag]?.[readNetwork.name as string]\r\n\r\n  return defaultEnabled\r\n}\r\n\r\nexport const featureFlagEnabled = (featureFlag: string) => {\r\n  // if default-enabled for this environment, return trues\r\n  const defaultEnabled = featureFlagDefaultEnabled(featureFlag)\r\n\r\n  try {\r\n    return JSON.parse(\r\n      localStorage.getItem(featureFlagKey(featureFlag)) || `${defaultEnabled}`,\r\n    )\r\n  } catch (e) {\r\n    return defaultEnabled\r\n  }\r\n}\r\n","import Callout from '../../components/Callout'\r\n\r\nexport default function FundingCycleExplainer() {\r\n  return (\r\n    <Callout>\r\n      <p>\r\n        Funding Cycle #1 will start immediately after you deploy your project.\r\n        Once deployed, <strong>Funding Cycle #1 can't be reconfigured</strong>.\r\n      </p>\r\n      <p>\r\n        You can reconfigure your project's next funding cycle (Funding Cycle #2)\r\n        at any time within the bounds of the rules you set below.\r\n      </p>\r\n    </Callout>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { Button } from 'antd'\r\nimport {\r\n  useAppSelector,\r\n  useEditingV2FundAccessConstraintsSelector,\r\n  useEditingV2FundingCycleDataSelector,\r\n  useEditingV2FundingCycleMetadataSelector,\r\n} from 'hooks/AppSelector'\r\nimport { useLaunchProjectTx } from 'hooks/v2/transactor/LaunchProjectTx'\r\nimport { useCallback, useContext, useState } from 'react'\r\nimport { uploadProjectMetadata } from 'utils/ipfs'\r\nimport { TransactionReceipt } from '@ethersproject/providers'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { NetworkContext } from 'contexts/networkContext'\r\n\r\nimport TransactionModal from 'components/TransactionModal'\r\n\r\nimport { useAppDispatch } from 'hooks/AppDispatch'\r\n\r\nimport { editingV2ProjectActions } from 'redux/slices/editingV2Project'\r\n\r\nimport { v2ProjectRoute } from 'utils/routes'\r\n\r\nimport { readProvider } from 'constants/readProvider'\r\nimport { readNetwork } from 'constants/networks'\r\n\r\nconst CREATE_EVENT_IDX = 0\r\nconst PROJECT_ID_TOPIC_IDX = 3\r\n\r\n// TODO: prepare for Tank's multicall function\r\n// type GasOfTx = {\r\n//   loading: boolean,\r\n//   value: BigNumber | undefined // gas in wei\r\n// }\r\n\r\nconst findTransactionReceipt = async (txHash: string) => {\r\n  let retries = 5\r\n  let receipt\r\n  while (retries > 0 && !receipt) {\r\n    receipt = await readProvider.getTransactionReceipt(txHash)\r\n    if (receipt) break\r\n\r\n    retries -= 1\r\n    // wait 2s\r\n    await new Promise(r => setTimeout(r, 2000))\r\n    console.info('Retrying tx receipt lookup...')\r\n  }\r\n\r\n  return receipt\r\n}\r\n\r\n/**\r\n * Return the project ID created from a `launchProjectFor` transaction.\r\n * @param txReceipt receipt of `launchProjectFor` transaction\r\n */\r\nconst getProjectIdFromReceipt = (txReceipt: TransactionReceipt): number => {\r\n  const projectIdHex =\r\n    txReceipt?.logs[CREATE_EVENT_IDX]?.topics?.[PROJECT_ID_TOPIC_IDX]\r\n  const projectId = BigNumber.from(projectIdHex).toNumber()\r\n\r\n  return projectId\r\n}\r\n\r\nexport default function DeployProjectButton() {\r\n  const launchProjectTx = useLaunchProjectTx()\r\n  const history = useHistory()\r\n\r\n  const { userAddress, onSelectWallet } = useContext(NetworkContext)\r\n\r\n  const [deployLoading, setDeployLoading] = useState<boolean>()\r\n  const [transactionPending, setTransactionPending] = useState<boolean>()\r\n\r\n  // TODO: prepare for Tank's multicall function\r\n  // const [nftTxGas, setNftTxGas] = useState<GasOfTx>({loading: false, value: undefined})\r\n  // const [launchTxGas, setLaunchTxGas] = useState<GasOfTx>({loading: false, value: undefined})\r\n\r\n  const {\r\n    projectMetadata,\r\n    reservedTokensGroupedSplits,\r\n    payoutGroupedSplits,\r\n    nftRewardsCid,\r\n  } = useAppSelector(state => state.editingV2Project)\r\n  const fundingCycleMetadata = useEditingV2FundingCycleMetadataSelector()\r\n  const fundingCycleData = useEditingV2FundingCycleDataSelector()\r\n  const fundAccessConstraints = useEditingV2FundAccessConstraintsSelector()\r\n  const dispatch = useAppDispatch()\r\n\r\n  const deployProject = useCallback(async () => {\r\n    setDeployLoading(true)\r\n    if (\r\n      !(\r\n        projectMetadata?.name &&\r\n        fundingCycleData &&\r\n        fundingCycleMetadata &&\r\n        fundAccessConstraints\r\n      )\r\n    ) {\r\n      setDeployLoading(false)\r\n      throw new Error('Error deploying project.')\r\n    }\r\n\r\n    // Upload project metadata\r\n    const uploadedMetadata = await uploadProjectMetadata(projectMetadata)\r\n\r\n    if (!uploadedMetadata.IpfsHash) {\r\n      console.error('Failed to upload project metadata.')\r\n      setDeployLoading(false)\r\n      return\r\n    }\r\n\r\n    const groupedSplits = [payoutGroupedSplits, reservedTokensGroupedSplits]\r\n    if (nftRewardsCid) {\r\n      // TODO: Set loading states true of nftTxGas and launchTxGas.\r\n      // Call gas reader for gas of nft tx and launch tx within multicall.\r\n      // Set value and loading states of nftTxGas and launchTxGas.\r\n      // setGasReaderModalVisible(true)\r\n    }\r\n    const txSuccessful = await launchProjectTx(\r\n      {\r\n        projectMetadataCID: uploadedMetadata.IpfsHash,\r\n        fundingCycleData,\r\n        fundingCycleMetadata,\r\n        fundAccessConstraints,\r\n        groupedSplits,\r\n      },\r\n      {\r\n        onDone() {\r\n          console.info('Transaction executed. Awaiting confirmation...')\r\n          setTransactionPending(true)\r\n        },\r\n        async onConfirmed(result) {\r\n          const txHash = result?.transaction?.hash\r\n          if (!txHash) {\r\n            return // TODO error notififcation\r\n          }\r\n\r\n          const txReceipt = await findTransactionReceipt(txHash)\r\n          if (!txReceipt) {\r\n            return // TODO error notififcation\r\n          }\r\n          console.info('Found tx receipt.')\r\n\r\n          const projectId = getProjectIdFromReceipt(txReceipt)\r\n          if (projectId === undefined) {\r\n            return // TODO error notififcation\r\n          }\r\n\r\n          // Reset Redux state/localstorage after deploying\r\n          dispatch(editingV2ProjectActions.resetState())\r\n\r\n          history.push(`${v2ProjectRoute({ projectId })}?newDeploy=true`)\r\n        },\r\n        onCancelled() {\r\n          setDeployLoading(false)\r\n          setTransactionPending(false)\r\n        },\r\n      },\r\n    )\r\n\r\n    if (!txSuccessful) {\r\n      setDeployLoading(false)\r\n      setTransactionPending(false)\r\n    }\r\n  }, [\r\n    launchProjectTx,\r\n    projectMetadata,\r\n    payoutGroupedSplits,\r\n    reservedTokensGroupedSplits,\r\n    fundingCycleData,\r\n    fundingCycleMetadata,\r\n    fundAccessConstraints,\r\n    history,\r\n    nftRewardsCid,\r\n    dispatch,\r\n  ])\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={userAddress ? deployProject : onSelectWallet}\r\n        type=\"primary\"\r\n        htmlType=\"submit\"\r\n        size=\"large\"\r\n        disabled={!projectMetadata?.name}\r\n        loading={deployLoading}\r\n      >\r\n        <span>\r\n          {userAddress ? (\r\n            <Trans>Deploy project to {readNetwork.name}</Trans>\r\n          ) : (\r\n            <Trans>Connect wallet to deploy</Trans>\r\n          )}\r\n        </span>\r\n      </Button>\r\n      <TransactionModal\r\n        transactionPending={transactionPending}\r\n        visible={transactionPending}\r\n      />\r\n      {/* TODO: Inside GasReaderModal, call multicall contract onConfirm */}\r\n      {/* <GasReaderModal \r\n        nftTxGas={nftTxGas}\r\n        launchTxGas={launchTxGas}\r\n        nftRewardsCid={nftRewardsCid}\r\n      />   */}\r\n    </>\r\n  )\r\n}\r\n","import { NetworkContext } from 'contexts/networkContext'\r\nimport { V2UserContext } from 'contexts/v2/userContext'\r\nimport { useContext } from 'react'\r\nimport {\r\n  V2FundAccessConstraint,\r\n  V2FundingCycleData,\r\n  V2FundingCycleMetadata,\r\n} from 'models/v2/fundingCycle'\r\n\r\nimport { GroupedSplits, SplitGroup } from 'models/v2/splits'\r\n\r\nimport { TransactorInstance } from '../../Transactor'\r\nimport { JUICEBOX_MONEY_METADATA_DOMAIN } from 'constants/v2/metadataDomain'\r\n\r\nconst DEFAULT_MUST_START_AT_OR_AFTER = '1' // start immediately\r\nconst DEFAULT_MEMO = ''\r\n\r\nexport function useLaunchProjectTx(): TransactorInstance<{\r\n  projectMetadataCID: string\r\n  fundingCycleData: V2FundingCycleData\r\n  fundingCycleMetadata: V2FundingCycleMetadata\r\n  fundAccessConstraints: V2FundAccessConstraint[]\r\n  groupedSplits?: GroupedSplits<SplitGroup>[]\r\n  mustStartAtOrAfter?: string // epoch seconds. anything less than \"now\" will start immediately.\r\n}> {\r\n  const { transactor, contracts } = useContext(V2UserContext)\r\n  const { userAddress } = useContext(NetworkContext)\r\n\r\n  return (\r\n    {\r\n      projectMetadataCID,\r\n      fundingCycleData,\r\n      fundingCycleMetadata,\r\n      fundAccessConstraints,\r\n      groupedSplits = [],\r\n      mustStartAtOrAfter = DEFAULT_MUST_START_AT_OR_AFTER,\r\n    },\r\n    txOpts,\r\n  ) => {\r\n    if (\r\n      !transactor ||\r\n      !userAddress ||\r\n      !contracts?.JBController ||\r\n      !contracts.JBETHPaymentTerminal\r\n    ) {\r\n      txOpts?.onDone?.()\r\n      return Promise.resolve(false)\r\n    }\r\n\r\n    const args = [\r\n      userAddress, // _owner\r\n      [projectMetadataCID, JUICEBOX_MONEY_METADATA_DOMAIN], // _projectMetadata (JBProjectMetadata)\r\n      fundingCycleData, // _data (JBFundingCycleData)\r\n      fundingCycleMetadata, // _metadata (JBFundingCycleMetadata)\r\n      mustStartAtOrAfter, // _mustStartAtOrAfter\r\n      groupedSplits, // _groupedSplits,\r\n      fundAccessConstraints, // _fundAccessConstraints,\r\n      [contracts.JBETHPaymentTerminal.address], //  _terminals (contract address of the JBETHPaymentTerminal)\r\n      DEFAULT_MEMO,\r\n    ]\r\n\r\n    return transactor(contracts.JBController, 'launchProjectFor', args, txOpts)\r\n  }\r\n}\r\n","import { t, Trans } from '@lingui/macro'\r\nimport { Col, Row, Statistic } from 'antd'\r\nimport ProjectLogo from 'components/ProjectLogo'\r\nimport TooltipLabel from 'components/TooltipLabel'\r\nimport { useAppSelector } from 'hooks/AppSelector'\r\nimport useMobile from 'hooks/Mobile'\r\nimport { orEmpty } from 'utils/orEmpty'\r\n\r\nimport { rowGutter } from '.'\r\n\r\nexport default function ProjectDetailsSection() {\r\n  const isMobile = useMobile()\r\n\r\n  const { projectMetadata } = useAppSelector(state => state.editingV2Project)\r\n\r\n  return (\r\n    <div style={{ marginBottom: '2rem' }}>\r\n      <h2 style={{ marginBottom: 0 }}>\r\n        <Trans>Project details</Trans>\r\n      </h2>\r\n      <p>\r\n        <Trans>Project details can be edited at any time.</Trans>\r\n      </p>\r\n      <Row gutter={rowGutter} style={{ marginBottom: 30 }}>\r\n        <Col md={6} xs={12}>\r\n          <Statistic title={t`Name`} value={orEmpty(projectMetadata.name)} />\r\n        </Col>\r\n        <Col md={6} xs={12}>\r\n          <Statistic\r\n            title={t`Pay button text`}\r\n            value={\r\n              projectMetadata.payButton ? projectMetadata.payButton : t`Pay`\r\n            }\r\n          />\r\n        </Col>\r\n        <Col md={6} xs={12}>\r\n          <Statistic\r\n            title={t`Twitter`}\r\n            value={\r\n              projectMetadata.twitter\r\n                ? '@' + projectMetadata.twitter\r\n                : orEmpty(undefined)\r\n            }\r\n          />\r\n        </Col>\r\n        <Col md={6} xs={12}>\r\n          <Statistic\r\n            title={t`Discord`}\r\n            value={orEmpty(projectMetadata.discord)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={rowGutter} style={{ wordBreak: 'break-all' }}>\r\n        <Col md={6} xs={12}>\r\n          <Statistic title={t`Logo`} value={' '} />\r\n          <div style={{ marginTop: -20 }}>\r\n            <ProjectLogo\r\n              uri={projectMetadata.logoUri}\r\n              name={projectMetadata.name}\r\n              size={isMobile ? 50 : 80}\r\n            />\r\n          </div>\r\n        </Col>\r\n        <Col md={6} xs={12}>\r\n          <Statistic\r\n            title={t`Website`}\r\n            value={orEmpty(projectMetadata.infoUri)}\r\n          />\r\n        </Col>\r\n        <Col md={12} xs={24}>\r\n          <Statistic\r\n            title={\r\n              <TooltipLabel\r\n                label={t`Pay disclosure`}\r\n                tip={t`Contributors will see this message before they pay your project.`}\r\n              />\r\n            }\r\n            value={orEmpty(projectMetadata.payDisclosure)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { Col, Row, Space } from 'antd'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { parseEther } from '@ethersproject/units'\r\n\r\nimport {\r\n  useAppSelector,\r\n  useEditingV2FundAccessConstraintsSelector,\r\n  useEditingV2FundingCycleDataSelector,\r\n  useEditingV2FundingCycleMetadataSelector,\r\n} from 'hooks/AppSelector'\r\nimport { V2CurrencyOption } from 'models/v2/currencyOption'\r\nimport { useContext } from 'react'\r\nimport { formattedNum } from 'utils/formatNumber'\r\nimport { V2CurrencyName } from 'utils/v2/currency'\r\nimport {\r\n  getDefaultFundAccessConstraint,\r\n  getUnsafeV2FundingCycleProperties,\r\n} from 'utils/v2/fundingCycle'\r\nimport {\r\n  formatIssuanceRate,\r\n  formatReservedRate,\r\n  MAX_DISTRIBUTION_LIMIT,\r\n  weightedAmount,\r\n} from 'utils/v2/math'\r\nimport { NetworkContext } from 'contexts/networkContext'\r\n\r\nimport { V2FundingCycle } from 'models/v2/fundingCycle'\r\n\r\nimport { rowGutter } from '.'\r\n\r\nimport {\r\n  AllowMintingStatistic,\r\n  DiscountRateStatistic,\r\n  DistributionLimitStatistic,\r\n  DurationStatistic,\r\n  IssuanceRateStatistic,\r\n  PausePayStatistic,\r\n  ReconfigurationStatistic,\r\n  RedemptionRateStatistic,\r\n  ReservedTokensStatistic,\r\n  DistributionSplitsStatistic,\r\n  ReservedSplitsStatistic,\r\n  InflationRateStatistic,\r\n} from './FundingAttributes'\r\n\r\nexport default function FundingSummarySection() {\r\n  const { payoutGroupedSplits, reservedTokensGroupedSplits } = useAppSelector(\r\n    state => state.editingV2Project,\r\n  )\r\n\r\n  const { userAddress } = useContext(NetworkContext)\r\n\r\n  const fundingCycleData = useEditingV2FundingCycleDataSelector()\r\n  const fundAccessConstraints = useEditingV2FundAccessConstraintsSelector()\r\n\r\n  const fundingCycle: V2FundingCycle = {\r\n    ...fundingCycleData,\r\n    number: BigNumber.from(1),\r\n    configuration: BigNumber.from(0),\r\n    basedOn: BigNumber.from(0),\r\n    start: BigNumber.from(Date.now()).div(1000),\r\n    metadata: BigNumber.from(0),\r\n  }\r\n\r\n  const fundingCycleMetadata = useEditingV2FundingCycleMetadataSelector()\r\n\r\n  const fundAccessConstraint = getDefaultFundAccessConstraint(\r\n    fundAccessConstraints,\r\n  )\r\n\r\n  const currencyName = V2CurrencyName(\r\n    fundAccessConstraint?.distributionLimitCurrency.toNumber() as V2CurrencyOption,\r\n  )\r\n\r\n  const distributionLimit =\r\n    fundAccessConstraint?.distributionLimit ?? BigNumber.from(0)\r\n  const hasDistributionLimit = Boolean(\r\n    distributionLimit && !distributionLimit.gte(MAX_DISTRIBUTION_LIMIT),\r\n  )\r\n\r\n  const unsafeFundingCycleProperties =\r\n    getUnsafeV2FundingCycleProperties(fundingCycle)\r\n\r\n  const duration = fundingCycle.duration\r\n  const hasDuration = duration?.gt(0)\r\n\r\n  const initialIssuanceRate =\r\n    formattedNum(\r\n      formatIssuanceRate(\r\n        weightedAmount(\r\n          fundingCycle?.weight,\r\n          fundingCycleMetadata?.reservedRate.toNumber(),\r\n          parseEther('1'),\r\n          'payer',\r\n        ),\r\n      ),\r\n    ) ?? '0'\r\n\r\n  const reservedPercentage = parseFloat(\r\n    formatReservedRate(fundingCycleMetadata?.reservedRate),\r\n  )\r\n\r\n  const reservedRate =\r\n    formattedNum(\r\n      formatIssuanceRate(\r\n        weightedAmount(\r\n          fundingCycle?.weight,\r\n          fundingCycleMetadata?.reservedRate.toNumber(),\r\n          parseEther('1'),\r\n          'reserved',\r\n        ) ?? '',\r\n      ),\r\n    ) ?? '0'\r\n\r\n  return (\r\n    <div style={{ marginTop: 20 }}>\r\n      <h2 style={{ marginBottom: 0 }}>\r\n        <Trans>Funding cycle details</Trans>\r\n      </h2>\r\n      <p style={{ marginBottom: 15 }}>\r\n        {hasDuration ? (\r\n          <Trans>\r\n            Once launched, your first funding cycle{' '}\r\n            <strong>can't be changed</strong>. You can reconfigure upcoming\r\n            funding cycles according to the project's{' '}\r\n            <strong>reconfiguration rules</strong>.\r\n          </Trans>\r\n        ) : (\r\n          <Trans>\r\n            Since you have not set a funding duration, changes to these settings\r\n            will be applied immediately.\r\n          </Trans>\r\n        )}\r\n      </p>\r\n      <Space size=\"large\" direction=\"vertical\" style={{ width: '100%' }}>\r\n        <DistributionLimitStatistic\r\n          distributionLimit={distributionLimit}\r\n          currencyName={currencyName ?? 'ETH'}\r\n          showDetail\r\n        />\r\n        <Row gutter={rowGutter} style={{ width: '100%' }}>\r\n          <Col md={8} xs={24}>\r\n            <DurationStatistic\r\n              showWarning={unsafeFundingCycleProperties.duration}\r\n              duration={duration}\r\n            />\r\n          </Col>\r\n          <Col md={8} xs={24}>\r\n            <InflationRateStatistic\r\n              isInitial\r\n              inflationRate={\r\n                formattedNum(\r\n                  formatIssuanceRate(fundingCycle?.weight.toString()),\r\n                ) ?? '0'\r\n              }\r\n            />\r\n          </Col>\r\n          <Col md={8} xs={24}>\r\n            <IssuanceRateStatistic\r\n              issuanceRate={initialIssuanceRate}\r\n              isInitial\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row gutter={rowGutter} style={{ width: '100%' }}>\r\n          <Col md={8} xs={24}>\r\n            <ReservedTokensStatistic\r\n              reservedRate={reservedRate}\r\n              reservedPercentage={reservedPercentage}\r\n            />\r\n          </Col>\r\n          {fundingCycle && hasDuration && (\r\n            <Col md={8} xs={24}>\r\n              <DiscountRateStatistic discountRate={fundingCycle.discountRate} />\r\n            </Col>\r\n          )}\r\n          {fundingCycleMetadata && hasDistributionLimit && (\r\n            <Col md={8} xs={24}>\r\n              <RedemptionRateStatistic\r\n                redemptionRate={fundingCycleMetadata.redemptionRate}\r\n              />\r\n            </Col>\r\n          )}\r\n          <Col md={8} xs={24}>\r\n            <PausePayStatistic pausePay={fundingCycleMetadata?.pausePay} />\r\n          </Col>\r\n          <Col md={8} xs={24}>\r\n            <AllowMintingStatistic\r\n              allowMinting={fundingCycleMetadata?.allowMinting}\r\n            />\r\n          </Col>\r\n          <Col md={8} xs={24}>\r\n            {hasDuration && (\r\n              <ReconfigurationStatistic ballotAddress={fundingCycle.ballot} />\r\n            )}\r\n          </Col>\r\n        </Row>\r\n        <Row gutter={rowGutter} style={{ width: '100%' }}>\r\n          {!distributionLimit?.eq(0) && (\r\n            <>\r\n              <Col md={10} xs={24}>\r\n                <DistributionSplitsStatistic\r\n                  splits={payoutGroupedSplits.splits}\r\n                  currency={fundAccessConstraint?.distributionLimitCurrency}\r\n                  totalValue={distributionLimit}\r\n                  projectOwnerAddress={userAddress}\r\n                  showSplitValues={hasDistributionLimit}\r\n                  fundingCycleDuration={duration}\r\n                />\r\n              </Col>\r\n              <Col md={2} xs={0}></Col>\r\n            </>\r\n          )}\r\n          {fundingCycleMetadata?.reservedRate.gt(0) && (\r\n            <Col md={10} xs={24}>\r\n              <ReservedSplitsStatistic\r\n                splits={reservedTokensGroupedSplits.splits}\r\n                reservedPercentage={reservedPercentage}\r\n                projectOwnerAddress={userAddress}\r\n              />\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </Space>\r\n    </div>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { Col, Row } from 'antd'\r\nimport Paragraph from 'components/Paragraph'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { useAppSelector } from 'hooks/AppSelector'\r\nimport { useContext } from 'react'\r\n\r\nexport default function NFTSummarySection() {\r\n  const { nftRewardTiers } = useAppSelector(state => state.editingV2Project)\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n  return (\r\n    <div style={{ marginTop: 20 }}>\r\n      <h2 style={{ marginBottom: 0 }}>\r\n        <Trans>NFT rewards</Trans>\r\n      </h2>\r\n      {nftRewardTiers.map((rewardTier, index) => (\r\n        <Row\r\n          style={{\r\n            borderBottom:\r\n              index !== nftRewardTiers.length - 1\r\n                ? `1px solid ${colors.stroke.tertiary}`\r\n                : 'unset',\r\n            display: 'flex',\r\n            width: '100%',\r\n            marginTop: 30,\r\n            paddingBottom: '15px',\r\n          }}\r\n          key={index}\r\n        >\r\n          <Col\r\n            md={3}\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <img\r\n              src={rewardTier.imageUrl ?? '/assets/banana-od.png'}\r\n              alt={rewardTier.name}\r\n              height=\"75px\"\r\n            />\r\n          </Col>\r\n          <Col\r\n            md={7}\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              flexDirection: 'column',\r\n            }}\r\n          >\r\n            <h3>{rewardTier.name}</h3>\r\n            <p style={{ marginBottom: '10px' }}>\r\n              <Trans>\r\n                <strong>Contribution threshold:</strong>{' '}\r\n                {rewardTier.paymentThreshold} ETH\r\n              </Trans>\r\n            </p>\r\n            <p style={{ marginBottom: '10px' }}>\r\n              <Trans>\r\n                <strong>Max. supply:</strong> {rewardTier.maxSupply}\r\n              </Trans>\r\n            </p>\r\n          </Col>\r\n          <Col\r\n            md={12}\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              flexDirection: 'column',\r\n            }}\r\n          >\r\n            {rewardTier.externalLink && (\r\n              <Trans>\r\n                <strong>External link: {rewardTier.externalLink}</strong>\r\n              </Trans>\r\n            )}\r\n            {rewardTier.description && (\r\n              <div style={{ marginTop: 15 }}>\r\n                <Trans>\r\n                  <strong>Description: </strong>\r\n                  <Paragraph\r\n                    description={rewardTier.description}\r\n                    characterLimit={74}\r\n                  />\r\n                </Trans>\r\n              </div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n","import { t, Trans } from '@lingui/macro'\r\nimport { Button, Modal } from 'antd'\r\nimport { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { editingV2ProjectActions } from 'redux/slices/editingV2Project'\r\n\r\nexport function StartOverButton() {\r\n  const [startOverModalVisible, setStartOverModalVisible] =\r\n    useState<boolean>(false)\r\n\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n\r\n  const resetV2CreateFlow = () => {\r\n    dispatch(editingV2ProjectActions.resetState())\r\n    history.go(0)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        type=\"default\"\r\n        onClick={() => setStartOverModalVisible(true)}\r\n        size=\"large\"\r\n        style={{ marginLeft: '15px' }}\r\n      >\r\n        <span>\r\n          <Trans>Start over</Trans>\r\n        </span>\r\n      </Button>\r\n      <Modal\r\n        visible={startOverModalVisible}\r\n        okText={t`Start Over`}\r\n        title={t`Are you sure you want to start over?`}\r\n        onOk={resetV2CreateFlow}\r\n        onCancel={() => setStartOverModalVisible(false)}\r\n      >\r\n        <Trans>\r\n          This will reset the data for your new project. All changes will be\r\n          lost.\r\n        </Trans>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n","import { Space } from 'antd'\r\nimport { Gutter } from 'antd/lib/grid/row'\r\nimport useMobile from 'hooks/Mobile'\r\nimport { useAppSelector } from 'hooks/AppSelector'\r\n\r\nimport DeployProjectButton from './DeployProjectButton'\r\nimport ProjectDetailsSection from './ProjectDetailsSection'\r\nimport FundingSummarySection from './FundingSummarySection'\r\nimport NFTSummarySection from './NFTSummarySection'\r\nimport { StartOverButton } from '../../StartOverButton'\r\n\r\nexport const rowGutter: [Gutter, Gutter] = [40, 30]\r\n\r\nexport default function ReviewDeployTab() {\r\n  const { nftRewardTiers } = useAppSelector(state => state.editingV2Project)\r\n\r\n  const isMobile = useMobile()\r\n  return (\r\n    <div style={isMobile ? { padding: '0 1rem' } : {}}>\r\n      <div\r\n        style={{\r\n          marginBottom: '2rem',\r\n        }}\r\n      >\r\n        <Space size=\"large\" direction=\"vertical\" style={{ width: '100%' }}>\r\n          <ProjectDetailsSection />\r\n          <FundingSummarySection />\r\n          {nftRewardTiers?.length ? <NFTSummarySection /> : null}\r\n        </Space>\r\n      </div>\r\n\r\n      <DeployProjectButton />\r\n      <StartOverButton />\r\n    </div>\r\n  )\r\n}\r\n","import { ThemeContext } from 'contexts/themeContext'\r\nimport { useContext } from 'react'\r\nimport { InfoCircleOutlined } from '@ant-design/icons'\r\nimport { Trans } from '@lingui/macro'\r\nimport ExternalLink from 'components/ExternalLink'\r\nimport { helpPagePath } from 'utils/helpPageHelper'\r\nimport useMobile from 'hooks/Mobile'\r\n\r\nimport { ThemeOption } from 'constants/theme/theme-option'\r\n\r\nexport default function V2WarningBanner() {\r\n  const {\r\n    theme: { colors },\r\n    themeOption,\r\n  } = useContext(ThemeContext)\r\n  const isMobile = useMobile()\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        background: colors.background.brand.primary,\r\n        padding: '0.5rem',\r\n        textAlign: 'center',\r\n        color:\r\n          themeOption === ThemeOption.dark\r\n            ? colors.text.over.action.primary\r\n            : '',\r\n        marginTop: isMobile ? '2rem' : 0,\r\n      }}\r\n    >\r\n      <InfoCircleOutlined />{' '}\r\n      <Trans>\r\n        Your project will be created on the Juicebox V2 contracts.{' '}\r\n        <ExternalLink\r\n          style={{\r\n            color:\r\n              themeOption === ThemeOption.dark\r\n                ? colors.text.over.action.primary\r\n                : colors.text.primary,\r\n            fontWeight: 400,\r\n            textDecoration: 'underline',\r\n          }}\r\n          href={helpPagePath('dev/build/basics')}\r\n        >\r\n          Learn more.\r\n        </ExternalLink>\r\n      </Trans>\r\n    </div>\r\n  )\r\n}\r\n","import { Tabs } from 'antd'\r\nimport { useContext, useState } from 'react'\r\n\r\nimport { V2UserProvider } from 'providers/v2/UserProvider'\r\n\r\nimport { t, Trans } from '@lingui/macro'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport useMobile from 'hooks/Mobile'\r\nimport { V2CurrencyProvider } from 'providers/v2/V2CurrencyProvider'\r\n\r\nimport ProjectDetailsTabContent from './tabs/ProjectDetailsTab/ProjectDetailsTabContent'\r\nimport FundingCycleTabContent from './tabs/FundingCycleTab/FundingCycleTabContent'\r\nimport { TabContentProps } from './models'\r\nimport ReviewDeployTab from './tabs/ReviewDeployTab'\r\nimport V2WarningBanner from './V2WarningBanner'\r\n\r\nconst { TabPane } = Tabs\r\n\r\nconst TabText: React.FC = ({ children }) => {\r\n  return <span style={{ fontSize: 18 }}>{children}</span>\r\n}\r\n\r\ntype TabConfig = {\r\n  title: string\r\n  component: ({ onFinish }: TabContentProps) => JSX.Element\r\n}\r\n\r\nconst TABS: TabConfig[] = [\r\n  {\r\n    title: t`1. Project details`,\r\n    component: ProjectDetailsTabContent,\r\n  },\r\n  {\r\n    title: t`2. Funding cycle`,\r\n    component: FundingCycleTabContent,\r\n  },\r\n  {\r\n    title: t`3. Review and deploy`,\r\n    component: ReviewDeployTab,\r\n  },\r\n]\r\n\r\nexport default function V2Create() {\r\n  const { colors } = useContext(ThemeContext).theme\r\n  const [activeTab, setActiveTab] = useState<string>('0')\r\n\r\n  const isMobile = useMobile()\r\n\r\n  return (\r\n    <V2UserProvider>\r\n      <V2CurrencyProvider>\r\n        <V2WarningBanner />\r\n        <div\r\n          style={{\r\n            maxWidth: 1200,\r\n            margin: '0 auto',\r\n            padding: !isMobile ? '2rem 4rem' : '2rem 1rem',\r\n          }}\r\n        >\r\n          <h1\r\n            style={{\r\n              color: colors.text.primary,\r\n              fontSize: 28,\r\n            }}\r\n          >\r\n            <Trans>Launch your project</Trans>\r\n          </h1>\r\n\r\n          <Tabs\r\n            activeKey={activeTab}\r\n            onChange={setActiveTab}\r\n            tabBarGutter={50}\r\n            size=\"large\"\r\n          >\r\n            {TABS.map((tab, idx) => (\r\n              <TabPane tab={<TabText>{tab.title}</TabText>} key={idx}>\r\n                <tab.component\r\n                  onFinish={() => {\r\n                    // bail if on last tab.\r\n                    if (idx === TABS.length - 1) return\r\n\r\n                    setActiveTab(`${idx + 1}`)\r\n                    window.scrollTo(0, 0)\r\n                  }}\r\n                />\r\n              </TabPane>\r\n            ))}\r\n          </Tabs>\r\n        </div>\r\n      </V2CurrencyProvider>\r\n    </V2UserProvider>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { Button } from 'antd'\r\nimport { useForm } from 'antd/lib/form/Form'\r\nimport ProjectDetailsForm, {\r\n  ProjectDetailsFormFields,\r\n} from 'components/forms/ProjectDetailsForm'\r\n\r\nimport { useAppDispatch } from 'hooks/AppDispatch'\r\nimport { useAppSelector } from 'hooks/AppSelector'\r\nimport { useCallback, useEffect } from 'react'\r\nimport { editingV2ProjectActions } from 'redux/slices/editingV2Project'\r\n\r\nimport ProjectConfigurationFieldsContainer from '../../ProjectConfigurationFieldsContainer'\r\n\r\nexport default function ProjectDetailsDrawerContent({\r\n  onFinish,\r\n}: {\r\n  onFinish?: VoidFunction\r\n}) {\r\n  const [projectForm] = useForm<ProjectDetailsFormFields>()\r\n  const dispatch = useAppDispatch()\r\n  const { projectMetadata } = useAppSelector(state => state.editingV2Project)\r\n\r\n  const dispatchFormData = useCallback(() => {\r\n    const fields = projectForm.getFieldsValue()\r\n    dispatch(editingV2ProjectActions.setName(fields.name))\r\n    dispatch(editingV2ProjectActions.setInfoUri(fields.infoUri))\r\n    dispatch(editingV2ProjectActions.setLogoUri(fields.logoUri))\r\n    dispatch(editingV2ProjectActions.setDescription(fields.description))\r\n    dispatch(editingV2ProjectActions.setTwitter(fields.twitter))\r\n    dispatch(editingV2ProjectActions.setDiscord(fields.discord))\r\n    dispatch(editingV2ProjectActions.setPayButton(fields.payButton))\r\n    dispatch(editingV2ProjectActions.setPayDisclosure(fields.payDisclosure))\r\n  }, [dispatch, projectForm])\r\n\r\n  const onProjectFormSaved = useCallback(() => {\r\n    dispatchFormData()\r\n    onFinish?.()\r\n  }, [dispatchFormData, onFinish])\r\n\r\n  const resetProjectForm = useCallback(() => {\r\n    projectForm.setFieldsValue({\r\n      name: projectMetadata?.name ?? '',\r\n      infoUri: projectMetadata?.infoUri ?? '',\r\n      logoUri: projectMetadata?.logoUri ?? '',\r\n      description: projectMetadata?.description ?? '',\r\n      twitter: projectMetadata?.twitter ?? '',\r\n      discord: projectMetadata?.discord ?? '',\r\n      payButton: projectMetadata?.payButton ?? '',\r\n      payDisclosure: projectMetadata?.payDisclosure ?? '',\r\n    })\r\n  }, [\r\n    projectMetadata?.name,\r\n    projectMetadata?.infoUri,\r\n    projectMetadata?.logoUri,\r\n    projectMetadata?.description,\r\n    projectMetadata?.twitter,\r\n    projectMetadata?.discord,\r\n    projectMetadata?.payDisclosure,\r\n    projectMetadata?.payButton,\r\n    projectForm,\r\n  ])\r\n\r\n  // initially fill form with any existing redux state\r\n  useEffect(() => {\r\n    resetProjectForm()\r\n  }, [resetProjectForm])\r\n\r\n  return (\r\n    <ProjectConfigurationFieldsContainer showPreview>\r\n      <ProjectDetailsForm\r\n        form={projectForm}\r\n        onFinish={onProjectFormSaved}\r\n        hideProjectHandle\r\n        onValuesChange={() => dispatchFormData()}\r\n        saveButton={\r\n          <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\r\n            <Trans>Next: Funding cycle</Trans>\r\n          </Button>\r\n        }\r\n      />\r\n    </ProjectConfigurationFieldsContainer>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { CheckCircleFilled } from '@ant-design/icons'\r\nimport { Button, Space } from 'antd'\r\nimport RichButton from 'components/RichButton'\r\nimport { useContext, useState } from 'react'\r\n\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport NFTDrawer from 'components/v2/shared/FundingCycleConfigurationDrawers/NFTDrawer'\r\nimport { featureFlagEnabled } from 'utils/featureFlags'\r\n\r\nimport FundingDrawer from '../../../../components/v2/shared/FundingCycleConfigurationDrawers/FundingDrawer'\r\nimport TokenDrawer from '../../../../components/v2/shared/FundingCycleConfigurationDrawers/TokenDrawer'\r\nimport RulesDrawer from '../../../../components/v2/shared/FundingCycleConfigurationDrawers/RulesDrawer'\r\n\r\nimport FundingCycleExplainer from '../../FundingCycleExplainer'\r\nimport ProjectConfigurationFieldsContainer from '../../ProjectConfigurationFieldsContainer'\r\n\r\nexport default function FundingCycleTabContent({\r\n  onFinish,\r\n}: {\r\n  onFinish?: VoidFunction\r\n}) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  const [fundingDrawerVisible, setFundingDrawerVisible] =\r\n    useState<boolean>(false)\r\n  const [tokenDrawerVisible, setTokenDrawerVisible] = useState<boolean>(false)\r\n  const [rulesDrawerVisible, setRulesDrawerVisible] = useState<boolean>(false)\r\n  const [NFTDrawerVisible, setNFTDrawerVisible] = useState<boolean>(false)\r\n\r\n  const [fundingDrawerSeen, setFundingDrawerSeen] = useState<boolean>(false)\r\n  const [tokenDrawerSeen, setTokenDrawerSeen] = useState<boolean>(false)\r\n  const [rulesDrawerSeen, setRulesDrawerSeen] = useState<boolean>(false)\r\n  const [NFTDrawerSeen, setNFTDrawerSeen] = useState<boolean>(false)\r\n\r\n  const seenColor = colors.text.tertiary\r\n\r\n  const closeDrawer = () => {\r\n    setFundingDrawerVisible(false)\r\n    setTokenDrawerVisible(false)\r\n    setRulesDrawerVisible(false)\r\n    setNFTDrawerVisible(false)\r\n  }\r\n\r\n  const isNFTRewardsEnabled = featureFlagEnabled('nftRewards')\r\n\r\n  return (\r\n    <ProjectConfigurationFieldsContainer showPreview>\r\n      <Space direction=\"vertical\" style={{ width: '100%' }}>\r\n        <FundingCycleExplainer />\r\n        <RichButton\r\n          prefix=\"1\"\r\n          heading={<Trans>Funding</Trans>}\r\n          onClick={() => {\r\n            setFundingDrawerVisible(true)\r\n            setFundingDrawerSeen(true)\r\n          }}\r\n          description={\r\n            <Trans>\r\n              Configure how your project will collect and spend funds.\r\n            </Trans>\r\n          }\r\n          icon={\r\n            fundingDrawerSeen ? (\r\n              <CheckCircleFilled style={{ color: seenColor }} />\r\n            ) : undefined\r\n          }\r\n          primaryColor={fundingDrawerSeen ? colors.text.tertiary : undefined}\r\n        />\r\n\r\n        <RichButton\r\n          prefix=\"2\"\r\n          heading={<Trans>Token</Trans>}\r\n          onClick={() => {\r\n            setTokenDrawerVisible(true)\r\n            setTokenDrawerSeen(true)\r\n          }}\r\n          description={\r\n            <Trans>Configure the dynamics of your project's token.</Trans>\r\n          }\r\n          icon={\r\n            tokenDrawerSeen ? (\r\n              <CheckCircleFilled style={{ color: seenColor }} />\r\n            ) : undefined\r\n          }\r\n          primaryColor={tokenDrawerSeen ? seenColor : undefined}\r\n        />\r\n        {isNFTRewardsEnabled ? (\r\n          <RichButton\r\n            prefix=\"3\"\r\n            heading={<Trans>NFT rewards</Trans>}\r\n            onClick={() => {\r\n              setNFTDrawerVisible(true)\r\n              setNFTDrawerSeen(true)\r\n            }}\r\n            description={<Trans>Reward contributors with NFT's.</Trans>}\r\n            icon={\r\n              NFTDrawerSeen ? (\r\n                <CheckCircleFilled style={{ color: seenColor }} />\r\n              ) : undefined\r\n            }\r\n            primaryColor={NFTDrawerSeen ? colors.text.tertiary : undefined}\r\n          />\r\n        ) : null}\r\n\r\n        <RichButton\r\n          prefix={isNFTRewardsEnabled ? '4' : '3'}\r\n          heading={<Trans>Rules</Trans>}\r\n          onClick={() => {\r\n            setRulesDrawerVisible(true)\r\n            setRulesDrawerSeen(true)\r\n          }}\r\n          description={\r\n            <Trans>Configure restrictions for your funding cycles.</Trans>\r\n          }\r\n          icon={\r\n            rulesDrawerSeen ? (\r\n              <CheckCircleFilled style={{ color: seenColor }} />\r\n            ) : undefined\r\n          }\r\n          primaryColor={rulesDrawerSeen ? seenColor : undefined}\r\n        />\r\n\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={onFinish}\r\n          style={{ marginTop: '1rem' }}\r\n          size=\"large\"\r\n        >\r\n          <Trans>Next: Review and deploy</Trans>\r\n        </Button>\r\n      </Space>\r\n      <FundingDrawer\r\n        visible={fundingDrawerVisible}\r\n        onClose={closeDrawer}\r\n        isCreate\r\n      />\r\n      <TokenDrawer\r\n        visible={tokenDrawerVisible}\r\n        onClose={closeDrawer}\r\n        isCreate\r\n      />\r\n      <NFTDrawer visible={NFTDrawerVisible} onClose={closeDrawer} />\r\n      <RulesDrawer visible={rulesDrawerVisible} onClose={closeDrawer} />\r\n    </ProjectConfigurationFieldsContainer>\r\n  )\r\n}\r\n"],"sourceRoot":""}