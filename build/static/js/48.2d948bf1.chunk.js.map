{"version":3,"sources":["constants/styles/drawerStyle.ts","components/forms/ProjectDetailsForm.tsx","utils/orEmpty.ts","pages/v1/create/ConfirmDeployProject.tsx","pages/v1/create/index.tsx","hooks/v1/transactor/DeployProjectTx.ts"],"names":["drawerStyle","placement","width","Math","min","window","innerWidth","ProjectDetailsForm","form","onFinish","hideProjectHandle","saveButton","style","loading","onValuesChange","scrollToFirstError","behavior","layout","direction","size","ProjectName","name","formItemProps","rules","required","onChange","val","normalizeHandle","setFieldsValue","handle","ProjectHandleFormItem","initialValue","getFieldValue","requireState","dependencies","extra","ProjectDescription","ProjectLogoUri","initialUrl","onSuccess","logoUri","ProjectLink","ProjectTwitter","ProjectDiscord","ProjectPayButton","ProjectPayDisclosure","Item","htmlType","type","orEmpty","str","trim","length","ConfirmDeployProject","editingFC","useEditingV1FundingCycleSelector","editingProject","useAppSelector","state","info","terminal","currentFC","useContext","V1ProjectContext","payoutMods","ticketMods","terminalFee","useTerminalFee","version","isMobile","useMobile","editingFCCurrency","V1CurrencyName","currency","toNumber","unsafeFundingCycleProperties","getUnsafeV1FundingCycleProperties","rowGutter","riskWarningText","FUNDING_CYCLE_WARNING_TEXT","fontSize","marginBottom","gutter","md","xs","title","value","marginTop","ProjectLogo","uri","metadata","payButton","wordBreak","twitter","undefined","discord","infoUri","payDisclosure","hasFundingDuration","valueRender","hasFundingTarget","target","eq","CurrencySymbol","formatWad","fee","gt","amountSubFee","precision","FundingCycleDetailWarning","showWarning","duration","tooltipTitle","formattedNum","payIsPaused","allowMinting","ticketPrintingIsAllowed","perbicentToPercent","reserved","suffix","metadataReservedRate","isRecurring","permilleToPercent","discountRate","bondingCurveRate","ballot","getBallotStrategyByAddress","address","PayoutModsList","mods","projectId","fundingCycle","feePerbicent","TicketModsList","reservedRate","parseFloat","terminalVersion","V1Create","signerNetwork","userAddress","onSelectWallet","NetworkContext","colors","radii","ThemeContext","theme","currentStep","setCurrentStep","useState","viewedSteps","setViewedSteps","payModsModalVisible","setPayModsFormModalVisible","budgetFormModalVisible","setBudgetFormModalVisible","projectFormModalVisible","setProjectFormModalVisible","incentivesFormModalVisible","setIncentivesFormModalVisible","ticketingFormModalVisible","setTicketingFormModalVisible","rulesFormModalVisible","setRulesFormModalVisible","restrictedActionsFormModalVisible","setRestrictedActionsFormModalVisible","deployProjectModalVisible","setDeployProjectModalVisible","confirmStartOverVisible","setConfirmStartOverVisible","loadingCreate","setLoadingCreate","projectForm","useForm","ticketingForm","restrictedActionsForm","incentivesForm","editingProjectInfo","editingTicketMods","editingPayoutMods","dispatch","useAppDispatch","deployProjectTx","transactor","contracts","V1UserContext","projectMetadataCid","properties","fundingCycleMetadata","txOpts","TerminalV1_1","onDone","Promise","resolve","_properties","toHexString","cycleLimit","formatBytes32String","map","m","preferUnstaked","percent","BigNumber","from","lockedUntil","beneficiary","constants","allocator","useDeployProjectTx","useEffect","editingProjectActions","setFee","toString","resetProjectForm","useCallback","description","resetTicketingForm","resetIncentiveForm","resetRestrictedActionsForm","onProjectFormSaved","fields","getFieldsValue","setName","setInfoUri","setHandle","setLogoUri","setDescription","setTwitter","setDiscord","setPayButton","setPayDisclosure","deployProject","async","uploadedMetadata","uploadProjectMetadata","IpfsHash","reconfigurationBondingCurveRate","treasuryExtension","onConfirmed","editMetadataForCid","metadataNameForHandle","cidFromUrl","logoNameForHandle","resetState","location","hash","viewedCurrentStep","includes","memoizedDrawerStyle","useMemo","buildSteps","steps","step","i","active","viewed","display","justifyContent","cursor","padding","borderRadius","sm","fontWeight","color","text","primary","action","borderColor","stroke","secondary","borderStyle","borderWidth","role","onClick","callback","marginRight","flex","alignSelf","CheckCircleFilled","CaretRightFilled","block","disabled","encodeFundingCycleMetadata","project","createdAt","Date","valueOf","projectType","owner","earned","currentPayoutMods","currentTicketMods","cv","queuedFC","queuedPayoutMods","queuedTicketMods","balance","balanceInCurrency","overflow","tokenSymbol","tokenAddress","isPreviewMode","isArchived","V1ContractName","getTerminalAddress","spacing","Provider","paddingLeft","paddingRight","borderLeft","tertiary","V1Project","showCurrentDetail","column","visible","onClose","destroyOnClose","BudgetForm","initialCurrency","initialTarget","fromWad","initialDuration","onSave","setTarget","setDuration","setFundingCycleStart","toDateSeconds","setCurrency","setBallot","onBudgetFormSaved","PayModsForm","initialMods","setPayoutMods","onPayModsFormSaved","TicketingForm","validateFields","setReserved","setTicketMods","onTicketingFormSaved","ReconfigurationStrategyDrawer","initialSelectedStrategy","strategy","IncentivesForm","disableDiscountRate","disableBondingCurve","setDiscountRate","setBondingCurveRate","onIncentivesFormSaved","RestrictedActionsForm","setTicketPrintingIsAllowed","setPayIsPaused","onRestrictedActionsFormSaved","okText","onOk","confirmLoading","onCancel","okType"],"mappings":"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","file":"static/js/48.2d948bf1.chunk.js","sourcesContent":["import { DrawerProps } from 'antd'\r\n\r\nexport const drawerStyle: Partial<DrawerProps> = {\r\n  placement: 'right',\r\n  width: Math.min(640, window.innerWidth * 0.9),\r\n}\r\n","import { Button, Form, FormInstance, Space } from 'antd'\r\nimport { t, Trans } from '@lingui/macro'\r\n\r\nimport { FormItems } from 'components/formItems'\r\nimport { normalizeHandle } from 'utils/formatHandle'\r\nimport { CSSProperties } from 'react'\r\nimport Callout from 'components/Callout'\r\n\r\nexport type ProjectDetailsFormFields = {\r\n  name: string\r\n  description: string\r\n  infoUri: string\r\n  handle: string\r\n  logoUri: string\r\n  twitter: string\r\n  discord: string\r\n  payButton: string\r\n  payDisclosure: string\r\n}\r\n\r\nexport default function ProjectDetailsForm({\r\n  form,\r\n  onFinish,\r\n  hideProjectHandle = false,\r\n  saveButton,\r\n  style,\r\n  loading,\r\n  onValuesChange,\r\n}: {\r\n  form: FormInstance<ProjectDetailsFormFields>\r\n  onFinish: (values: ProjectDetailsFormFields) => void\r\n  hideProjectHandle?: boolean\r\n  saveButton?: JSX.Element\r\n  style?: CSSProperties\r\n  loading?: boolean\r\n  onValuesChange?: VoidFunction\r\n}) {\r\n  return (\r\n    <Form\r\n      scrollToFirstError={{ behavior: 'smooth' }}\r\n      form={form}\r\n      layout=\"vertical\"\r\n      onFinish={onFinish}\r\n      style={style}\r\n      onValuesChange={() => onValuesChange?.()}\r\n    >\r\n      <Space direction=\"vertical\" size=\"large\">\r\n        <div>\r\n          <FormItems.ProjectName\r\n            name=\"name\"\r\n            formItemProps={{\r\n              rules: [{ required: true }],\r\n            }}\r\n            onChange={name => {\r\n              const val = name ? normalizeHandle(name) : ''\r\n              // Use `handle` state to enable ProjectHandle to validate while typing\r\n              form.setFieldsValue({ handle: val })\r\n            }}\r\n          />\r\n          {!hideProjectHandle && (\r\n            <FormItems.ProjectHandleFormItem\r\n              name=\"handle\"\r\n              initialValue={form.getFieldValue('handle')}\r\n              requireState=\"notExist\"\r\n              formItemProps={{\r\n                dependencies: ['name'],\r\n                extra: t`Project handle must be unique.`,\r\n              }}\r\n              required\r\n            />\r\n          )}\r\n          <FormItems.ProjectDescription name=\"description\" />\r\n          <FormItems.ProjectLogoUri\r\n            name=\"logoUri\"\r\n            initialUrl={form.getFieldValue('logoUri')}\r\n            onSuccess={logoUri => {\r\n              form.setFieldsValue({ logoUri })\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <h3>\r\n            <Trans>Links</Trans>\r\n          </h3>\r\n          <FormItems.ProjectLink name=\"infoUri\" />\r\n          <FormItems.ProjectTwitter name=\"twitter\" />\r\n          <FormItems.ProjectDiscord name=\"discord\" />\r\n        </div>\r\n\r\n        <div>\r\n          <h3>\r\n            <Trans>Project page customizations</Trans>\r\n          </h3>\r\n\r\n          <FormItems.ProjectPayButton name=\"payButton\" />\r\n          <FormItems.ProjectPayDisclosure name=\"payDisclosure\" />\r\n        </div>\r\n        <div>\r\n          <Form.Item>\r\n            {saveButton ?? (\r\n              <Button htmlType=\"submit\" loading={loading} type=\"primary\">\r\n                <span>\r\n                  <Trans>Save project details</Trans>\r\n                </span>\r\n              </Button>\r\n            )}\r\n          </Form.Item>\r\n\r\n          <Callout>\r\n            <Trans>\r\n              You can edit your project details after creation at any time, but\r\n              the transaction will cost gas.\r\n            </Trans>\r\n          </Callout>\r\n        </div>\r\n      </Space>\r\n    </Form>\r\n  )\r\n}\r\n","export const orEmpty = (str?: string) => (str && str.trim().length ? str : '--')\r\n","import { t, Trans } from '@lingui/macro'\r\nimport { Col, Row, Space, Statistic } from 'antd'\r\nimport { Gutter } from 'antd/lib/grid/row'\r\n\r\nimport CurrencySymbol from 'components/CurrencySymbol'\r\nimport PayoutModsList from 'components/v1/shared/PayoutModsList'\r\nimport ProjectLogo from 'components/ProjectLogo'\r\nimport TicketModsList from 'components/v1/shared/TicketModsList'\r\n\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { V1FundingCycle } from 'models/v1/fundingCycle'\r\nimport {\r\n  useAppSelector,\r\n  useEditingV1FundingCycleSelector,\r\n} from 'hooks/AppSelector'\r\nimport useMobile from 'hooks/Mobile'\r\n\r\nimport { useTerminalFee } from 'hooks/v1/TerminalFee'\r\nimport { V1CurrencyOption } from 'models/v1/currencyOption'\r\nimport { useContext } from 'react'\r\nimport {\r\n  formattedNum,\r\n  formatWad,\r\n  perbicentToPercent,\r\n  permilleToPercent,\r\n} from 'utils/formatNumber'\r\nimport {\r\n  getUnsafeV1FundingCycleProperties,\r\n  hasFundingDuration,\r\n  hasFundingTarget,\r\n  isRecurring,\r\n} from 'utils/v1/fundingCycle'\r\nimport { amountSubFee } from 'utils/math'\r\nimport { orEmpty } from 'utils/orEmpty'\r\n\r\nimport { V1CurrencyName } from 'utils/v1/currency'\r\n\r\nimport FundingCycleDetailWarning from 'components/Project/FundingCycleDetailWarning'\r\n\r\nimport { getBallotStrategyByAddress } from 'constants/v1/ballotStrategies/getBallotStrategiesByAddress'\r\nimport { FUNDING_CYCLE_WARNING_TEXT } from 'constants/fundingWarningText'\r\n\r\nexport default function ConfirmDeployProject() {\r\n  const editingFC = useEditingV1FundingCycleSelector()\r\n  const editingProject = useAppSelector(state => state.editingProject.info)\r\n  const { terminal, currentFC } = useContext(V1ProjectContext)\r\n\r\n  const { payoutMods, ticketMods } = useAppSelector(\r\n    state => state.editingProject,\r\n  )\r\n  const terminalFee = useTerminalFee(terminal?.version)\r\n\r\n  const isMobile = useMobile()\r\n\r\n  const editingFCCurrency = V1CurrencyName(\r\n    editingFC?.currency.toNumber() as V1CurrencyOption,\r\n  )\r\n\r\n  const unsafeFundingCycleProperties = getUnsafeV1FundingCycleProperties(\r\n    currentFC as V1FundingCycle,\r\n  )\r\n\r\n  const rowGutter: [Gutter, Gutter] = [25, 20]\r\n\r\n  const riskWarningText = FUNDING_CYCLE_WARNING_TEXT()\r\n\r\n  return (\r\n    <Space size=\"large\" direction=\"vertical\">\r\n      <h1 style={{ fontSize: '2rem' }}>\r\n        <Trans>Review project</Trans>\r\n      </h1>\r\n      <div>\r\n        <h2 style={{ marginBottom: 0 }}>\r\n          <Trans>Project details</Trans>\r\n        </h2>\r\n        <p>\r\n          <Trans>These attributes can be changed at any time.</Trans>\r\n        </p>\r\n        <Row gutter={rowGutter} style={{ marginBottom: 20 }}>\r\n          <Col md={5} xs={24}>\r\n            <Statistic title={t`Logo`} value={' '} />\r\n            <div style={{ marginTop: -20 }}>\r\n              <ProjectLogo\r\n                uri={editingProject?.metadata.logoUri}\r\n                name={editingProject?.metadata.name}\r\n                size={isMobile ? 50 : 80}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col md={6} xs={24}>\r\n            <Statistic\r\n              title={t`Name`}\r\n              value={orEmpty(editingProject?.metadata.name)}\r\n            />\r\n          </Col>\r\n          <Col md={6} xs={24}>\r\n            <Statistic\r\n              title={t`Handle`}\r\n              value={t`@` + orEmpty(editingProject?.handle)}\r\n            />\r\n          </Col>\r\n          <Col md={7} xs={24}>\r\n            <Statistic\r\n              title={t`Pay button`}\r\n              value={\r\n                editingProject?.metadata.payButton\r\n                  ? editingProject?.metadata.payButton\r\n                  : t`Pay`\r\n              }\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row gutter={rowGutter} style={{ wordBreak: 'break-all' }}>\r\n          <Col md={5} xs={24}>\r\n            <Statistic\r\n              title={t`Twitter`}\r\n              value={\r\n                editingProject?.metadata.twitter\r\n                  ? '@' + editingProject.metadata.twitter\r\n                  : orEmpty(undefined)\r\n              }\r\n            />\r\n          </Col>\r\n          <Col md={9} xs={24}>\r\n            <Statistic\r\n              title={t`Discord`}\r\n              value={orEmpty(editingProject?.metadata.discord)}\r\n            />\r\n          </Col>\r\n          <Col md={9} xs={24}>\r\n            <Statistic\r\n              title={t`Website`}\r\n              value={orEmpty(editingProject?.metadata.infoUri)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Row gutter={rowGutter}>\r\n          <Col md={24} xs={24}>\r\n            <Statistic\r\n              title={t`Pay disclosure`}\r\n              value={orEmpty(editingProject?.metadata.payDisclosure)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <div style={{ marginTop: 20 }}>\r\n        <h2 style={{ marginBottom: 0 }}>\r\n          <Trans>Funding cycle details</Trans>\r\n        </h2>\r\n        <p style={{ marginBottom: 15 }}>\r\n          {hasFundingDuration(editingFC) ? (\r\n            <Trans>\r\n              These settings will <strong>not</strong> be editable immediately\r\n              within a funding cycle. They can only be changed for{' '}\r\n              <strong>upcoming</strong> funding cycles.\r\n            </Trans>\r\n          ) : (\r\n            <Trans>\r\n              Since you have not set a funding duration, changes to these\r\n              settings will be applied immediately.\r\n            </Trans>\r\n          )}\r\n        </p>\r\n        <Space size=\"large\" direction=\"vertical\" style={{ width: '100%' }}>\r\n          <Statistic\r\n            title={t`Target`}\r\n            valueRender={() =>\r\n              hasFundingTarget(editingFC) ? (\r\n                editingFC.target.eq(0) ? (\r\n                  <span>\r\n                    <Trans>\r\n                      Target is 0: All funds will be considered overflow and can\r\n                      be redeemed by burning project tokens.\r\n                    </Trans>\r\n                  </span>\r\n                ) : (\r\n                  <span>\r\n                    <CurrencySymbol currency={editingFCCurrency} />\r\n                    {formatWad(editingFC?.target)}{' '}\r\n                    {editingFC.fee?.gt(0) && (\r\n                      <span style={{ fontSize: '0.8rem' }}>\r\n                        (\r\n                        <CurrencySymbol currency={editingFCCurrency} />\r\n                        <Trans>\r\n                          {formatWad(\r\n                            amountSubFee(editingFC.target, terminalFee),\r\n                            {\r\n                              precision: 4,\r\n                            },\r\n                          )}{' '}\r\n                          after JBX fee\r\n                        </Trans>\r\n                        )\r\n                      </span>\r\n                    )}\r\n                  </span>\r\n                )\r\n              ) : (\r\n                <span>\r\n                  <Trans>\r\n                    No funding target: The project will control how all funds\r\n                    are distributed, and none can be redeemed by token holders.\r\n                  </Trans>\r\n                </span>\r\n              )\r\n            }\r\n          />\r\n          <Row gutter={rowGutter} style={{ width: '100%' }}>\r\n            <Col md={8} xs={24}>\r\n              <Statistic\r\n                title={t`Duration`}\r\n                valueRender={() => (\r\n                  <FundingCycleDetailWarning\r\n                    showWarning={unsafeFundingCycleProperties.duration}\r\n                    tooltipTitle={riskWarningText.duration}\r\n                  >\r\n                    {editingFC.duration.gt(0)\r\n                      ? formattedNum(editingFC.duration)\r\n                      : t`Not set`}\r\n                    {editingFC.duration.gt(0) ? t`days` : ''}\r\n                  </FundingCycleDetailWarning>\r\n                )}\r\n              />\r\n            </Col>\r\n            <Col md={8} xs={24}>\r\n              <Statistic\r\n                title={t`Payments paused`}\r\n                value={editingFC.payIsPaused ? t`Yes` : t`No`}\r\n              />\r\n            </Col>\r\n            <Col md={8} xs={24}>\r\n              <Statistic\r\n                title={t`Token minting`}\r\n                valueRender={() => (\r\n                  <FundingCycleDetailWarning\r\n                    showWarning={unsafeFundingCycleProperties.allowMinting}\r\n                    tooltipTitle={riskWarningText.allowMinting}\r\n                  >\r\n                    {editingFC.ticketPrintingIsAllowed\r\n                      ? t`Allowed`\r\n                      : t`Disabled`}\r\n                    {` `}\r\n                  </FundingCycleDetailWarning>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={rowGutter} style={{ width: '100%' }}>\r\n            <Col md={8} xs={24}>\r\n              <Statistic\r\n                title={t`Reserved tokens`}\r\n                value={perbicentToPercent(editingFC?.reserved)}\r\n                suffix={\r\n                  <FundingCycleDetailWarning\r\n                    showWarning={\r\n                      unsafeFundingCycleProperties.metadataReservedRate\r\n                    }\r\n                    tooltipTitle={riskWarningText.metadataReservedRate}\r\n                  >\r\n                    %\r\n                  </FundingCycleDetailWarning>\r\n                }\r\n              />\r\n            </Col>\r\n            {editingFC && isRecurring(editingFC) && (\r\n              <Col md={8} xs={24}>\r\n                <Statistic\r\n                  title={t`Discount rate`}\r\n                  value={permilleToPercent(editingFC?.discountRate)}\r\n                  suffix=\"%\"\r\n                />\r\n              </Col>\r\n            )}\r\n            {editingFC &&\r\n              isRecurring(editingFC) &&\r\n              hasFundingTarget(editingFC) && (\r\n                <Col md={8} xs={24}>\r\n                  <Statistic\r\n                    title={t`Bonding curve rate`}\r\n                    value={perbicentToPercent(editingFC?.bondingCurveRate)}\r\n                    suffix=\"%\"\r\n                  />\r\n                </Col>\r\n              )}\r\n          </Row>\r\n          {editingFC.duration.gt(0) && (\r\n            <Statistic\r\n              title={t`Reconfiguration strategy`}\r\n              valueRender={() => {\r\n                const ballot = getBallotStrategyByAddress(editingFC.ballot)\r\n                return (\r\n                  <div>\r\n                    {ballot.name}{' '}\r\n                    <div style={{ fontSize: '0.7rem' }}>{ballot.address}</div>\r\n                  </div>\r\n                )\r\n              }}\r\n            />\r\n          )}\r\n          <Statistic\r\n            title={t`Spending`}\r\n            valueRender={() => (\r\n              <PayoutModsList\r\n                mods={payoutMods}\r\n                projectId={undefined}\r\n                fundingCycle={editingFC}\r\n                feePerbicent={terminalFee}\r\n              />\r\n            )}\r\n          />\r\n          <Statistic\r\n            title={t`Reserved token allocations`}\r\n            valueRender={() => (\r\n              <TicketModsList\r\n                mods={ticketMods}\r\n                projectId={undefined}\r\n                fundingCycle={undefined}\r\n                reservedRate={parseFloat(\r\n                  perbicentToPercent(editingFC?.reserved),\r\n                )}\r\n              />\r\n            )}\r\n          />\r\n        </Space>\r\n      </div>\r\n    </Space>\r\n  )\r\n}\r\n","import { CaretRightFilled, CheckCircleFilled } from '@ant-design/icons'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { t, Trans } from '@lingui/macro'\r\nimport { Button, Col, Drawer, DrawerProps, Row, Space } from 'antd'\r\nimport { useForm } from 'antd/lib/form/Form'\r\nimport Modal from 'antd/lib/modal/Modal'\r\nimport V1Project from 'components/v1/V1Project'\r\nimport { NetworkContext } from 'contexts/networkContext'\r\nimport {\r\n  V1ProjectContext,\r\n  V1ProjectContextType,\r\n} from 'contexts/v1/projectContext'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport * as constants from '@ethersproject/constants'\r\nimport { useAppDispatch } from 'hooks/AppDispatch'\r\nimport {\r\n  useAppSelector,\r\n  useEditingV1FundingCycleSelector,\r\n} from 'hooks/AppSelector'\r\nimport { useTerminalFee } from 'hooks/v1/TerminalFee'\r\nimport { useDeployProjectTx } from 'hooks/v1/transactor/DeployProjectTx'\r\nimport { V1ContractName } from 'models/v1/contracts'\r\nimport { V1CurrencyOption } from 'models/v1/currencyOption'\r\nimport { V1FundingCycle } from 'models/v1/fundingCycle'\r\nimport { PayoutMod, TicketMod } from 'models/mods'\r\nimport { V1TerminalVersion } from 'models/v1/terminals'\r\nimport { useCallback, useContext, useEffect, useMemo, useState } from 'react'\r\nimport { editingProjectActions } from 'redux/slices/editingProject'\r\nimport {\r\n  perbicentToPercent,\r\n  permilleToPercent,\r\n  fromWad,\r\n} from 'utils/formatNumber'\r\nimport {\r\n  encodeFundingCycleMetadata,\r\n  hasFundingTarget,\r\n  hasFundingDuration,\r\n} from 'utils/v1/fundingCycle'\r\nimport {\r\n  cidFromUrl,\r\n  editMetadataForCid,\r\n  logoNameForHandle,\r\n  metadataNameForHandle,\r\n  uploadProjectMetadata,\r\n} from 'utils/ipfs'\r\nimport { getTerminalAddress } from 'utils/v1/terminals'\r\n\r\nimport TicketingForm, {\r\n  TicketingFormFields,\r\n} from 'components/forms/TicketingForm'\r\nimport ReconfigurationStrategyDrawer from 'components/v1/shared/ReconfigurationStrategyDrawer'\r\nimport ProjectDetailsForm, {\r\n  ProjectDetailsFormFields,\r\n} from 'components/forms/ProjectDetailsForm'\r\n\r\nimport BudgetForm from 'components/v1/shared/forms/BudgetForm'\r\nimport IncentivesForm, {\r\n  IncentivesFormFields,\r\n} from 'components/forms/IncentivesForm'\r\nimport PayModsForm from 'components/v1/shared/forms/PayModsForm'\r\nimport RestrictedActionsForm, {\r\n  RestrictedActionsFormFields,\r\n} from 'components/forms/RestrictedActionsForm'\r\n\r\nimport { toDateSeconds } from 'utils/formatDate'\r\n\r\nimport { BallotStrategy } from 'models/ballot'\r\n\r\nimport ConfirmDeployProject from './ConfirmDeployProject'\r\n\r\nimport { getBallotStrategyByAddress } from 'constants/v1/ballotStrategies/getBallotStrategiesByAddress'\r\nimport { drawerStyle } from 'constants/styles/drawerStyle'\r\n\r\nconst terminalVersion: V1TerminalVersion = '1.1'\r\n\r\nexport default function V1Create() {\r\n  const { signerNetwork, userAddress, onSelectWallet } =\r\n    useContext(NetworkContext)\r\n  const { colors, radii } = useContext(ThemeContext).theme\r\n  const [currentStep, setCurrentStep] = useState<number>()\r\n  const [viewedSteps, setViewedSteps] = useState<number[]>([])\r\n  const [payModsModalVisible, setPayModsFormModalVisible] =\r\n    useState<boolean>(false)\r\n  const [budgetFormModalVisible, setBudgetFormModalVisible] =\r\n    useState<boolean>(false)\r\n  const [projectFormModalVisible, setProjectFormModalVisible] =\r\n    useState<boolean>(false)\r\n  const [incentivesFormModalVisible, setIncentivesFormModalVisible] =\r\n    useState<boolean>(false)\r\n  const [ticketingFormModalVisible, setTicketingFormModalVisible] =\r\n    useState<boolean>(false)\r\n  const [rulesFormModalVisible, setRulesFormModalVisible] =\r\n    useState<boolean>(false)\r\n  const [\r\n    restrictedActionsFormModalVisible,\r\n    setRestrictedActionsFormModalVisible,\r\n  ] = useState<boolean>(false)\r\n  const [deployProjectModalVisible, setDeployProjectModalVisible] =\r\n    useState<boolean>(false)\r\n  const [confirmStartOverVisible, setConfirmStartOverVisible] = useState(false)\r\n  const [loadingCreate, setLoadingCreate] = useState<boolean>()\r\n  const [projectForm] = useForm<ProjectDetailsFormFields>()\r\n  const [ticketingForm] = useForm<TicketingFormFields>()\r\n  const [restrictedActionsForm] = useForm<RestrictedActionsFormFields>()\r\n  const [incentivesForm] = useForm<IncentivesFormFields>()\r\n  const editingFC = useEditingV1FundingCycleSelector()\r\n  const {\r\n    info: editingProjectInfo,\r\n    ticketMods: editingTicketMods,\r\n    payoutMods: editingPayoutMods,\r\n  } = useAppSelector(state => state.editingProject)\r\n  const dispatch = useAppDispatch()\r\n  const deployProjectTx = useDeployProjectTx()\r\n\r\n  const terminalFee = useTerminalFee(terminalVersion)\r\n\r\n  useEffect(() => {\r\n    if (terminalFee) {\r\n      dispatch(\r\n        editingProjectActions.setFee(\r\n          perbicentToPercent(terminalFee).toString(),\r\n        ),\r\n      )\r\n    }\r\n  }, [terminalFee, dispatch])\r\n\r\n  const resetProjectForm = useCallback(() => {\r\n    projectForm.setFieldsValue({\r\n      name: editingProjectInfo?.metadata.name ?? '',\r\n      infoUri: editingProjectInfo?.metadata.infoUri ?? '',\r\n      handle: editingProjectInfo?.handle ?? '',\r\n      description: editingProjectInfo?.metadata.description ?? '',\r\n      logoUri: editingProjectInfo?.metadata.logoUri ?? '',\r\n      twitter: editingProjectInfo?.metadata.twitter ?? '',\r\n      discord: editingProjectInfo?.metadata.discord ?? '',\r\n      payButton: editingProjectInfo?.metadata.payButton ?? '',\r\n      payDisclosure: editingProjectInfo?.metadata.payDisclosure ?? '',\r\n    })\r\n  }, [\r\n    editingProjectInfo.handle,\r\n    editingProjectInfo.metadata.description,\r\n    editingProjectInfo.metadata.discord,\r\n    editingProjectInfo.metadata.infoUri,\r\n    editingProjectInfo.metadata.logoUri,\r\n    editingProjectInfo.metadata.name,\r\n    editingProjectInfo.metadata.payButton,\r\n    editingProjectInfo.metadata.payDisclosure,\r\n    editingProjectInfo.metadata.twitter,\r\n    projectForm,\r\n  ])\r\n\r\n  const resetTicketingForm = useCallback(\r\n    () =>\r\n      ticketingForm.setFieldsValue({\r\n        reserved: parseFloat(perbicentToPercent(editingFC?.reserved)),\r\n      }),\r\n    [editingFC?.reserved, ticketingForm],\r\n  )\r\n\r\n  const resetIncentiveForm = useCallback(\r\n    () =>\r\n      incentivesForm.setFieldsValue({\r\n        discountRate: permilleToPercent(editingFC?.discountRate),\r\n        bondingCurveRate: perbicentToPercent(editingFC?.bondingCurveRate),\r\n      }),\r\n    [editingFC?.discountRate, editingFC?.bondingCurveRate, incentivesForm],\r\n  )\r\n\r\n  const resetRestrictedActionsForm = useCallback(() => {\r\n    if (\r\n      editingFC?.payIsPaused !== null &&\r\n      editingFC?.ticketPrintingIsAllowed !== null\r\n    ) {\r\n      restrictedActionsForm.setFieldsValue({\r\n        payIsPaused: editingFC?.payIsPaused,\r\n        ticketPrintingIsAllowed: editingFC?.ticketPrintingIsAllowed,\r\n      })\r\n    }\r\n  }, [\r\n    editingFC?.payIsPaused,\r\n    editingFC?.ticketPrintingIsAllowed,\r\n    restrictedActionsForm,\r\n  ])\r\n\r\n  // The following useEffect's set the initial values of all the forms' fields from redux\r\n  useEffect(() => {\r\n    resetProjectForm()\r\n  }, [resetProjectForm])\r\n\r\n  useEffect(() => {\r\n    resetTicketingForm()\r\n  }, [resetTicketingForm])\r\n\r\n  useEffect(() => {\r\n    resetIncentiveForm()\r\n  }, [resetIncentiveForm])\r\n\r\n  useEffect(() => {\r\n    resetRestrictedActionsForm()\r\n  }, [resetRestrictedActionsForm])\r\n\r\n  const onPayModsFormSaved = (mods: PayoutMod[]) =>\r\n    dispatch(editingProjectActions.setPayoutMods(mods))\r\n\r\n  const onBudgetFormSaved = (\r\n    currency: V1CurrencyOption,\r\n    target: string,\r\n    duration: string,\r\n  ) => {\r\n    dispatch(editingProjectActions.setTarget(target))\r\n    dispatch(editingProjectActions.setDuration(duration))\r\n    dispatch(\r\n      editingProjectActions.setFundingCycleStart(\r\n        `${toDateSeconds(new Date())}`,\r\n      ),\r\n    )\r\n    dispatch(editingProjectActions.setCurrency(currency))\r\n\r\n    if (!duration) {\r\n      dispatch(editingProjectActions.setBallot(constants.AddressZero))\r\n    }\r\n  }\r\n\r\n  const onProjectFormSaved = useCallback(() => {\r\n    const fields = projectForm.getFieldsValue(true)\r\n    dispatch(editingProjectActions.setName(fields.name))\r\n    dispatch(editingProjectActions.setInfoUri(fields.infoUri))\r\n    dispatch(editingProjectActions.setHandle(fields.handle))\r\n    dispatch(editingProjectActions.setLogoUri(fields.logoUri))\r\n    dispatch(editingProjectActions.setDescription(fields.description))\r\n    dispatch(editingProjectActions.setTwitter(fields.twitter))\r\n    dispatch(editingProjectActions.setDiscord(fields.discord))\r\n    dispatch(editingProjectActions.setPayButton(fields.payButton))\r\n    dispatch(editingProjectActions.setPayDisclosure(fields.payDisclosure))\r\n  }, [dispatch, projectForm])\r\n\r\n  const onTicketingFormSaved = (mods: TicketMod[]) => {\r\n    const fields = ticketingForm.getFieldsValue(true)\r\n    dispatch(editingProjectActions.setReserved(fields.reserved))\r\n    dispatch(editingProjectActions.setTicketMods(mods))\r\n  }\r\n\r\n  const onRulesFormSaved = (ballot: string) => {\r\n    dispatch(editingProjectActions.setBallot(ballot))\r\n  }\r\n\r\n  const onIncentivesFormSaved = (\r\n    discountRate: string,\r\n    bondingCurveRate: string,\r\n  ) => {\r\n    dispatch(editingProjectActions.setDiscountRate(discountRate))\r\n    dispatch(editingProjectActions.setBondingCurveRate(bondingCurveRate))\r\n  }\r\n\r\n  const onRestrictedActionsFormSaved = () => {\r\n    const fields = restrictedActionsForm.getFieldsValue(true)\r\n    dispatch(\r\n      editingProjectActions.setTicketPrintingIsAllowed(\r\n        fields.ticketPrintingIsAllowed,\r\n      ),\r\n    )\r\n    dispatch(editingProjectActions.setPayIsPaused(fields.payIsPaused))\r\n  }\r\n\r\n  const deployProject = useCallback(async () => {\r\n    setLoadingCreate(true)\r\n\r\n    const uploadedMetadata = await uploadProjectMetadata(\r\n      editingProjectInfo.metadata,\r\n      editingProjectInfo.handle,\r\n    )\r\n\r\n    if (!uploadedMetadata.IpfsHash) {\r\n      setLoadingCreate(false)\r\n      return\r\n    }\r\n\r\n    deployProjectTx(\r\n      {\r\n        handle: editingProjectInfo.handle,\r\n        projectMetadataCid: uploadedMetadata.IpfsHash,\r\n        properties: {\r\n          target: editingFC.target,\r\n          currency: editingFC.currency,\r\n          duration: editingFC.duration,\r\n          discountRate: editingFC.discountRate,\r\n          cycleLimit: editingFC.cycleLimit,\r\n          ballot: editingFC.ballot,\r\n        },\r\n        fundingCycleMetadata: {\r\n          reservedRate: editingFC.reserved.toNumber(),\r\n          bondingCurveRate: editingFC.bondingCurveRate.toNumber(),\r\n          reconfigurationBondingCurveRate:\r\n            editingFC.bondingCurveRate.toNumber(),\r\n          payIsPaused: editingFC.payIsPaused,\r\n          ticketPrintingIsAllowed: editingFC.ticketPrintingIsAllowed,\r\n          treasuryExtension: constants.AddressZero,\r\n        },\r\n        payoutMods: editingPayoutMods,\r\n        ticketMods: editingTicketMods,\r\n      },\r\n      {\r\n        onDone: () => setLoadingCreate(false),\r\n        onConfirmed: () => {\r\n          setDeployProjectModalVisible(false)\r\n\r\n          // Add project dependency to metadata and logo files\r\n          editMetadataForCid(uploadedMetadata.IpfsHash, {\r\n            name: metadataNameForHandle(editingProjectInfo.handle),\r\n          })\r\n          editMetadataForCid(cidFromUrl(editingProjectInfo.metadata.logoUri), {\r\n            name: logoNameForHandle(editingProjectInfo.handle),\r\n          })\r\n\r\n          resetProjectForm()\r\n          dispatch(editingProjectActions.resetState())\r\n\r\n          window.location.hash =\r\n            '/p/' + editingProjectInfo.handle + '?newDeploy=true'\r\n        },\r\n      },\r\n    )\r\n  }, [\r\n    dispatch,\r\n    editingFC,\r\n    editingProjectInfo.handle,\r\n    editingProjectInfo.metadata,\r\n    editingPayoutMods,\r\n    editingTicketMods,\r\n    resetProjectForm,\r\n    deployProjectTx,\r\n  ])\r\n\r\n  const viewedCurrentStep = useCallback(() => {\r\n    if (currentStep !== undefined && !viewedSteps.includes(currentStep)) {\r\n      setViewedSteps([...viewedSteps, currentStep])\r\n    }\r\n    setCurrentStep(undefined)\r\n  }, [currentStep, viewedSteps])\r\n\r\n  const memoizedDrawerStyle: Partial<DrawerProps> = useMemo(\r\n    () => drawerStyle,\r\n    [],\r\n  )\r\n\r\n  const buildSteps = useCallback(\r\n    (\r\n      steps: {\r\n        title: string\r\n        description?: string\r\n        callback: VoidFunction\r\n      }[],\r\n    ) => (\r\n      <Space direction=\"vertical\" size=\"middle\" style={{ width: '100%' }}>\r\n        {steps.map((step, i) => {\r\n          const active = currentStep === i\r\n          const viewed = viewedSteps.includes(i)\r\n\r\n          return (\r\n            <div\r\n              key={step.title}\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                cursor: 'pointer',\r\n                padding: 15,\r\n                borderRadius: radii.sm,\r\n                fontWeight: viewed ? 500 : 600,\r\n                color: viewed\r\n                  ? colors.text.primary\r\n                  : colors.text.action.primary,\r\n                borderColor: viewed\r\n                  ? colors.stroke.secondary\r\n                  : colors.stroke.action.primary,\r\n                borderStyle: 'solid',\r\n                borderWidth: `1px 1px 1px ${active ? '10px' : '1px'}`,\r\n              }}\r\n              role=\"button\"\r\n              onClick={() => {\r\n                if (currentStep !== undefined) return\r\n                setCurrentStep(i)\r\n                step.callback()\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  marginRight: 15,\r\n                }}\r\n              >\r\n                {i + 1}\r\n              </div>\r\n              <div\r\n                style={{\r\n                  marginRight: 10,\r\n                  flex: 1,\r\n                }}\r\n              >\r\n                <div>{step.title}</div>\r\n                <div\r\n                  style={{\r\n                    color: colors.text.secondary,\r\n                    fontWeight: 400,\r\n                    fontSize: '0.75rem',\r\n                  }}\r\n                >\r\n                  {step.description}\r\n                </div>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  alignSelf: 'center',\r\n                  color: viewed\r\n                    ? colors.text.secondary\r\n                    : colors.text.action.primary,\r\n                }}\r\n              >\r\n                {viewed ? <CheckCircleFilled /> : <CaretRightFilled />}\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n\r\n        <p style={{ fontWeight: 500 }}>\r\n          <Trans>\r\n            The JBX protocol is unaudited, and projects built on it may be\r\n            vulnerable to bugs or exploits. Be smart!\r\n          </Trans>\r\n        </p>\r\n\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n          }}\r\n        >\r\n          <Button\r\n            onClick={() => setConfirmStartOverVisible(true)}\r\n            type=\"ghost\"\r\n            block\r\n            style={{ marginRight: 8 }}\r\n          >\r\n            <Trans>Start Over</Trans>\r\n          </Button>\r\n\r\n          <Button\r\n            onClick={() => setDeployProjectModalVisible(true)}\r\n            type=\"primary\"\r\n            block\r\n            disabled={\r\n              !editingProjectInfo?.metadata.name || !editingProjectInfo.handle\r\n            }\r\n          >\r\n            <Trans>Review & Deploy</Trans>\r\n          </Button>\r\n        </div>\r\n      </Space>\r\n    ),\r\n    [\r\n      editingProjectInfo.metadata.name,\r\n      editingProjectInfo.handle,\r\n      currentStep,\r\n      viewedSteps,\r\n      radii.sm,\r\n      colors.text.primary,\r\n      colors.text.action.primary,\r\n      colors.text.secondary,\r\n      colors.stroke.secondary,\r\n      colors.stroke.action.primary,\r\n    ],\r\n  )\r\n\r\n  const fundingCycle: V1FundingCycle = useMemo(\r\n    () => ({\r\n      ...editingFC,\r\n      metadata: encodeFundingCycleMetadata(\r\n        editingFC.reserved,\r\n        editingFC.bondingCurveRate,\r\n        200,\r\n        editingFC.payIsPaused,\r\n        editingFC.ticketPrintingIsAllowed,\r\n        constants.AddressZero,\r\n        1,\r\n      ),\r\n    }),\r\n    [editingFC],\r\n  )\r\n\r\n  const project = useMemo<V1ProjectContextType>(\r\n    () => ({\r\n      createdAt: new Date().valueOf() / 1000,\r\n      projectType: 'standard',\r\n      owner: userAddress,\r\n      earned: BigNumber.from(0),\r\n      currentFC: fundingCycle,\r\n      currentPayoutMods: editingPayoutMods,\r\n      currentTicketMods: editingTicketMods,\r\n      metadata: editingProjectInfo.metadata,\r\n      handle: editingProjectInfo.handle,\r\n      projectId: 0,\r\n      cv: '1.1',\r\n      queuedFC: undefined,\r\n      queuedPayoutMods: undefined,\r\n      queuedTicketMods: undefined,\r\n      balance: BigNumber.from(0),\r\n      balanceInCurrency: BigNumber.from(0),\r\n      overflow: BigNumber.from(0),\r\n      tokenSymbol: undefined,\r\n      tokenAddress: constants.AddressZero,\r\n      isPreviewMode: true,\r\n      isArchived: false,\r\n      terminal: {\r\n        version: terminalVersion,\r\n        name: V1ContractName.TerminalV1_1,\r\n        address: getTerminalAddress(terminalVersion),\r\n      },\r\n    }),\r\n    [\r\n      editingPayoutMods,\r\n      editingProjectInfo.handle,\r\n      editingProjectInfo.metadata,\r\n      editingTicketMods,\r\n      fundingCycle,\r\n      userAddress,\r\n    ],\r\n  )\r\n\r\n  const spacing = 40\r\n\r\n  return (\r\n    <V1ProjectContext.Provider value={project}>\r\n      <Row style={{ marginTop: 40 }}>\r\n        <Col\r\n          xs={24}\r\n          md={10}\r\n          style={{\r\n            marginBottom: spacing * 2,\r\n            paddingLeft: spacing,\r\n            paddingRight: spacing,\r\n          }}\r\n        >\r\n          <h1 style={{ marginBottom: spacing / 2 }}>\r\n            <Trans>Design your project</Trans> 🎨\r\n          </h1>\r\n\r\n          {buildSteps([\r\n            {\r\n              title: t`Project details`,\r\n              description: t`Project name, handle, links, and other details.`,\r\n              callback: () => setProjectFormModalVisible(true),\r\n            },\r\n            {\r\n              title: t`Funding cycle`,\r\n              description: t`Your project's funding cycle target and duration.`,\r\n              callback: () => setBudgetFormModalVisible(true),\r\n            },\r\n            {\r\n              title: t`Funding distribution`,\r\n              description: t`How your project will distribute funds.`,\r\n              callback: () => setPayModsFormModalVisible(true),\r\n            },\r\n            {\r\n              title: t`Reserved tokens`,\r\n              description: t`Reward specific community members with tokens.`,\r\n              callback: () => setTicketingFormModalVisible(true),\r\n            },\r\n            ...(editingFC?.duration.gt(0)\r\n              ? [\r\n                  {\r\n                    title: t`Reconfiguration`,\r\n                    description: t`Rules for how changes can be made to your project.`,\r\n                    callback: () => setRulesFormModalVisible(true),\r\n                  },\r\n                ]\r\n              : []),\r\n            {\r\n              title: t`Incentives`,\r\n              description: t`Adjust incentives for paying your project.`,\r\n              callback: () => setIncentivesFormModalVisible(true),\r\n            },\r\n            {\r\n              title: t`Restricted actions`,\r\n              description: t`Restrict payments and printing tokens.`,\r\n              callback: () => setRestrictedActionsFormModalVisible(true),\r\n            },\r\n          ])}\r\n        </Col>\r\n\r\n        <Col xs={24} md={14}>\r\n          <h3\r\n            style={{\r\n              marginTop: 5,\r\n              marginBottom: spacing / 2,\r\n              color: colors.text.secondary,\r\n              paddingLeft: spacing,\r\n              paddingRight: spacing,\r\n            }}\r\n          >\r\n            <Trans>Preview:</Trans>\r\n          </h3>\r\n\r\n          <div\r\n            style={{\r\n              paddingLeft: spacing,\r\n              paddingRight: spacing,\r\n              borderLeft: '1px solid ' + colors.stroke.tertiary,\r\n            }}\r\n          >\r\n            <V1Project showCurrentDetail column />\r\n          </div>\r\n        </Col>\r\n\r\n        <Drawer\r\n          {...memoizedDrawerStyle}\r\n          visible={projectFormModalVisible}\r\n          onClose={() => {\r\n            setCurrentStep(undefined)\r\n            resetProjectForm()\r\n            setProjectFormModalVisible(false)\r\n          }}\r\n        >\r\n          <Space direction=\"vertical\" size=\"large\">\r\n            <h1>\r\n              <Trans>Project details</Trans>\r\n            </h1>\r\n            <p>\r\n              <Trans>\r\n                Changes to these attributes can be made at any time and will be\r\n                applied to your project immediately.\r\n              </Trans>\r\n            </p>\r\n            <ProjectDetailsForm\r\n              form={projectForm}\r\n              onFinish={() => {\r\n                viewedCurrentStep()\r\n                onProjectFormSaved()\r\n                setProjectFormModalVisible(false)\r\n              }}\r\n            />\r\n          </Space>\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          visible={budgetFormModalVisible}\r\n          {...memoizedDrawerStyle}\r\n          onClose={() => {\r\n            viewedCurrentStep()\r\n            setBudgetFormModalVisible(false)\r\n          }}\r\n          destroyOnClose\r\n        >\r\n          <BudgetForm\r\n            initialCurrency={editingFC.currency.toNumber() as V1CurrencyOption}\r\n            initialTarget={fromWad(editingFC.target)}\r\n            initialDuration={editingFC.duration.toString()}\r\n            onSave={async (currency, target, duration) => {\r\n              viewedCurrentStep()\r\n              onBudgetFormSaved(currency, target, duration)\r\n              setBudgetFormModalVisible(false)\r\n            }}\r\n          />\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          visible={payModsModalVisible}\r\n          {...memoizedDrawerStyle}\r\n          onClose={() => {\r\n            viewedCurrentStep()\r\n            setPayModsFormModalVisible(false)\r\n          }}\r\n          destroyOnClose\r\n        >\r\n          <PayModsForm\r\n            initialMods={editingPayoutMods}\r\n            currency={editingFC.currency.toNumber() as V1CurrencyOption}\r\n            target={editingFC.target}\r\n            fee={editingFC.fee}\r\n            onSave={async mods => {\r\n              viewedCurrentStep()\r\n              onPayModsFormSaved(mods)\r\n              setPayModsFormModalVisible(false)\r\n            }}\r\n          />\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          visible={ticketingFormModalVisible}\r\n          {...memoizedDrawerStyle}\r\n          onClose={() => {\r\n            viewedCurrentStep()\r\n            resetTicketingForm()\r\n            setTicketingFormModalVisible(false)\r\n          }}\r\n        >\r\n          <TicketingForm\r\n            form={ticketingForm}\r\n            initialMods={editingTicketMods}\r\n            onSave={async mods => {\r\n              viewedCurrentStep()\r\n              await ticketingForm.validateFields()\r\n              onTicketingFormSaved(mods)\r\n              setTicketingFormModalVisible(false)\r\n            }}\r\n          />\r\n        </Drawer>\r\n\r\n        <ReconfigurationStrategyDrawer\r\n          visible={rulesFormModalVisible}\r\n          initialSelectedStrategy={getBallotStrategyByAddress(editingFC.ballot)}\r\n          style={memoizedDrawerStyle}\r\n          onSave={(strategy: BallotStrategy) => {\r\n            viewedCurrentStep()\r\n            setRulesFormModalVisible(false)\r\n            onRulesFormSaved(strategy.address ?? editingFC.ballot)\r\n          }}\r\n          onClose={() => {\r\n            viewedCurrentStep()\r\n            setRulesFormModalVisible(false)\r\n          }}\r\n        />\r\n\r\n        <Drawer\r\n          visible={incentivesFormModalVisible}\r\n          {...memoizedDrawerStyle}\r\n          onClose={() => {\r\n            viewedCurrentStep()\r\n            resetIncentiveForm()\r\n            setIncentivesFormModalVisible(false)\r\n          }}\r\n        >\r\n          {incentivesFormModalVisible && (\r\n            <IncentivesForm\r\n              form={incentivesForm}\r\n              disableDiscountRate={editingFC.duration.eq(0)}\r\n              disableBondingCurve={!hasFundingTarget(editingFC)}\r\n              onSave={async (\r\n                discountRate: string,\r\n                bondingCurveRate: string,\r\n              ) => {\r\n                viewedCurrentStep()\r\n                await incentivesForm.validateFields()\r\n                onIncentivesFormSaved(discountRate, bondingCurveRate)\r\n                setIncentivesFormModalVisible(false)\r\n              }}\r\n            />\r\n          )}\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          visible={restrictedActionsFormModalVisible}\r\n          {...memoizedDrawerStyle}\r\n          onClose={() => {\r\n            setRestrictedActionsFormModalVisible(false)\r\n            setCurrentStep(undefined)\r\n          }}\r\n        >\r\n          <RestrictedActionsForm\r\n            form={restrictedActionsForm}\r\n            onSave={() => {\r\n              onRestrictedActionsFormSaved()\r\n              setRestrictedActionsFormModalVisible(false)\r\n              setCurrentStep(undefined)\r\n            }}\r\n            hasFundingDuration={hasFundingDuration(editingFC)}\r\n          />\r\n        </Drawer>\r\n\r\n        <Modal\r\n          visible={deployProjectModalVisible}\r\n          okText={\r\n            userAddress\r\n              ? signerNetwork\r\n                ? t`Deploy project on ${signerNetwork}`\r\n                : t`Deploy project`\r\n              : t`Connect wallet to deploy`\r\n          }\r\n          onOk={userAddress ? deployProject : onSelectWallet}\r\n          confirmLoading={loadingCreate}\r\n          width={800}\r\n          onCancel={() => setDeployProjectModalVisible(false)}\r\n        >\r\n          <ConfirmDeployProject />\r\n        </Modal>\r\n\r\n        <Modal\r\n          visible={confirmStartOverVisible}\r\n          okText={t`Start Over`}\r\n          okType=\"danger\"\r\n          title={t`Are you sure you want to start over?`}\r\n          onOk={() => {\r\n            resetProjectForm()\r\n            dispatch(editingProjectActions.resetState())\r\n            setConfirmStartOverVisible(false)\r\n          }}\r\n          onCancel={() => setConfirmStartOverVisible(false)}\r\n        >\r\n          <Trans>This will erase all of your changes.</Trans>\r\n        </Modal>\r\n      </Row>\r\n    </V1ProjectContext.Provider>\r\n  )\r\n}\r\n","import { NetworkContext } from 'contexts/networkContext'\r\nimport { V1UserContext } from 'contexts/v1/userContext'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport * as constants from '@ethersproject/constants'\r\nimport { formatBytes32String } from '@ethersproject/strings'\r\nimport {\r\n  V1FundingCycleMetadata,\r\n  V1FundingCycleProperties,\r\n} from 'models/v1/fundingCycle'\r\nimport { PayoutMod, TicketMod } from 'models/mods'\r\nimport { useContext } from 'react'\r\nimport { hasFundingTarget } from 'utils/v1/fundingCycle'\r\n\r\nimport { TransactorInstance } from '../../Transactor'\r\n\r\nexport function useDeployProjectTx(): TransactorInstance<{\r\n  handle: string\r\n  projectMetadataCid: string\r\n  properties: V1FundingCycleProperties\r\n  fundingCycleMetadata: Omit<V1FundingCycleMetadata, 'version'>\r\n  payoutMods: PayoutMod[]\r\n  ticketMods: TicketMod[]\r\n}> {\r\n  const { transactor, contracts } = useContext(V1UserContext)\r\n  const { userAddress } = useContext(NetworkContext)\r\n\r\n  return (\r\n    {\r\n      handle,\r\n      projectMetadataCid,\r\n      properties,\r\n      fundingCycleMetadata,\r\n      payoutMods,\r\n      ticketMods,\r\n    },\r\n    txOpts,\r\n  ) => {\r\n    if (!transactor || !userAddress || !contracts?.TerminalV1_1) {\r\n      txOpts?.onDone?.()\r\n      return Promise.resolve(false)\r\n    }\r\n\r\n    const _properties: Record<keyof V1FundingCycleProperties, string | number> =\r\n      {\r\n        target: properties.target.toHexString(),\r\n        currency: hasFundingTarget({ target: properties.target })\r\n          ? properties.currency.toNumber()\r\n          : 0,\r\n        duration: properties.duration.toNumber(),\r\n        discountRate: properties.duration.gt(0)\r\n          ? properties.discountRate.toNumber()\r\n          : 0,\r\n        cycleLimit: properties.cycleLimit.toNumber(),\r\n        ballot: properties.ballot,\r\n      }\r\n\r\n    return transactor(\r\n      contracts.TerminalV1_1,\r\n      'deploy',\r\n      [\r\n        userAddress,\r\n        formatBytes32String(handle),\r\n        projectMetadataCid,\r\n        _properties,\r\n        fundingCycleMetadata,\r\n        payoutMods.map(m => ({\r\n          preferUnstaked: false,\r\n          percent: BigNumber.from(m.percent).toHexString(),\r\n          lockedUntil: BigNumber.from(m.lockedUntil ?? 0).toHexString(),\r\n          beneficiary: m.beneficiary || constants.AddressZero,\r\n          projectId: m.projectId || BigNumber.from(0).toHexString(),\r\n          allocator: constants.AddressZero,\r\n        })),\r\n        ticketMods.map(m => ({\r\n          preferUnstaked: false,\r\n          percent: BigNumber.from(m.percent).toHexString(),\r\n          lockedUntil: BigNumber.from(m.lockedUntil ?? 0).toHexString(),\r\n          beneficiary: m.beneficiary || constants.AddressZero,\r\n          allocator: constants.AddressZero,\r\n        })),\r\n      ],\r\n      txOpts,\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}