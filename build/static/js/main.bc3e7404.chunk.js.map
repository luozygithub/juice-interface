{"version":3,"sources":["constants/ipfs.ts","utils/ipfs.ts","utils/v1/currency.ts","components/InputAccessoryButton.tsx","components/EtherscanLink.tsx","utils/formatNumber.ts","models/subgraph-entities/base/base-project-entity.ts","hooks/v1/contractReader/HasPermission.ts","hooks/SubgraphQuery.ts","components/currency/ETHToUSD.tsx","components/currency/ETHAmount.tsx","utils/formatCurrency.ts","hooks/CurrencyConverter.ts","utils/notifications.ts","redux/slices/editingProject.ts","hooks/Mobile.ts","contexts/themeContext.ts","constants/v1/projectIds.ts","models/subgraph-entities/v2/distribute-to-payout-split-event.ts","models/subgraph-entities/v2/distribute-payouts-event.ts","models/subgraph-entities/v2/distribute-to-reserved-token-split-event.ts","models/subgraph-entities/v2/distribute-reserved-tokens-event.ts","models/subgraph-entities/v2/use-allowance-event.ts","models/subgraph-entities/vX/project-create-event.ts","models/subgraph-entities/vX/project-event.ts","models/subgraph-entities/vX/protocol-log.ts","utils/graph.ts","hooks/Projects.ts","hooks/IpfsCache.ts","models/subgraph-entities/vX/project.ts","contexts/v2/projectContext.ts","components/FormItemWarningText.tsx","components/formItems/formHelpers.tsx","constants/fundingWarningText.ts","utils/v1/terminals.ts","utils/v2/math.ts","pages/home/QAs.tsx","components/CardSection.tsx","components/inputs/NumberSlider.tsx","contexts/currencyContext.ts","contexts/v1/projectContext.ts","components/v1/shared/V1ProjectHandle.tsx","hooks/v1/contractReader/HandleForProjectId.ts","constants/currency.ts","redux/slices/editingV2Project.ts","constants/styles/text.ts","components/ProjectLogo.tsx","hooks/ProjectMetadata.ts","utils/v1/payouts.ts","utils/routes.ts","constants/styles/layouts.ts","components/v1/shared/PayoutModsList.tsx","hooks/v1/transactor/SetPayoutModsTx.ts","models/subgraph-entities/v1/print-reserves-event.ts","constants/v1/ballotStrategies/getBallotStrategiesByAddress.ts","components/Project/FundingCycleDetailWarning.tsx","utils/v2/serializers.ts","utils/ballot.ts","contexts/v2/userContext.ts","components/TooltipIcon.tsx","components/SectionHeader.tsx","utils/formatHandle.ts","hooks/SymbolOfERC20.ts","components/MinimalCollapse.tsx","components/Project/StatLine.tsx","hooks/Erc20Contract.ts","pages/create/FormItemLabel.tsx","components/v1/shared/TicketModsList.tsx","hooks/v1/transactor/SetTicketModsTx.ts","components/CopyTextButton.tsx","models/subgraph-entities/vX/deployed-erc20-event.ts","models/subgraph-entities/v1/distribute-to-payout-mod-event.ts","models/subgraph-entities/v1/distribute-to-ticket-mod-event.ts","models/subgraph-entities/vX/pay-event.ts","models/subgraph-entities/vX/mint-tokens-event.ts","models/subgraph-entities/vX/redeem-event.ts","models/subgraph-entities/v1/tap-event.ts","constants/v1/archivedProjects.ts","constants/styles/padding.ts","utils/v1/serializers.ts","hooks/v1/contractReader/ShouldUpdateTokens.ts","hooks/ContentType.ts","components/RichImgPreview.tsx","components/RichNote.tsx","contexts/networkContext.ts","models/ipfs-cache/cache-name.ts","components/v1/shared/Mod.tsx","constants/styles/colors.ts","constants/theme/colors/background.ts","constants/theme/colors/icon.ts","constants/theme/colors/stroke.ts","constants/theme/colors/text.ts","constants/theme/colors/boxShadow.ts","constants/theme/colors/index.ts","constants/theme/radius/index.ts","constants/theme/index.ts","models/v2/contracts.ts","utils/helpPageHelper.ts","components/RichButton.tsx","models/v1/contracts.ts","utils/v2/currency.ts","hooks/AppSelector.ts","hooks/AppDispatch.ts","components/TransactionModal.tsx","components/Callout.tsx","components/Paragraph.tsx","constants/networks.ts","constants/v2/ballotStrategies/index.ts","components/SwitchHeading.tsx","hooks/v1/TerminalFee.ts","hooks/EthBalance.ts","constants/v2/archivedProjects.ts","hooks/WeiConverter.ts","components/inputs/ImageUploader.tsx","hooks/IsUserAddress.ts","redux/localStoragePreload.ts","redux/store.ts","hooks/PageTitle.ts","constants/siteMetadata.ts","hooks/v1/contractReader/ContractReader.ts","hooks/EtherPrice.ts","models/project-metadata.ts","models/subgraph-entities/vX/participant.ts","utils/v1/deepEqFundingCycles.ts","hooks/v1/contractReader/TerminalOfProject.ts","hooks/v1/contractReader/TokenAddressOfProject.ts","hooks/v1/contractReader/OwnerOfProject.ts","constants/v1/ballotStrategies/index.ts","components/ExternalLink.tsx","hooks/v1/contractReader/ERC20BalanceOf.ts","hooks/GasPrice.ts","hooks/Transactor.ts","components/v1/shared/ProjectPayMods/ProjectModInput.tsx","components/v1/shared/ProjectPayMods/ProjectPayoutModsModal.tsx","components/v1/shared/ProjectPayMods/ProjectPayoutMods.tsx","utils/v1/fundingCycle.ts","components/Navbar/EthPrice.tsx","components/Navbar/Balance.tsx","components/modals/ReservedTokenReceiverModal.tsx","components/v1/shared/ProjectTicketMods.tsx","constants/v2/splits.ts","utils/formatTime.ts","components/CurrencySymbol.tsx","locales/en/messages.js","constants/contracts/mainnet/PublicResolver.ts","constants/contracts/rinkeby/PublicResolver.ts","hooks/v2/V2ContractLoader.ts","providers/v2/UserProvider.tsx","utils/tokenSymbolText.ts","components/FormattedAddress.tsx","constants/v2/ballotStrategies/getBallotStrategiesByAddress.ts","constants/styles/shadowCard.ts","components/v2/V2Project/V2FundingCycleSection/settingExplanations.tsx","constants/v2/projectIds.ts","components/Project404.tsx","components/formItems/ItemNoInput.tsx","components/Badge.tsx","components/Project/FundingCycleDetailsCard.tsx","constants/theme/theme-option.ts","contexts/v1/userContext.ts","components/v2/shared/V2ProjectHandle.tsx","components/ProjectVersionBadge.tsx","components/ScrollToTopButton.tsx","components/NewDeployNotAvailable.tsx","utils/unsafeFundingCycleProperties.ts","components/formItems/ProjectRedemptionRate.tsx","components/CurrencySwitch.tsx","components/Project/SpendingStats.tsx","components/Project/FundingCycleSection.tsx","components/forms/RestrictedActionsForm.tsx","components/v1/shared/ReconfigurationStrategyDrawer.tsx","components/v1/shared/forms/BudgetForm.tsx","components/forms/IncentivesForm.tsx","components/v1/shared/forms/PayModsForm.tsx","models/network-name.ts","components/forms/TicketingForm.tsx","components/currency/USDAmount.tsx","components/Project/FundingProgressBar.tsx","components/activityEventElems/DeployedERC20EventElem.tsx","components/activityEventElems/PayEventElem.tsx","components/activityEventElems/ProjectCreateEventElem.tsx","components/activityEventElems/RedeemEventElem.tsx","components/IssueTokenButton.tsx","components/modals/IssueTokenModal.tsx","components/ManageTokensModal.tsx","models/ballot.ts","components/PayWarningModal.tsx","components/ProjectRiskNotice.tsx","components/v1/shared/FundingCycle/FundingCycleDetails.tsx","components/v1/shared/FundingCycle/FundingCyclePreview.tsx","hooks/v1/contractReader/ReservedTokensOfProject.ts","components/v1/shared/FundingCycle/modals/DistributeTokensModal.tsx","hooks/v1/transactor/DistributeTokensTx.ts","components/v1/shared/FundingCycle/ReservedTokens.tsx","components/v1/shared/FundingCycle/modals/WithdrawModal.tsx","hooks/v1/transactor/TapProjectTx.ts","components/v1/shared/FundingCycle/Spending.tsx","components/v1/shared/FundingCycle/CurrentFundingCycle.tsx","components/v1/shared/FundingCycle/QueuedFundingCycle.tsx","components/v1/V1Project/FundingCycles/FundingHistory.tsx","components/v1/V1Project/modals/ReconfigureFCModal.tsx","hooks/v1/transactor/ConfigureProjectTx.ts","utils/drawerWidth.ts","components/v1/V1Project/FundingCycles/ReconfigureFundingModalTrigger.tsx","components/v1/V1Project/FundingCycles/index.tsx","hooks/v1/contractReader/TotalBalanceOf.ts","components/v1/shared/V1ProjectTokenBalance.tsx","hooks/v1/transactor/SetProjectUriTx.ts","components/v1/V1Project/modals/V1BalancesModal.tsx","components/v1/V1Project/Paid.tsx","components/v1/V1Project/V1DownloadPaymentsModal.tsx","components/v1/V1Project/V1DownloadActivityModal.tsx","components/v1/V1Project/ProjectActivity/eventElems/ReservesEventElem.tsx","components/v1/V1Project/ProjectActivity/eventElems/TapEventElem.tsx","components/v1/V1Project/ProjectActivity/index.tsx","hooks/v1/transactor/SafeTransferFromTx.ts","hooks/v1/transactor/TransferTokensTx.ts","hooks/v1/transactor/AddToBalanceTx.ts","hooks/v1/contractReader/UnclaimedBalanceOfUser.ts","components/v1/V1Project/modals/EditProjectModal.tsx","hooks/v1/transactor/SetProjectHandleTx.ts","components/v1/V1Project/modals/MigrateV1Pt1Modal.tsx","hooks/v1/transactor/MigrateV1ProjectTx.ts","components/v1/V1Project/V1ProjectHeaderActions.tsx","hooks/v1/transactor/IssueTokensTx.ts","components/v1/V1Project/modals/RedeemModal.tsx","hooks/v1/transactor/RedeemTokensTx.ts","hooks/v1/contractReader/ClaimableOverflowOf.ts","hooks/v1/contractReader/RedeemRate.ts","components/v1/V1Project/modals/ConfirmUnstakeTokensModal.tsx","hooks/v1/transactor/UnstakeTokensTx.ts","components/v1/V1Project/modals/PrintPreminedModal.tsx","hooks/v1/transactor/PrintTokensTx.ts","components/v1/V1Project/Rewards/index.tsx","hooks/v1/contractReader/TotalSupplyOfProjectToken.ts","hooks/v1/contractReader/CanPrintPreminedTokens.ts","constants/v1/overrides.ts","components/v1/V1Project/modals/V1ConfirmPayOwnerModal.tsx","hooks/v1/transactor/PayV1ProjectTx.ts","components/v1/V1Project/V1PayButton.tsx","components/v1/V1Project/index.tsx","components/ArchiveProject/index.tsx","components/ArchiveProject/postGitHubIssueForArchive.ts","components/v1/V1Project/ArchiveV1Project.tsx","components/v2/V2Project/ArchiveV2Project.tsx","components/TransactorButton.tsx","components/Project/ProjectToolsDrawer/AddToProjectBalanceForm.tsx","components/v2/V2Project/LaunchProjectPayer/LaunchProjectPayerButton.tsx","components/Project/ProjectToolsDrawer/PayableAddressSection.tsx","constants/contracts.ts","hooks/v2/contractReader/V1ProjectOf.ts","components/Project/ProjectToolsDrawer/V1TokenMigrationSection/V1TokenMigrationModal/StepSection.tsx","components/Project/ProjectToolsDrawer/V1TokenMigrationSection/V1TokenMigrationModal/AddTerminalSection.tsx","hooks/v2/transactor/SetProjectTerminalsTx.ts","components/Project/ProjectToolsDrawer/V1TokenMigrationSection/V1TokenMigrationModal/SetV1ProjectSection.tsx","hooks/v2/transactor/SetV1ProjectIdTx.ts","components/Project/ProjectToolsDrawer/V1TokenMigrationSection/V1TokenMigrationModal/V1TokenMigrationModal.tsx","components/Project/ProjectToolsDrawer/V1TokenMigrationSection/V1TokenMigrationModal/utils.ts","components/Project/ProjectToolsDrawer/V1TokenMigrationSection/V1TokenMigrationSection.tsx","components/Project/ProjectToolsDrawer/TransferOwnershipForm.tsx","components/Project/ProjectToolsDrawer/TransferUnclaimedTokensForm.tsx","components/Project/ProjectToolsDrawer/ProjectToolsDrawer.tsx","hooks/ERC20UniswapPrice.ts","hooks/ERC20SushiswapPrice.ts","components/AMMPrices/TokenAMMPriceRow.tsx","components/icons/Uniswap.tsx","components/icons/Sushiswap.tsx","components/AMMPrices/index.tsx","constants/tokens.ts","components/inputs/Pay/PayInputSubText.tsx","components/inputs/Pay/PayInputGroup.tsx","components/icons/Discord.tsx","components/Project/ProjectHeader/SocialLinks.tsx","components/Project/ProjectHeader/index.tsx","hooks/v1/contractReader/ProjectOwner.ts","components/ReconfigurationStrategy/ReconfigurationStrategyOption.tsx","components/ReconfigurationStrategy/ReconfigurationStrategySelector.tsx","components/Project/VolumeStatLine/VolumeStatLine.tsx","components/modals/DownloadParticipantsModal.tsx","components/modals/ParticipantsModal.tsx","components/v1/shared/ERC20TokenBalance.tsx","hooks/v1/contractReader/ERC20DecimalsOf.ts","components/v2/V2Project/LaunchProjectPayer/AdvancedOptionsCollapse.tsx","components/v2/V2Project/LaunchProjectPayer/LaunchProjectPayerModal.tsx","components/modals/AttachStickerModal.tsx","components/inputs/Pay/MemoFormItem.tsx","components/v1/shared/formItems/ProjectHandle/ProjectHandleInput.tsx","components/v1/shared/formItems/ProjectHandle/ProjectHandleFormItem.tsx","components/formItems/ProjectDiscountRate.tsx","components/inputs/BudgetTargetInput.tsx","components/formItems/index.tsx","components/formItems/ENSName.tsx","components/formItems/EthAddress.tsx","components/formItems/ProjectDescription.tsx","components/formItems/ProjectDiscord.tsx","components/formItems/ProjectDuration.tsx","components/formItems/ProjectLink.tsx","components/formItems/ProjectLogoUri.tsx","components/formItems/ProjectName.tsx","components/formItems/ProjectPayButton.tsx","components/formItems/ProjectPayDisclosure.tsx","components/formItems/ProjectReserved.tsx","components/formItems/ProjectTarget.tsx","components/formItems/ProjectTwitter.tsx","components/v1/shared/formItems/TokenRefs.tsx","constants/numbers.ts","constants/v1/currency.ts","components/activityEventElems/styles.ts","components/TooltipLabel.tsx","utils/formatDate.tsx","components/Loading.tsx","constants/readProvider.ts","utils/bigNumbers.ts","models/subgraph-entities/base/base-event-entity.ts","../node_modules/@jbx-protocol/contracts-v1/deployments sync /^/.*/.*/.json$","utils/math.ts","../node_modules/@jbx-protocol/project-handles/broadcast/Deploy.sol lazy /^/.*/run/-latest/.json$/ groupOptions: {} namespace object","../node_modules/@jbx-protocol lazy /^/contracts/-v2/-.*/deployments/.*/.*/.json$/ groupOptions: {} namespace object","locales lazy /^/.*/messages$/ groupOptions: {} namespace object","../node_modules/@jbx-protocol/contracts-v1/deployments lazy /^/.*/.*/.json$/ groupOptions: {} namespace object","components/Navbar/Wallet.tsx","components/Navbar/Account.tsx","components/FeedbackFormButton.tsx","utils/feedbackFormURL.ts","components/Navbar/Logo.tsx","constants/languages/language-options.ts","components/Navbar/NavLanguageSelector.tsx","components/Navbar/navStyles.ts","components/Navbar/constants.ts","components/Navbar/MenuItems.tsx","components/icons/Moon.tsx","components/icons/Sun.tsx","components/Navbar/Mobile/ThemePickerMobile.tsx","components/Navbar/Mobile/ResourcesDropdownMobile.tsx","components/Navbar/Mobile/MobileCollapse.tsx","components/Navbar/ThemePicker.tsx","components/Navbar/index.tsx","lib/fathom.ts","pages/home/Faq.tsx","pages/home/Footer.tsx","pages/projects/RankingExplanation.tsx","pages/projects/TrendingProjectCard.tsx","components/Grid.tsx","utils/isReactNodeArray.ts","pages/home/Payments.tsx","pages/home/TrendingSection.tsx","pages/home/SectionHeading.tsx","pages/home/TopProjectsSection.tsx","pages/home/StatsSection.tsx","pages/home/HowItWorksSection.tsx","pages/index.tsx","pages/privacy.tsx","components/ProjectCard.tsx","pages/projects/TrendingProjects.tsx","pages/projects/ProjectsTabs.tsx","pages/projects/HoldingsProjects.tsx","pages/projects/FilterCheckboxItem.tsx","pages/projects/ProjectsFilterAndSort.tsx","pages/projects/ArchivedProjectsMessage.tsx","pages/projects/MyProjects.tsx","pages/projects/index.tsx","providers/v1/V1CurrencyProvider.tsx","constants/v1/projectTypes.ts","pages/p/index.tsx","hooks/v1/contractReader/ProjectIdForHandle.ts","hooks/v1/contractReader/CurrentFundingCycleOfProject.ts","hooks/v1/contractReader/QueuedFundingCycleOfProject.ts","hooks/v1/contractReader/CurrentPayoutModsOfProject.ts","hooks/v1/contractReader/QueuedPayoutModsOfProject.ts","hooks/v1/contractReader/CurrentTicketModsOfProject.ts","hooks/v1/contractReader/QueuedTicketModsOfProject.ts","hooks/v1/contractReader/BalanceOfProject.ts","hooks/v1/contractReader/OverflowOfProject.ts","hooks/v1/contractReader/UriOfProject.ts","pages/v2-bug-updates.tsx","Router.tsx","App.tsx","constants/locale.ts","providers/LanguageProvider.tsx","providers/ReactQueryProvider.tsx","utils/onboard.ts","providers/NetworkProvider.tsx","hooks/JuiceTheme.ts","providers/ThemeProvider.tsx","hooks/v1/V1ContractLoader.ts","providers/v1/UserProvider.tsx","index.tsx","components/inputs/FormattedNumberInput.tsx"],"names":["axiosInstance","axios","create","baseURL","IPFS_TAGS","IpfsCacheName","trending","readNetwork","name","trendingV2","METADATA","LOGO","editMetadataForCid","async","cid","options","put","data","logoNameForHandle","handle","metadataNameForHandle","ipfsCidUrl","hash","cidFromUrl","url","split","pop","pinFileToIpfs","file","metadata","FormData","append","JSON","stringify","keyvalues","post","uploadProjectMetadata","consolidateMetadata","pinataMetadata","tag","uploadIpfsJsonCache","getPinnedListByTag","get","V1CurrencyName","currency","undefined","V1_CURRENCY_METADATA","getV1CurrencyOption","currencyName","V1_CURRENCY_ETH","V1_CURRENCY_USD","InputAccessoryButton","content","onClick","withArrow","placement","disabled","colors","radii","useContext","ThemeContext","theme","role","style","cursor","color","text","action","primary","background","secondary","l1","fontWeight","whiteSpace","padding","marginLeft","marginRight","borderRadius","sm","fontSize","EtherscanLink","value","type","truncated","truncatedValue","substring","length","subdomain","NetworkName","mainnet","linkProps","className","href","title","parseWad","parseUnits","toString","WAD_DECIMALS","fromWad","wadValue","result","formatUnits","formatWad","formatConfig","_wadValue","includes","formattedNum","percentToPermyriad","percentValue","BigNumber","from","Math","floor","parseFloat","permyriadToPercent","permyriadValue","toNumber","percentToPermille","permilleToPercent","permilleValue","percentToPerbicent","perbicentToPercent","perbicentValue","fracDiv","quotient","dividend","separateThousands","str","separator","trim","replace","stripCommas","string","num","config","_empty","empty","_thousandsSeparator","thousandsSeparator","_decimalSeparator","decimalSeparator","formatNearZero","formatted","filter","char","every","precision","round","pre","formattedPre","formattedPost","padEnd","join","formatPercent","numerator","divisor","gt","sharePct","mul","div","parseBaseProjectEntityJson","j","id","cv","project","parseProjectJson","projectId","parseInt","OperatorPermission","useHasPermission","permission","userAddress","NetworkContext","owner","V1ProjectContext","hasOperatorPermission","useContractReader","contract","V1ContractName","OperatorStore","functionName","args","toHexString","Array","isArray","toLowerCase","process","subgraphUrl","useSubgraphQuery","opts","reactQueryOptions","useQuery","querySubgraph","staleTime","useInfiniteSubgraphQuery","useInfiniteQuery","queryKey","pageParam","pageSize","evaluatedOpts","response","query","formatGraphQuery","skip","first","headers","Error","errors","message","formatGraphResponse","entity","getNextPageParam","lastPage","allPages","ETHToUSD","ethAmount","usdAmount","useCurrencyConverter","wadToCurrency","usdAmountFormatted","CurrencySymbol","LoadingOutlined","ETHAmount","amount","precisionAdjusted","isBigNumber","betweenZeroAndOne","formattedETHAmount","Number","CurrencyUtils","constructor","usdPerEth","weiPerUsd","weiToUsd","wei","this","e","console","error","usdToWei","toFixed","targetCurrency","sourceCurrency","info","useEtherPrice","useMemo","emitErrorNotification","description","duration","key","Date","valueOf","notification","close","REDUX_STORE_V1_PROJECT_VERSION","defaultDiscountRate","defaultBondingCurveRate","defaultProjectState","version","infoUri","logoUri","twitter","discord","tokens","archived","fundingCycle","serializeV1FundingCycle","number","basedOn","target","constants","start","toDateSeconds","tapped","weight","fee","reserved","bondingCurveRate","discountRate","cycleLimit","configured","ballot","payIsPaused","ticketPrintingIsAllowed","treasuryExtension","payoutMods","ticketMods","editingProjectSlice","createSlice","initialState","reducers","resetState","setProjectInfo","state","payload","setName","setInfoUri","setLogoUri","setTwitter","setDiscord","setPayButton","payButton","setPayDisclosure","payDisclosure","setHandle","setDescription","setFundingCycle","setId","setProjectId","setNumber","setTarget","setFee","setDuration","setFundingCycleStart","setReserved","setDiscountRate","setBondingCurveRate","setCurrency","setBallot","setIsRecurring","setPayIsPaused","setTicketPrintingIsAllowed","setPayoutMods","setTicketMods","editingProjectActions","actions","useMobile","defaultState","setState","useState","window","matchMedia","matches","useEffect","mounted","queryList","onChange","addEventListener","removeEventListener","useMedia","defaultThemeOption","ThemeOption","dark","createContext","themeOption","juiceTheme","setThemeOption","isDarkMode","V1_PROJECT_IDS","CONSTITUTION_DAO","MOON_DAO","SHARK_DAO","PONZI_DAO","PX_DAO","SVSPOOL002","FIDENZA420","SANTA_DAO","MICHAEL_JACKSON","INFLATIONLESS_DAO","VOTING_DAO","DEFI_DAO","JUICEBOX_DAO","BLUECOLLARDS","LUNAR_DAO","CITYMONK","parseDistributeToPayoutSplitEventJson","parseBaseEventEntityJson","domain","group","preferClaimed","preferAddToBalance","percent","splitProjectId","beneficiary","lockedUntil","allocator","distributePayoutsEvent","parseDistributePayoutsEventJson","fundingCycleConfiguration","fundingCycleNumber","distributedAmount","beneficiaryDistributionAmount","memo","splitDistributions","map","parseDistributeToReservedTokenSplitEventJson","tokenCount","distributeReservedTokensEvent","parseDistributeReservedTokensEventJson","beneficiaryTokenCount","parseUseAllowanceEventJson","netDistributedamount","parseProjectCreateEventJson","parseProjectEventJson","payEvent","parsePayEventJson","mintTokensEvent","parseMintTokensEventJson","redeemEvent","parseRedeemEventJson","deployedERC20Event","parseDeployedERC20EventJson","projectCreateEvent","tapEvent","parseTapEventJson","printReservesEvent","parsePrintReservesEventJson","distributeToPayoutModEvent","parseDistributeToPayoutModEvent","distributeToTicketModEvent","parseDistributeToTicketModEvent","distributeToReservedTokenSplitEvent","distributeToPayoutSplitEvent","useAllowanceEvent","parseProtocolLogJson","json","volumePaid","volumeRedeemed","v1","v2","addArg","formatWhere","where","operator","v","orderBy","orderDirection","block","number_gte","w","isPluralQuery","keys","reduce","acc","protocolLogs","projects","projectEvents","projectCreateEvents","projectSearch","payEvents","redeemEvents","participants","parseParticipantJson","tapEvents","distributeToPayoutModEvents","distributeToTicketModEvents","printReservesEvents","mintTokensEvents","deployedERC20Events","distributePayoutsEvents","distributeReservedTokensEvents","distributeToReservedTokenSplitEvents","distributeToPayoutSplitEvents","useAllowanceEvents","querySubgraphExhaustive","entities","page","push","getSubgraphIdForProject","queryOpts","terminalAddress","getTerminalAddress","terminalVersion","archivedKeys","V1ArchivedProjectIds","V2ArchivedProjectIds","useProjectsQuery","pageNumber","useProjectsSearch","useTrendingProjects","count","days","loadingPayments","setLoadingPayments","projectStats","setProjectStats","cache","setCache","list","latest","rows","moment","date_pinned","isBefore","subtract","ttl","ipfs_pin_hash","deserialize","load","useIpfsCache","minutes","parseTrendingProjectJson","shouldUpdateCache","daySeconds","SECONDS_IN_DAY","nowSeconds","setUTCHours","payments","curr","trendingVolume","add","paymentsCount","loadPayments","projectsQuery","Object","trendingProjectsQuery","isLoading","p","stats","trendingScore","pow","trendingPaymentsCount","sort","a","b","slice","entries","val","then","useHoldingsProjectsQuery","wallet","loadingParticipants","setLoadingParticipants","projectIds","setProjectIds","loadParticipants","useMyProjectsQuery","useInfiniteProjectsQuery","createdAt","currentBalance","totalPaid","totalRedeemed","printPremineEvents","V2ProjectContext","isPreviewMode","projectMetadata","tokenAddress","tokenSymbol","terminals","primaryTerminal","ETHBalance","totalVolume","projectOwnerAddress","balanceInDistributionLimitCurrency","usedDistributionLimit","isArchived","fundingCycleMetadata","ballotState","distributionLimit","distributionLimitCurrency","payoutSplits","reservedTokensSplits","primaryTerminalCurrentOverflow","totalTokenSupply","loading","ETHBalanceLoading","balanceInDistributionLimitCurrencyLoading","distributionLimitLoading","fundingCycleLoading","usedDistributionLimitLoading","FormItemWarningText","children","icon","warn","getTotalPercentage","mods","validatePercentage","Promise","reject","resolve","validateEthAddress","address","modalMode","editingModIndex","isAddress","some","mod","countDecimalPlaces","roundDown","decimalPlaces","RESERVED_RATE_WARNING_THRESHOLD_PERCENT","FUNDING_CYCLE_WARNING_TEXT","allowMinting","metadataMaxReservedRate","metadataReservedRate","loadTerminalAddress","network","terminal","require","contractName","getTerminalName","getTerminalVersion","TerminalV1","TerminalV1_1","_version","ONE_BILLION","MaxUint232","sub","MAX_REDEMPTION_RATE","MAX_DISCOUNT_RATE","SPLITS_TOTAL_PERCENT","MAX_DISTRIBUTION_LIMIT","DEFAULT_MINT_RATE","MAX_MINT_RATE","DEFAULT_FUNDING_CYCLE_DURATION","formatDiscountRate","discountRateFrom","percentage","formatSplitPercent","splitPercent","preciseFormatSplitPercent","percentPerBillion","splitPercentFrom","formatReservedRate","reservedRate","MAX_RESERVED_RATE","reservedRateFrom","formatRedemptionRate","redemptionRate","redemptionRateFrom","issuanceRateFrom","issuanceRate","formatIssuanceRate","formatFee","feePerBillion","weightedAmount","reservedRatePermyriad","amountWad","outputType","invertPermyriad","feeForAmount","amountSubFee","feeAmount","OverflowVideoLink","JBDiscordLink","QAs","q","img","src","alt","to","CardSection","header","padded","noShadow","marginBottom","margin","shadowCard","overflow","NumberSlider","min","max","step","sliderValue","suffix","defaultValue","formItemProps","_value","setValue","inputConfig","decimals","updateValue","display","alignItems","tooltipVisible","flex","Item","rules","formatter","_val","parser","newVal","extra","CurrencyContext","currencyMetadata","V2_CURRENCY_METADATA","currencies","ETH","V2_CURRENCY_ETH","USD","V2_CURRENCY_USD","projectType","earned","currentFC","queuedFC","currentPayoutMods","currentTicketMods","queuedPayoutMods","queuedTicketMods","balance","balanceInCurrency","V1ProjectHandle","Projects","useCallback","parseBytes32String","useHandleForProjectId","CURRENCY_METADATA","symbol","fontFamily","REDUX_STORE_V2_PROJECT_VERSION","defaultFundingCycleData","serializeV2FundingCycleData","DEFAULT_BALLOT_STRATEGY","defaultFundingCycleMetadata","serializeV2FundingCycleMetadata","global","allowSetTerminals","allowSetController","ballotRedemptionRate","pausePay","pauseDistributions","pauseRedeem","pauseBurn","allowChangeToken","allowTerminalMigration","allowControllerMigration","holdFees","useTotalOverflowForRedemptions","useDataSourceForPay","useDataSourceForRedeem","dataSource","EMPTY_PAYOUT_GROUPED_SPLITS","ETH_PAYOUT_SPLIT_GROUP","splits","EMPTY_RESERVED_TOKENS_GROUPED_SPLITS","RESERVED_TOKEN_SPLIT_GROUP","fundingCycleData","fundAccessConstraints","payoutGroupedSplits","reservedTokensGroupedSplits","nftRewardTiers","nftRewardsCid","editingV2ProjectSlice","setFundingCycleData","setFundingCycleMetadata","setReservedRate","setRedemptionRate","setBallotRedemptionRate","setWeight","setFundAccessConstraints","setDistributionLimit","setDistributionLimitCurrency","setPayoutSplits","setReservedTokensSplits","setPausePay","setAllowMinting","setNftRewardTiers","setNftRewardsCid","editingV2ProjectActions","textSecondary","textTransform","tertiary","textPrimary","lineHeight","ProjectLogo","uri","size","srcLoadError","setSrcLoadError","validImg","_size","justifyContent","height","width","xl","maxHeight","minWidth","objectFit","objectPosition","onError","useProjectMetadata","enabled","targetToTargetSubFeeFormatted","newTargetSubFee","targetSubFeeToTargetFormatted","targetSubFee","newTarget","amountAddFee","getAmountFromPercent","feePercentage","getPercentFromAmount","targetSubFeeBN","v2ProjectRoute","layouts","centered","flexDirection","maxWidth","app","PayoutModsList","total","feePerbicent","form","useForm","modalVisible","setModalVisible","setLoading","editingMods","setEditingMods","setPayoutModsTx","transactor","contracts","V1UserContext","txOpts","ModStore","m","preferUnstaked","onDone","useSetPayoutModsTx","fundingCycleCurrency","editableMods","lockedMods","now","setMods","validateFields","onConfirmed","useLayoutEffect","modsTotal","ownerPercent","baseTotal","hasEditPermission","SetPayoutMods","totalPercentage","targetIsInfinite","eq","i","Mod","marginTop","layout","onKeyDown","visible","okText","onOk","onCancel","confirmLoading","validator","hidden","autoComplete","ProjectPayoutMods","onModsChanged","fundingCycleId","beneficiaryTicketAmount","getBallotStrategyByAddress","ballotStrategies","find","s","createCustomStrategy","FundingCycleDetailWarning","tooltipTitle","showWarning","deserializeV2FundingCycleMetadata","serializedFundingCycleMetadata","deserializeV2FundingCycleData","serializedFundingCycleData","serializeFundAccessConstraint","fundAccessConstraint","token","overflowAllowance","overflowAllowanceCurrency","deserializeFundAccessConstraint","unknown","V2UserContext","TooltipIcon","tip","iconStyle","trigger","SectionHeader","forThemeOption","_style","light","label","normalizeHandle","useSymbolOfERC20","setData","useErc20Contract","fetchSymbol","MinimalCollapse","props","bordered","ghost","StatLine","statLabel","statLabelTip","statValue","flexWrap","paragraph","active","setContract","signingProvider","provider","readProvider","listAccounts","accounts","Contract","erc20Abi","getSigner","FormItemLabel","TicketModsList","setTicketModsTx","useSetTicketModsTx","SetTicketMods","tokenSymbolText","capitalize","plural","ProjectTicketMods","CopyTextButton","copied","setCopied","navigator","clipboard","writeText","setTimeout","paddingLeft","modBeneficiary","modPreferUnstaked","modProjectId","modAllocator","modCut","note","holder","returnAmount","caller","netTransferAmount","beneficiaryTransferAmount","govFeeAmount","rinkeby","fc","deserializeV1FundingCycle","useShouldUpdateTokens","terminalName","_projectId","eventName","topics","TicketBooth","useContentType","link","contentType","setContentType","res","catch","RichImgPreview","h","RichNote","mediaLink","https","http","sanitizedNote","overflowWrap","paddingRight","dangerouslySetInnerHTML","__html","Autolinker","sanitizeHtml","truncate","location","replaceAll","formatDate","lightColors","darkColors","backgroundColors","l0","l2","success","failure","brand","highlight","iconColors","over","strokeColors","textColors","placeholder","boxShadow","juiceThemeColors","stroke","juiceRadii","xs","md","lg","V2ContractName","log","helpPagePath","path","URL","RichButton","heading","prefix","primaryColor","headingColor","subheadingColor","cardStyles","border","borderColor","NO_CURRENCY","V2CurrencyName","getV2CurrencyOption","useAppSelector","useSelector","useEditingV1FundingCycleSelector","serializedFundingCycle","editingProject","shallowEqual","useEditingV2FundingCycleMetadataSelector","editingV2Project","useEditingV2FundingCycleDataSelector","useEditingV2FundAccessConstraintsSelector","serializedFundAccessConstraints","d","useAppDispatch","useDispatch","PendingTransactionModalBody","textAlign","TransactionModal","connectWalletText","modalProps","transactionPending","cancelText","okButtonProps","Callout","transparent","iconComponent","backgroundColor","Paragraph","characterLimit","CHARACTER_LIMIT_EXCEEDED","expanded","setExpanded","shortDescription","paddingBottom","stopPropagation","infuraId","NETWORKS","localhost","chainId","blockExplorer","rpcUrl","hostname","kovan","faucet","ropsten","goerli","xdai","price","gasPrice","matic","mumbai","NETWORKS_BY_NAME","values","DEPRECATED_BALLOT_ADDRESSES","THREE_DAY","SEVEN_DAY","BALLOT_ADDRESSES","durationSeconds","SwitchHeading","checked","useTerminalFee","terminalContract","functions","fetchData","useEthBalanceQuery","getBalance","refetchInterval","SUSTAIN_DAO_A","SUSTAIN_DAO_B","JUS_DAO","ELONS_GAMES","INVESTORS_EDGE_DAO","V2_PROJECT_IDS","useWeiConverter","converter","parseEther","ByteUnit","ImageUploader","initialUrl","onSuccess","maxSizeKBs","maxSize","setUrl","loadingUpload","setLoadingUpload","newUrl","gutter","align","accept","beforeUpload","unit","MB","KB","formattedSize","Upload","LIST_IGNORE","customRequest","req","IpfsHash","wordBreak","textOverflow","useIsUserAddress","getLocalStoragePreloadedState","stateString","localStorage","getItem","REDUX_STATE_LOCALSTORAGE_KEY","parsedState","parse","reduxState","defaultV1ProjectState","defaultV2ProjectState","setItem","rootReducer","combineReducers","editingProjectReducer","editingV2ProjectReducer","createStore","configureStore","reducer","devTools","preloadedState","store","subscribe","getState","usePageTitle","useLocation","document","pathname","updateOn","callback","valueDidChange","_formatter","_callback","_valueDidChange","useDeepCompareEffectNoCheck","getValue","readContract","contractToRead","newValue","err","Sentry","tags","contract_function","listener","subscriptions","forEach","u","_contract","filters","on","off","contractConfig","setPrice","Prices","payText","stakedBalance","unstakedBalance","lastPaidTimestamp","deepEqFundingCycles","useTerminalOfProject","TerminalDirectory","useTokenAddressOfProject","useOwnerOfProject","ExternalLink","rel","useERC20BalanceOf","bigNumbersDiff","useGasPriceQuery","speed","useTransactor","onSelectWallet","checkWalletConnected","signer","getNetwork","notifyOpts","dappId","system","networkId","darkMode","transactionHandler","txInformation","transaction","status","onCancelled","notify","Notify","etherscanNetwork","etherscanTxUrl","tx","reportArgs","interface","f","inputs","input","gasLimit","hexlify","sendTransaction","wait","indexOf","emitter","onclick","open","confirmations","_","FormattedRow","span","FormattedPercentageAmount","ProjectModInput","index","locked","onSelect","onDelete","direction","FormattedAddress","LockOutlined","CloseCircleOutlined","ProjectPayoutModsModal","setModalMode","editingModType","setEditingModType","editingModHandle","setEditingModHandle","setEditingPercent","resetFields","setFieldsValue","loadSelectedMod","validatePayout","getFieldValue","roundedDownAmount","validateAndSave","_lockedUntil","newMod","modsToReturn","destroyOnClose","Option","EthAddress","onAddressChange","ProjectHandleFormItem","requireState","initialValue","returnValue","onValueChange","required","FormattedNumberInput","newAmount","newPercent","onAmountChange","accessory","editingModalVisible","setEditingModalVisible","setEditingModIndex","openModalWithModIndex","concat","minHeight","newMods","bits8","decodeFundingCycleMetadata","and","shr","reconfigurationBondingCurveRate","Boolean","encodeFundingCycleMetadata","encoded","or","shl","isRecurring","lt","hasFundingTarget","hasFundingDuration","getUnsafeV1FundingCycleProperties","ballotAddress","reservedRatePercentage","unsafeFundingCycleProperties","fundingCycleRiskCount","EthPrice","Balance","showEthPrice","verticalAlign","ReservedTokenReceiverModal","mode","validateReservedTokenReceiver","validateSlider","setPercent","percentOfReserved","realTokenAllocation","realTokenAllocationPercent","generateExtra","modInput","DeleteOutlined","totalSplitsPercentageInvalid","detailedTimeString","timeSeconds","roundToMinutes","fullWords","timeSecondsNumber","hours","seconds","daysString","hoursString","minutesString","secondsString","trimEnd","secondsUntil","detailedTimeUntil","endTimeSeconds","secondsLeft","otherUnitToSeconds","SECONDS_IN_HOUR","secondsToOtherUnit","deriveDurationUnit","module","exports","messages","one","other","mainnetPublicResolver","abi","constant","internalType","outputs","payable","stateMutability","anonymous","indexed","rinkebyPublicResolver","CONTRACT_ABI_OVERRIDES","DeprecatedJBController","filename","DeprecatedJBSplitsStore","DeprecatedJBDirectory","loadContract","signerOrProvider","contractJson","JBProjectHandles","receipts","contractAddress","PublicResolver","contractOverride","V2UserProvider","setContracts","contractLoaders","all","newContractMap","accumulator","idx","loadContracts","useV2ContractLoader","Provider","includeTokenWord","tokenTextSingular","tokenTextPlural","tokenText","getStorageKey","getEnsDict","tooltipDisabled","ensName","setEnsName","_address","record","expires","newRecord","lookupAddress","resolveName","tryUpdateENSDict","substr","userSelect","DISCOUNT_RATE_EXPLANATION","REDEMPTION_RATE_EXPLANATION","MOON_MARS","Project404","ItemNoInput","variantStyleLight","warning","danger","variantStyleDark","Badge","variant","variantStyle","COLLAPSE_PANEL_KEY","BallotStateBadge","ballotStrategyAddress","ballotStrategy","ballotStateTooltips","ballotStateIcons","ClockCircleOutlined","FundingCycleDetailsCard","fundingCycleStartTime","fundingCycleDurationSeconds","isFundingCycleRecurring","fundingCycleDetails","expand","HeaderText","formattedTimeLeft","defaultActiveKey","ExclamationCircleOutlined","V2ProjectHandle","versionText","ProjectVersionBadge","ScrollToTopButton","scrollTo","top","behavior","NewDeployNotAvailable","handleOrId","history","useHistory","go","configFlags","GRAPH_CONTAINER_ID","DEFAULT_BONDING_CURVE_RATE_PERCENTAGE","BondingCurveRateExtra","ProjectRedemptionRate","hideLabel","onToggled","labelStyle","position","graphSize","calculator","setCalculator","bondingCurveId","baseCurveId","Desmos","GraphingCalculator","getElementById","keypad","expressions","settingsMenu","zoomButtons","expressionsTopbar","pointsOfInterest","trace","lockViewport","images","folders","notes","sliders","links","distributions","pasteTableData","showGrid","showXAxis","showYAxis","xAxisNumbers","yAxisNumbers","polarNumbers","graphCurve","setMathBounds","left","bottom","right","removeExpressions","setExpression","latex","flexGrow","graphPad","borderLeft","borderBottom","transform","CurrencySwitch","onCurrencyChange","SpendingStats","targetAmount","projectBalanceInCurrency","ownerAddress","untapped","distributableAmount","smallHeaderStyle","formattedDistributionLimit","FundingCycleSection","tabs","reconfigureButton","selectedTabKey","setSelectedTabKey","currentTabContent","tab","RestrictedActionsForm","onSave","showTicketPrintingWarning","setShowTicketPrintingWarning","valuePropName","htmlType","ReconfigurationStrategyDrawer","onClose","initialSelectedStrategy","strategy","setStrategy","selectedStrategy","BudgetForm","initialCurrency","initialTarget","initialDuration","setTargetSubFee","showFundingFields","setShowFundingFields","dispatch","editingFC","terminalFee","maxIntStr","hasTarget","ProjectTarget","onTargetChange","onTargetSubFeeChange","ProjectDuration","onToggleRecurring","IncentivesForm","disableBondingCurve","disableDiscountRate","saveButton","ProjectDiscountRate","PayModsForm","initialMods","new_mods","totalPercent","TicketingForm","showReservedRateWarning","setShowReservedRateWarning","ProjectReserved","reservedRateRiskyMin","USDAmount","formattedUSDAmount","TargetIndicatorLine","ProgressWithOverflow","percentOverflow","showTooltips","setShowTooltips","onMouseOver","onMouseEnter","onMouseLeave","showInfo","strokeColor","ProgressNoOverflow","percentPaid","FundingProgressBar","balanceInTargetCurrency","overflowAmountInTargetCurrency","hasTargetAmount","hasOverFlow","DeployedERC20EventElem","event","alignContent","contentLineHeight","primaryContentFontSize","timestamp","formatHistoricalDate","txHash","payEventOverrides","Map","PayEventElem","usePayEventOverrides","has","formatPayEventOverride","override","ProjectCreateEventElem","RedeemEventElem","IssueTokenButton","useIssueTokensTx","hideIcon","onCompleted","tooltipText","IssueTokensButton","search","IssueTokenModal","isNewDeploy","setTransactionPending","issueTokensTx","fields","getFieldsValue","toUpperCase","BurnTokensHelp","RedeemButtonTooltip","buttonDisabled","ManageTokensModal","projectAllowsMint","userHasMintPermission","hasOverflow","RedeemModal","ClaimTokensModal","MintModal","redeemModalVisible","setRedeemModalVisible","unstakeModalVisible","setUnstakeModalVisible","mintModalVisible","setMintModalVisible","tokensLabel","redeemDisabled","hasIssuedTokens","reload","V1BallotState","V2BallotState","PayWarningModal","cancelButtonProps","ProjectRiskNotice","unsafeProperties","warnings","k","FundingCycleDetails","formattedStartTime","formattedEndTime","fcReservedRate","tokenSymbolPluralCap","tokenSymbolPlural","ReservedRateText","payerRate","weightedRate","withReservedRate","withoutReservedRate","riskWarningText","column","xxl","TooltipLabel","contentStyle","FundingCyclePreview","useReservedTokensOfProject","DistributeTokensModal","distributeTokensTx","useDistributeTokensTx","reservedTokens","reservedTokensFormatted","ReservedTokens","hideActions","modalIsVisible","setModalIsVisible","isConstitutionDAO","isSharkDAO","WithdrawModal","tapAmount","setTapAmount","tapProjectTx","minAmount","useTapProjectTx","withdrawable","currentFCCurrency","Spending","withdrawModalVisible","setWithdrawModalVisible","CurrentFundingCycle","showCurrentDetail","QueuedFundingCycle","zIndex","FundingHistory","startId","selectedIndex","setSelectedIndex","fundingCycles","setFundingCycles","cycleIds","setCycleIds","allCyclesLoaded","cycleNumber","selectedFC","FundingCycles","cycle","fundingCycleElems","CaretRightOutlined","Loading","ReconfigureFCModal","currentStep","setCurrentStep","payModsModalVisible","setPayModsFormModalVisible","budgetFormModalVisible","setBudgetFormModalVisible","rulesFormModalVisible","setRulesFormModalVisible","incentivesFormModalVisible","setIncentivesFormModalVisible","ticketingFormModalVisible","setTicketingFormModalVisible","restrictedActionsFormModalVisible","setRestrictedActionsFormModalVisible","ticketingForm","incentivesForm","restrictedActionsForm","editingPayoutMods","setEditingPayoutMods","editingTicketMods","setEditingTicketMods","configureProjectTx","fcProperties","fcMetadata","properties","useConfigureProjectTx","editingFCCurrency","drawerStyle","innerWidth","buildSteps","steps","CaretRightFilled","Fragment","valueRender","onBudgetFormSaved","onPayModsFormSaved","onTicketingFormSaved","onIncentivesFormSaved","onRestrictedActionsFormSaved","ReconfigureFundingModalTrigger","fundingDuration","localStoreRef","useRef","reconfigureModalVisible","setReconfigureModalVisible","handleModalOpen","current","tabText","canReconfigure","Configure","useTotalBalanceOf","V1ProjectTokenBalance","hideHandle","useSetProjectUriTx","V1BalancesModal","editModalVisible","setEditModalVisible","editingTokenRefs","setEditingTokenRefs","setProjectUriTx","initialTokens","SetUri","footer","SettingOutlined","t","ERC20TokenBalance","uploadedMetadata","TokenRefs","refs","onRefsChange","Paid","balancesModalVisible","setBalancesModalVisible","ownerBalance","overflowInCurrency","secondaryTextStyle","spacing","formatCurrencyAmount","amt","VolumeStatLine","convertToCurrency","RightCircleOutlined","V1DownloadPaymentsModal","latestBlockNumber","setLatestBlockNumber","blockNumber","setBlockNumber","getBlockNumber","download","date","toUTCString","csvContent","encodedUri","encodeURI","createElement","setAttribute","body","appendChild","click","V1DownloadActivityModal","paymentsModalVisible","setPaymentsModalVisible","ReservesEventElem","distributeEvents","TapEventElem","payoutEvents","ProjectActivity","downloadModalVisible","setDownloadModalVisible","eventFilter","setEventFilter","_where","fetchNextPage","hasNextPage","isFetchingNextPage","pages","elem","listStatus","prev","cur","paddingTop","borderTop","DownloadOutlined","useSafeTransferFromTx","newOwnerAddress","useTransferTokensTx","useAddToBalanceTx","useUnclaimedBalanceOfUser","EditProjectModal","loadingSetURI","setLoadingSetURI","loadingSetHandle","setLoadingSetHandle","projectInfoForm","handleForm","setHandleTx","formatBytes32String","useSetProjectHandleTx","ProjectName","ProjectDescription","ProjectLink","ProjectTwitter","ProjectDiscord","ProjectPayButton","ProjectPayDisclosure","ProjectLogoUri","PROJECT_PAY_CHARACTER_LIMIT","MigrateV1Pt1Modal","loadingAddToBalance","setLoadingAddToBalance","loadingMigrate","setLoadingMigrate","migrateV1ProjectTx","newTerminalAddress","useMigrateV1ProjectTx","addToBalanceTx","needsBalance","okType","V1ProjectHeaderActions","migrateDrawerVisible","setMigrateDrawerVisible","toolDrawerVisible","setToolDrawerVisible","editProjectModalVisible","setEditProjectModalVisible","SetHandle","unclaimedTokenBalance","allowMigrate","ToolOutlined","ProjectToolsDrawer","useTransferProjectOwnershipTx","useTransferUnclaimedTokensTx","useEditV2ProjectDetailsTx","useDeployProjectPayerTx","redeemAmount","setRedeemAmount","redeemTokensTx","preferConverted","useRedeemTokensTx","totalBalance","maxClaimable","useClaimableOverflowOf","rewardAmount","tokenAmount","currentOverflow","reservedTicketBalance","totalSupply","currentBallotState","Active","base","useRedeemRate","redeem","statsStyle","tokensTextLong","tokensTextShort","modalTitle","buttonText","redeemBN","ConfirmUnstakeTokensModal","unstakeAmount","setUnstakeAmount","unstakeTokensTx","useUnstakeTokensTx","unclaimedBalance","ticketsIssued","PrintPreminedModal","printTokensTx","usePrintTokensTx","amountValidator","erc20Issued","submit","onFinish","rule","Rewards","manageTokensModalVisible","setManageTokensModalVisible","participantsModalVisible","setParticipantsModalVisible","claimedBalance","useTotalSupplyOfProjectToken","totalSupplyWithReservedTicketBalance","share","hasIssueTicketsPermission","Issue","canPrintPreminedV1Tickets","useCanPrintPreminedTokens","PrintTickets","gap","ParticipantsModal","projectName","disablePayOverrides","Set","V1ConfirmPayOwnerModal","weiAmount","payButtonText","setPreferUnstaked","setMemo","payProjectTx","missingParam","DOMException","usePayV1ProjectTx","receivedTickets","ownerTickets","riskCount","renderRiskNotice","MemoFormItem","htmlFor","V1PayButton","payAmount","payInCurrency","wrapperStyle","payModalVisible","setPayModalVisible","payWarningModalVisible","setPayWarningModalVisible","weiPayAmt","isV1AndMaxRR","isMoonAndMaxRR","overridePayDisabled","shouldDisableButton","disabledMessage","VolumeChart","lazy","V1Project","ProjectHeader","PayInputGroup","PayButton","weightingFn","fallback","ArchiveProject","storeCidTx","canTakePaymentsWhenArchived","isLoadingArchive","setIsLoadingArchive","setArchived","labels","Authorization","REACT_APP_GITHUB_ACCESS_TOKEN","postGitHubIssueForArchive","ArchiveV1Project","setUriTx","ArchiveV2Project","editV2ProjectDetailsTx","TransactorButton","AddToProjectBalanceForm","addToBalanceForm","Form","LaunchProjectPayerButton","DeployButton","LaunchProjectPayerModal","PayableAddressSection","JB_V1_TOKEN_PAYMENT_TERMINAL_ADDRESS","useV1ProjectOf","v1TokenPaymentTerminalContract","JBV1TokenPaymentTerminal","v1ProjectIdOf","StepSection","completed","CheckCircleFilled","AddTerminalSection","addTerminalLoading","setAddTerminalLoading","setProjectTerminalsTx","JBDirectory","useSetProjectTerminalsTx","onAddTerminal","newTerminals","SetV1ProjectSection","v1ProjectIdLoading","setV1ProjectIdLoading","setV1ProjectIdTx","v1ProjectId","useSetV1ProjectIdTx","onSetV1ProjectId","V1TokenMigrationModal","migrationTerminalSectionComplete","setMigrationTerminalSectionComplete","v1ProjectSectionComplete","setV1ProjectSectionComplete","hasMigrationTerminal","getAddress","hasV1TokenPaymentTerminal","v1Project","hasSetV1Project","V1TokenMigrationSection","migrationModalVisible","setMigrationModalVisible","v1ProjectLoading","hasV1ProjectId","spin","TransferOwnershipForm","transferProjectOwnershipTx","loadingTransferOwnership","setLoadingTransferOwnership","transferOwnershipForm","TransferUnclaimedTokensForm","loadingTransferTokens","setLoadingTransferTokens","transferTokensForm","transferUnclaimedTokensTx","tokenSymbolShort","transferTokens","TabPane","Tabs","deployProjectPayerTx","isOwnerWallet","shouldRenderV1Archive","shouldRenderV2Archive","OwnerTools","UNISWAP_FEES_BPS","useSushiswapPriceQuery","PROJECT_TOKEN","Token","WETH","WETH9","pair","tokenA","tokenB","pairAddress","Pair","reserves0","reserves1","IUniswapV2PairABI","getReserves","balances","sortsBefore","CurrencyAmount","fromRawAmount","fetchPairData","route","Route","midPrice","LOGOS","Uniswap","fill","enableBackground","viewBox","xmlns","clipRule","fillRule","Sushiswap","xmlnsXlink","offset","stopColor","gradientTransform","gradientUnits","x1","x2","xlinkHref","y1","y2","clipPath","fontStyle","TokenAMMPriceRow","exchangeName","exchangeLink","WETHPrice","LogoComponent","NotAvailableText","tooltip","overlayInnerStyle","LinkOutlined","AMMPrices","uniswapPriceData","uniswapLoading","factoryContract","UNISWAP_V3_FACTORY_ADDRESS","IUniswapV3FactoryABI","getPoolAddress","poolAddress","getPool","ethersConstants","feeIdx","findIndex","getPoolImmutables","poolContract","factory","token0","token1","tickSpacing","maxLiquidityPerTick","getPoolState","slot","liquidity","slot0","sqrtPriceX96","tick","observationIndex","observationCardinality","observationCardinalityNext","feeProtocol","unlocked","IUniswapV3PoolABI","immutables","projectTokenETHPool","Pool","projectTokenPrice","token0Price","token1Price","useUniswapPriceQuery","sushiswapPriceData","sushiswapLoading","PayInputSubText","receiveText","formatReceivedTickets","exchangeRate","overlayStyle","setPayAmount","setPayInCurrency","isErrorField","setIsErrorField","Discord","prettyUrl","startsWith","linkUrl","SocialLinks","TwitterOutlined","onClickSetHandle","useProjectOwner","projectTitle","EditOutlined","ReconfigurationStrategyOption","selected","onSelectBallot","CustomStrategyInput","signerNetwork","ReconfigurationStrategySelector","selectedStrategyIndex","selectedIsCustom","customStrategyAddress","setCustomStrategyAddress","customStrategy","convertedVolume","DownloadParticipantsModal","setParticipants","sortPayerReports","setSortPayerReports","setPageNumber","sortPayerReportsDirection","setSortPayerReportsDirection","newParticipants","SortAscendingOutlined","SortDescendingOutlined","AdvancedOptionsCollapse","tokenMintingEnabled","setTokenMintingEnabled","setPreferClaimed","activeKey","setActiveKey","customBeneficiaryEnabled","setCustomBeneficiaryEnabled","advancedSettingsMargin","switchMargin","customBeneficiaryAddress","loadingProjectPayer","setLoadingProjectPayer","projectPayerAddress","setProjectPayerAddress","confirmedModalVisible","setConfirmedModalVisible","customMemo","newProjectPayerAddress","txReceipt","logs","getProjectPayerAddressFromReceipt","getTransactionReceipt","PAYMENT_MEMO_STICKERS","filepath","AttachStickerModal","AttachableSticker","sticker","overflowY","attachStickerModalVisible","setAttachStickerModalVisible","TextArea","maxLength","showCount","autoSize","SmileOutlined","urlString","origin","ProjectHandleInput","inputContents","setInputContents","triggerChange","isBigNumberish","handleOf","spellCheck","handleLoading","setHandleLoading","handleHex","idForHandle","handleExists","InputCheckIcon","CheckCircleOutlined","isExistingHandleValid","validateTrigger","validateFirst","DiscountRateExtra","BudgetTargetInput","showTargetSubFeeInput","targetSubFeeStyles","_currency","_currencySwitch","FormItems","ENSName","endsWith","addressForENSName","setAddressForENSName","setENSName","loadingENSName","setLoadingENSName","onInputChange","isENS","ENSNameForAddress","extraText","onToggle","showDurationInput","setShowDurationInput","showRiskWarning","setShowRiskWarning","riskNotice","effectiveIssuanceRate","initialReservedTokensPerEth","contributorIssuanceRate","r","CaretDownFilled","_r","_i","flexShrink","V1_CURRENCY_CONTEXT","dateMillis","format","fromNow","indicator","JsonRpcBatchProvider","permyriad","webpackContext","webpackContextResolve","__webpack_require__","o","code","reservedRatePerbicent","wadAmount","stringIsDigit","test","inverseFeePerbicent","webpackAsyncContext","ids","Wallet","isMobile","onLogOut","menuItemPadding","menu","LogoutOutlined","overlay","Account","FeedbackFormButton","mobile","projectHandle","formUrl","referrer","searchParams","set","innerHeight","feedbackFormURL","MessageOutlined","Logo","Languages","en","short","long","zh","ru","tr","pt","es","fr","NavLanguageSelector","disableLang","dropdownOpen","setDropdownOpen","currentSelectedLanguage","desktopDropdownStyle","selectHeader","handleClick","GlobalOutlined","dropdownStyle","newLanguage","setLanguage","dropdownMatchSelectWidth","lang","topNavStyles","topRightNavStyles","topLeftNavStyles","navMenuItemStyles","navDropdownItem","resourcesMenuItems","NavMenuItem","external","resourcesMenu","TopLeftNavItems","onClickMenuItems","resourcesOpen","setResourcesOpen","dropdownIconStyle","scrollIntoView","UpOutlined","DownOutlined","Moon","Sun","ThemePickerMobile","SubMenu","Menu","ResourcesDropdownMobile","MobileCollapse","isNavOpen","showArrow","MenuOutlined","defaultSelectedKeys","ThemePicker","selectedColor","unselectedColor","switchStyle","iconSize","Navbar","fathom","Faq","accordion","qa","Footer","footerLinksStyles","rowGap","gitCommit","REACT_APP_VERSION","gitCommitLink","RankingExplanation","trendingWindow","TrendingProjectCard","rank","trendingWindowDays","rankStyle","metadataUri","percentGainText","preTrendingVolume","percentGain","percentRounded","paymentCount","Grid","colProps","child","Payments","events","ProjectHandle","TrendingSection","trendingProjectsStyle","SmallHeader","InfoCircleOutlined","SectionHeading","SmallProjectCardMobile","SmallProjectCard","TopProjectsSection","previewProjects","Stat","StatsSection","projectsCount","FourthCol","HowItWorksSection","wrapper","BigHeader","Landing","BuiltForList","gridAutoFlow","CallToAction","trackGoal","textDecoration","PrivacyPolicy","ProjectCard","projectQuery","projectObj","_project","TrendingProjects","TAB_TYPE_NAMES","holdings","myprojects","ProjectsTabs","selectedTab","Tab","HoldingsProjects","FilterCheckboxItem","ProjectsFilterAndSort","includeV1","setIncludeV1","includeV1_1","setIncludeV1_1","includeV2","setIncludeV2","showArchived","setShowArchived","setOrderBy","FilterOutlined","ArchivedProjectsMessage","MyProjects","defaultTab","setSelectedTab","params","URLSearchParams","searchText","setSearchText","loadMoreContainerRef","_cv","isLoadingProjects","searchPages","isLoadingSearch","observer","IntersectionObserver","isIntersecting","rootMargin","observe","disconnect","concatenatedPages","autoFocus","onSearch","allowClear","ref","V1CurrencyProvider","projectTypes","V1Dashboard","useParams","useProjectIdForHandle","useCurrentFundingCycleOfProject","useQueuedFundingCycleOfProject","currentConfigured","useCurrentPayoutModsOfProject","queuedConfigured","useQueuedPayoutModsOfProject","useCurrentTicketModsOfProject","useQueuedTicketModsOfProject","useBalanceOfProject","useOverflowOfProject","useUriOfProject","V2BugUpdates","V1Create","V2Create","V2DashboardGateway","CatchallRedirect","JuiceboxSwitch","trackPageview","usePageViews","exact","Router","App","switchNetworkModalVisible","setSwitchNetworkModalVisible","networkName","supportedNetworks","closable","n","_n","subDomain","SUPPORTED_LOCALES","DEFAULT_LOCALE","i18n","loadLocaleData","plurals","activateDefaultLocale","defaultLocale","activate","LanguageProvider","locale","detect","fromUrl","fromStorage","fromNavigator","getLocale","dynamicActivate","queryClient","QueryClient","ReactQueryProvider","client","initialIsOpen","KEY_SELECTED_WALLET","NetworkProvider","setSigningProvider","previousNetwork","setPreviousNetwork","setNetwork","account","setAccount","onboard","setOnboard","resetWallet","walletReset","onNetworkChanged","newNetwork","newWallet","Web3Provider","Onboard","hideBranding","walletSelect","wallets","walletName","appUrl","email","infuraKey","appName","disableNotifications","walletCheck","checkName","ready","previouslySelectedWallet","flattenNestedObject","nestedObj","ThemeProvider","storageKey","initialThemeOption","currentThemeOption","setCurrentThemeOption","setIsDarkMode","setRootVarsForThemeOption","documentElement","setProperty","useJuiceTheme","V1UserProvider","loadContractKeyPair","newContracts","useV1ContractLoader","ReactDOM","render","StrictMode","isInteger","_suffix","_prefix","allowedValueChars","stringMode","RegExp"],"mappings":"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,KACA,KAED,8EAA+E,CAC9E,KACA,KAED,qEAAsE,CACrE,KACA,KAED,oEAAqE,CACpE,KACA,KAED,gEAAiE,CAChE,KACA,KAED,yDAA0D,CACzD,KACA,KAED,2DAA4D,CAC3D,KACA,KAED,8EAA+E,CAC9E,KACA,KAED,kFAAmF,CAClF,KACA,KAED,8DAA+D,CAC9D,KACA,KAED,6DAA8D,CAC7D,KACA,KAED,4FAA6F,CAC5F,KACA,KAED,mFAAoF,CACnF,KACA,KAED,mFAAoF,CACnF,KACA,KAED,wEAAyE,CACxE,KACA,KAED,8DAA+D,CAC9D,KACA,KAED,8DAA+D,CAC9D,KACA,KAED,6DAA8D,CAC7D,KACA,KAED,gFAAiF,CAChF,KACA,KAED,+EAAgF,CAC/E,KACA,KAED,sEAAuE,CACtE,KACA,KAED,qEAAsE,CACrE,KACA,KAED,iEAAkE,CACjE,KACA,KAED,0DAA2D,CAC1D,KACA,KAED,4DAA6D,CAC5D,KACA,KAED,mFAAoF,CACnF,KACA,KAED,+DAAgE,CAC/D,KACA,KAED,8DAA+D,CAC9D,KACA,KAED,6FAA8F,CAC7F,KACA,KAED,6FAA8F,CAC7F,KACA,KAED,6FAA8F,CAC7F,KACA,KAED,6FAA8F,CAC7F,KACA,KAED,6FAA8F,CAC7F,KACA,KAED,mFAAoF,CACnF,KACA,KAED,mFAAoF,CACnF,KACA,KAED,wEAAyE,CACxE,KACA,KAED,8DAA+D,CAC9D,KACA,KAED,8DAA+D,CAC9D,KACA,KAED,6DAA8D,CAC7D,KACA,KAED,gFAAiF,CAChF,KACA,KAED,+EAAgF,CAC/E,KACA,KAED,sEAAuE,CACtE,KACA,KAED,qEAAsE,CACrE,KACA,KAED,iEAAkE,CACjE,KACA,KAED,0DAA2D,CAC1D,KACA,KAED,4DAA6D,CAC5D,KACA,KAED,mFAAoF,CACnF,KACA,KAED,+DAAgE,CAC/D,KACA,KAED,8DAA+D,CAC9D,KACA,KAED,6FAA8F,CAC7F,KACA,KAED,6FAA8F,CAC7F,KACA,KAED,6FAA8F,CAC7F,KACA,KAED,6FAA8F,CAC7F,KAC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","file":"static/js/main.bc3e7404.chunk.js","sourcesContent":["const DEFAULT_PINATA_GATEWAY = 'gateway.pinata.cloud'\r\n\r\nexport const IPFS_GATEWAY_HOSTNAME =\r\n  process.env.REACT_APP_PINATA_GATEWAY_HOSTNAME || DEFAULT_PINATA_GATEWAY\r\n","import {\r\n  PinataMetadata,\r\n  PinataPinListResponse,\r\n  PinataPinResponse,\r\n} from '@pinata/sdk'\r\nimport axios from 'axios'\r\n\r\nimport { IpfsCacheJsonData } from 'models/ipfs-cache/cache-data'\r\nimport { IpfsCacheName } from 'models/ipfs-cache/cache-name'\r\nimport { consolidateMetadata, ProjectMetadataV4 } from 'models/project-metadata'\r\n\r\nimport { readNetwork } from 'constants/networks'\r\nimport { IPFS_GATEWAY_HOSTNAME } from 'constants/ipfs'\r\n\r\nconst JUICEBOX_API_HOSTNAME = 'api.juicebox.money'\r\nconst axiosInstance = axios.create({\r\n  baseURL: `https://${JUICEBOX_API_HOSTNAME}/api`,\r\n})\r\n\r\nexport const IPFS_TAGS = {\r\n  [IpfsCacheName.trending]:\r\n    (process.env.NODE_ENV === 'production'\r\n      ? 'trending_projects_'\r\n      : 'DEV_trending_projects_') + readNetwork.name,\r\n  [IpfsCacheName.trendingV2]:\r\n    (process.env.NODE_ENV === 'production'\r\n      ? 'trending_projects_v2_'\r\n      : 'DEV_trending_projects_v2_') + readNetwork.name,\r\n  METADATA:\r\n    process.env.NODE_ENV === 'production'\r\n      ? 'juicebox_project_metadata'\r\n      : 'DEV_juicebox_project_metadata',\r\n  LOGO:\r\n    process.env.NODE_ENV === 'production'\r\n      ? 'juicebox_project_logo'\r\n      : 'DEV_juicebox_project_logo',\r\n}\r\n\r\n// keyvalues will be upserted to existing metadata. A null value will remove an existing keyvalue\r\nexport const editMetadataForCid = async (\r\n  cid: string | undefined,\r\n  options?: PinataMetadata,\r\n) => {\r\n  if (!cid) return undefined\r\n\r\n  const pinRes = await axiosInstance.put(`/ipfs/pin/${cid}`, { ...options })\r\n\r\n  return pinRes.data\r\n}\r\n\r\nexport const logoNameForHandle = (handle: string) => `juicebox-@${handle}-logo`\r\n\r\nexport const metadataNameForHandle = (handle: string) =>\r\n  `juicebox-@${handle}-metadata`\r\n\r\nexport const ipfsCidUrl = (hash: string) =>\r\n  `https://${IPFS_GATEWAY_HOSTNAME}/ipfs/${hash}`\r\n\r\nexport const cidFromUrl = (url: string | undefined) => url?.split('/').pop()\r\n\r\nexport const pinFileToIpfs = async (\r\n  file: File | Blob | string,\r\n  metadata?: PinataMetadata,\r\n) => {\r\n  const data = new FormData()\r\n\r\n  data.append('file', file)\r\n\r\n  if (metadata) {\r\n    data.append(\r\n      'pinataMetadata',\r\n      JSON.stringify({\r\n        keyvalues: metadata,\r\n      }),\r\n    )\r\n  }\r\n\r\n  const res = await axiosInstance.post('/ipfs/logo', data)\r\n\r\n  return res.data as PinataPinResponse\r\n}\r\n\r\nexport const uploadProjectMetadata = async (\r\n  metadata: Omit<ProjectMetadataV4, 'version'>,\r\n  handle?: string,\r\n) => {\r\n  const res = await axiosInstance.post('/ipfs/pin', {\r\n    data: consolidateMetadata(metadata),\r\n    options: {\r\n      pinataMetadata: {\r\n        keyvalues: {\r\n          tag: IPFS_TAGS.METADATA,\r\n        } as any, // eslint-disable-line @typescript-eslint/no-explicit-any\r\n        name: handle\r\n          ? metadataNameForHandle(handle)\r\n          : 'juicebox-project-metadata.json',\r\n      },\r\n    },\r\n  })\r\n\r\n  return res.data as PinataPinResponse\r\n}\r\n\r\nexport const uploadIpfsJsonCache = async <T extends IpfsCacheName>(\r\n  tag: T,\r\n  data: IpfsCacheJsonData[T],\r\n) => {\r\n  return await axiosInstance.post('/ipfs/pin', {\r\n    data,\r\n    options: {\r\n      pinataMetadata: {\r\n        keyvalues: {\r\n          tag: IPFS_TAGS[tag],\r\n        } as any, // eslint-disable-line @typescript-eslint/no-explicit-any\r\n        name: IPFS_TAGS[tag] + '.json',\r\n      },\r\n    },\r\n  })\r\n}\r\n\r\nexport const getPinnedListByTag = async (tag: keyof typeof IPFS_TAGS) => {\r\n  const data = await axiosInstance.get(`/ipfs/pin?tag=${IPFS_TAGS[tag]}`)\r\n\r\n  return data.data as PinataPinListResponse\r\n}\r\n","import { V1CurrencyOption } from 'models/v1/currencyOption'\r\n\r\nimport { CurrencyName } from 'constants/currency'\r\n\r\nimport {\r\n  V1_CURRENCY_ETH,\r\n  V1_CURRENCY_METADATA,\r\n  V1_CURRENCY_USD,\r\n} from 'constants/v1/currency'\r\n\r\nexport const V1CurrencyName = (\r\n  currency?: V1CurrencyOption,\r\n): CurrencyName | undefined =>\r\n  currency !== undefined ? V1_CURRENCY_METADATA[currency].name : undefined\r\n\r\nexport const getV1CurrencyOption = (\r\n  currencyName: CurrencyName,\r\n): V1CurrencyOption =>\r\n  currencyName === 'ETH' ? V1_CURRENCY_ETH : V1_CURRENCY_USD\r\n","import { CaretDownOutlined } from '@ant-design/icons'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { useContext } from 'react'\r\n\r\nexport default function InputAccessoryButton({\r\n  content,\r\n  onClick,\r\n  withArrow,\r\n  placement,\r\n  disabled,\r\n}: {\r\n  content: string | JSX.Element | undefined\r\n  withArrow?: boolean\r\n  onClick?: VoidFunction\r\n  placement?: 'prefix' | 'suffix'\r\n  disabled?: boolean\r\n}) {\r\n  const { colors, radii } = useContext(ThemeContext).theme\r\n\r\n  return content ? (\r\n    <div\r\n      role=\"button\"\r\n      style={{\r\n        cursor: onClick && !disabled ? 'pointer' : 'default',\r\n        color:\r\n          onClick && !disabled\r\n            ? colors.text.action.primary\r\n            : colors.text.primary,\r\n        background:\r\n          onClick && !disabled\r\n            ? colors.background.action.secondary\r\n            : colors.background.l1,\r\n        fontWeight: 500,\r\n        whiteSpace: 'nowrap',\r\n        padding: '1px 6px',\r\n        marginLeft: placement === 'suffix' ? 8 : 0,\r\n        marginRight: placement === 'prefix' ? 8 : 0,\r\n        borderRadius: radii.sm,\r\n      }}\r\n      onClick={onClick}\r\n    >\r\n      {content}\r\n      {withArrow && (\r\n        <CaretDownOutlined style={{ fontSize: 10, marginLeft: 4 }} />\r\n      )}\r\n    </div>\r\n  ) : null\r\n}\r\n","import { Tooltip } from 'antd'\r\nimport { t } from '@lingui/macro'\r\nimport { NetworkName } from 'models/network-name'\r\nimport { LinkOutlined } from '@ant-design/icons'\r\nimport { CSSProperties } from 'react'\r\n\r\nimport { readNetwork } from 'constants/networks'\r\nimport ExternalLink from './ExternalLink'\r\n\r\nexport default function EtherscanLink({\r\n  value,\r\n  type,\r\n  truncated,\r\n  style,\r\n}: {\r\n  value: string | undefined\r\n  type: 'tx' | 'address'\r\n  truncated?: boolean\r\n  style?: CSSProperties\r\n}) {\r\n  if (!value) return null\r\n  let truncatedValue: string | undefined\r\n  // Return first and last 4 chars of ETH address only\r\n  if (truncated) {\r\n    truncatedValue =\r\n      value.substring(0, 6) + '...' + value.substring(value.length - 4)\r\n  }\r\n\r\n  let subdomain = ''\r\n  if (readNetwork.name !== NetworkName.mainnet) {\r\n    subdomain = readNetwork.name + '.'\r\n  }\r\n  const linkProps = {\r\n    className: 'hover-action',\r\n    style: { ...style, fontWeight: 400 },\r\n    href: `https://${subdomain}etherscan.io/${type}/${value}`,\r\n  }\r\n\r\n  if (type === 'tx') {\r\n    return (\r\n      <Tooltip title={t`See transaction`}>\r\n        <ExternalLink {...linkProps}>\r\n          <LinkOutlined />\r\n        </ExternalLink>\r\n      </Tooltip>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Tooltip title={t`Go to Etherscan`}>\r\n      <ExternalLink {...linkProps}>{truncatedValue ?? value}</ExternalLink>\r\n    </Tooltip>\r\n  )\r\n}\r\n","import { BigNumber, BigNumberish } from '@ethersproject/bignumber'\r\nimport { formatUnits, parseUnits } from '@ethersproject/units'\r\nimport { round } from 'lodash'\r\n\r\nimport { WAD_DECIMALS } from 'constants/numbers'\r\n\r\ntype FormatConfig = {\r\n  empty?: string\r\n  thousandsSeparator?: string\r\n  decimalSeparator?: string\r\n  precision?: number\r\n  padEnd?: boolean\r\n  decimals?: number\r\n}\r\n\r\nconst decimalSeparator = '.'\r\nconst thousandsSeparator = ','\r\n\r\n/**\r\n * Returns a Wad representation of a given [value], parsed with 18 digits.\r\n *\r\n * A wad is a decimal number with 18 digits of precision.\r\n * Wad: 1e-18\r\n * Ref: https://github.com/dapphub/ds-math\r\n *\r\n * @example\r\n * // returns 1000000000000000000\r\n * parseWad(1);\r\n *\r\n */\r\nexport const parseWad = (value?: BigNumberish) =>\r\n  parseUnits(value?.toString() || '0', WAD_DECIMALS)\r\n\r\n/**\r\n * Returns a string representation of a given [wadValue]\r\n *\r\n * A wad is a decimal number with 18 digits of precision.\r\n * Wad: 1e-18\r\n * Ref: https://github.com/dapphub/ds-math\r\n *\r\n * @example\r\n * // returns 1\r\n * fromWad(1000000000000000000);\r\n *\r\n */\r\nexport const fromWad = (wadValue?: BigNumberish) => {\r\n  const result = formatUnits(wadValue ?? '0')\r\n  return result.substring(result.length - 2) === '.0'\r\n    ? result.substring(0, result.length - 2)\r\n    : result\r\n}\r\n\r\n/**\r\n * Returns a formatted string of given [wadValue], formatted according to the given [formatConfig].\r\n *\r\n * A wad is a decimal number with 18 digits of precision.\r\n * Wad: 1e-18\r\n * Ref: https://github.com/dapphub/ds-math\r\n *\r\n * @example\r\n * // returns 1,000\r\n * formatWad(1000000000000000000000, { thousandsSeparator: ',' });\r\n *\r\n */\r\nexport const formatWad = (\r\n  wadValue?: BigNumberish,\r\n  formatConfig?: FormatConfig,\r\n) => {\r\n  if (wadValue === undefined && wadValue === null && wadValue === '') return\r\n\r\n  let _wadValue = wadValue\r\n  if (_wadValue?.toString().includes('.')) {\r\n    _wadValue = _wadValue.toString().split('.')[0]\r\n  }\r\n\r\n  return formattedNum(fromWad(_wadValue), formatConfig)\r\n}\r\n\r\n/**\r\n * Scale a given [percentValue] to the permyriad unit by multiplying it by 100.\r\n *\r\n * Permyriad: x/10000\r\n *\r\n * Ref: https://math.fandom.com/wiki/Permyriad\r\n */\r\nexport const percentToPermyriad = (percentValue?: string | number) =>\r\n  BigNumber.from(\r\n    percentValue ? Math.floor(parseFloat(percentValue.toString()) * 100) : 0,\r\n  )\r\n\r\n/**\r\n * Scale a given [permyriadValue] to the percent unit by dividing it by 100.\r\n *\r\n * Permyriad: x/10000\r\n *\r\n * Ref: https://math.fandom.com/wiki/Permyriad\r\n */\r\nexport const permyriadToPercent = (permyriadValue?: BigNumberish) =>\r\n  permyriadValue\r\n    ? (BigNumber.from(permyriadValue).toNumber() / 100).toString()\r\n    : '0'\r\n\r\n/**\r\n * Scale a given [percentValue] to the permille unit by multiplying it by 10.\r\n *\r\n * Permille: x/1000\r\n *\r\n * Ref: https://math.fandom.com/wiki/Permille\r\n */\r\nexport const percentToPermille = (percentValue?: string | number) =>\r\n  BigNumber.from(\r\n    percentValue ? Math.floor(parseFloat(percentValue.toString()) * 10) : 0,\r\n  )\r\n\r\n/**\r\n * Scale a given [permilleValue] to the percent unit by dividing it by 10.\r\n *\r\n * Permille: x/1000\r\n *\r\n * Ref: https://math.fandom.com/wiki/Permille\r\n */\r\nexport const permilleToPercent = (permilleValue?: BigNumberish) =>\r\n  permilleValue\r\n    ? (BigNumber.from(permilleValue).toNumber() / 10).toString()\r\n    : '0'\r\n\r\n/**\r\n * Scale a given [percentValue] to the perbicent unit by multiplying it by 2.\r\n *\r\n * Perbicent: x/200\r\n */\r\nexport const percentToPerbicent = (percentValue?: string | number) =>\r\n  BigNumber.from(\r\n    percentValue ? Math.floor(parseFloat(percentValue.toString()) * 2) : 0,\r\n  )\r\n\r\n/**\r\n * Scale a given [perbicentValue] to the percent unit by dividing it by 2.\r\n *\r\n * Perbicent: x/200\r\n */\r\nexport const perbicentToPercent = (perbicentValue?: BigNumberish) =>\r\n  perbicentValue\r\n    ? (BigNumber.from(perbicentValue).toNumber() / 2).toString()\r\n    : '0'\r\n\r\nexport const fracDiv = (quotient: string, dividend: string) => {\r\n  return parseFloat(quotient) / parseFloat(dividend)\r\n}\r\n\r\nconst separateThousands = (str?: string, separator = thousandsSeparator) => {\r\n  if (!str?.trim().length) return\r\n\r\n  return str.replace(/\\B(?=(\\d{3})+(?!\\d))/g, separator)\r\n}\r\n\r\n// Strips string of all commas\r\nexport const stripCommas = (string: string) => {\r\n  return string.replace(/,/g, '')\r\n}\r\n\r\nexport const formattedNum = (\r\n  num: BigNumberish | undefined,\r\n  config?: FormatConfig,\r\n) => {\r\n  const _empty = config?.empty ?? '0'\r\n\r\n  if (num === undefined || num === '') return _empty\r\n\r\n  const _thousandsSeparator = config?.thousandsSeparator ?? thousandsSeparator\r\n  const _decimalSeparator = config?.decimalSeparator ?? decimalSeparator\r\n\r\n  let str = num.toString()\r\n\r\n  // Trim leading zeros\r\n  while (str.length && str[0] === '0') {\r\n    str = str.substring(1)\r\n  }\r\n\r\n  if (!str.length) return _empty\r\n\r\n  // Round if precision specified in config\r\n  if (config?.precision) {\r\n    str = round(parseFloat(str), config?.precision).toString()\r\n  }\r\n\r\n  // Return ~0 for >0 numbers trimmed to only zeros\r\n  function formatNearZero(formatted: string) {\r\n    if (\r\n      num?.toString().trim() &&\r\n      formatted\r\n        ?.split('')\r\n        .filter(\r\n          char => char !== _decimalSeparator && char !== _thousandsSeparator,\r\n        )\r\n        .every(char => char === '0')\r\n    ) {\r\n      return '~' + formatted\r\n    }\r\n\r\n    return formatted\r\n  }\r\n\r\n  if (str.includes(_decimalSeparator)) {\r\n    const [pre, post] = str.split(_decimalSeparator)\r\n\r\n    // Formatted preDecimal\r\n    const formattedPre = separateThousands(pre, _thousandsSeparator) || '0'\r\n\r\n    if (post === '0') return formatNearZero(pre)\r\n\r\n    const formattedPost = post\r\n      .substring(0, config?.precision ?? WAD_DECIMALS)\r\n      .padEnd(config?.padEnd ? config?.precision ?? 0 : 0, '0')\r\n\r\n    // If we can ignore postDecimal\r\n    if (!formattedPost || config?.precision === 0) {\r\n      return formatNearZero(formattedPre)\r\n    }\r\n\r\n    // Return entire preDecimal + postDecimal\r\n    return formatNearZero([formattedPre, formattedPost].join(_decimalSeparator))\r\n  }\r\n\r\n  const formatted = separateThousands(str, _thousandsSeparator)\r\n\r\n  return formatted\r\n}\r\n\r\nexport const formatPercent = (\r\n  numerator: BigNumber | undefined,\r\n  divisor: BigNumber | undefined,\r\n): string => {\r\n  if (!divisor?.gt(0) || !numerator) return ''\r\n\r\n  // Multiply by 10,000 for 4 significant figures\r\n  const sharePct = numerator?.mul(10000).div(divisor)\r\n\r\n  if (sharePct?.toString() === '0' && numerator?.gt(0)) {\r\n    return '<0.01'\r\n  }\r\n  return (sharePct?.toNumber() / 100).toString()\r\n}\r\n","import { CV } from 'models/cv'\r\n\r\nimport { parseProjectJson, Project, ProjectJson } from '../vX/project'\r\n\r\nexport interface BaseProjectEntity {\r\n  id: string\r\n  cv: CV\r\n  project: Partial<Project>\r\n  projectId: number\r\n}\r\n\r\nexport type BaseProjectEntityJson = Partial<\r\n  Record<Exclude<keyof BaseProjectEntity, 'project'>, string> & {\r\n    project: ProjectJson\r\n  }\r\n>\r\n\r\nexport const parseBaseProjectEntityJson = (\r\n  j: BaseProjectEntityJson,\r\n): Partial<BaseProjectEntity> => ({\r\n  id: j.id,\r\n  cv: j.cv ? (j.cv as CV) : undefined,\r\n  project: j.project ? parseProjectJson(j.project) : undefined,\r\n  projectId: j.projectId ? parseInt(j.projectId) : undefined,\r\n})\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { NetworkContext } from 'contexts/networkContext'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { V1ContractName } from 'models/v1/contracts'\r\nimport { useContext } from 'react'\r\n\r\nimport useContractReader from './ContractReader'\r\n\r\nexport enum OperatorPermission {\r\n  'Configure' = 1,\r\n  'PrintPreminedTickets' = 2,\r\n  'Redeem' = 3,\r\n  'Migrate' = 4,\r\n  'SetHandle' = 5,\r\n  'SetUri' = 6,\r\n  'ClaimHandle' = 7,\r\n  'RenewHandle' = 8,\r\n  'Issue' = 9,\r\n  'Stake' = 10,\r\n  'Unstake' = 11,\r\n  'Transfer' = 12,\r\n  'Lock' = 13,\r\n  'SetPayoutMods' = 14,\r\n  'SetTicketMods' = 15,\r\n  'SetTerminal' = 16,\r\n  'PrintTickets' = 17,\r\n}\r\n\r\nexport function useHasPermission(\r\n  permission: OperatorPermission | OperatorPermission[],\r\n) {\r\n  const { userAddress } = useContext(NetworkContext)\r\n  const { projectId, owner } = useContext(V1ProjectContext)\r\n\r\n  const hasOperatorPermission = useContractReader<boolean>({\r\n    contract: V1ContractName.OperatorStore,\r\n    functionName: 'hasPermissions',\r\n    args:\r\n      userAddress && owner && projectId\r\n        ? [\r\n            userAddress,\r\n            owner,\r\n            BigNumber.from(projectId).toHexString(),\r\n            Array.isArray(permission) ? permission : [permission],\r\n          ]\r\n        : null,\r\n  })\r\n\r\n  const isOwner =\r\n    userAddress && owner && userAddress.toLowerCase() === owner.toLowerCase()\r\n\r\n  return (\r\n    isOwner || hasOperatorPermission || process.env.NODE_ENV === 'development'\r\n  )\r\n}\r\n","import axios from 'axios'\r\nimport {\r\n  useInfiniteQuery,\r\n  UseInfiniteQueryOptions,\r\n  useQuery,\r\n  UseQueryOptions,\r\n} from 'react-query'\r\n\r\nimport {\r\n  EntityKey,\r\n  EntityKeys,\r\n  formatGraphQuery,\r\n  formatGraphResponse,\r\n  GraphQueryOpts,\r\n  InfiniteGraphQueryOpts,\r\n  querySubgraph,\r\n  SubgraphEntities,\r\n  SubgraphError,\r\n  SubgraphQueryReturnTypes,\r\n} from '../utils/graph'\r\n\r\nconst subgraphUrl = process.env.REACT_APP_SUBGRAPH_URL\r\nconst staleTime = 60 * 1000 // 60 seconds\r\n\r\n// This looks up the entity type and constructs an object\r\n// only with the keys you specified in K.\r\ntype GraphResult<E extends EntityKey, K extends EntityKeys<E>[]> = {\r\n  [PropertyKey in K[number]]: SubgraphEntities[E][PropertyKey]\r\n}[]\r\n\r\n// Pass `opts = null` to prevent http request\r\nexport default function useSubgraphQuery<\r\n  E extends EntityKey,\r\n  K extends EntityKeys<E>,\r\n>(\r\n  opts: GraphQueryOpts<E, K> | null,\r\n  reactQueryOptions?: UseQueryOptions<\r\n    GraphResult<E, K[]>,\r\n    Error,\r\n    GraphResult<E, K[]>,\r\n    readonly [string, GraphQueryOpts<E, K> | null]\r\n  >,\r\n) {\r\n  return useQuery<\r\n    GraphResult<E, K[]>,\r\n    Error,\r\n    GraphResult<E, K[]>,\r\n    readonly [string, GraphQueryOpts<E, K> | null]\r\n  >(['subgraph-query', opts], () => querySubgraph(opts), {\r\n    staleTime,\r\n    ...reactQueryOptions,\r\n  })\r\n}\r\n\r\nexport function useInfiniteSubgraphQuery<\r\n  E extends EntityKey,\r\n  K extends EntityKeys<E>,\r\n>(\r\n  opts: InfiniteGraphQueryOpts<E, K>,\r\n  reactQueryOptions?: UseInfiniteQueryOptions<\r\n    GraphResult<E, K[]>,\r\n    Error,\r\n    GraphResult<E, K[]>,\r\n    GraphResult<E, K[]>,\r\n    readonly [string, InfiniteGraphQueryOpts<E, K>]\r\n  >,\r\n) {\r\n  if (!subgraphUrl) {\r\n    // This should _only_ happen in development\r\n    throw new Error('env.REACT_APP_SUBGRAPH_URL is missing')\r\n  }\r\n  return useInfiniteQuery<\r\n    GraphResult<E, K[]>,\r\n    Error,\r\n    GraphResult<E, K[]>,\r\n    readonly [string, InfiniteGraphQueryOpts<E, K>]\r\n  >(\r\n    ['infinite-subgraph-query', opts] as const,\r\n    async ({ queryKey, pageParam = 0 }) => {\r\n      const { pageSize, ...evaluatedOpts } = queryKey[1]\r\n\r\n      const response = await axios.post<{\r\n        errors?: SubgraphError[]\r\n        data: SubgraphQueryReturnTypes[E]\r\n      }>(\r\n        subgraphUrl,\r\n        {\r\n          query: formatGraphQuery({\r\n            ...evaluatedOpts,\r\n            skip: pageSize * pageParam,\r\n            first: pageSize,\r\n          }),\r\n        },\r\n        { headers: { 'Content-Type': 'application/json' } },\r\n      )\r\n\r\n      if ('errors' in response.data) {\r\n        throw new Error(\r\n          response.data.errors?.[0]?.message ||\r\n            'Something is wrong with this Graph request',\r\n        )\r\n      }\r\n\r\n      return formatGraphResponse(opts.entity, response.data?.data)\r\n    },\r\n    {\r\n      staleTime,\r\n      ...reactQueryOptions,\r\n\r\n      // Don't allow this function to be overwritten by reactQueryOptions\r\n      getNextPageParam: (lastPage, allPages) => {\r\n        // If the last page contains less than the expected page size,\r\n        // it's safe to assume you're at the end.\r\n        if (lastPage.length < opts.pageSize) {\r\n          return false\r\n        } else {\r\n          return allPages.length\r\n        }\r\n      },\r\n    },\r\n  )\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { useCurrencyConverter } from 'hooks/CurrencyConverter'\r\nimport { formatWad } from 'utils/formatNumber'\r\nimport { LoadingOutlined } from '@ant-design/icons'\r\n\r\nimport CurrencySymbol from '../CurrencySymbol'\r\n\r\n// Takes an ETH amount and returns equiv in USD\r\nexport default function ETHToUSD({\r\n  ethAmount,\r\n}: {\r\n  ethAmount: BigNumber | string\r\n}) {\r\n  const converter = useCurrencyConverter()\r\n  const usdAmount = converter.wadToCurrency(ethAmount, 'USD', 'ETH')\r\n  const usdAmountFormatted = formatWad(usdAmount, {\r\n    precision: 2,\r\n    padEnd: true,\r\n  })\r\n\r\n  if (usdAmount?.gt(0)) {\r\n    return (\r\n      <span>\r\n        <CurrencySymbol currency=\"USD\" />\r\n        {usdAmountFormatted}\r\n      </span>\r\n    )\r\n  }\r\n  return <LoadingOutlined style={{ fontSize: 16 }} />\r\n}\r\n","import { Tooltip } from 'antd'\r\n\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { formatWad, parseWad } from 'utils/formatNumber'\r\nimport { betweenZeroAndOne } from 'utils/bigNumbers'\r\n\r\nimport CurrencySymbol from '../CurrencySymbol'\r\n\r\nimport ETHToUSD from './ETHToUSD'\r\n\r\n/**\r\n * Render a given amount formatted as ETH. Displays USD amount in a tooltip on hover.\r\n */\r\nexport default function ETHAmount({\r\n  amount,\r\n  precision = 0,\r\n  padEnd = false,\r\n}: {\r\n  amount?: BigNumber | string\r\n  precision?: number\r\n  padEnd?: boolean\r\n}) {\r\n  // Account for being passed a string amount or a BigNumber amount\r\n  const isBetweenZeroAndOne =\r\n    (BigNumber.isBigNumber(amount) && betweenZeroAndOne(amount)) ||\r\n    betweenZeroAndOne(parseWad(amount))\r\n\r\n  const precisionAdjusted = isBetweenZeroAndOne ? 4 : precision\r\n\r\n  const formattedETHAmount = formatWad(amount, {\r\n    precision: precisionAdjusted,\r\n    padEnd,\r\n  })\r\n\r\n  if (amount === undefined) return null\r\n\r\n  if (Number(formattedETHAmount) === 0) {\r\n    return (\r\n      <>\r\n        <CurrencySymbol currency=\"ETH\" />\r\n        {formattedETHAmount}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Tooltip title={<ETHToUSD ethAmount={amount} />}>\r\n      <CurrencySymbol currency=\"ETH\" />\r\n      {formattedETHAmount}\r\n    </Tooltip>\r\n  )\r\n}\r\n","import { BigNumber, BigNumberish } from '@ethersproject/bignumber'\r\n\r\nimport { parseWad } from './formatNumber'\r\nimport { CurrencyName } from 'constants/currency'\r\n\r\nexport class CurrencyUtils {\r\n  // Define non-fractional conversion units\r\n  usdPerEth: number | undefined = undefined\r\n  weiPerUsd: number | undefined = undefined\r\n\r\n  constructor(usdPerEth: number | undefined) {\r\n    if (!usdPerEth) {\r\n      console.info(\r\n        'Failed to construct CurrencyUtils, received a usdPerEth value of',\r\n        usdPerEth,\r\n      )\r\n      return\r\n    }\r\n\r\n    this.usdPerEth = usdPerEth\r\n    this.weiPerUsd = Math.round((1 / usdPerEth) * 1e18)\r\n  }\r\n\r\n  weiToUsd = (wei: BigNumberish | undefined) => {\r\n    if (!wei || !this.weiPerUsd) return BigNumber.from(0)\r\n\r\n    try {\r\n      return BigNumber.from(wei).div(this.weiPerUsd)\r\n    } catch (e) {\r\n      console.error(\"Couldn't convert wei amount\", wei.toString(), 'to USD', e)\r\n    }\r\n  }\r\n\r\n  usdToWei = (amount: number | string | undefined, precision = 8) => {\r\n    if (!amount || !this.usdPerEth) return BigNumber.from(0)\r\n\r\n    try {\r\n      return parseWad(\r\n        (\r\n          (typeof amount === 'string' ? parseFloat(amount) : amount) /\r\n          this.usdPerEth\r\n        ).toFixed(precision),\r\n      )\r\n    } catch (e) {\r\n      console.error(\r\n        \"Couldn't convert USD amount\",\r\n        amount.toString(),\r\n        'to wei',\r\n        e,\r\n      )\r\n    }\r\n  }\r\n\r\n  wadToCurrency = (\r\n    amount: BigNumberish | undefined,\r\n    targetCurrency: CurrencyName | undefined,\r\n    sourceCurrency: CurrencyName | undefined,\r\n  ) => {\r\n    if (targetCurrency === undefined || sourceCurrency === undefined) return\r\n    if (targetCurrency === sourceCurrency) return BigNumber.from(amount)\r\n    if (targetCurrency === 'USD')\r\n      return parseWad(this.weiToUsd(amount)?.toString())\r\n    if (targetCurrency === 'ETH' && this.usdPerEth !== undefined)\r\n      return BigNumber.from(amount)\r\n        .div(this.usdPerEth * 100)\r\n        .mul(100)\r\n  }\r\n}\r\n","import { useEtherPrice } from 'hooks/EtherPrice'\r\nimport { useMemo } from 'react'\r\nimport { CurrencyUtils } from 'utils/formatCurrency'\r\n\r\nexport function useCurrencyConverter() {\r\n  const usdPerEth = useEtherPrice()\r\n\r\n  return useMemo(() => new CurrencyUtils(usdPerEth), [usdPerEth])\r\n}\r\n","import { notification } from 'antd'\r\n\r\nconst DEFAULT_ERROR_NOTIFICATION_DURATION_SECONDS = 3\r\n\r\nexport const emitErrorNotification = (\r\n  message: string,\r\n  {\r\n    description,\r\n    duration,\r\n  }: {\r\n    description?: string\r\n    duration?: number\r\n  } = { duration: DEFAULT_ERROR_NOTIFICATION_DURATION_SECONDS },\r\n) => {\r\n  const key = new Date().valueOf().toString()\r\n  return notification.error({\r\n    key,\r\n    message,\r\n    description,\r\n    duration,\r\n    onClick() {\r\n      notification.close(key)\r\n    },\r\n  })\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport * as constants from '@ethersproject/constants'\r\nimport { V1CurrencyOption } from 'models/v1/currencyOption'\r\nimport { PayoutMod, TicketMod } from 'models/mods'\r\nimport { ProjectMetadataV4 } from 'models/project-metadata'\r\nimport {\r\n  perbicentToPercent,\r\n  permilleToPercent,\r\n  percentToPerbicent,\r\n  percentToPermille,\r\n} from 'utils/formatNumber'\r\nimport {\r\n  SerializedV1FundingCycle,\r\n  serializeV1FundingCycle,\r\n} from 'utils/v1/serializers'\r\nimport { toDateSeconds } from 'utils/formatDate'\r\n\r\nimport { V1_CURRENCY_USD } from 'constants/v1/currency'\r\n\r\ninterface EditingProjectInfo {\r\n  metadata: ProjectMetadataV4\r\n  handle: string\r\n}\r\n\r\ninterface EditingProjectState {\r\n  version: number\r\n  info: EditingProjectInfo\r\n  fundingCycle: SerializedV1FundingCycle\r\n  payoutMods: PayoutMod[]\r\n  ticketMods: TicketMod[]\r\n}\r\n\r\n// Increment this version by 1 when making breaking changes.\r\n// When users return to the site and their local version is less than\r\n// this number, their state will be reset.\r\nexport const REDUX_STORE_V1_PROJECT_VERSION = 1\r\n\r\nconst defaultDiscountRate = percentToPermille(0)\r\nconst defaultBondingCurveRate = percentToPerbicent(100)\r\n\r\nexport const defaultProjectState: EditingProjectState = {\r\n  version: REDUX_STORE_V1_PROJECT_VERSION,\r\n  info: {\r\n    metadata: {\r\n      name: '',\r\n      infoUri: '',\r\n      logoUri: '',\r\n      description: '',\r\n      twitter: '',\r\n      discord: '',\r\n      tokens: [],\r\n      version: 4,\r\n      archived: false,\r\n    },\r\n    handle: '',\r\n  },\r\n  fundingCycle: serializeV1FundingCycle({\r\n    id: BigNumber.from(1),\r\n    projectId: BigNumber.from(0),\r\n    number: BigNumber.from(1),\r\n    basedOn: BigNumber.from(0),\r\n    target: constants.MaxUint256,\r\n    currency: BigNumber.from(V1_CURRENCY_USD),\r\n    start: BigNumber.from(toDateSeconds(new Date())),\r\n    duration: BigNumber.from(0),\r\n    tapped: BigNumber.from(0),\r\n    weight: constants.WeiPerEther.mul(1000000), // 1e24\r\n    fee: BigNumber.from(0),\r\n    reserved: percentToPerbicent(0),\r\n    bondingCurveRate: defaultBondingCurveRate,\r\n    discountRate: defaultDiscountRate,\r\n    cycleLimit: BigNumber.from(0),\r\n    configured: BigNumber.from(0),\r\n    ballot: constants.AddressZero,\r\n    payIsPaused: false,\r\n    ticketPrintingIsAllowed: false,\r\n    treasuryExtension: constants.AddressZero,\r\n  }),\r\n  payoutMods: [],\r\n  ticketMods: [],\r\n}\r\n\r\nconst editingProjectSlice = createSlice({\r\n  name: 'editingProject',\r\n  initialState: defaultProjectState,\r\n  reducers: {\r\n    resetState: () => defaultProjectState,\r\n    setProjectInfo: (state, action: PayloadAction<EditingProjectInfo>) => {\r\n      state.info = action.payload\r\n    },\r\n    setName: (state, action: PayloadAction<string>) => {\r\n      state.info.metadata.name = action.payload\r\n    },\r\n    setInfoUri: (state, action: PayloadAction<string>) => {\r\n      state.info.metadata.infoUri = action.payload\r\n    },\r\n    setLogoUri: (state, action: PayloadAction<string>) => {\r\n      state.info.metadata.logoUri = action.payload\r\n    },\r\n    setTwitter: (state, action: PayloadAction<string>) => {\r\n      state.info.metadata.twitter = action.payload\r\n    },\r\n    setDiscord: (state, action: PayloadAction<string>) => {\r\n      state.info.metadata.discord = action.payload\r\n    },\r\n    setPayButton: (state, action: PayloadAction<string>) => {\r\n      state.info.metadata.payButton = action.payload\r\n    },\r\n    setPayDisclosure: (state, action: PayloadAction<string>) => {\r\n      state.info.metadata.payDisclosure = action.payload\r\n    },\r\n    setHandle: (state, action: PayloadAction<string>) => {\r\n      state.info.handle = action.payload\r\n    },\r\n    setDescription: (state, action: PayloadAction<string>) => {\r\n      state.info.metadata.description = action.payload\r\n    },\r\n    setFundingCycle: (\r\n      state,\r\n      action: PayloadAction<SerializedV1FundingCycle>,\r\n    ) => {\r\n      state.fundingCycle = action.payload\r\n    },\r\n    setId: (state, action: PayloadAction<string>) => {\r\n      state.fundingCycle.id = action.payload\r\n    },\r\n    setProjectId: (state, action: PayloadAction<string>) => {\r\n      state.fundingCycle.projectId = action.payload\r\n    },\r\n    setNumber: (state, action: PayloadAction<string>) => {\r\n      state.fundingCycle.number = action.payload\r\n    },\r\n    setTarget: (state, action: PayloadAction<string>) => {\r\n      state.fundingCycle.target = action.payload\r\n    },\r\n    setFee: (state, action: PayloadAction<string>) => {\r\n      state.fundingCycle.fee = action.payload\r\n    },\r\n    setDuration: (state, action: PayloadAction<string>) => {\r\n      state.fundingCycle.duration = action.payload\r\n    },\r\n    setFundingCycleStart: (state, action: PayloadAction<string>) => {\r\n      state.fundingCycle.start = action.payload\r\n    },\r\n    setReserved: (state, action: PayloadAction<string>) => {\r\n      state.fundingCycle.reserved = action.payload\r\n    },\r\n    setDiscountRate: (state, action: PayloadAction<string>) => {\r\n      state.fundingCycle.discountRate = action.payload\r\n    },\r\n    setBondingCurveRate: (state, action: PayloadAction<string>) => {\r\n      state.fundingCycle.bondingCurveRate = action.payload\r\n    },\r\n    setCurrency: (state, action: PayloadAction<V1CurrencyOption>) => {\r\n      state.fundingCycle.currency = action.payload.toString()\r\n    },\r\n    setBallot: (state, action: PayloadAction<string>) => {\r\n      state.fundingCycle.ballot = action.payload\r\n    },\r\n    setIsRecurring: (state, action: PayloadAction<boolean>) => {\r\n      state.fundingCycle.discountRate = permilleToPercent(\r\n        action.payload ? defaultDiscountRate : '201',\r\n      )\r\n      state.fundingCycle.bondingCurveRate = perbicentToPercent(\r\n        action.payload ? defaultBondingCurveRate : 0,\r\n      )\r\n    },\r\n    setPayIsPaused: (state, action: PayloadAction<boolean>) => {\r\n      state.fundingCycle.payIsPaused = action.payload\r\n    },\r\n    setTicketPrintingIsAllowed: (state, action: PayloadAction<boolean>) => {\r\n      state.fundingCycle.ticketPrintingIsAllowed = action.payload\r\n    },\r\n    setPayoutMods: (state, action: PayloadAction<PayoutMod[]>) => {\r\n      state.payoutMods = action.payload\r\n    },\r\n    setTicketMods: (state, action: PayloadAction<TicketMod[]>) => {\r\n      state.ticketMods = action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const editingProjectActions = editingProjectSlice.actions\r\n\r\nexport default editingProjectSlice.reducer\r\n","import { useEffect, useState } from 'react'\r\n\r\n// Copied from react-use, so if we ever decide to include that library,\r\n// replace this implementation with the react-use version.\r\nfunction useMedia(query: string, defaultState = false) {\r\n  const [state, setState] = useState(() =>\r\n    typeof window === 'undefined'\r\n      ? defaultState\r\n      : window.matchMedia(query).matches,\r\n  )\r\n\r\n  useEffect(() => {\r\n    let mounted = true\r\n    const queryList = window.matchMedia(query)\r\n    const onChange = () => {\r\n      if (!mounted) {\r\n        return\r\n      }\r\n      setState(queryList.matches)\r\n    }\r\n\r\n    queryList.addEventListener('change', onChange)\r\n    setState(queryList.matches)\r\n\r\n    return () => {\r\n      mounted = false\r\n      queryList.removeEventListener('change', onChange)\r\n    }\r\n  }, [query])\r\n\r\n  return state\r\n}\r\n\r\nexport default function useMobile() {\r\n  return useMedia('(max-width: 767px)')\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { SemanticTheme } from 'models/semantic-theme/theme'\r\n\r\nimport { createContext } from 'react'\r\n\r\nimport { juiceTheme } from 'constants/theme'\r\nimport { ThemeOption } from 'constants/theme/theme-option'\r\n\r\nconst defaultThemeOption: ThemeOption = ThemeOption.dark\r\n\r\nexport type ThemeContextType = {\r\n  themeOption: ThemeOption\r\n  theme: SemanticTheme\r\n  isDarkMode: boolean\r\n  setThemeOption: (themeOption: ThemeOption) => void\r\n  forThemeOption?: <T>(map: Record<ThemeOption, T>) => T\r\n}\r\n\r\nexport const ThemeContext = createContext<ThemeContextType>({\r\n  themeOption: defaultThemeOption,\r\n  theme: juiceTheme(defaultThemeOption),\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  setThemeOption: function (themeOption: ThemeOption) {},\r\n  isDarkMode: defaultThemeOption === ThemeOption.dark,\r\n})\r\n","// mainnet\r\nexport const V1_PROJECT_IDS = {\r\n  CONSTITUTION_DAO: 36,\r\n  MOON_DAO: 199,\r\n  SHARK_DAO: 7,\r\n  PONZI_DAO: 140,\r\n  PX_DAO: 11,\r\n  SVSPOOL002: 27,\r\n  FIDENZA420: 32,\r\n  SANTA_DAO: 146,\r\n  MICHAEL_JACKSON: 273,\r\n  INFLATIONLESS_DAO: 180,\r\n  VOTING_DAO: 290,\r\n  DEFI_DAO: 31,\r\n  JUICEBOX_DAO: 1,\r\n  BLUECOLLARDS: 555,\r\n  LUNAR_DAO: 287,\r\n  CITYMONK: 566,\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\n\r\nimport {\r\n  BaseEventEntity,\r\n  BaseEventEntityJson,\r\n  parseBaseEventEntityJson,\r\n} from '../base/base-event-entity'\r\nimport {\r\n  BaseProjectEntity,\r\n  BaseProjectEntityJson,\r\n  parseBaseProjectEntityJson,\r\n} from '../base/base-project-entity'\r\n\r\nexport interface DistributeToPayoutSplitEvent\r\n  extends BaseEventEntity,\r\n    BaseProjectEntity {\r\n  domain: BigNumber\r\n  group: BigNumber\r\n  amount: BigNumber\r\n  preferClaimed: boolean\r\n  preferAddToBalance: boolean\r\n  percent: number\r\n  splitProjectId: number\r\n  beneficiary: string\r\n  lockedUntil: number\r\n  allocator: string\r\n  distributePayoutsEvent: string\r\n}\r\n\r\nexport type DistributeToPayoutSplitEventJson = Partial<\r\n  Record<keyof DistributeToPayoutSplitEvent, string> &\r\n    BaseEventEntityJson &\r\n    BaseProjectEntityJson\r\n>\r\n\r\nexport const parseDistributeToPayoutSplitEventJson = (\r\n  j: DistributeToPayoutSplitEventJson,\r\n): Partial<DistributeToPayoutSplitEvent> => ({\r\n  ...parseBaseEventEntityJson(j),\r\n  ...parseBaseProjectEntityJson(j),\r\n  domain: j.domain ? BigNumber.from(j.domain) : undefined,\r\n  group: j.group ? BigNumber.from(j.group) : undefined,\r\n  amount: j.amount ? BigNumber.from(j.amount) : undefined,\r\n  preferClaimed: !!j.preferClaimed,\r\n  preferAddToBalance: !!j.preferAddToBalance,\r\n  percent: j.percent ? parseInt(j.percent) : undefined,\r\n  splitProjectId: j.splitProjectId ? parseInt(j.splitProjectId) : undefined,\r\n  beneficiary: j.beneficiary,\r\n  lockedUntil: j.lockedUntil ? parseInt(j.lockedUntil) : undefined,\r\n  allocator: j.allocator,\r\n  distributePayoutsEvent: j.distributePayoutsEvent,\r\n})\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\n\r\nimport {\r\n  BaseEventEntity,\r\n  BaseEventEntityJson,\r\n  parseBaseEventEntityJson,\r\n} from '../base/base-event-entity'\r\nimport {\r\n  BaseProjectEntity,\r\n  BaseProjectEntityJson,\r\n  parseBaseProjectEntityJson,\r\n} from '../base/base-project-entity'\r\nimport {\r\n  DistributeToPayoutSplitEvent,\r\n  DistributeToPayoutSplitEventJson,\r\n  parseDistributeToPayoutSplitEventJson,\r\n} from './distribute-to-payout-split-event'\r\n\r\nexport interface DistributePayoutsEvent\r\n  extends BaseEventEntity,\r\n    BaseProjectEntity {\r\n  fundingCycleConfiguration: BigNumber\r\n  fundingCycleNumber: number\r\n  beneficiary: string\r\n  amount: BigNumber\r\n  distributedAmount: BigNumber\r\n  fee: BigNumber\r\n  beneficiaryDistributionAmount: BigNumber\r\n  memo: string\r\n  splitDistributions: Partial<DistributeToPayoutSplitEvent>[]\r\n}\r\n\r\nexport type DistributePayoutsEventJson = Partial<\r\n  Record<keyof Omit<DistributePayoutsEvent, 'splitDistributions'>, string> &\r\n    BaseEventEntityJson &\r\n    BaseProjectEntityJson\r\n> & {\r\n  splitDistributions: DistributeToPayoutSplitEventJson[]\r\n}\r\n\r\nexport const parseDistributePayoutsEventJson = (\r\n  j: DistributePayoutsEventJson,\r\n): Partial<DistributePayoutsEvent> => ({\r\n  ...parseBaseEventEntityJson(j),\r\n  ...parseBaseProjectEntityJson(j),\r\n  fundingCycleConfiguration: j.fundingCycleConfiguration\r\n    ? BigNumber.from(j.fundingCycleConfiguration)\r\n    : undefined,\r\n  fundingCycleNumber: j.fundingCycleNumber\r\n    ? parseInt(j.fundingCycleNumber)\r\n    : undefined,\r\n  beneficiary: j.beneficiary,\r\n  amount: j.amount ? BigNumber.from(j.amount) : undefined,\r\n  distributedAmount: j.distributedAmount\r\n    ? BigNumber.from(j.distributedAmount)\r\n    : undefined,\r\n  beneficiaryDistributionAmount: j.beneficiaryDistributionAmount\r\n    ? BigNumber.from(j.beneficiaryDistributionAmount)\r\n    : undefined,\r\n  fee: j.fee ? BigNumber.from(j.fee) : undefined,\r\n  memo: j.memo,\r\n  splitDistributions: j.splitDistributions\r\n    ? j.splitDistributions.map(parseDistributeToPayoutSplitEventJson)\r\n    : undefined,\r\n})\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\n\r\nimport {\r\n  BaseEventEntity,\r\n  BaseEventEntityJson,\r\n  parseBaseEventEntityJson,\r\n} from '../base/base-event-entity'\r\nimport {\r\n  BaseProjectEntity,\r\n  BaseProjectEntityJson,\r\n  parseBaseProjectEntityJson,\r\n} from '../base/base-project-entity'\r\n\r\nexport interface DistributeToReservedTokenSplitEvent\r\n  extends BaseEventEntity,\r\n    BaseProjectEntity {\r\n  tokenCount: BigNumber\r\n  preferClaimed: boolean\r\n  percent: number\r\n  splitProjectId: number\r\n  beneficiary: string\r\n  lockedUntil: number\r\n  allocator: string\r\n  distributeReservedTokensEvent: string\r\n}\r\n\r\nexport type DistributeToReservedTokenSplitEventJson = Partial<\r\n  Record<keyof DistributeToReservedTokenSplitEvent, string> &\r\n    BaseEventEntityJson &\r\n    BaseProjectEntityJson\r\n>\r\n\r\nexport const parseDistributeToReservedTokenSplitEventJson = (\r\n  j: DistributeToReservedTokenSplitEventJson,\r\n): Partial<DistributeToReservedTokenSplitEvent> => ({\r\n  ...parseBaseEventEntityJson(j),\r\n  ...parseBaseProjectEntityJson(j),\r\n  tokenCount: j.tokenCount ? BigNumber.from(j.tokenCount) : undefined,\r\n  preferClaimed: !!j.preferClaimed,\r\n  percent: j.percent ? parseInt(j.percent) : undefined,\r\n  splitProjectId: j.splitProjectId ? parseInt(j.splitProjectId) : undefined,\r\n  beneficiary: j.beneficiary,\r\n  lockedUntil: j.lockedUntil ? parseInt(j.lockedUntil) : undefined,\r\n  allocator: j.allocator,\r\n  distributeReservedTokensEvent: j.distributeReservedTokensEvent,\r\n})\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { parseDistributeToReservedTokenSplitEventJson } from 'models/subgraph-entities/v2/distribute-to-reserved-token-split-event'\r\n\r\nimport {\r\n  BaseEventEntity,\r\n  BaseEventEntityJson,\r\n  parseBaseEventEntityJson,\r\n} from '../base/base-event-entity'\r\nimport {\r\n  BaseProjectEntity,\r\n  BaseProjectEntityJson,\r\n  parseBaseProjectEntityJson,\r\n} from '../base/base-project-entity'\r\nimport {\r\n  DistributeToReservedTokenSplitEvent,\r\n  DistributeToReservedTokenSplitEventJson,\r\n} from './distribute-to-reserved-token-split-event'\r\n\r\nexport interface DistributeReservedTokensEvent\r\n  extends BaseEventEntity,\r\n    BaseProjectEntity {\r\n  fundingCycleNumber: number\r\n  beneficiary: string\r\n  tokenCount: BigNumber\r\n  beneficiaryTokenCount: BigNumber\r\n  memo: string\r\n  splitDistributions: Partial<DistributeToReservedTokenSplitEvent>[]\r\n}\r\n\r\nexport type DistributeReservedTokensEventJson = Partial<\r\n  Record<\r\n    keyof Omit<DistributeReservedTokensEvent, 'splitDistributions'>,\r\n    string\r\n  > &\r\n    BaseEventEntityJson &\r\n    BaseProjectEntityJson\r\n> & {\r\n  splitDistributions: DistributeToReservedTokenSplitEventJson[]\r\n}\r\n\r\nexport const parseDistributeReservedTokensEventJson = (\r\n  j: DistributeReservedTokensEventJson,\r\n): Partial<DistributeReservedTokensEvent> => ({\r\n  ...parseBaseEventEntityJson(j),\r\n  ...parseBaseProjectEntityJson(j),\r\n  fundingCycleNumber: j.fundingCycleNumber\r\n    ? parseInt(j.fundingCycleNumber)\r\n    : undefined,\r\n  beneficiary: j.beneficiary,\r\n  tokenCount: j.tokenCount ? BigNumber.from(j.tokenCount) : undefined,\r\n  beneficiaryTokenCount: j.beneficiaryTokenCount\r\n    ? BigNumber.from(j.beneficiaryTokenCount)\r\n    : undefined,\r\n  memo: j.memo,\r\n  splitDistributions: j.splitDistributions\r\n    ? j.splitDistributions.map(parseDistributeToReservedTokenSplitEventJson)\r\n    : undefined,\r\n})\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\n\r\nimport {\r\n  BaseProjectEntityJson,\r\n  parseBaseProjectEntityJson,\r\n} from '../base/base-project-entity'\r\n\r\nimport { BaseProjectEntity } from '../base/base-project-entity'\r\nimport {\r\n  BaseEventEntity,\r\n  BaseEventEntityJson,\r\n  parseBaseEventEntityJson,\r\n} from '../base/base-event-entity'\r\n\r\nexport interface UseAllowanceEvent extends BaseEventEntity, BaseProjectEntity {\r\n  fundingCycleConfiguration: BigNumber\r\n  fundingCycleNumber: number\r\n  beneficiary: string\r\n  amount: BigNumber\r\n  distributedAmount: BigNumber\r\n  netDistributedamount: BigNumber\r\n  memo: string\r\n}\r\n\r\nexport type UseAllowanceEventJson = Partial<\r\n  Record<keyof UseAllowanceEvent, string> &\r\n    BaseEventEntityJson &\r\n    BaseProjectEntityJson\r\n>\r\n\r\nexport const parseUseAllowanceEventJson = (\r\n  j: UseAllowanceEventJson,\r\n): Partial<UseAllowanceEvent> => ({\r\n  ...parseBaseEventEntityJson(j),\r\n  ...parseBaseProjectEntityJson(j),\r\n  fundingCycleConfiguration: j.fundingCycleConfiguration\r\n    ? BigNumber.from(j.fundingCycleConfiguration)\r\n    : undefined,\r\n  fundingCycleNumber: j.fundingCycleNumber\r\n    ? parseInt(j.fundingCycleNumber)\r\n    : undefined,\r\n  beneficiary: j.beneficiary,\r\n  amount: j.amount ? BigNumber.from(j.amount) : undefined,\r\n  distributedAmount: j.distributedAmount\r\n    ? BigNumber.from(j.distributedAmount)\r\n    : undefined,\r\n  netDistributedamount: j.netDistributedamount\r\n    ? BigNumber.from(j.netDistributedamount)\r\n    : undefined,\r\n  memo: j.memo,\r\n})\r\n","import {\r\n  BaseEventEntity,\r\n  BaseEventEntityJson,\r\n  parseBaseEventEntityJson,\r\n} from '../base/base-event-entity'\r\nimport {\r\n  BaseProjectEntity,\r\n  BaseProjectEntityJson,\r\n  parseBaseProjectEntityJson,\r\n} from '../base/base-project-entity'\r\n\r\nexport interface ProjectCreateEvent\r\n  extends BaseEventEntity,\r\n    BaseProjectEntity {}\r\n\r\nexport type ProjectCreateEventJson = Partial<\r\n  Record<keyof ProjectCreateEvent, string> &\r\n    BaseProjectEntityJson &\r\n    BaseEventEntityJson\r\n>\r\n\r\nexport const parseProjectCreateEventJson = (\r\n  j: ProjectCreateEventJson,\r\n): Partial<ProjectCreateEvent> => ({\r\n  ...parseBaseProjectEntityJson(j),\r\n  ...parseBaseEventEntityJson(j),\r\n})\r\n","import {\r\n  parsePrintReservesEventJson,\r\n  PrintReservesEvent,\r\n  PrintReservesEventJson,\r\n} from 'models/subgraph-entities/v1/print-reserves-event'\r\nimport {\r\n  parseTapEventJson,\r\n  TapEvent,\r\n  TapEventJson,\r\n} from 'models/subgraph-entities/v1/tap-event'\r\n\r\nimport { CV } from '../../cv'\r\nimport {\r\n  DistributeToPayoutModEvent,\r\n  DistributeToPayoutModEventJson,\r\n  parseDistributeToPayoutModEvent,\r\n} from '../v1/distribute-to-payout-mod-event'\r\nimport {\r\n  DistributeToTicketModEvent,\r\n  DistributeToTicketModEventJson,\r\n  parseDistributeToTicketModEvent,\r\n} from '../v1/distribute-to-ticket-mod-event'\r\nimport {\r\n  DistributePayoutsEvent,\r\n  DistributePayoutsEventJson,\r\n  parseDistributePayoutsEventJson,\r\n} from '../v2/distribute-payouts-event'\r\nimport {\r\n  DistributeReservedTokensEvent,\r\n  DistributeReservedTokensEventJson,\r\n  parseDistributeReservedTokensEventJson,\r\n} from '../v2/distribute-reserved-tokens-event'\r\nimport {\r\n  DistributeToPayoutSplitEventJson,\r\n  parseDistributeToPayoutSplitEventJson,\r\n} from '../v2/distribute-to-payout-split-event'\r\nimport {\r\n  DistributeToReservedTokenSplitEvent,\r\n  DistributeToReservedTokenSplitEventJson,\r\n  parseDistributeToReservedTokenSplitEventJson,\r\n} from '../v2/distribute-to-reserved-token-split-event'\r\nimport {\r\n  parseUseAllowanceEventJson,\r\n  UseAllowanceEvent,\r\n  UseAllowanceEventJson,\r\n} from '../v2/use-allowance-event'\r\nimport {\r\n  DeployedERC20Event,\r\n  DeployedERC20EventJson,\r\n  parseDeployedERC20EventJson,\r\n} from './deployed-erc20-event'\r\nimport {\r\n  MintTokensEvent,\r\n  MintTokensEventJson,\r\n  parseMintTokensEventJson,\r\n} from './mint-tokens-event'\r\nimport { parsePayEventJson, PayEvent, PayEventJson } from './pay-event'\r\nimport {\r\n  parseProjectCreateEventJson,\r\n  ProjectCreateEvent,\r\n  ProjectCreateEventJson,\r\n} from './project-create-event'\r\nimport {\r\n  parseRedeemEventJson,\r\n  RedeemEvent,\r\n  RedeemEventJson,\r\n} from './redeem-event'\r\n\r\nexport type ProjectEvent = {\r\n  id: string\r\n  timestamp: number\r\n  project: string\r\n  projectId: number\r\n  cv: CV\r\n\r\n  // V1 & V2\r\n  payEvent: Partial<PayEvent> | null\r\n  mintTokensEvent: Partial<MintTokensEvent> | null\r\n  redeemEvent: Partial<RedeemEvent> | null\r\n  deployedERC20Event: Partial<DeployedERC20Event> | null\r\n  projectCreateEvent: Partial<ProjectCreateEvent> | null\r\n\r\n  // Only V1\r\n  tapEvent: Partial<TapEvent> | null\r\n  printReservesEvent: Partial<PrintReservesEvent> | null\r\n  distributeToPayoutModEvent: Partial<DistributeToPayoutModEvent> | null\r\n  distributeToTicketModEvent: Partial<DistributeToTicketModEvent> | null\r\n\r\n  // Only V2\r\n  distributePayoutsEvent: Partial<DistributePayoutsEvent> | null\r\n  distributeReservedTokensEvent: Partial<DistributeReservedTokensEvent> | null\r\n  distributeToPayoutSplitEvent: Partial<DistributePayoutsEvent> | null\r\n  distributeToReservedTokenSplitEvent: Partial<DistributeToReservedTokenSplitEvent> | null\r\n  useAllowanceEvent: Partial<UseAllowanceEvent> | null\r\n}\r\n\r\nexport type ProjectEventJson = Pick<\r\n  ProjectEvent,\r\n  'id' | 'timestamp' | 'projectId' | 'project' // primitive types\r\n> & {\r\n  cv: CV\r\n  payEvent: PayEventJson | null\r\n  mintTokensEvent: MintTokensEventJson | null\r\n  redeemEvent: RedeemEventJson | null\r\n  deployedERC20Event: DeployedERC20EventJson | null\r\n  projectCreateEvent: ProjectCreateEventJson | null\r\n\r\n  tapEvent: TapEventJson | null\r\n  printReservesEvent: PrintReservesEventJson | null\r\n  distributeToPayoutModEvent: DistributeToPayoutModEventJson | null\r\n  distributeToTicketModEvent: DistributeToTicketModEventJson | null\r\n\r\n  distributePayoutsEvent: DistributePayoutsEventJson | null\r\n  distributeReservedTokensEvent: DistributeReservedTokensEventJson | null\r\n  distributeToReservedTokenSplitEvent: DistributeToReservedTokenSplitEventJson | null\r\n  distributeToPayoutSplitEvent: DistributeToPayoutSplitEventJson | null\r\n  useAllowanceEvent: UseAllowanceEventJson | null\r\n}\r\n\r\nexport const parseProjectEventJson = (j: ProjectEventJson): ProjectEvent => ({\r\n  ...j,\r\n  payEvent: j.payEvent ? parsePayEventJson(j.payEvent) : null,\r\n  mintTokensEvent: j.mintTokensEvent\r\n    ? parseMintTokensEventJson(j.mintTokensEvent)\r\n    : null,\r\n  redeemEvent: j.redeemEvent ? parseRedeemEventJson(j.redeemEvent) : null,\r\n  deployedERC20Event: j.deployedERC20Event\r\n    ? parseDeployedERC20EventJson(j.deployedERC20Event)\r\n    : null,\r\n  projectCreateEvent: j.projectCreateEvent\r\n    ? parseProjectCreateEventJson(j.projectCreateEvent)\r\n    : null,\r\n  tapEvent: j.tapEvent ? parseTapEventJson(j.tapEvent) : null,\r\n  printReservesEvent: j.printReservesEvent\r\n    ? parsePrintReservesEventJson(j.printReservesEvent)\r\n    : null,\r\n  distributeToPayoutModEvent: j.distributeToPayoutModEvent\r\n    ? parseDistributeToPayoutModEvent(j.distributeToPayoutModEvent)\r\n    : null,\r\n  distributeToTicketModEvent: j.distributeToTicketModEvent\r\n    ? parseDistributeToTicketModEvent(j.distributeToTicketModEvent)\r\n    : null,\r\n  distributePayoutsEvent: j.distributePayoutsEvent\r\n    ? parseDistributePayoutsEventJson(j.distributePayoutsEvent)\r\n    : null,\r\n  distributeReservedTokensEvent: j.distributeReservedTokensEvent\r\n    ? parseDistributeReservedTokensEventJson(j.distributeReservedTokensEvent)\r\n    : null,\r\n  distributeToReservedTokenSplitEvent: j.distributeToReservedTokenSplitEvent\r\n    ? parseDistributeToReservedTokenSplitEventJson(\r\n        j.distributeToReservedTokenSplitEvent,\r\n      )\r\n    : null,\r\n  distributeToPayoutSplitEvent: j.distributeToPayoutSplitEvent\r\n    ? parseDistributeToPayoutSplitEventJson(j.distributeToPayoutSplitEvent)\r\n    : null,\r\n  useAllowanceEvent: j.useAllowanceEvent\r\n    ? parseUseAllowanceEventJson(j.useAllowanceEvent)\r\n    : null,\r\n})\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\n\r\nexport type ProtocolLog = {\r\n  id: '1' // Only one entity exists\r\n  projectsCount: number\r\n  volumePaid: BigNumber\r\n  volumeRedeemed: BigNumber\r\n  paymentsCount: number\r\n  redeemCount: number\r\n  erc20Count: number\r\n\r\n  v1: Partial<Omit<ProtocolLog, 'v1' | 'v2'>>\r\n  v2: Partial<Omit<ProtocolLog, 'v1' | 'v2'>>\r\n}\r\n\r\nexport type ProtocolLogJson = Omit<\r\n  ProtocolLog,\r\n  'volumePaid' | 'volumeRedeemed' | 'v1' | 'v2'\r\n> & {\r\n  volumePaid: string\r\n  volumeRedeemed: string\r\n  v1: Partial<Omit<ProtocolLogJson, 'v1' | 'v2'>>\r\n  v2: Partial<Omit<ProtocolLogJson, 'v1' | 'v2'>>\r\n}\r\n\r\nexport const parseProtocolLogJson = (\r\n  json: Partial<ProtocolLogJson>,\r\n): Partial<ProtocolLog> => ({\r\n  ...json,\r\n  volumePaid: json.volumePaid ? BigNumber.from(json.volumePaid) : undefined,\r\n  volumeRedeemed: json.volumeRedeemed\r\n    ? BigNumber.from(json.volumeRedeemed)\r\n    : undefined,\r\n  v1: json.v1 ? parseProtocolLogJson(json.v1) : undefined,\r\n  v2: json.v2 ? parseProtocolLogJson(json.v2) : undefined,\r\n})\r\n","// TODO: Should we fix these ts-ignore. At very least, we should consider documenting why it is done\r\n/* eslint-disable @typescript-eslint/ban-ts-comment */\r\nimport axios from 'axios'\r\nimport { CV } from 'models/cv'\r\nimport {\r\n  DistributeToPayoutModEvent,\r\n  DistributeToPayoutModEventJson,\r\n  parseDistributeToPayoutModEvent,\r\n} from 'models/subgraph-entities/v1/distribute-to-payout-mod-event'\r\nimport {\r\n  DistributeToTicketModEvent,\r\n  DistributeToTicketModEventJson,\r\n  parseDistributeToTicketModEvent,\r\n} from 'models/subgraph-entities/v1/distribute-to-ticket-mod-event'\r\nimport {\r\n  parsePrintReservesEventJson,\r\n  PrintReservesEvent,\r\n  PrintReservesEventJson,\r\n} from 'models/subgraph-entities/v1/print-reserves-event'\r\nimport {\r\n  parseTapEventJson,\r\n  TapEvent,\r\n  TapEventJson,\r\n} from 'models/subgraph-entities/v1/tap-event'\r\nimport {\r\n  DistributePayoutsEvent,\r\n  DistributePayoutsEventJson,\r\n  parseDistributePayoutsEventJson,\r\n} from 'models/subgraph-entities/v2/distribute-payouts-event'\r\nimport {\r\n  DistributeReservedTokensEvent,\r\n  DistributeReservedTokensEventJson,\r\n  parseDistributeReservedTokensEventJson,\r\n} from 'models/subgraph-entities/v2/distribute-reserved-tokens-event'\r\nimport {\r\n  DistributeToPayoutSplitEvent,\r\n  DistributeToPayoutSplitEventJson,\r\n  parseDistributeToPayoutSplitEventJson,\r\n} from 'models/subgraph-entities/v2/distribute-to-payout-split-event'\r\nimport {\r\n  DistributeToReservedTokenSplitEvent,\r\n  DistributeToReservedTokenSplitEventJson,\r\n  parseDistributeToReservedTokenSplitEventJson,\r\n} from 'models/subgraph-entities/v2/distribute-to-reserved-token-split-event'\r\nimport {\r\n  parseUseAllowanceEventJson,\r\n  UseAllowanceEvent,\r\n  UseAllowanceEventJson,\r\n} from 'models/subgraph-entities/v2/use-allowance-event'\r\nimport {\r\n  DeployedERC20Event,\r\n  DeployedERC20EventJson,\r\n  parseDeployedERC20EventJson,\r\n} from 'models/subgraph-entities/vX/deployed-erc20-event'\r\nimport {\r\n  MintTokensEvent,\r\n  MintTokensEventJson,\r\n  parseMintTokensEventJson,\r\n} from 'models/subgraph-entities/vX/mint-tokens-event'\r\nimport {\r\n  parseParticipantJson,\r\n  Participant,\r\n  ParticipantJson,\r\n} from 'models/subgraph-entities/vX/participant'\r\nimport {\r\n  parsePayEventJson,\r\n  PayEvent,\r\n  PayEventJson,\r\n} from 'models/subgraph-entities/vX/pay-event'\r\nimport {\r\n  parseProjectJson,\r\n  Project,\r\n  ProjectJson,\r\n} from 'models/subgraph-entities/vX/project'\r\nimport {\r\n  parseProjectCreateEventJson,\r\n  ProjectCreateEvent,\r\n  ProjectCreateEventJson,\r\n} from 'models/subgraph-entities/vX/project-create-event'\r\nimport {\r\n  parseProjectEventJson,\r\n  ProjectEvent,\r\n  ProjectEventJson,\r\n} from 'models/subgraph-entities/vX/project-event'\r\nimport {\r\n  parseProtocolLogJson,\r\n  ProtocolLog,\r\n  ProtocolLogJson,\r\n} from 'models/subgraph-entities/vX/protocol-log'\r\nimport {\r\n  parseRedeemEventJson,\r\n  RedeemEvent,\r\n  RedeemEventJson,\r\n} from 'models/subgraph-entities/vX/redeem-event'\r\n\r\nexport interface SubgraphEntities {\r\n  protocolLog: ProtocolLog\r\n  projectEvent: ProjectEvent\r\n  projectCreateEvent: ProjectCreateEvent\r\n  deployedERC20Event: DeployedERC20Event\r\n  project: Project\r\n  projectSearch: Project\r\n  payEvent: PayEvent\r\n  redeemEvent: RedeemEvent\r\n  participant: Participant\r\n  tapEvent: TapEvent\r\n  distributeToPayoutModEvent: DistributeToPayoutModEvent\r\n  distributeToTicketModEvent: DistributeToTicketModEvent\r\n  printReservesEvent: PrintReservesEvent\r\n  mintTokensEvent: MintTokensEvent\r\n  distributePayoutsEvent: DistributePayoutsEvent\r\n  distributeReservedTokensEvent: DistributeReservedTokensEvent\r\n  distributeToReservedTokenSplitEvent: DistributeToReservedTokenSplitEvent\r\n  distributeToPayoutSplitEvent: DistributeToPayoutSplitEvent\r\n  useAllowanceEvent: UseAllowanceEvent\r\n}\r\n\r\nexport interface SubgraphQueryReturnTypes {\r\n  protocolLog: { protocolLogs: ProtocolLogJson[] }\r\n  projectEvent: { projectEvents: ProjectEventJson[] }\r\n  projectCreateEvent: { projectCreateEvents: ProjectCreateEventJson[] }\r\n  deployedERC20Event: { deployedERC20Events: DeployedERC20EventJson[] }\r\n  project: { projects: ProjectJson[] }\r\n  projectSearch: { projectSearch: ProjectJson[] }\r\n  payEvent: { payEvents: PayEventJson[] }\r\n  redeemEvent: { redeemEvents: RedeemEventJson[] }\r\n  participant: { participants: ParticipantJson[] }\r\n  tapEvent: { tapEvents: TapEventJson[] }\r\n  distributeToTicketModEvent: {\r\n    distributeToTicketModEvents: DistributeToTicketModEventJson[]\r\n  }\r\n  distributeToPayoutModEvent: {\r\n    distributeToPayoutModEvents: DistributeToPayoutModEventJson[]\r\n  }\r\n  printReservesEvent: {\r\n    printReservesEvents: PrintReservesEventJson[]\r\n  }\r\n  distributePayoutsEvent: {\r\n    distributePayoutsEvent: DistributePayoutsEventJson[]\r\n  }\r\n  distributeReservedTokensEvent: {\r\n    distributeReservedTokensEvents: DistributeReservedTokensEventJson[]\r\n  }\r\n  distributeToReservedTokenSplitEvent: {\r\n    distributeToReservedTokenSplitEvents: DistributeToReservedTokenSplitEventJson[]\r\n  }\r\n  distributeToPayoutSplitEvent: {\r\n    distributeToPayoutSplitEvents: DistributeToPayoutSplitEventJson[]\r\n  }\r\n  useAllowanceEvent: { useAllowanceEvents: UseAllowanceEventJson[] }\r\n  mintTokensEvent: { mintTokensEvent: MintTokensEventJson[] }\r\n}\r\n\r\nexport type EntityKey = keyof SubgraphEntities\r\n\r\nexport interface SubgraphError {\r\n  locations: { column: number; line: number }[]\r\n  message: string\r\n}\r\n\r\nexport type OrderDirection = 'asc' | 'desc'\r\n\r\nexport type WhereConfig<E extends EntityKey> = {\r\n  key: EntityKeys<E>\r\n  value: string | number | boolean | string[] | number[] | null\r\n  operator?:\r\n    | 'not'\r\n    | 'gt'\r\n    | 'lt'\r\n    | 'gte'\r\n    | 'lte'\r\n    | 'in'\r\n    | 'not_in'\r\n    | 'contains'\r\n    | 'not_contains'\r\n    | 'starts_with'\r\n    | 'ends_with'\r\n    | 'not_starts_with'\r\n    | 'not_ends_with'\r\n}\r\n\r\ntype BlockConfig = {\r\n  number?: number\r\n  number_gte?: number\r\n  hash?: string\r\n}\r\n\r\nexport type EntityKeys<E extends EntityKey> = keyof SubgraphEntities[E]\r\n\r\nexport interface GraphQueryOpts<E extends EntityKey, K extends EntityKeys<E>> {\r\n  entity: E\r\n  text?: string\r\n  first?: number\r\n  skip?: number\r\n  orderBy?: keyof SubgraphEntities[E]\r\n  block?: BlockConfig\r\n  url?: string\r\n\r\n  // `keys` can be a mix of the entity's keys or an entity specifier with its own keys\r\n  keys: (\r\n    | K\r\n    | {\r\n        entity: EntityKey\r\n        keys: string[] // hard to type accurate nested keys. All bets are off when this is used.\r\n      }\r\n  )[]\r\n  orderDirection?: OrderDirection\r\n  where?: WhereConfig<E> | WhereConfig<E>[]\r\n}\r\n\r\n// Re-type GraphQueryOpts to remove skip and add pageSize.\r\n// This is so we can calculate our own `skip` value based on\r\n// the react-query managed page number multiplied by the provided\r\n// page size.\r\nexport type InfiniteGraphQueryOpts<\r\n  E extends EntityKey,\r\n  K extends EntityKeys<E>,\r\n> = Omit<GraphQueryOpts<E, K>, 'skip'> & {\r\n  pageSize: number\r\n}\r\n\r\n// https://thegraph.com/docs/graphql-api#filtering\r\nexport const formatGraphQuery = <E extends EntityKey, K extends EntityKeys<E>>(\r\n  opts: GraphQueryOpts<E, K>,\r\n) => {\r\n  if (!opts) return\r\n\r\n  let args = ''\r\n\r\n  const addArg = (\r\n    name: string,\r\n    value?: string | number | keyof SubgraphEntities[E],\r\n  ) => {\r\n    if (value === undefined) return\r\n    args += (args.length ? ', ' : '') + `${name}: ` + value\r\n  }\r\n  const formatWhere = (where: WhereConfig<E>) =>\r\n    `${where.key}${where.operator ? '_' + where.operator : ''}:` +\r\n    (Array.isArray(where.value)\r\n      ? `[${where.value\r\n          .map(v => (typeof v === 'string' ? `\"${v}\"` : v))\r\n          .join(',')}]`\r\n      : typeof where.value === 'string'\r\n      ? `\"${where.value}\"`\r\n      : where.value)\r\n\r\n  addArg('text', opts.text ? `\"${opts.text}\"` : undefined)\r\n  addArg('first', opts.first)\r\n  addArg('skip', opts.skip)\r\n  addArg('orderBy', opts.orderBy)\r\n  addArg('orderDirection', opts.orderDirection)\r\n  if (opts.block) {\r\n    if (opts.block.number) {\r\n      addArg('block', `{ number: ${opts.block.number} }`)\r\n    } else if (opts.block.hash) {\r\n      addArg('block', `{ hash: ${opts.block.hash} }`)\r\n    } else if (opts.block.number_gte) {\r\n      addArg('block', `{ number_gte: ${opts.block.number_gte} }`)\r\n    }\r\n  }\r\n  addArg(\r\n    'where',\r\n    opts.where\r\n      ? Array.isArray(opts.where)\r\n        ? `{${opts.where.map(w => ` ${formatWhere(w)}`)} }`\r\n        : `{ ${formatWhere(opts.where)} }`\r\n      : undefined,\r\n  )\r\n\r\n  const overrideEntity: string = opts.entity\r\n\r\n  return `{ ${overrideEntity}${isPluralQuery(opts.entity) ? 's' : ''}${\r\n    args ? `(${args})` : ''\r\n  } {${opts.keys.reduce(\r\n    (acc, key) =>\r\n      typeof key === 'string' ||\r\n      typeof key === 'number' ||\r\n      typeof key === 'symbol'\r\n        ? acc + ' ' + key.toString()\r\n        : acc + ` ${key.entity} { ${key.keys.join(' ')} }`,\r\n    '',\r\n  )} } }`\r\n}\r\n\r\nconst subgraphUrl = process.env.REACT_APP_SUBGRAPH_URL\r\n\r\nexport function formatGraphResponse<E extends EntityKey>(\r\n  entity: E,\r\n  response: SubgraphQueryReturnTypes[E],\r\n): SubgraphEntities[E][] {\r\n  if (!response || typeof response !== 'object') {\r\n    return []\r\n  }\r\n\r\n  // This code works perfectly, but there's an unusual TypeScript issue that\r\n  // makes it appear type unsafe...\r\n  //\r\n  // For example, `response.projects` is a ProjectJson[], as dictated by\r\n  // SubgraphQueryReturnTypes['projects']\r\n  // We then map over that array to return a Project[], but for some reason,\r\n  // TypeScript isn't equating `Project` with `SubgraphEntities['project']`,\r\n  // even though they're the same type.\r\n  //\r\n  // If you think you can solve it and remove the @ts-ignore, be my guest.\r\n  // My best guess is a conditional resolver type, ie:\r\n  // type EntityResolver<E extends EntityKey> = E extends 'project' ? Project : ...\r\n  // in favor of the main SubgraphEntities type. I tried it, though, to no avail.\r\n\r\n  switch (entity) {\r\n    case 'protocolLog':\r\n      if ('protocolLogs' in response) {\r\n        // @ts-ignore\r\n        return response.protocolLogs.map(parseProtocolLogJson)\r\n      }\r\n      break\r\n    case 'project':\r\n      if ('projects' in response) {\r\n        // @ts-ignore\r\n        return response.projects.map(parseProjectJson)\r\n      }\r\n      break\r\n    case 'projectEvent':\r\n      if ('projectEvents' in response) {\r\n        // @ts-ignore\r\n        return response.projectEvents.map(parseProjectEventJson)\r\n      }\r\n      break\r\n    case 'projectCreateEvent':\r\n      if ('projectCreateEvents' in response) {\r\n        // @ts-ignore\r\n        return response.projectCreateEvents.map(parseProjectCreateEventJson)\r\n      }\r\n      break\r\n    case 'projectSearch':\r\n      if ('projectSearch' in response) {\r\n        // @ts-ignore\r\n        return response.projectSearch.map(parseProjectJson)\r\n      }\r\n      break\r\n    case 'payEvent':\r\n      if ('payEvents' in response) {\r\n        // @ts-ignore\r\n        return response.payEvents.map(parsePayEventJson)\r\n      }\r\n      break\r\n    case 'redeemEvent':\r\n      if ('redeemEvents' in response) {\r\n        // @ts-ignore\r\n        return response.redeemEvents.map(parseRedeemEventJson)\r\n      }\r\n      break\r\n    case 'participant':\r\n      if ('participants' in response) {\r\n        // @ts-ignore\r\n        return response.participants.map(parseParticipantJson)\r\n      }\r\n      break\r\n    case 'tapEvent':\r\n      if ('tapEvents' in response) {\r\n        // @ts-ignore\r\n        return response.tapEvents.map(parseTapEventJson)\r\n      }\r\n      break\r\n    case 'distributeToPayoutModEvent':\r\n      if ('distributeToPayoutModEvents' in response) {\r\n        // @ts-ignore\r\n        return response.distributeToPayoutModEvents.map(\r\n          parseDistributeToPayoutModEvent,\r\n        )\r\n      }\r\n      break\r\n    case 'distributeToTicketModEvent':\r\n      if ('distributeToTicketModEvents' in response) {\r\n        // @ts-ignore\r\n        return response.distributeToTicketModEvents.map(\r\n          parseDistributeToTicketModEvent,\r\n        )\r\n      }\r\n      break\r\n    case 'printReservesEvent':\r\n      if ('printReservesEvents' in response) {\r\n        // @ts-ignore\r\n        return response.printReservesEvents.map(parsePrintReservesEventJson)\r\n      }\r\n      break\r\n    case 'mintTokensEvent':\r\n      if ('mintTokensEvents' in response) {\r\n        // @ts-ignore\r\n        return response.mintTokensEvents.map(parseMintTokensEventJson)\r\n      }\r\n      break\r\n    case 'deployedERC20Event':\r\n      if ('deployedERC20Events' in response) {\r\n        // @ts-ignore\r\n        return response.deployedERC20Events.map(parseDeployedERC20EventJson)\r\n      }\r\n      break\r\n    case 'distributePayoutsEvent':\r\n      if ('distributePayoutsEvents' in response) {\r\n        // @ts-ignore\r\n        return response.distributePayoutsEvents.map(\r\n          parseDistributePayoutsEventJson,\r\n        )\r\n      }\r\n      break\r\n    case 'distributeReservedTokensEvent':\r\n      if ('distributeReservedTokensEvents' in response) {\r\n        // @ts-ignore\r\n        return response.distributeReservedTokensEvents.map(\r\n          parseDistributeReservedTokensEventJson,\r\n        )\r\n      }\r\n      break\r\n    case 'distributeToReservedTokenSplitEvent':\r\n      if ('distributeToReservedTokenSplitEvents' in response) {\r\n        // @ts-ignore\r\n        return response.distributeToReservedTokenSplitEvents.map(\r\n          parseDistributeToReservedTokenSplitEventJson,\r\n        )\r\n      }\r\n      break\r\n    case 'distributeToPayoutSplitEvent':\r\n      if ('distributeToPayoutSplitEvents' in response) {\r\n        // @ts-ignore\r\n        return response.distributeToPayoutSplitEvents.map(\r\n          parseDistributeToPayoutSplitEventJson,\r\n        )\r\n      }\r\n      break\r\n    case 'useAllowanceEvent':\r\n      if ('useAllowanceEvents' in response) {\r\n        // @ts-ignore\r\n        return response.useAllowanceEvents.map(parseUseAllowanceEventJson)\r\n      }\r\n      break\r\n  }\r\n\r\n  return []\r\n}\r\n\r\nexport async function querySubgraph<\r\n  E extends EntityKey,\r\n  K extends EntityKeys<E>,\r\n>(opts: GraphQueryOpts<E, K> | null) {\r\n  if (!subgraphUrl) {\r\n    // This should _only_ happen in development\r\n    throw new Error('env.REACT_APP_SUBGRAPH_URL is missing')\r\n  }\r\n\r\n  if (!opts) return []\r\n\r\n  const response = await axios.post<{\r\n    errors?: SubgraphError | SubgraphError[]\r\n    data: SubgraphQueryReturnTypes[E]\r\n  }>(\r\n    opts.url ?? subgraphUrl,\r\n    {\r\n      query: formatGraphQuery(opts),\r\n    },\r\n    { headers: { 'Content-Type': 'application/json' } },\r\n  )\r\n\r\n  if ('errors' in response.data) {\r\n    throw new Error(\r\n      (Array.isArray(response.data.errors)\r\n        ? response.data.errors?.[0]?.message\r\n        : response.data.errors?.message) ||\r\n        'Something is wrong with this Graph request',\r\n    )\r\n  }\r\n\r\n  return formatGraphResponse(opts.entity, response.data?.data)\r\n}\r\n\r\n/** Repeats a max page size query until all entities have been returned. */\r\nexport async function querySubgraphExhaustive<\r\n  E extends EntityKey,\r\n  K extends EntityKeys<E>,\r\n>(opts: Omit<GraphQueryOpts<E, K>, 'first' | 'skip'> | null) {\r\n  const pageSize = 1000\r\n  const entities: SubgraphEntities[E][] = []\r\n\r\n  const query = async (page: number) => {\r\n    if (!opts) return\r\n\r\n    const data = await querySubgraph({\r\n      ...opts,\r\n      first: pageSize,\r\n      ...(page > 0\r\n        ? {\r\n            skip: pageSize * page,\r\n          }\r\n        : {}),\r\n    })\r\n\r\n    if (!data) return\r\n\r\n    entities.push(...data)\r\n\r\n    if (data.length === pageSize) await query(page + 1)\r\n  }\r\n\r\n  await query(0)\r\n\r\n  return entities\r\n}\r\n\r\nconst isPluralQuery = (key: EntityKey): boolean => {\r\n  if (key === 'projectSearch') return false\r\n\r\n  return true\r\n}\r\n\r\n/**\r\n * Get the subgraph representation of a project ID, based on given [cv] and [projectId]\r\n *\r\n * Reference implementation: https://github.com/jbx-protocol/juice-subgraph/blob/main/src/utils.ts#L84\r\n *\r\n * @param cv Contracts version\r\n * @param projectId the on-chain project ID\r\n */\r\nexport const getSubgraphIdForProject = (cv: CV, projectId: number) => {\r\n  return `${cv}-${projectId}`\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\n\r\nimport { useIpfsCache } from 'hooks/IpfsCache'\r\nimport { CV } from 'models/cv'\r\nimport { IpfsCacheName } from 'models/ipfs-cache/cache-name'\r\nimport { ProjectState } from 'models/project-visibility'\r\nimport {\r\n  parseTrendingProjectJson,\r\n  Project,\r\n  TrendingProject,\r\n  TrendingProjectJson,\r\n} from 'models/subgraph-entities/vX/project'\r\nimport { V1TerminalVersion } from 'models/v1/terminals'\r\nimport { useEffect, useMemo, useState } from 'react'\r\nimport {\r\n  EntityKeys,\r\n  getSubgraphIdForProject,\r\n  GraphQueryOpts,\r\n  InfiniteGraphQueryOpts,\r\n  querySubgraphExhaustive,\r\n  WhereConfig,\r\n} from 'utils/graph'\r\nimport { getTerminalAddress } from 'utils/v1/terminals'\r\nimport { uploadIpfsJsonCache } from 'utils/ipfs'\r\n\r\nimport { SECONDS_IN_DAY } from 'constants/numbers'\r\nimport { V1ArchivedProjectIds } from 'constants/v1/archivedProjects'\r\nimport { V2ArchivedProjectIds } from 'constants/v2/archivedProjects'\r\n\r\nimport useSubgraphQuery, { useInfiniteSubgraphQuery } from './SubgraphQuery'\r\n\r\ninterface ProjectsOptions {\r\n  pageNumber?: number\r\n  projectId?: number\r\n  orderBy?: 'createdAt' | 'currentBalance' | 'totalPaid'\r\n  orderDirection?: 'asc' | 'desc'\r\n  pageSize?: number\r\n  state?: ProjectState\r\n  keys?: (keyof Project)[]\r\n  terminalVersion?: V1TerminalVersion\r\n  cv?: CV[]\r\n}\r\n\r\nconst staleTime = 60 * 1000 // 60 seconds\r\n\r\nconst keys: (keyof Project)[] = [\r\n  'id',\r\n  'projectId',\r\n  'handle',\r\n  'owner',\r\n  'createdAt',\r\n  'metadataUri',\r\n  'metadataDomain',\r\n  'currentBalance',\r\n  'totalPaid',\r\n  'totalRedeemed',\r\n  'terminal',\r\n  'cv',\r\n]\r\n\r\nconst queryOpts = (\r\n  opts: ProjectsOptions,\r\n): Partial<\r\n  | GraphQueryOpts<'project', EntityKeys<'project'>>\r\n  | InfiniteGraphQueryOpts<'project', EntityKeys<'project'>>\r\n> => {\r\n  const where: WhereConfig<'project'>[] = []\r\n\r\n  const terminalAddress = getTerminalAddress(opts.terminalVersion)\r\n  const V1ArchivedProjectKeys = V1ArchivedProjectIds.map(projectId =>\r\n    getSubgraphIdForProject('1', projectId),\r\n  )\r\n  const V2ArchivedProjectKeys = V2ArchivedProjectIds.map(projectId =>\r\n    getSubgraphIdForProject('2', projectId),\r\n  )\r\n  const archivedKeys = [...V1ArchivedProjectKeys, ...V2ArchivedProjectKeys]\r\n\r\n  if (terminalAddress) {\r\n    where.push({\r\n      key: 'terminal',\r\n      value: terminalAddress,\r\n    })\r\n  }\r\n\r\n  if (opts.cv) {\r\n    where.push({\r\n      key: 'cv',\r\n      value: opts.cv,\r\n      operator: 'in',\r\n    })\r\n  }\r\n\r\n  if (opts.projectId) {\r\n    where.push({\r\n      key: 'projectId',\r\n      value: opts.projectId,\r\n    })\r\n  } else if (opts.state === 'archived') {\r\n    where.push({\r\n      key: 'id',\r\n      value: archivedKeys,\r\n      operator: 'in',\r\n    })\r\n  } else if (archivedKeys.length) {\r\n    where.push({\r\n      key: 'id',\r\n      value: archivedKeys,\r\n      operator: 'not_in',\r\n    })\r\n  }\r\n\r\n  return {\r\n    entity: 'project',\r\n    keys: opts.keys ?? keys,\r\n    orderDirection: opts.orderDirection ?? 'desc',\r\n    orderBy: opts.orderBy ?? 'totalPaid',\r\n    pageSize: opts.pageSize,\r\n    where,\r\n  }\r\n}\r\n\r\nexport function useProjectsQuery(opts: ProjectsOptions) {\r\n  return useSubgraphQuery(\r\n    {\r\n      ...(queryOpts(opts) as GraphQueryOpts<'project', EntityKeys<'project'>>),\r\n      first: opts.pageSize,\r\n      skip:\r\n        opts.pageNumber && opts.pageSize\r\n          ? opts.pageNumber * opts.pageSize\r\n          : undefined,\r\n    },\r\n    {\r\n      staleTime,\r\n    },\r\n  )\r\n}\r\n\r\nexport function useProjectsSearch(handle: string | undefined) {\r\n  return useSubgraphQuery(\r\n    handle\r\n      ? {\r\n          text: `${handle}:*`,\r\n          entity: 'projectSearch',\r\n          keys,\r\n        }\r\n      : null,\r\n    {\r\n      staleTime,\r\n    },\r\n  )\r\n}\r\n\r\n// Returns projects with highest % volume increase in last week\r\nexport function useTrendingProjects(count: number, days: number) {\r\n  const [loadingPayments, setLoadingPayments] = useState<boolean>()\r\n  const [projectStats, setProjectStats] = useState<\r\n    Record<\r\n      string,\r\n      {\r\n        trendingVolume: BigNumber\r\n        paymentsCount: number\r\n      }\r\n    >\r\n  >()\r\n\r\n  // Check if remote cache exists\r\n  const cache = useIpfsCache(\r\n    IpfsCacheName.trendingV2,\r\n    useMemo(\r\n      () => ({\r\n        // Cache expires every 12 min, will update 5 times an hour. (Arbitrary)\r\n        ttl: { minutes: 12 },\r\n        deserialize: data => data.map(parseTrendingProjectJson),\r\n      }),\r\n      [],\r\n    ),\r\n  )\r\n\r\n  // Cache === null indicates cache is missing or expired\r\n  const shouldUpdateCache = cache === null || (cache && cache?.length < count)\r\n\r\n  if (shouldUpdateCache) {\r\n    console.info('Trending cache missing or expired')\r\n  } else if (cache === undefined) {\r\n    console.info('Loading trending cache')\r\n  } else {\r\n    console.info('Using trending cache')\r\n  }\r\n\r\n  useEffect(() => {\r\n    const loadPayments = async () => {\r\n      setLoadingPayments(true)\r\n\r\n      const daySeconds = days * SECONDS_IN_DAY\r\n      const now = new Date().setUTCHours(0, 0, 0, 0) // get start of day, for determinism\r\n      const nowSeconds = now.valueOf() / 1000\r\n\r\n      const payments = await querySubgraphExhaustive({\r\n        entity: 'payEvent',\r\n        keys: [\r\n          'amount',\r\n          {\r\n            entity: 'project',\r\n            keys: ['id'],\r\n          },\r\n        ],\r\n        where: [\r\n          {\r\n            key: 'timestamp',\r\n            value: nowSeconds - daySeconds,\r\n            operator: 'gte',\r\n          },\r\n        ],\r\n      })\r\n\r\n      // Project data mapped trending data calculated from payments\r\n      setProjectStats(\r\n        (payments ?? []).reduce(\r\n          (acc, curr) => {\r\n            const projectId = curr.project.id\r\n\r\n            return projectId\r\n              ? {\r\n                  ...acc,\r\n                  [projectId]: {\r\n                    trendingVolume: BigNumber.from(\r\n                      acc[projectId]?.trendingVolume ?? 0,\r\n                    ).add(curr.amount),\r\n                    paymentsCount: (acc[projectId]?.paymentsCount ?? 0) + 1,\r\n                  },\r\n                }\r\n              : acc\r\n          },\r\n          {} as Record<\r\n            string,\r\n            {\r\n              trendingVolume: BigNumber\r\n              paymentsCount: number\r\n            }\r\n          >,\r\n        ),\r\n      )\r\n\r\n      setLoadingPayments(false)\r\n    }\r\n\r\n    if (shouldUpdateCache) loadPayments()\r\n  }, [days, shouldUpdateCache])\r\n\r\n  // Query project data for all trending project IDs\r\n  // Only query if cache needs updating\r\n  const projectsQuery = useSubgraphQuery(\r\n    projectStats && shouldUpdateCache\r\n      ? {\r\n          entity: 'project',\r\n          keys,\r\n          where: {\r\n            key: 'id',\r\n            value: Object.keys(projectStats),\r\n            operator: 'in',\r\n          },\r\n        }\r\n      : null,\r\n  )\r\n\r\n  const trendingProjectsQuery = {\r\n    ...projectsQuery,\r\n    isLoading:\r\n      projectsQuery.isLoading || loadingPayments || cache === undefined,\r\n    // Return TrendingProjects sorted by `trendingScore`\r\n    data: projectsQuery.data\r\n      ?.map(p => {\r\n        const stats = p.id && projectStats ? projectStats[p.id] : undefined\r\n\r\n        // Algorithm to rank trending projects:\r\n        // trendingScore = volume * (number of payments)^2\r\n        const trendingScore = stats?.trendingVolume.mul(\r\n          BigNumber.from(stats.paymentsCount).pow(2),\r\n        )\r\n\r\n        return {\r\n          ...p,\r\n          trendingScore,\r\n          trendingVolume: stats?.trendingVolume,\r\n          trendingPaymentsCount: stats?.paymentsCount,\r\n        } as TrendingProject\r\n      })\r\n      .sort((a, b) => (a.trendingScore?.gt(b.trendingScore ?? 0) ? -1 : 1))\r\n      .slice(0, count),\r\n  }\r\n\r\n  if (trendingProjectsQuery.data?.length && shouldUpdateCache) {\r\n    // Update cache with new queried data\r\n    uploadIpfsJsonCache(\r\n      IpfsCacheName.trendingV2,\r\n      trendingProjectsQuery.data.map(p =>\r\n        Object.entries(p).reduce(\r\n          (acc, [key, val]) => ({\r\n            ...acc,\r\n            // Serialize all BigNumbers to strings\r\n            [key]: BigNumber.isBigNumber(val) ? val.toString() : val,\r\n          }),\r\n          {} as TrendingProjectJson,\r\n        ),\r\n      ),\r\n    ).then(() => console.info('Uploaded new trending cache'))\r\n  }\r\n\r\n  return shouldUpdateCache\r\n    ? trendingProjectsQuery\r\n    : {\r\n        data: cache?.slice(0, count),\r\n        isLoading: cache === undefined,\r\n      }\r\n}\r\n\r\n// Query all projects that a wallet has previously made payments to\r\nexport function useHoldingsProjectsQuery(wallet: string | undefined) {\r\n  const [loadingParticipants, setLoadingParticipants] = useState<boolean>()\r\n  const [projectIds, setProjectIds] = useState<string[]>()\r\n\r\n  useEffect(() => {\r\n    // Get all participant entities for wallet\r\n    const loadParticipants = async () => {\r\n      setLoadingParticipants(true)\r\n\r\n      const participants = await querySubgraphExhaustive(\r\n        wallet\r\n          ? {\r\n              entity: 'participant',\r\n              orderBy: 'balance',\r\n              orderDirection: 'desc',\r\n              keys: [\r\n                {\r\n                  entity: 'project',\r\n                  keys: ['id'],\r\n                },\r\n              ],\r\n              where: [\r\n                {\r\n                  key: 'wallet',\r\n                  value: wallet,\r\n                },\r\n              ],\r\n            }\r\n          : null,\r\n      )\r\n\r\n      if (!participants) {\r\n        setProjectIds(undefined)\r\n        return\r\n      }\r\n\r\n      // Reduce list of paid project ids\r\n      setProjectIds(\r\n        participants?.reduce((acc, curr) => {\r\n          const projectId = curr?.project.id\r\n\r\n          return [\r\n            ...acc,\r\n            ...(projectId ? (acc.includes(projectId) ? [] : [projectId]) : []),\r\n          ]\r\n        }, [] as string[]),\r\n      )\r\n\r\n      setLoadingParticipants(false)\r\n    }\r\n\r\n    loadParticipants()\r\n  }, [wallet])\r\n\r\n  const projectsQuery = useSubgraphQuery(\r\n    projectIds\r\n      ? {\r\n          entity: 'project',\r\n          keys,\r\n          where: {\r\n            key: 'id',\r\n            operator: 'in',\r\n            value: projectIds,\r\n          },\r\n        }\r\n      : null,\r\n  )\r\n\r\n  return {\r\n    ...projectsQuery,\r\n    isLoading: projectsQuery.isLoading || loadingParticipants,\r\n  }\r\n}\r\n\r\nexport function useMyProjectsQuery(wallet: string | undefined) {\r\n  const projectsQuery = useSubgraphQuery(\r\n    wallet\r\n      ? {\r\n          entity: 'project',\r\n          keys,\r\n          where: {\r\n            key: 'owner',\r\n            operator: 'in',\r\n            value: [wallet],\r\n          },\r\n        }\r\n      : null,\r\n  )\r\n\r\n  return {\r\n    ...projectsQuery,\r\n  }\r\n}\r\n\r\nexport function useInfiniteProjectsQuery(opts: ProjectsOptions) {\r\n  return useInfiniteSubgraphQuery(\r\n    queryOpts(opts) as InfiniteGraphQueryOpts<'project', EntityKeys<'project'>>,\r\n    { staleTime },\r\n  )\r\n}\r\n","import axios from 'axios'\r\nimport { IpfsCacheData, IpfsCacheJsonData } from 'models/ipfs-cache/cache-data'\r\nimport { IpfsCacheName } from 'models/ipfs-cache/cache-name'\r\nimport moment, { DurationInputArg1 } from 'moment'\r\nimport { useEffect, useState } from 'react'\r\nimport { getPinnedListByTag, ipfsCidUrl } from 'utils/ipfs'\r\n\r\ntype IpfsCacheOpts<T extends IpfsCacheName> = {\r\n  ttl: DurationInputArg1\r\n  deserialize?: (x: IpfsCacheJsonData[T]) => IpfsCacheData[T]\r\n}\r\n\r\nexport function useIpfsCache<T extends IpfsCacheName>(\r\n  tag: T,\r\n  opts: IpfsCacheOpts<T>,\r\n) {\r\n  // Use `null` value to indicate missing or expired cache\r\n  const [cache, setCache] = useState<IpfsCacheData[T] | null>()\r\n\r\n  useEffect(() => {\r\n    async function load() {\r\n      try {\r\n        // Load pinned items by tag\r\n        const list = await getPinnedListByTag(tag)\r\n\r\n        if (!list.count) {\r\n          setCache(null)\r\n          return\r\n        }\r\n\r\n        // Most recent cache file is returned first in array\r\n        const latest = list.rows[0]\r\n\r\n        const isExpired = moment(latest.date_pinned).isBefore(\r\n          moment().subtract(opts.ttl),\r\n        )\r\n\r\n        if (isExpired) {\r\n          setCache(null)\r\n        } else {\r\n          // Get data from latest cache if not expired\r\n          const data: { data: IpfsCacheJsonData[T] } = await axios.get(\r\n            ipfsCidUrl(latest.ipfs_pin_hash),\r\n          )\r\n\r\n          setCache(\r\n            opts?.deserialize\r\n              ? opts.deserialize(data.data)\r\n              : (data.data as unknown as IpfsCacheData[T]),\r\n          )\r\n        }\r\n      } catch (e) {\r\n        console.error('Error loading IPFS cache', tag, e)\r\n      }\r\n    }\r\n\r\n    load()\r\n  }, [tag, opts])\r\n\r\n  return cache\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport {\r\n  parseParticipantJson,\r\n  ParticipantJson,\r\n} from 'models/subgraph-entities/vX/participant'\r\n\r\nimport { CV } from '../../cv'\r\nimport {\r\n  DeployedERC20Event,\r\n  DeployedERC20EventJson,\r\n  parseDeployedERC20EventJson,\r\n} from './deployed-erc20-event'\r\nimport {\r\n  DistributeToPayoutModEvent,\r\n  DistributeToPayoutModEventJson,\r\n  parseDistributeToPayoutModEvent,\r\n} from '../v1/distribute-to-payout-mod-event'\r\nimport {\r\n  DistributeToTicketModEvent,\r\n  DistributeToTicketModEventJson,\r\n  parseDistributeToTicketModEvent,\r\n} from '../v1/distribute-to-ticket-mod-event'\r\nimport { Participant } from './participant'\r\nimport { parsePayEventJson, PayEvent, PayEventJson } from './pay-event'\r\nimport {\r\n  parseMintTokensEventJson,\r\n  MintTokensEvent,\r\n  MintTokensEventJson,\r\n} from './mint-tokens-event'\r\nimport {\r\n  parsePrintReservesEventJson,\r\n  PrintReservesEvent,\r\n  PrintReservesEventJson,\r\n} from '../v1/print-reserves-event'\r\nimport {\r\n  parseRedeemEventJson,\r\n  RedeemEvent,\r\n  RedeemEventJson,\r\n} from './redeem-event'\r\nimport { parseTapEventJson, TapEvent, TapEventJson } from '../v1/tap-event'\r\n\r\ntype BaseProject = {\r\n  id: string\r\n  projectId: number\r\n  owner: string\r\n  createdAt: number\r\n  totalPaid: BigNumber\r\n  totalRedeemed: BigNumber\r\n  currentBalance: BigNumber\r\n  participants: Partial<Participant>[]\r\n  payEvents: Partial<PayEvent>[]\r\n  printPremineEvents: Partial<MintTokensEvent>[]\r\n  tapEvents: Partial<TapEvent>[]\r\n  redeemEvents: Partial<RedeemEvent>[]\r\n  printReservesEvents: Partial<PrintReservesEvent>[]\r\n  distributeToPayoutModEvents: Partial<DistributeToPayoutModEvent>[]\r\n  distributeToTicketModEvents: Partial<DistributeToTicketModEvent>[]\r\n  deployedERC20Events: Partial<DeployedERC20Event>[]\r\n}\r\n\r\ntype ProjectV1 = {\r\n  cv: CV\r\n  terminal: string\r\n  metadataUri: string\r\n  metadataDomain: null\r\n  handle: string\r\n} & BaseProject\r\n\r\ntype ProjectV2 = {\r\n  cv: CV\r\n  terminal: null\r\n  metadataUri: string\r\n  metadataDomain: BigNumber\r\n  handle: null\r\n} & BaseProject\r\n\r\nexport type Project = ProjectV1 | ProjectV2 // Separate entity used for testing\r\n\r\nexport type ProjectJson = Partial<\r\n  Record<\r\n    Exclude<\r\n      keyof Project,\r\n      | 'cv'\r\n      | 'projectId'\r\n      | 'metadataDomain'\r\n      | 'participants'\r\n      | 'printPremineEvents'\r\n      | 'payEvents'\r\n      | 'tapEvents'\r\n      | 'redeemEvents'\r\n      | 'printReservesEvents'\r\n      | 'deployedERC20Events'\r\n      | 'distributeToPayoutModEvents'\r\n      | 'distributeToTicketModEvents'\r\n    >,\r\n    string\r\n  > & {\r\n    participants: ParticipantJson[]\r\n    printPremineEvents: MintTokensEventJson[]\r\n    payEvents: PayEventJson[]\r\n    tapEvents: TapEventJson[]\r\n    redeemEvents: RedeemEventJson[]\r\n    printReservesEvents: PrintReservesEventJson[]\r\n    deployedERC20Events: DeployedERC20EventJson[]\r\n    distributeToPayoutModEvents: DistributeToPayoutModEventJson[]\r\n    distributeToTicketModEvents: DistributeToTicketModEventJson[]\r\n  }\r\n>\r\n\r\nexport const parseProjectJson = (project: ProjectJson): Partial<Project> => ({\r\n  ...project,\r\n  createdAt: project.createdAt ? parseInt(project.createdAt) : undefined,\r\n  currentBalance: project.currentBalance\r\n    ? BigNumber.from(project.currentBalance)\r\n    : undefined,\r\n  totalPaid: project.totalPaid ? BigNumber.from(project.totalPaid) : undefined,\r\n  totalRedeemed: project.totalRedeemed\r\n    ? BigNumber.from(project.totalRedeemed)\r\n    : undefined,\r\n  participants: project.participants?.map(parseParticipantJson) ?? undefined,\r\n  printPremineEvents:\r\n    project.printPremineEvents?.map(parseMintTokensEventJson) ?? undefined,\r\n  payEvents: project.payEvents?.map(parsePayEventJson) ?? undefined,\r\n  tapEvents: project.tapEvents?.map(parseTapEventJson) ?? undefined,\r\n  redeemEvents: project.redeemEvents?.map(parseRedeemEventJson) ?? undefined,\r\n  printReservesEvents:\r\n    project.printReservesEvents?.map(parsePrintReservesEventJson) ?? undefined,\r\n  deployedERC20Events:\r\n    project.deployedERC20Events?.map(parseDeployedERC20EventJson) ?? undefined,\r\n  distributeToPayoutModEvents:\r\n    project.distributeToPayoutModEvents?.map(parseDistributeToPayoutModEvent) ??\r\n    undefined,\r\n  distributeToTicketModEvents:\r\n    project.distributeToTicketModEvents?.map(parseDistributeToTicketModEvent) ??\r\n    undefined,\r\n})\r\n\r\nexport type TrendingProject = Pick<\r\n  Project,\r\n  | 'id'\r\n  | 'projectId'\r\n  | 'createdAt'\r\n  | 'terminal'\r\n  | 'totalPaid'\r\n  | 'handle'\r\n  | 'metadataUri'\r\n  | 'cv'\r\n> & {\r\n  trendingVolume: BigNumber\r\n  trendingScore: BigNumber\r\n  trendingPaymentsCount: number\r\n}\r\n\r\nexport type TrendingProjectJson = Pick<\r\n  TrendingProject,\r\n  | 'id'\r\n  | 'projectId'\r\n  | 'createdAt'\r\n  | 'terminal'\r\n  | 'handle'\r\n  | 'metadataUri'\r\n  | 'trendingPaymentsCount'\r\n  | 'cv'\r\n> & {\r\n  trendingVolume: string\r\n  trendingScore: string\r\n  totalPaid: string\r\n}\r\n\r\nexport const parseTrendingProjectJson = (\r\n  project: TrendingProjectJson,\r\n): TrendingProject => ({\r\n  ...project,\r\n  totalPaid: BigNumber.from(project.totalPaid),\r\n  trendingScore: BigNumber.from(project.trendingScore),\r\n  trendingVolume: BigNumber.from(project.trendingVolume),\r\n})\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { V2BallotState } from 'models/ballot'\r\nimport { CV } from 'models/cv'\r\nimport { ProjectMetadataV4 } from 'models/project-metadata'\r\nimport { V2FundingCycle, V2FundingCycleMetadata } from 'models/v2/fundingCycle'\r\nimport { Split } from 'models/v2/splits'\r\nimport { createContext } from 'react'\r\n\r\ntype V2ProjectLoadingStates = {\r\n  ETHBalanceLoading: boolean\r\n  balanceInDistributionLimitCurrencyLoading: boolean\r\n  distributionLimitLoading: boolean\r\n  fundingCycleLoading: boolean\r\n  usedDistributionLimitLoading: boolean\r\n}\r\n\r\nexport type V2ProjectContextType = {\r\n  isPreviewMode?: boolean\r\n\r\n  projectId: number | undefined\r\n  handle: string | undefined\r\n  createdAt: number | undefined\r\n  cv: CV | undefined\r\n  projectMetadata: ProjectMetadataV4 | undefined\r\n  tokenAddress: string | undefined\r\n  tokenSymbol: string | undefined\r\n  terminals: string[] | undefined // array of terminal addresses, 0xABC...\r\n  primaryTerminal: string | undefined\r\n  ETHBalance: BigNumber | undefined\r\n  totalVolume: BigNumber | undefined\r\n  projectOwnerAddress: string | undefined\r\n  balanceInDistributionLimitCurrency: BigNumber | undefined\r\n  usedDistributionLimit: BigNumber | undefined // how much has been distributed\r\n  isArchived: boolean | undefined\r\n\r\n  fundingCycleMetadata: V2FundingCycleMetadata | undefined\r\n  fundingCycle: V2FundingCycle | undefined\r\n  ballotState: V2BallotState | undefined\r\n\r\n  distributionLimit: BigNumber | undefined\r\n  distributionLimitCurrency: BigNumber | undefined\r\n\r\n  payoutSplits: Split[] | undefined\r\n  reservedTokensSplits: Split[] | undefined\r\n\r\n  primaryTerminalCurrentOverflow: BigNumber | undefined\r\n  totalTokenSupply: BigNumber | undefined\r\n\r\n  loading: V2ProjectLoadingStates\r\n}\r\n\r\nexport const V2ProjectContext = createContext<V2ProjectContextType>({\r\n  isPreviewMode: false,\r\n\r\n  projectId: undefined,\r\n  handle: undefined,\r\n  createdAt: undefined,\r\n  cv: undefined,\r\n  projectMetadata: undefined,\r\n  tokenAddress: undefined,\r\n  tokenSymbol: undefined,\r\n  terminals: undefined,\r\n  primaryTerminal: undefined,\r\n  ETHBalance: undefined,\r\n  totalVolume: undefined,\r\n  projectOwnerAddress: undefined,\r\n  balanceInDistributionLimitCurrency: undefined,\r\n  usedDistributionLimit: undefined,\r\n  isArchived: undefined,\r\n\r\n  fundingCycleMetadata: undefined,\r\n  fundingCycle: undefined,\r\n  ballotState: undefined,\r\n\r\n  distributionLimit: undefined,\r\n  distributionLimitCurrency: undefined,\r\n\r\n  payoutSplits: undefined,\r\n  reservedTokensSplits: undefined,\r\n\r\n  primaryTerminalCurrentOverflow: undefined,\r\n  totalTokenSupply: undefined,\r\n\r\n  loading: {\r\n    ETHBalanceLoading: false,\r\n    balanceInDistributionLimitCurrencyLoading: false,\r\n    distributionLimitLoading: false,\r\n    fundingCycleLoading: false,\r\n    usedDistributionLimitLoading: false,\r\n  },\r\n})\r\n","import { ThemeContext } from 'contexts/themeContext'\r\nimport { PropsWithChildren, useContext } from 'react'\r\nimport { InfoCircleOutlined } from '@ant-design/icons'\r\n\r\nexport default function FormItemWarningText({\r\n  children,\r\n  icon = <InfoCircleOutlined />,\r\n}: PropsWithChildren<{ icon?: JSX.Element }>) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <p style={{ color: colors.text.warn }}>\r\n      {icon} {children}\r\n    </p>\r\n  )\r\n}\r\n","import { PayoutMod } from 'models/mods'\r\nimport { permyriadToPercent } from 'utils/formatNumber'\r\nimport * as constants from '@ethersproject/constants'\r\nimport { isAddress } from '@ethersproject/address'\r\n\r\nimport { percentToPermyriad } from 'utils/formatNumber'\r\nimport { Split } from 'models/v2/splits'\r\n\r\nexport type ModalMode = 'Add' | 'Edit' | undefined\r\n\r\n// Get total percentages from a list of mods such as in Project->'Edit payouts'\r\nexport function getTotalPercentage(mods: PayoutMod[] | undefined) {\r\n  return (\r\n    mods?.reduce(\r\n      (acc, curr) => acc + parseFloat(permyriadToPercent(curr.percent ?? '0')),\r\n      0,\r\n    ) ?? 0\r\n  )\r\n}\r\n\r\n// Ensures value is greater than 0 and less than 100\r\nexport function validatePercentage(percent: number | undefined) {\r\n  if (percent === undefined || percent === 0) return Promise.reject('Required')\r\n  else if (percent > 100) return Promise.reject('Invalid')\r\n  return Promise.resolve()\r\n}\r\n\r\n// Validates an eth address from a modal where the address\r\n// is being added to a set of addresses (such as payout or\r\n// reserved token receivers)\r\n// Ensures address is not null, 0, or the same as an already added address\r\nexport function validateEthAddress(\r\n  address: string,\r\n  mods: PayoutMod[] | Split[],\r\n  modalMode: ModalMode,\r\n  editingModIndex: number | undefined,\r\n) {\r\n  // If user edits an (already approved) address and doesn't change it, we accept\r\n  if (\r\n    modalMode === 'Edit' &&\r\n    address === mods[editingModIndex ?? 0]?.beneficiary\r\n  )\r\n    return Promise.resolve()\r\n  else if (!address || !isAddress(address))\r\n    return Promise.reject('Address is required')\r\n  else if (address === constants.AddressZero)\r\n    return Promise.reject('Cannot use zero address')\r\n  else if (mods.some(mod => mod.beneficiary === address))\r\n    return Promise.reject('A payout for this address already exists')\r\n  else return Promise.resolve()\r\n}\r\n\r\n// Returns number of decimal places in a given number\r\nexport function countDecimalPlaces(value: number | undefined) {\r\n  if (value && Math.floor(value ?? 1) === value) return 0\r\n  return value?.toString().split('.')[1]?.length || 0\r\n}\r\n\r\n// Rounds a value down to a certain number of decimal places if given, else takes floor\r\nexport function roundDown(value: number, decimalPlaces: number | undefined) {\r\n  if (!decimalPlaces) return Math.floor(value)\r\n  return percentToPermyriad(value).toNumber() / 100\r\n}\r\n","import { t } from '@lingui/macro'\r\n\r\nexport const RESERVED_RATE_WARNING_THRESHOLD_PERCENT = 90\r\n\r\nexport type FundingCycleRiskFlags = {\r\n  duration: boolean\r\n  ballot: boolean\r\n  allowMinting: boolean\r\n  metadataReservedRate: boolean\r\n  metadataMaxReservedRate: boolean\r\n}\r\n\r\nexport const FUNDING_CYCLE_WARNING_TEXT: () => {\r\n  [k in keyof FundingCycleRiskFlags]: string\r\n} = () => {\r\n  return {\r\n    duration: t`The project owner may reconfigure this funding cycle at any time, without notice.`,\r\n    ballot: t`Funding cycles can be reconfigured moments before a new cycle begins, without notifying contributors.`,\r\n    allowMinting: t`The project owner may mint any supply of tokens at any time, diluting the token share of all existing contributors.`,\r\n    metadataMaxReservedRate: t`Contributors will not receive any tokens in exchange for paying this project.`,\r\n    metadataReservedRate: t`Contributors will receive a relatively small portion of tokens in exchange for paying this project.`,\r\n  }\r\n}\r\n","import { V1ContractName } from 'models/v1/contracts'\r\nimport { NetworkName } from 'models/network-name'\r\nimport { V1TerminalVersion } from 'models/v1/terminals'\r\n\r\nimport { V1TerminalName } from 'models/v1/terminals'\r\n\r\nimport { readNetwork } from 'constants/networks'\r\n\r\nconst loadTerminalAddress = (\r\n  network: NetworkName,\r\n  terminal: V1TerminalName,\r\n): string =>\r\n  // NOTE: This require is harder to easily change in the code base as it means\r\n  // making changes to the way the functions in the file are called.\r\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n  require(`@jbx-protocol/contracts-v1/deployments/${network}/${terminal}.json`)\r\n    .address\r\n\r\nexport const getTerminalAddress = (\r\n  version?: V1TerminalVersion,\r\n): string | undefined => {\r\n  if (!version) return\r\n  const contractName = getTerminalName({ version })\r\n  if (contractName) return loadTerminalAddress(readNetwork.name, contractName)\r\n}\r\n\r\nexport const getTerminalVersion = (\r\n  address?: string | null,\r\n): V1TerminalVersion | undefined => {\r\n  if (!address) return\r\n\r\n  if (\r\n    address.toLowerCase() ===\r\n    loadTerminalAddress(\r\n      readNetwork.name,\r\n      V1ContractName.TerminalV1,\r\n    ).toLowerCase()\r\n  ) {\r\n    return '1'\r\n  }\r\n\r\n  if (\r\n    address.toLowerCase() ===\r\n    loadTerminalAddress(\r\n      readNetwork.name,\r\n      V1ContractName.TerminalV1_1,\r\n    ).toLowerCase()\r\n  ) {\r\n    return '1.1'\r\n  }\r\n}\r\n\r\nexport const getTerminalName = ({\r\n  version,\r\n  address,\r\n}: {\r\n  version?: V1TerminalVersion\r\n  address?: string\r\n}): V1TerminalName | undefined => {\r\n  if (!version && !address) return\r\n\r\n  const _version =\r\n    version ?? (address ? getTerminalVersion(address) : undefined)\r\n\r\n  if (!_version) return\r\n\r\n  switch (_version) {\r\n    case '1':\r\n      return V1ContractName.TerminalV1\r\n    case '1.1':\r\n      return V1ContractName.TerminalV1_1\r\n  }\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport * as constants from '@ethersproject/constants'\r\nimport { invertPermyriad } from 'utils/bigNumbers'\r\nimport { fromWad, percentToPermyriad } from 'utils/formatNumber'\r\nimport { WeightFunction } from 'utils/math'\r\n\r\nconst TEN_THOUSAND = 10000\r\nconst ONE_BILLION = 1000000000\r\n\r\nconst MaxUint232 = constants.MaxUint256.add(1)\r\n  .div(2 ** 24)\r\n  .sub(1)\r\nconst MaxUint88 = 2 ** 88 - 1\r\n\r\nexport const MAX_RESERVED_RATE = TEN_THOUSAND\r\nexport const MAX_REDEMPTION_RATE = TEN_THOUSAND\r\nexport const MAX_DISCOUNT_RATE = ONE_BILLION\r\nexport const SPLITS_TOTAL_PERCENT = ONE_BILLION\r\nconst MAX_FEE = ONE_BILLION\r\nexport const MAX_DISTRIBUTION_LIMIT = MaxUint232\r\n\r\nexport const DEFAULT_MINT_RATE = 10 ** 6\r\nexport const MAX_MINT_RATE = Math.floor(MaxUint88 / 10 ** 18)\r\n\r\nexport const DEFAULT_FUNDING_CYCLE_DURATION = 14\r\n\r\n/**\r\n * Express a given discount rate (parts-per-billion) as a percentage.\r\n * @param discountRate - discount rate as parts-per-billion.\r\n * @returns {string} discount rate expressed as a percentage.\r\n */\r\nexport const formatDiscountRate = (discountRate: BigNumber): string => {\r\n  return (\r\n    discountRate\r\n      .mul(100)\r\n      .div(MAX_DISCOUNT_RATE / 100)\r\n      .toNumber() / 100\r\n  ).toString()\r\n}\r\n\r\n/**\r\n * Express a given percentage as a discount rate (parts-per-billion).\r\n * @param percentage - value as a percentage.\r\n * @returns {BigNumber} percentage expressed as parts-per-billion.\r\n */\r\nexport const discountRateFrom = (percentage: string): BigNumber => {\r\n  return BigNumber.from(\r\n    Math.floor((parseFloat(percentage) * MAX_DISCOUNT_RATE) / 100),\r\n  )\r\n}\r\n\r\n/**\r\n * Express a given split \"percent\" (parts-per-billion) as a percentage.\r\n * NOTE: splitPercent is named misleadingly. splitPercent is not a percentage (x/100)\r\n * It is express as parts-per-billion.\r\n * @param splitPercent - split \"percent\" as parts-per-billion.\r\n * @returns {string} split expressed as a percentage.\r\n */\r\nexport const formatSplitPercent = (splitPercent: BigNumber): string => {\r\n  return (\r\n    splitPercent\r\n      .mul(100)\r\n      .div(SPLITS_TOTAL_PERCENT / 100)\r\n      .toNumber() / 100\r\n  ).toString()\r\n}\r\n\r\n/**\r\n * Express a given split \"percent\" (parts-per-billion) as a percentage to the maximum precision.\r\n * @param splitPercent - split \"percent\" as parts-per-billion.\r\n * @returns {number} percentage (/100)\r\n */\r\nexport const preciseFormatSplitPercent = (\r\n  percentPerBillion: number,\r\n): number => {\r\n  return parseFloat(\r\n    ((percentPerBillion / SPLITS_TOTAL_PERCENT) * 100).toFixed(9),\r\n  )\r\n}\r\n\r\n/**\r\n * Express a given [percentage] as a split \"percent\" (parts-per-billion).\r\n * NOTE: splitPercent is named misleadingly. splitPercent is not a percentage (x/100)\r\n * It is express as parts-per-billion.\r\n * @param percentage {float} - value as a percentage.\r\n * @returns {BigNumber} percentage expressed as parts-per-billion.\r\n */\r\nexport const splitPercentFrom = (percentage: number): BigNumber => {\r\n  return percentage\r\n    ? BigNumber.from(((percentage * SPLITS_TOTAL_PERCENT) / 100).toFixed())\r\n    : BigNumber.from(0)\r\n}\r\n\r\n/**\r\n * Express a given reserved rate (parts-per-ten thousand) as a percentage.\r\n * @param reservedRate - reserved rate as parts-per-thousand.\r\n * @returns {string} reserved rate expressed as a percentage.\r\n */\r\nexport const formatReservedRate = (\r\n  reservedRate: BigNumber | undefined,\r\n): string => {\r\n  return reservedRate\r\n    ? (\r\n        reservedRate\r\n          .mul(100)\r\n          .div(MAX_RESERVED_RATE / 100)\r\n          .toNumber() / 100\r\n      ).toString()\r\n    : '0'\r\n}\r\n\r\n/**\r\n * Express a given [percentage] as a reserved rate (parts-per-ten thousand).\r\n * @param percentage - value as a percentage.\r\n * @returns {BigNumber} percentage expressed as parts-per-thousand.\r\n */\r\nexport const reservedRateFrom = (percentage: string): BigNumber => {\r\n  return BigNumber.from(\r\n    Math.floor((parseFloat(percentage) * MAX_RESERVED_RATE) / 100),\r\n  )\r\n}\r\n\r\n/**\r\n * Express a given redemption rate (parts-per-ten thousand) as a percentage.\r\n * @param redemptionRate - redemption rate as parts-per-thousand.\r\n * @returns {string} redemption rate expressed as a percentage.\r\n */\r\nexport const formatRedemptionRate = (redemptionRate: BigNumber): string => {\r\n  return (\r\n    redemptionRate\r\n      .mul(100)\r\n      .div(MAX_REDEMPTION_RATE / 100)\r\n      .toNumber() / 100\r\n  ).toString()\r\n}\r\n\r\n/**\r\n * Express a given [percentage] as a redemption rate (parts-per-ten thousand).\r\n * @param percentage - value as a percentage.\r\n * @returns {BigNumber} percentage expressed as parts-per-thousand.\r\n */\r\nexport const redemptionRateFrom = (percentage: string): BigNumber => {\r\n  return BigNumber.from(\r\n    Math.floor((parseFloat(percentage) * MAX_REDEMPTION_RATE) / 100),\r\n  )\r\n}\r\n\r\n/**\r\n * Express a given issuance rate [tokens / 1 ETH] as an issuance rate in parts per 1e18\r\n * @param issuanceRate - issuance rate as tokens / ETH\r\n * @returns {string} issuance rate in parts per 1e18\r\n */\r\nexport const issuanceRateFrom = (issuanceRate: string): string => {\r\n  return constants.WeiPerEther.mul(issuanceRate).toString()\r\n}\r\n\r\n/**\r\n * Express a given issuance rate in parts per 1e18 as an issuance rate [tokens / 1 ETH]\r\n * @param {BigNumber} issuanceRate issuance rate in parts per 1e18\r\n * @returns {string} issuance rate in tokens / 1ETH\r\n */\r\nexport const formatIssuanceRate = (issuanceRate: string): string => {\r\n  // Round down to nearest wei\r\n  if (issuanceRate.split('.').length) {\r\n    issuanceRate = issuanceRate.split('.')[0]\r\n  }\r\n  return BigNumber.from(issuanceRate).div(constants.WeiPerEther).toString()\r\n}\r\n\r\n/**\r\n * Express a given fee (parts-per-billion) as a percentage.\r\n * @param feePerBillion - fee as parts-per-billion.\r\n * @returns {string} fee expressed as a percentage.\r\n */\r\nexport const formatFee = (feePerBillion: BigNumber): string => {\r\n  return (\r\n    feePerBillion\r\n      .mul(ONE_BILLION * 100)\r\n      .div(MAX_FEE)\r\n      .toNumber() / ONE_BILLION\r\n  ).toString()\r\n}\r\n\r\n/**\r\n * Return a given [amountWad] weighted by a given [weight] and [reservedRatePermyriad].\r\n *\r\n * Typically only used by Juicebox V2 projects.\r\n *\r\n * @param weight - scalar value for weighting. Typically funding cycle weight.\r\n * @param reservedRatePermyriad - reserve rate, as a permyriad (x/10,000)\r\n * @param amountWad - amount to weight, as a wad.\r\n * @param outputType\r\n * @returns\r\n */\r\nexport const weightedAmount: WeightFunction = (\r\n  weight: BigNumber | undefined,\r\n  reservedRatePermyriad: number | undefined,\r\n  amountWad: BigNumber | undefined,\r\n  outputType: 'payer' | 'reserved',\r\n): string => {\r\n  if (!weight || !amountWad) return '0'\r\n\r\n  if (reservedRatePermyriad === undefined) return '0'\r\n\r\n  return (\r\n    fromWad(\r\n      amountWad\r\n        .mul(weight)\r\n        .mul(\r\n          outputType === 'reserved'\r\n            ? reservedRatePermyriad\r\n            : invertPermyriad(BigNumber.from(reservedRatePermyriad)),\r\n        )\r\n        .div(percentToPermyriad(100)),\r\n    ) ?? '0'\r\n  )\r\n}\r\n\r\nexport const feeForAmount = (\r\n  amountWad: BigNumber | undefined,\r\n  feePerBillion: BigNumber | undefined,\r\n): BigNumber | undefined => {\r\n  if (!feePerBillion || !amountWad) return\r\n  return amountWad.mul(feePerBillion).div(ONE_BILLION)\r\n}\r\n\r\nexport const amountSubFee = (\r\n  amountWad?: BigNumber,\r\n  feePerBillion?: BigNumber,\r\n): BigNumber | undefined => {\r\n  if (!feePerBillion || !amountWad) return\r\n  const feeAmount = feeForAmount(amountWad, feePerBillion) ?? 0\r\n  return amountWad.sub(feeAmount)\r\n}\r\n","import { t, Trans } from '@lingui/macro'\r\nimport ExternalLink from 'components/ExternalLink'\r\nimport React, { ReactNode } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const OverflowVideoLink: React.FC = ({ children }) => (\r\n  <ExternalLink href=\"https://youtu.be/9Mq5oDh0aBY\">{children}</ExternalLink>\r\n)\r\n\r\nconst JB_FEE = 2.5\r\n\r\nexport const JBDiscordLink = ({ children }: { children: ReactNode }) => (\r\n  <ExternalLink href=\"https://discord.gg/6jXrJSyDFf\">{children}</ExternalLink>\r\n)\r\n\r\n// t macro function wasn't working when QAs was in the same file\r\n// as where it was being rendered (FAQs).\r\n// Saw the suggestion to separate the store and render into 2 files here:\r\n// https://github.com/lingui/js-lingui/issues/707#issuecomment-657199843\r\n// Not sure why but this fixed the problem.\r\n// Take-away: If you're storing a list of <Trans>` strings in a list,\r\n// make sure you're not rendering it from the same file.\r\nexport default function QAs(): {\r\n  q: JSX.Element\r\n  a?: JSX.Element\r\n  img?: {\r\n    src: string\r\n    alt: string\r\n  }\r\n}[] {\r\n  return [\r\n    {\r\n      q: <Trans>Who funds Juicebox projects?</Trans>,\r\n      a: (\r\n        <Trans>\r\n          <p>\r\n            Users fund your project by paying to use your app or service, or as\r\n            a patron or investor by making a payment directly to your project's\r\n            smart contract (like on this app).\r\n          </p>\r\n          <p>\r\n            For users paying through your app, you should route those funds\r\n            through the Juicebox smart contracts so they receive tokens in\r\n            return.\r\n          </p>\r\n        </Trans>\r\n      ),\r\n    },\r\n    {\r\n      q: <Trans>What does Juicebox cost?</Trans>,\r\n      a: (\r\n        <Trans>\r\n          <p>\r\n            Juicebox is an open protocol on Ethereum that is funded using\r\n            Juicebox itself. You can check out the contractualized budget specs{' '}\r\n            <ExternalLink href=\"https://juicebox.money/#/p/juicebox\">\r\n              here\r\n            </ExternalLink>\r\n            .\r\n          </p>\r\n          <p>\r\n            Projects building on Juicebox pay a {JB_FEE}% JBX membership fee\r\n            from withdrawn funds into the JuiceboxDAO treasury. Projects can\r\n            then use their JBX to participate in the governance of JuiceboxDAO\r\n            and its collective treasury, as well as redeem from its growing{' '}\r\n            <OverflowVideoLink>overflow</OverflowVideoLink>. The fee is also\r\n            subject to change via JBX member votes.\r\n          </p>\r\n        </Trans>\r\n      ),\r\n    },\r\n    {\r\n      q: <Trans>What is overflow?</Trans>,\r\n      a: (\r\n        <Trans>\r\n          <p>\r\n            If you know how much your project needs to earn over some period of\r\n            time to be sustainable, you can set a funding target with that\r\n            amount. If your project earns more than that, the surplus funds are\r\n            locked in an overflow pool. Anyone holding your project's tokens can\r\n            claim a portion of the overflow pool in exchange for redeeming their\r\n            tokens.\r\n          </p>\r\n          <p>\r\n            For more info, check out this{' '}\r\n            <OverflowVideoLink>short video</OverflowVideoLink>.\r\n          </p>\r\n        </Trans>\r\n      ),\r\n    },\r\n    {\r\n      q: <Trans>What are community tokens?</Trans>,\r\n      a: (\r\n        <Trans>\r\n          Each project has its own{' '}\r\n          <ExternalLink href=\"https://youtu.be/cqZhNzZoMh8\">\r\n            ERC-20 tokens\r\n          </ExternalLink>\r\n          . Anyone who contributes funds to a project receives that project's\r\n          tokens in return. Token balances will be tracked by the protocol until\r\n          ERC-20 tokens are optionally issued by the project owner.\r\n        </Trans>\r\n      ),\r\n    },\r\n    {\r\n      q: <Trans>Why should I want to own a project's tokens?</Trans>,\r\n      a: (\r\n        <Trans>\r\n          Tokens can be redeemed for a portion of a project's{' '}\r\n          <OverflowVideoLink>overflow</OverflowVideoLink>, letting you benefit\r\n          from its success. After all, you helped it get there. The token may\r\n          also give you exclusive member-only privledges, and allow you to\r\n          contribute to the governance of the community.\r\n        </Trans>\r\n      ),\r\n    },\r\n    {\r\n      q: <Trans>What's a discount rate?</Trans>,\r\n      a: (\r\n        <Trans>\r\n          Projects can be created with an optional discount rate designed to\r\n          incentivize supporters to contribute earlier rather than later. The\r\n          amount of tokens rewarded per amount paid to your project will\r\n          decrease by the discount rate with each new funding cycle. A higher\r\n          discount rate will incentivize supporters to pay your project earlier\r\n          rather than later.\r\n        </Trans>\r\n      ),\r\n    },\r\n    {\r\n      q: <Trans>What's a bonding curve?</Trans>,\r\n      a: (\r\n        <Trans>\r\n          <p>\r\n            A bonding curve rewards people who wait longer to redeem your tokens\r\n            for overflow.\r\n          </p>\r\n          <p>\r\n            For example, with a bonding curve of 70%, redeeming 10% of the token\r\n            supply at any given time will claim around 7% of the total overflow.\r\n          </p>\r\n          <p>The rest is left to share between token holders.</p>,\r\n          <p>\r\n            For more info, check out this{' '}\r\n            <ExternalLink href=\"https://youtu.be/dxqc3yMqi5M\">\r\n              short video\r\n            </ExternalLink>{' '}\r\n            on bonding curves.\r\n          </p>\r\n        </Trans>\r\n      ),\r\n    },\r\n    {\r\n      q: <Trans>Does a project benefit from its own overflow?</Trans>,\r\n      a: (\r\n        <Trans>\r\n          <p>\r\n            A project can choose to reserve a percentage of tokens for itself.\r\n            Instead of being distributed to paying users, this percentage of\r\n            tokens is instead minted for the project.\r\n          </p>\r\n          <p>\r\n            Holding these tokens entitles a project to a portion of its own\r\n            overflow.\r\n          </p>\r\n        </Trans>\r\n      ),\r\n    },\r\n    {\r\n      q: (\r\n        <Trans>\r\n          Can I change my project's contract after it's been created?\r\n        </Trans>\r\n      ),\r\n      a: (\r\n        <Trans>\r\n          Project owners can configure a delay period, meaning reconfigurations\r\n          to an upcoming funding cycle must be submitted a certain number of\r\n          days before it starts. For example, a 3-day delay period means\r\n          reconfigurations must be submitted at least 3 days before the next\r\n          funding cycle starts. This gives token holders time to react to the\r\n          decision and reduces the chance of rug-pulls.\r\n        </Trans>\r\n      ),\r\n    },\r\n    {\r\n      q: <Trans>Can I delete a project?</Trans>,\r\n      a: (\r\n        <Trans>\r\n          It isn't possible to remove a project's data from the blockchain, but\r\n          we can hide it in the app if you'd like to prevent people from seeing\r\n          or interacting with it — just let us know in{' '}\r\n          <JBDiscordLink>Discord</JBDiscordLink>. Keep in mind people will still\r\n          be able to use your project by interacting directly with the contract.\r\n        </Trans>\r\n      ),\r\n    },\r\n    {\r\n      q: <Trans>Why Ethereum?</Trans>,\r\n      a: (\r\n        <Trans>\r\n          <p>\r\n            A mechanism like Juicebox where upfront financial commitments should\r\n            be honored over time is only guaranteed within an ecosystem like\r\n            Ethereum.\r\n          </p>\r\n          <p>\r\n            Ethereum provides a public environment where internet apps like\r\n            Juicebox can run in a permission-less, trustless, and unstoppable\r\n            fashion.\r\n          </p>\r\n          <p>\r\n            This means that anyone can see the code that they're using, anyone\r\n            can use the code without asking for permission, and no one can mess\r\n            with the code or take it down.\r\n          </p>\r\n          <p>\r\n            People using Juicebox are interacting with each other through public\r\n            infrastructure—not a private, profit-seeking corporate service that\r\n            brokers the exchange.\r\n          </p>\r\n          <p>\r\n            Juicebox was built to allow people and projects to get paid for\r\n            creating public art and infrastructure, as much as or more than they\r\n            would working towards corporate ends. No more shady business.\r\n          </p>\r\n        </Trans>\r\n      ),\r\n    },\r\n    {\r\n      q: <Trans>What's going on under the hood?</Trans>,\r\n      a: (\r\n        <Trans>\r\n          <p>\r\n            This website (juicebox.money) connects to the Juicebox protocol's\r\n            smart contracts, deployed on the Ethereum network. (note: anyone\r\n            else can make a website that also connects to these same smart\r\n            contracts. For now, don't trust any site other than this one to\r\n            access the Juicebox protocol).\r\n          </p>\r\n          <p>\r\n            Creating a Juicebox project mints you an NFT (ERC-721) representing\r\n            ownership over it. Whoever owns this NFT can configure the rules of\r\n            the game and how payouts are distributed.\r\n          </p>\r\n          <p>\r\n            The project's tokens that are minted and distributed as a result of\r\n            a received payment are ERC-20's. The amount of tokens minted and\r\n            distributed are proportional to the volume of payments received,\r\n            weighted by the project's discount rate over time.\r\n          </p>\r\n        </Trans>\r\n      ),\r\n    },\r\n    {\r\n      q: <Trans>How decentralized is Juicebox?</Trans>,\r\n      a: (\r\n        <Trans>\r\n          <p>\r\n            Juicebox is a governance-minimal protocol. There are only a few\r\n            levers that can be tuned, none of which impose changes for users\r\n            without their consent. The Juicebox governance smart contract can\r\n            adjust these levers.\r\n          </p>\r\n          <p>\r\n            The Juicebox protocol is governed by a community of JBX token\r\n            holders who vote on proposals fortnightly.\r\n          </p>\r\n        </Trans>\r\n      ),\r\n    },\r\n    {\r\n      q: <Trans>What are the risks?</Trans>,\r\n      a: (\r\n        <Trans>\r\n          <p>\r\n            Juicebox has handled tens of thousands of ETH through its protocol,\r\n            and has so far had 0 security mishaps.\r\n          </p>{' '}\r\n          <p>\r\n            However, Juicebox is still experimental software. Although the\r\n            Juicebox contract team have done their part to shape the smart\r\n            contracts for public use and have tested the code thoroughly, the\r\n            risk of exploits is never 0%.\r\n          </p>\r\n          <p>\r\n            Due to their public nature, any exploits to the contracts may have\r\n            irreversible consequences, including loss of funds. Please use\r\n            Juicebox with caution.\r\n          </p>\r\n        </Trans>\r\n      ),\r\n    },\r\n    {\r\n      q: <Trans>How have the contracts been tested?</Trans>,\r\n      a: (\r\n        <Trans>\r\n          <p>\r\n            There are unit tests written for every condition of every function\r\n            in the contracts, and integration tests for every workflow that the\r\n            protocol supports.\r\n          </p>\r\n          <p>\r\n            There was also a script written to iteratively run the integration\r\n            tests using a random input generator, prioritizing edge cases. The\r\n            code has successfully passed over 1 million test cases through this\r\n            stress-testing script.\r\n          </p>{' '}\r\n          <p>\r\n            The code could always use more eyes and more critique to further the\r\n            community's confidence. Join our{' '}\r\n            <JBDiscordLink>Discord</JBDiscordLink> and check out the code on{' '}\r\n            <ExternalLink href=\"https://github.com/jbx-protocol\">\r\n              GitHub\r\n            </ExternalLink>{' '}\r\n            to work with us.\r\n          </p>\r\n        </Trans>\r\n      ),\r\n    },\r\n    {\r\n      q: <Trans>Will it work on L2s?</Trans>,\r\n      a: (\r\n        <Trans>\r\n          <p>\r\n            That's the plan, but the core Juicebox contracts will first be\r\n            deployed to Ethereum Mainnet.\r\n          </p>\r\n          <p>\r\n            The contract team will soon start working on L2 payment terminals\r\n            for Juicebox projects.\r\n          </p>\r\n        </Trans>\r\n      ),\r\n    },\r\n    {\r\n      q: (\r\n        <Trans>\r\n          Do I have to make my project open source to use Juicebox as its\r\n          business model?\r\n        </Trans>\r\n      ),\r\n      img: {\r\n        src: '/assets/cooler_if_you_did.png',\r\n        alt: t`It'd be a lot cooler if you did`,\r\n      },\r\n    },\r\n    {\r\n      q: <Trans>Who is Peel?</Trans>,\r\n      a: (\r\n        <Trans>\r\n          <Link to=\"/p/peel\" target=\"_blank\">\r\n            Peel\r\n          </Link>{' '}\r\n          is the DAO that manages the juicebox.money frontend interface. You can\r\n          reach out to Peel either through the{' '}\r\n          <ExternalLink href=\"https://discord.gg/XvmfY4Hkcz\">\r\n            Peel Discord\r\n          </ExternalLink>{' '}\r\n          or the <JBDiscordLink>Juicebox Discord</JBDiscordLink>.\r\n        </Trans>\r\n      ),\r\n    },\r\n    {\r\n      q: <Trans>How do I create a project?</Trans>,\r\n      a: (\r\n        <Trans>\r\n          If you're interested in creating a project but still confused on how\r\n          to get started, consider watching this{' '}\r\n          <ExternalLink href=\"https://youtu.be/R43XqPriS5M\">\r\n            instructional video\r\n          </ExternalLink>\r\n          . Also feel free to reach out in the{' '}\r\n          <JBDiscordLink>Juicebox Discord</JBDiscordLink> where our team will be\r\n          happy to help bring your project idea to life!\r\n        </Trans>\r\n      ),\r\n    },\r\n  ]\r\n}\r\n","import { ThemeContext } from 'contexts/themeContext'\r\nimport { CSSProperties, PropsWithChildren, useContext } from 'react'\r\n\r\nimport { shadowCard } from 'constants/styles/shadowCard'\r\n\r\nexport function CardSection({\r\n  header,\r\n  padded = true,\r\n  noShadow,\r\n  children,\r\n  style,\r\n}: PropsWithChildren<{\r\n  header?: string\r\n  padded?: boolean\r\n  noShadow?: boolean\r\n  style?: CSSProperties\r\n}>) {\r\n  const { theme } = useContext(ThemeContext)\r\n  return (\r\n    <div\r\n      style={{\r\n        marginBottom: noShadow ? 0 : 10,\r\n        marginRight: noShadow ? 0 : 10,\r\n      }}\r\n    >\r\n      {header && (\r\n        <h2\r\n          style={{\r\n            margin: 0,\r\n            fontWeight: 600,\r\n          }}\r\n        >\r\n          {header}\r\n        </h2>\r\n      )}\r\n      <div\r\n        style={{\r\n          ...shadowCard(theme),\r\n          overflow: 'hidden',\r\n          ...style,\r\n          ...(padded ? { padding: 20 } : {}),\r\n        }}\r\n      >\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { InputNumber, Slider, Form } from 'antd'\r\nimport { CSSProperties, useEffect, useState } from 'react'\r\n\r\nimport { roundDown } from 'components/formItems/formHelpers'\r\n\r\nimport { FormItemExt } from '../formItems/formItemExt'\r\n\r\nexport default function NumberSlider({\r\n  min,\r\n  max,\r\n  step,\r\n  sliderValue,\r\n  suffix,\r\n  onChange,\r\n  defaultValue,\r\n  disabled,\r\n  name, // Name is required for form validation\r\n  formItemProps,\r\n  style,\r\n}: {\r\n  min?: number\r\n  max?: number\r\n  step?: number\r\n  sliderValue?: number\r\n  suffix?: string\r\n  onChange?: (num: number | undefined) => void\r\n  defaultValue?: number\r\n  style?: CSSProperties\r\n} & FormItemExt) {\r\n  const [_value, setValue] = useState<number | undefined>(\r\n    sliderValue ?? defaultValue,\r\n  )\r\n\r\n  const inputConfig = {\r\n    min: min ?? 0,\r\n    max: max ?? 100,\r\n    step: step ?? 0.1,\r\n  }\r\n\r\n  const decimals = inputConfig.step.toString().split('.')[1].length\r\n\r\n  const updateValue = (val?: number) => {\r\n    setValue(val)\r\n    if (onChange) onChange(val)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setValue(sliderValue)\r\n  }, [sliderValue])\r\n\r\n  return (\r\n    <div style={style}>\r\n      <div\r\n        style={{ display: 'flex', alignItems: 'baseline', marginBottom: 15 }}\r\n      >\r\n        <Slider\r\n          {...inputConfig}\r\n          tooltipVisible={false}\r\n          style={{ flex: 1, marginRight: 20 }}\r\n          value={_value}\r\n          onChange={(val: number) => updateValue(val)}\r\n          defaultValue={defaultValue}\r\n          disabled={disabled}\r\n        />\r\n        <Form.Item\r\n          name={name}\r\n          rules={formItemProps?.rules ?? []}\r\n          style={{ marginBottom: 0 }}\r\n        >\r\n          <InputNumber\r\n            {...inputConfig}\r\n            value={_value}\r\n            disabled={disabled}\r\n            formatter={(val?: string | number | undefined) => {\r\n              let _val = val?.toString() ?? '0'\r\n\r\n              if (_val.includes('.') && _val.split('.')[1].length > decimals) {\r\n                _val = roundDown(parseFloat(_val), decimals).toString()\r\n              }\r\n\r\n              return `${_val ?? ''}${suffix ?? ''}`\r\n            }}\r\n            parser={(val?: string) =>\r\n              parseFloat(val?.replace(suffix ?? '', '') ?? '0')\r\n            }\r\n            onChange={(val: string | number | null | undefined) => {\r\n              const newVal =\r\n                (typeof val === 'string' ? parseFloat(val) : val) ?? undefined\r\n              updateValue(newVal)\r\n            }}\r\n            defaultValue={defaultValue}\r\n          />\r\n        </Form.Item>\r\n      </div>\r\n      {formItemProps?.extra ? (\r\n        <div className=\"ant-form-item-extra\">{formItemProps.extra}</div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n","import { createContext } from 'react'\r\nimport {\r\n  V2_CURRENCY_ETH,\r\n  V2_CURRENCY_USD,\r\n  V2_CURRENCY_METADATA,\r\n} from 'utils/v2/currency'\r\n\r\nimport { CurrencyOption } from 'models/currencyOption'\r\n\r\nimport { CurrencyMetadata, CurrencyName } from 'constants/currency'\r\n\r\n// TODO make this CurrencyOption instead of number\r\ntype CurrencyMetadataType = Record<number, CurrencyMetadata>\r\n\r\ntype CurrencyContextType = {\r\n  currencyMetadata: CurrencyMetadataType\r\n  currencies: Record<CurrencyName, CurrencyOption>\r\n}\r\n\r\n// Defaults to V2\r\nexport const CurrencyContext = createContext<CurrencyContextType>({\r\n  currencyMetadata: V2_CURRENCY_METADATA,\r\n  currencies: { ETH: V2_CURRENCY_ETH, USD: V2_CURRENCY_USD },\r\n})\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { V1FundingCycle } from 'models/v1/fundingCycle'\r\nimport { PayoutMod, TicketMod } from 'models/mods'\r\nimport { ProjectMetadataV4 } from 'models/project-metadata'\r\nimport { ProjectType } from 'models/project-type'\r\nimport { V1TerminalName } from 'models/v1/terminals'\r\nimport { V1TerminalVersion } from 'models/v1/terminals'\r\nimport { createContext } from 'react'\r\nimport { CV } from 'models/cv'\r\n\r\nexport type V1ProjectContextType = {\r\n  projectId: number | undefined\r\n  projectType: ProjectType | undefined\r\n  createdAt: number | undefined\r\n  handle: string | undefined\r\n  metadata: ProjectMetadataV4 | undefined\r\n  owner: string | undefined // owner address\r\n  earned: BigNumber | undefined\r\n  currentFC: V1FundingCycle | undefined\r\n  queuedFC: V1FundingCycle | undefined\r\n  currentPayoutMods: PayoutMod[] | undefined\r\n  currentTicketMods: TicketMod[] | undefined\r\n  queuedPayoutMods: PayoutMod[] | undefined\r\n  queuedTicketMods: TicketMod[] | undefined\r\n  tokenSymbol: string | undefined\r\n  tokenAddress: string | undefined\r\n  balance: BigNumber | undefined\r\n  balanceInCurrency: BigNumber | undefined\r\n  overflow: BigNumber | undefined\r\n  isPreviewMode: boolean | undefined\r\n  isArchived: boolean | undefined\r\n  cv: CV | undefined\r\n  terminal:\r\n    | {\r\n        version: V1TerminalVersion | undefined\r\n        address: string | undefined\r\n        name: V1TerminalName | undefined\r\n      }\r\n    | undefined\r\n}\r\n\r\nexport const V1ProjectContext = createContext<V1ProjectContextType>({\r\n  projectId: undefined,\r\n  projectType: 'standard',\r\n  createdAt: undefined,\r\n  handle: undefined,\r\n  metadata: undefined,\r\n  owner: undefined,\r\n  earned: undefined,\r\n  currentFC: undefined,\r\n  queuedFC: undefined,\r\n  currentPayoutMods: undefined,\r\n  currentTicketMods: undefined,\r\n  queuedPayoutMods: undefined,\r\n  queuedTicketMods: undefined,\r\n  tokenAddress: undefined,\r\n  tokenSymbol: undefined,\r\n  balance: undefined,\r\n  balanceInCurrency: undefined,\r\n  overflow: undefined,\r\n  isPreviewMode: false,\r\n  isArchived: false,\r\n  cv: undefined,\r\n  terminal: undefined,\r\n})\r\n","import { BigNumberish } from '@ethersproject/bignumber'\r\nimport useHandleForProjectId from 'hooks/v1/contractReader/HandleForProjectId'\r\nimport { CSSProperties } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function V1ProjectHandle({\r\n  projectId,\r\n  style,\r\n}: {\r\n  projectId: BigNumberish\r\n  style?: CSSProperties\r\n}) {\r\n  const handle = useHandleForProjectId(projectId)\r\n\r\n  return (\r\n    <Link\r\n      to={`/p/${handle}`}\r\n      style={{ fontWeight: 500, ...style }}\r\n      className=\"text-primary hover-text-action-primary hover-text-decoration-underline\"\r\n    >\r\n      @{handle}\r\n    </Link>\r\n  )\r\n}\r\n","import { BigNumber, BigNumberish } from '@ethersproject/bignumber'\r\nimport { parseBytes32String } from '@ethersproject/strings'\r\nimport { V1ContractName } from 'models/v1/contracts'\r\nimport { useCallback } from 'react'\r\n\r\nimport useContractReader from './ContractReader'\r\n\r\n/** Returns handle of project with `projectId`. */\r\nexport default function useHandleForProjectId(\r\n  projectId: BigNumberish | undefined,\r\n) {\r\n  return useContractReader<string>({\r\n    contract: V1ContractName.Projects,\r\n    functionName: 'handleOf',\r\n    args: projectId ? [BigNumber.from(projectId).toHexString()] : null,\r\n    formatter: useCallback(val => {\r\n      if (val === undefined || val === null) {\r\n        return undefined\r\n      }\r\n      return parseBytes32String(val)\r\n    }, []),\r\n  })\r\n}\r\n","import { CSSProperties } from 'react'\r\n\r\nexport type CurrencyName = 'ETH' | 'USD'\r\nexport type CurrencySymbol = 'Ξ' | 'US$'\r\nexport type CurrencyMetadata = {\r\n  name: CurrencyName\r\n  symbol: CurrencySymbol\r\n  style?: CSSProperties\r\n}\r\n\r\nexport const CURRENCY_METADATA: Record<CurrencyName, CurrencyMetadata> = {\r\n  ETH: {\r\n    name: 'ETH',\r\n    symbol: 'Ξ',\r\n    style: {\r\n      fontFamily: 'sans-serif',\r\n    },\r\n  },\r\n  USD: {\r\n    name: 'USD',\r\n    symbol: 'US$',\r\n  },\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport * as constants from '@ethersproject/constants'\r\n\r\nimport { ProjectMetadataV4 } from 'models/project-metadata'\r\n\r\nimport {\r\n  ETHPayoutGroupedSplits,\r\n  ReservedTokensGroupedSplits,\r\n  Split,\r\n} from 'models/v2/splits'\r\nimport {\r\n  serializeV2FundingCycleData,\r\n  serializeV2FundingCycleMetadata,\r\n  SerializedV2FundingCycleData,\r\n  SerializedV2FundingCycleMetadata,\r\n  SerializedV2FundAccessConstraint,\r\n} from 'utils/v2/serializers'\r\n\r\nimport {\r\n  DEFAULT_MINT_RATE,\r\n  issuanceRateFrom,\r\n  redemptionRateFrom,\r\n} from 'utils/v2/math'\r\nimport { NFTRewardTier } from 'models/v2/nftRewardTier'\r\n\r\nimport {\r\n  ETH_PAYOUT_SPLIT_GROUP,\r\n  RESERVED_TOKEN_SPLIT_GROUP,\r\n} from 'constants/v2/splits'\r\nimport { DEFAULT_BALLOT_STRATEGY } from 'constants/v2/ballotStrategies'\r\n\r\ninterface V2ProjectState {\r\n  version: number\r\n  projectMetadata: ProjectMetadataV4\r\n  fundingCycleData: SerializedV2FundingCycleData\r\n  fundingCycleMetadata: SerializedV2FundingCycleMetadata\r\n  fundAccessConstraints: SerializedV2FundAccessConstraint[]\r\n  payoutGroupedSplits: ETHPayoutGroupedSplits\r\n  reservedTokensGroupedSplits: ReservedTokensGroupedSplits\r\n  nftRewardTiers: NFTRewardTier[]\r\n  nftRewardsCid: string | undefined // points to location of the NFT's json on IPFS\r\n}\r\n\r\n// Increment this version by 1 when making breaking changes.\r\n// When users return to the site and their local version is less than\r\n// this number, their state will be reset.\r\nexport const REDUX_STORE_V2_PROJECT_VERSION = 4\r\n\r\nconst defaultProjectMetadataState: ProjectMetadataV4 = {\r\n  name: '',\r\n  infoUri: '',\r\n  logoUri: '',\r\n  description: '',\r\n  twitter: '',\r\n  discord: '',\r\n  tokens: [],\r\n  version: 4,\r\n}\r\n\r\nexport const defaultFundingCycleData: SerializedV2FundingCycleData =\r\n  serializeV2FundingCycleData({\r\n    duration: BigNumber.from(0),\r\n    weight: BigNumber.from(issuanceRateFrom(DEFAULT_MINT_RATE.toString())), // 1e24, resulting in 1,000,000 tokens per ETH\r\n    discountRate: BigNumber.from(0), // A number from 0-1,000,000,000\r\n    ballot: DEFAULT_BALLOT_STRATEGY.address,\r\n  })\r\n\r\nexport const defaultFundingCycleMetadata: SerializedV2FundingCycleMetadata =\r\n  serializeV2FundingCycleMetadata({\r\n    global: {\r\n      allowSetTerminals: false,\r\n      allowSetController: false,\r\n    },\r\n    reservedRate: BigNumber.from(0), // A number from 0-10,000\r\n    redemptionRate: redemptionRateFrom('100'), // A number from 0-10,000\r\n    ballotRedemptionRate: redemptionRateFrom('100'), // A number from 0-10,000\r\n    pausePay: false,\r\n    pauseDistributions: false,\r\n    pauseRedeem: false,\r\n    allowMinting: false,\r\n    pauseBurn: false,\r\n    allowChangeToken: false,\r\n    allowTerminalMigration: false,\r\n    allowControllerMigration: false,\r\n    holdFees: false,\r\n    useTotalOverflowForRedemptions: false,\r\n    useDataSourceForPay: false,\r\n    useDataSourceForRedeem: false,\r\n    dataSource: constants.AddressZero,\r\n  })\r\n\r\nconst EMPTY_PAYOUT_GROUPED_SPLITS = {\r\n  group: ETH_PAYOUT_SPLIT_GROUP,\r\n  splits: [],\r\n}\r\n\r\nconst EMPTY_RESERVED_TOKENS_GROUPED_SPLITS = {\r\n  group: RESERVED_TOKEN_SPLIT_GROUP,\r\n  splits: [],\r\n}\r\n\r\nexport const defaultProjectState: V2ProjectState = {\r\n  version: REDUX_STORE_V2_PROJECT_VERSION,\r\n  projectMetadata: { ...defaultProjectMetadataState },\r\n  fundingCycleData: { ...defaultFundingCycleData },\r\n  fundingCycleMetadata: { ...defaultFundingCycleMetadata },\r\n  fundAccessConstraints: [],\r\n  payoutGroupedSplits: EMPTY_PAYOUT_GROUPED_SPLITS,\r\n  reservedTokensGroupedSplits: EMPTY_RESERVED_TOKENS_GROUPED_SPLITS,\r\n  nftRewardTiers: [],\r\n  nftRewardsCid: undefined,\r\n}\r\n\r\nconst editingV2ProjectSlice = createSlice({\r\n  name: 'editingV2Project',\r\n  initialState: defaultProjectState,\r\n  reducers: {\r\n    resetState: () => defaultProjectState,\r\n    setName: (state, action: PayloadAction<string>) => {\r\n      state.projectMetadata.name = action.payload\r\n    },\r\n    setInfoUri: (state, action: PayloadAction<string>) => {\r\n      state.projectMetadata.infoUri = action.payload\r\n    },\r\n    setLogoUri: (state, action: PayloadAction<string>) => {\r\n      state.projectMetadata.logoUri = action.payload\r\n    },\r\n    setTwitter: (state, action: PayloadAction<string>) => {\r\n      state.projectMetadata.twitter = action.payload\r\n    },\r\n    setDiscord: (state, action: PayloadAction<string>) => {\r\n      state.projectMetadata.discord = action.payload\r\n    },\r\n    setPayButton: (state, action: PayloadAction<string>) => {\r\n      state.projectMetadata.payButton = action.payload\r\n    },\r\n    setPayDisclosure: (state, action: PayloadAction<string>) => {\r\n      state.projectMetadata.payDisclosure = action.payload\r\n    },\r\n    setDescription: (state, action: PayloadAction<string>) => {\r\n      state.projectMetadata.description = action.payload\r\n    },\r\n    setFundingCycleData: (\r\n      state,\r\n      action: PayloadAction<SerializedV2FundingCycleData>,\r\n    ) => {\r\n      state.fundingCycleData = action.payload\r\n    },\r\n    setFundingCycleMetadata: (\r\n      state,\r\n      action: PayloadAction<SerializedV2FundingCycleMetadata>,\r\n    ) => {\r\n      state.fundingCycleMetadata = action.payload\r\n    },\r\n    setDuration: (state, action: PayloadAction<string>) => {\r\n      state.fundingCycleData.duration = action.payload\r\n    },\r\n    setDiscountRate: (state, action: PayloadAction<string>) => {\r\n      state.fundingCycleData.discountRate = action.payload\r\n    },\r\n    setReservedRate: (state, action: PayloadAction<string>) => {\r\n      state.fundingCycleMetadata.reservedRate = action.payload\r\n    },\r\n    setRedemptionRate: (state, action: PayloadAction<string>) => {\r\n      state.fundingCycleMetadata.redemptionRate = action.payload\r\n    },\r\n    setBallotRedemptionRate: (state, action: PayloadAction<string>) => {\r\n      state.fundingCycleMetadata.ballotRedemptionRate = action.payload\r\n    },\r\n    setWeight: (state, action: PayloadAction<string>) => {\r\n      state.fundingCycleData.weight = action.payload\r\n    },\r\n    setFundAccessConstraints: (\r\n      state,\r\n      action: PayloadAction<SerializedV2FundAccessConstraint[]>,\r\n    ) => {\r\n      state.fundAccessConstraints = action.payload\r\n    },\r\n    setDistributionLimit: (state, action: PayloadAction<string>) => {\r\n      if (state.fundAccessConstraints.length) {\r\n        state.fundAccessConstraints[0].distributionLimit = action.payload\r\n      }\r\n    },\r\n    setDistributionLimitCurrency: (state, action: PayloadAction<string>) => {\r\n      if (state.fundAccessConstraints.length) {\r\n        state.fundAccessConstraints[0].distributionLimitCurrency =\r\n          action.payload\r\n      }\r\n    },\r\n    setPayoutSplits: (state, action: PayloadAction<Split[]>) => {\r\n      state.payoutGroupedSplits = {\r\n        ...EMPTY_PAYOUT_GROUPED_SPLITS,\r\n        splits: action.payload,\r\n      }\r\n    },\r\n    setReservedTokensSplits: (state, action: PayloadAction<Split[]>) => {\r\n      state.reservedTokensGroupedSplits = {\r\n        ...EMPTY_RESERVED_TOKENS_GROUPED_SPLITS,\r\n        splits: action.payload,\r\n      }\r\n    },\r\n    setPausePay: (state, action: PayloadAction<boolean>) => {\r\n      state.fundingCycleMetadata.pausePay = action.payload\r\n    },\r\n    setAllowMinting: (state, action: PayloadAction<boolean>) => {\r\n      state.fundingCycleMetadata.allowMinting = action.payload\r\n    },\r\n    setBallot: (state, action: PayloadAction<string>) => {\r\n      state.fundingCycleData.ballot = action.payload\r\n    },\r\n    setNftRewardTiers: (state, action: PayloadAction<NFTRewardTier[]>) => {\r\n      state.nftRewardTiers = action.payload\r\n    },\r\n    setNftRewardsCid: (state, action: PayloadAction<string>) => {\r\n      state.nftRewardsCid = action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const editingV2ProjectActions = editingV2ProjectSlice.actions\r\n\r\nexport default editingV2ProjectSlice.reducer\r\n","import { SemanticTheme } from 'models/semantic-theme/theme'\r\nimport { CSSProperties } from 'react'\r\n\r\nexport const textSecondary = (theme: SemanticTheme): CSSProperties => ({\r\n  textTransform: 'uppercase',\r\n  color: theme.colors.text.tertiary,\r\n  fontSize: '0.8rem',\r\n  fontWeight: 500,\r\n})\r\n\r\nexport const textPrimary: CSSProperties = {\r\n  fontWeight: 500,\r\n  fontSize: '1.1rem',\r\n  lineHeight: 1,\r\n}\r\n","import { ThemeContext } from 'contexts/themeContext'\r\nimport { useContext, useState } from 'react'\r\n\r\nexport default function ProjectLogo({\r\n  uri,\r\n  name,\r\n  size,\r\n}: {\r\n  uri: string | undefined\r\n  name: string | undefined\r\n  size?: number\r\n}) {\r\n  const [srcLoadError, setSrcLoadError] = useState(false)\r\n  const validImg = uri && !srcLoadError\r\n  const {\r\n    theme: { colors, radii },\r\n  } = useContext(ThemeContext)\r\n  const _size = size ?? 80\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        overflow: 'hidden',\r\n        height: _size,\r\n        width: _size,\r\n        borderRadius: radii.xl,\r\n        background: validImg ? undefined : colors.background.l1,\r\n      }}\r\n    >\r\n      {validImg ? (\r\n        <img\r\n          style={{\r\n            maxHeight: '100%',\r\n            minWidth: '100%',\r\n            objectFit: 'cover',\r\n            objectPosition: 'center',\r\n          }}\r\n          src={uri}\r\n          alt={name + ' logo'}\r\n          onError={() => setSrcLoadError(true)}\r\n        />\r\n      ) : (\r\n        <div\r\n          style={{\r\n            fontSize: '2.5rem',\r\n          }}\r\n        >\r\n          🧃\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import axios from 'axios'\r\nimport { consolidateMetadata } from 'models/project-metadata'\r\nimport { ipfsCidUrl } from 'utils/ipfs'\r\nimport { useQuery } from 'react-query'\r\n\r\nexport function useProjectMetadata(uri: string | undefined) {\r\n  return useQuery(\r\n    ['project-metadata', uri],\r\n    async () => {\r\n      if (!uri) {\r\n        throw new Error('Project URI not specified.')\r\n      }\r\n      const url = ipfsCidUrl(uri)\r\n      const response = await axios.get(url)\r\n      return consolidateMetadata(response.data)\r\n    },\r\n    {\r\n      enabled: !!uri,\r\n      staleTime: 60000,\r\n    },\r\n  )\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport * as constants from '@ethersproject/constants'\r\n\r\nimport {\r\n  formatWad,\r\n  fromWad,\r\n  parseWad,\r\n  percentToPerbicent,\r\n  stripCommas,\r\n} from 'utils/formatNumber'\r\nimport { amountAddFee, amountSubFee } from 'utils/math'\r\n\r\n// Returns formatted 'funding target after fee'\r\n// given 'funding target'\r\nexport const targetToTargetSubFeeFormatted = (\r\n  target: string,\r\n  fee: BigNumber | undefined,\r\n) => {\r\n  const newTargetSubFee = amountSubFee(parseWad(target ?? ''), fee)\r\n  return fromWad(newTargetSubFee)\r\n}\r\n\r\n// Returns formatted 'funding target' given\r\n// 'funding target after fee'\r\nexport const targetSubFeeToTargetFormatted = (\r\n  targetSubFee: string,\r\n  fee: BigNumber | undefined,\r\n): string => {\r\n  if (targetSubFee === fromWad(constants.MaxUint256)) {\r\n    return fromWad(constants.MaxUint256)\r\n  }\r\n  const newTarget = amountAddFee(targetSubFee ?? '0', fee)\r\n  return newTarget ?? '0'\r\n}\r\n\r\n// Returns amount from a given percentage of the\r\n// 'funding target after fee'\r\nexport function getAmountFromPercent(\r\n  percent: number,\r\n  target: string,\r\n  feePercentage: string | undefined,\r\n) {\r\n  const amount = fromWad(\r\n    amountSubFee(\r\n      parseWad(stripCommas(target)),\r\n      percentToPerbicent(feePercentage),\r\n    )\r\n      ?.mul(Math.floor((percent ?? 0) * 100))\r\n      .div(10000),\r\n  )\r\n  return parseFloat(amount)\r\n}\r\n\r\n// Return percent of 'funding target after fee' from\r\n// a given amount\r\nexport function getPercentFromAmount(\r\n  amount: number | undefined,\r\n  target: string,\r\n  feePercentage: string | undefined,\r\n) {\r\n  const targetSubFeeBN = amountSubFee(\r\n    parseWad(stripCommas(target)),\r\n    percentToPerbicent(feePercentage),\r\n  )\r\n  const targetSubFee = stripCommas(formatWad(targetSubFeeBN) ?? '0')\r\n  const percent = (((amount ?? 0) * 1.0) / parseFloat(targetSubFee)) * 100\r\n  return parseFloat(percent.toFixed(8))\r\n}\r\n","import { BigNumber, BigNumberish } from '@ethersproject/bignumber'\r\n\r\nexport const v2ProjectRoute = ({\r\n  projectId,\r\n  handle,\r\n}: {\r\n  projectId?: BigNumberish\r\n  handle?: string | null\r\n}) => {\r\n  if (handle) return `/@${handle}`\r\n  return `/v2/p/${BigNumber.from(projectId).toNumber()}`\r\n}\r\n","import { CSSProperties } from 'react'\r\n\r\nimport { padding } from './padding'\r\n\r\nexport const layouts: Record<string, CSSProperties> = {\r\n  centered: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  maxWidth: {\r\n    maxWidth: 1080,\r\n    margin: '0 auto',\r\n    padding: padding.app,\r\n  },\r\n}\r\n","import { t } from '@lingui/macro'\r\nimport { Button, Form, Input, Modal } from 'antd'\r\nimport { useForm } from 'antd/lib/form/Form'\r\nimport CurrencySymbol from 'components/CurrencySymbol'\r\nimport { getTotalPercentage } from 'components/formItems/formHelpers'\r\nimport Mod from 'components/v1/shared/Mod'\r\n\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport * as constants from '@ethersproject/constants'\r\nimport {\r\n  OperatorPermission,\r\n  useHasPermission,\r\n} from 'hooks/v1/contractReader/HasPermission'\r\nimport { useSetPayoutModsTx } from 'hooks/v1/transactor/SetPayoutModsTx'\r\nimport { V1CurrencyOption } from 'models/v1/currencyOption'\r\nimport { V1FundingCycle } from 'models/v1/fundingCycle'\r\nimport { PayoutMod } from 'models/mods'\r\nimport { useContext, useLayoutEffect, useMemo, useState } from 'react'\r\nimport {\r\n  formatWad,\r\n  permyriadToPercent,\r\n  fromWad,\r\n  perbicentToPercent,\r\n} from 'utils/formatNumber'\r\nimport { amountSubFee } from 'utils/math'\r\n\r\nimport { V1CurrencyName } from 'utils/v1/currency'\r\n\r\nimport { V1_CURRENCY_ETH } from 'constants/v1/currency'\r\nimport ProjectPayoutMods from './ProjectPayMods/ProjectPayoutMods'\r\n\r\nexport default function PayoutModsList({\r\n  mods,\r\n  fundingCycle,\r\n  projectId,\r\n  total,\r\n  feePerbicent,\r\n}: {\r\n  mods: PayoutMod[] | undefined\r\n  fundingCycle:\r\n    | Pick<V1FundingCycle, 'target' | 'currency' | 'configured' | 'fee'>\r\n    | undefined\r\n  projectId: number | undefined\r\n  feePerbicent: BigNumber | undefined\r\n  total?: BigNumber\r\n}) {\r\n  const [form] = useForm<{\r\n    totalPercent: number\r\n  }>()\r\n  const [modalVisible, setModalVisible] = useState<boolean>(false)\r\n  const [loading, setLoading] = useState<boolean>(false)\r\n  const [editingMods, setEditingMods] = useState<PayoutMod[]>()\r\n  const { owner } = useContext(V1ProjectContext)\r\n  const setPayoutModsTx = useSetPayoutModsTx()\r\n\r\n  const fundingCycleCurrency = V1CurrencyName(\r\n    fundingCycle?.currency.toNumber() as V1CurrencyOption,\r\n  )\r\n\r\n  const { editableMods, lockedMods } = useMemo(() => {\r\n    const now = new Date().valueOf() / 1000\r\n\r\n    return {\r\n      editableMods:\r\n        mods?.filter(m => !m.lockedUntil || m.lockedUntil < now) ?? [],\r\n      lockedMods: mods?.filter(m => m.lockedUntil && m.lockedUntil > now) ?? [],\r\n    }\r\n  }, [mods])\r\n\r\n  useLayoutEffect(() => setEditingMods(editableMods), [editableMods])\r\n\r\n  async function setMods() {\r\n    await form.validateFields()\r\n\r\n    if (!fundingCycle || !editingMods) return\r\n\r\n    setLoading(true)\r\n\r\n    setPayoutModsTx(\r\n      {\r\n        configured: fundingCycle.configured,\r\n        payoutMods: [...lockedMods, ...editingMods],\r\n      },\r\n      {\r\n        onDone: () => setLoading(false),\r\n        onConfirmed: () => {\r\n          setModalVisible(false)\r\n          setEditingMods(editableMods)\r\n        },\r\n      },\r\n    )\r\n  }\r\n\r\n  const modsTotal = mods?.reduce((acc, curr) => acc + curr.percent, 0)\r\n  const ownerPercent = 10000 - (modsTotal ?? 0)\r\n\r\n  const baseTotal = total ?? amountSubFee(fundingCycle?.target, feePerbicent)\r\n\r\n  const hasEditPermission = useHasPermission(OperatorPermission.SetPayoutMods)\r\n\r\n  const totalPercentage = getTotalPercentage(editingMods)\r\n\r\n  if (!fundingCycle) return null\r\n\r\n  const { target } = fundingCycle\r\n  const targetIsInfinite = !target || target.eq(constants.MaxUint256)\r\n\r\n  return (\r\n    <div>\r\n      {mods?.length\r\n        ? [...mods]\r\n            .sort((a, b) => (a.percent < b.percent ? 1 : -1))\r\n            .map((mod, i) => (\r\n              <div\r\n                key={`${mod.beneficiary ?? mod.percent}-${i}`}\r\n                style={{ marginBottom: 5 }}\r\n              >\r\n                <Mod\r\n                  mod={mod}\r\n                  value={\r\n                    <span style={{ fontWeight: 400 }}>\r\n                      {permyriadToPercent(mod.percent)}%\r\n                      {!fundingCycle.target.eq(constants.MaxUint256) && (\r\n                        <>\r\n                          {' '}\r\n                          (\r\n                          <CurrencySymbol currency={fundingCycleCurrency} />\r\n                          {formatWad(baseTotal?.mul(mod.percent).div(10000), {\r\n                            precision: fundingCycle.currency.eq(V1_CURRENCY_ETH)\r\n                              ? 4\r\n                              : 0,\r\n                            padEnd: true,\r\n                          })}\r\n                          )\r\n                        </>\r\n                      )}\r\n                    </span>\r\n                  }\r\n                />\r\n              </div>\r\n            ))\r\n        : null}\r\n\r\n      {ownerPercent > 0 && (\r\n        <Mod\r\n          mod={{ beneficiary: owner, percent: ownerPercent }}\r\n          value={\r\n            <div style={{ fontWeight: 400 }}>\r\n              {permyriadToPercent(ownerPercent)}%\r\n              {!targetIsInfinite && (\r\n                <>\r\n                  {' '}\r\n                  (\r\n                  <CurrencySymbol currency={fundingCycleCurrency} />\r\n                  {formatWad(baseTotal?.mul(ownerPercent).div(10000), {\r\n                    precision: fundingCycle.currency.eq(V1_CURRENCY_ETH)\r\n                      ? 4\r\n                      : 0,\r\n                    padEnd: true,\r\n                  })}\r\n                  )\r\n                </>\r\n              )}\r\n            </div>\r\n          }\r\n        />\r\n      )}\r\n\r\n      {fundingCycle && projectId && hasEditPermission ? (\r\n        <div style={{ marginTop: 10 }}>\r\n          <Button size=\"small\" onClick={() => setModalVisible(true)}>\r\n            Edit payouts\r\n          </Button>\r\n        </div>\r\n      ) : null}\r\n\r\n      {fundingCycle ? (\r\n        <Form\r\n          form={form}\r\n          layout=\"vertical\"\r\n          onKeyDown={e => {\r\n            if (e.key === 'Enter') setMods()\r\n          }}\r\n        >\r\n          <Modal\r\n            visible={modalVisible}\r\n            title=\"Edit payouts\"\r\n            okText=\"Save payouts\"\r\n            onOk={() => setMods()}\r\n            onCancel={() => {\r\n              setModalVisible(false)\r\n            }}\r\n            confirmLoading={loading}\r\n            width={720}\r\n          >\r\n            <div>\r\n              <p>\r\n                Distribute available funds to other Ethereum wallets or Juicebox\r\n                projects as payouts. Use this to pay contributors, charities,\r\n                Juicebox projects you depend on, or anyone else. Funds are\r\n                distributed whenever a withdrawal is made from your project.\r\n              </p>\r\n              <p>\r\n                By default, all unallocated funds can be distributed to the\r\n                project owner's wallet.\r\n              </p>\r\n            </div>\r\n\r\n            <Form.Item\r\n              name=\"payouts\"\r\n              rules={[\r\n                {\r\n                  validator: () => {\r\n                    if (totalPercentage > 100)\r\n                      return Promise.reject(\r\n                        t`Sum of percentages cannot exceed 100%`,\r\n                      )\r\n\r\n                    return Promise.resolve()\r\n                  },\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                hidden\r\n                type=\"string\"\r\n                autoComplete=\"off\"\r\n                value={totalPercentage}\r\n              />\r\n            </Form.Item>\r\n\r\n            <ProjectPayoutMods\r\n              mods={editingMods}\r\n              lockedMods={lockedMods}\r\n              onModsChanged={setEditingMods}\r\n              target={fromWad(fundingCycle.target)}\r\n              currencyName={fundingCycleCurrency}\r\n              feePercentage={perbicentToPercent(feePerbicent)}\r\n              targetIsInfinite={targetIsInfinite}\r\n            />\r\n          </Modal>\r\n        </Form>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n","import { NetworkContext } from 'contexts/networkContext'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { V1UserContext } from 'contexts/v1/userContext'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport * as constants from '@ethersproject/constants'\r\nimport { PayoutMod } from 'models/mods'\r\nimport { useContext } from 'react'\r\n\r\nimport { TransactorInstance } from '../../Transactor'\r\n\r\nexport function useSetPayoutModsTx(): TransactorInstance<{\r\n  configured: BigNumber\r\n  payoutMods: PayoutMod[]\r\n}> {\r\n  const { transactor, contracts } = useContext(V1UserContext)\r\n  const { userAddress } = useContext(NetworkContext)\r\n  const { projectId, terminal } = useContext(V1ProjectContext)\r\n\r\n  return ({ configured, payoutMods }, txOpts) => {\r\n    if (\r\n      !transactor ||\r\n      !userAddress ||\r\n      !projectId ||\r\n      !contracts?.Projects ||\r\n      !terminal?.version\r\n    ) {\r\n      txOpts?.onDone?.()\r\n      return Promise.resolve(false)\r\n    }\r\n\r\n    return transactor(\r\n      contracts.ModStore,\r\n      'setPayoutMods',\r\n      [\r\n        BigNumber.from(projectId).toHexString(),\r\n        configured.toHexString(),\r\n        payoutMods.map(m => ({\r\n          preferUnstaked: false,\r\n          percent: BigNumber.from(m.percent).toHexString(),\r\n          lockedUntil: BigNumber.from(m.lockedUntil ?? 0).toHexString(),\r\n          beneficiary: m.beneficiary || constants.AddressZero,\r\n          projectId: m.projectId || BigNumber.from(0).toHexString(),\r\n          allocator: constants.AddressZero,\r\n        })),\r\n      ],\r\n      txOpts,\r\n    )\r\n  }\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\n\r\nimport { parseProjectJson, Project, ProjectJson } from '../vX/project'\r\nimport {\r\n  BaseEventEntity,\r\n  BaseEventEntityJson,\r\n  parseBaseEventEntityJson,\r\n} from '../base/base-event-entity'\r\n\r\nexport interface PrintReservesEvent extends BaseEventEntity {\r\n  project: Partial<Project>\r\n  fundingCycleId: BigNumber\r\n  beneficiary: string\r\n  count: BigNumber\r\n  beneficiaryTicketAmount: BigNumber\r\n}\r\n\r\nexport type PrintReservesEventJson = Partial<\r\n  Record<Exclude<keyof PrintReservesEvent, 'project'>, string> & {\r\n    project: ProjectJson\r\n  } & BaseEventEntityJson\r\n>\r\n\r\nexport const parsePrintReservesEventJson = (\r\n  j: PrintReservesEventJson,\r\n): Partial<PrintReservesEvent> => ({\r\n  ...parseBaseEventEntityJson(j),\r\n  project: j.project ? parseProjectJson(j.project) : undefined,\r\n  fundingCycleId: j.fundingCycleId\r\n    ? BigNumber.from(j.fundingCycleId)\r\n    : undefined,\r\n  beneficiary: j.beneficiary,\r\n  beneficiaryTicketAmount: j.beneficiaryTicketAmount\r\n    ? BigNumber.from(j.beneficiaryTicketAmount)\r\n    : undefined,\r\n  count: j.count ? BigNumber.from(j.count) : undefined,\r\n})\r\n","import { createCustomStrategy } from 'utils/ballot'\r\n\r\nimport { ballotStrategies } from '.'\r\n\r\n// Put in separate files because lingui.js t macro was not working on ballot strategies\r\nexport const getBallotStrategyByAddress = (address: string) => {\r\n  const s =\r\n    ballotStrategies().find(\r\n      s => s.address.toLowerCase() === address.toLowerCase(),\r\n    ) ?? createCustomStrategy(address)\r\n  return s\r\n}\r\n","import { Tooltip } from 'antd'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { PropsWithChildren, useContext } from 'react'\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons'\r\n\r\nexport default function FundingCycleDetailWarning({\r\n  tooltipTitle,\r\n  showWarning,\r\n  children,\r\n}: PropsWithChildren<{\r\n  tooltipTitle?: string\r\n  showWarning?: boolean\r\n}>) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  if (!showWarning) return <span>{children}</span>\r\n\r\n  return (\r\n    <Tooltip title={tooltipTitle}>\r\n      <span style={{ fontWeight: 500 }}>{children} </span>\r\n      <span style={{ color: colors.text.warn }}>\r\n        <ExclamationCircleOutlined />\r\n      </span>\r\n    </Tooltip>\r\n  )\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport {\r\n  V2FundingCycleData,\r\n  V2FundingCycleMetadata,\r\n  V2FundAccessConstraint,\r\n} from 'models/v2/fundingCycle'\r\nimport { fromWad, parseWad } from 'utils/formatNumber'\r\n\r\nexport type SerializedV2FundingCycleMetadata = Record<\r\n  keyof Omit<\r\n    V2FundingCycleMetadata,\r\n    | 'reservedRate'\r\n    | 'redemptionRate'\r\n    | 'ballotRedemptionRate'\r\n    | 'dataSource'\r\n    | 'version'\r\n    | 'global'\r\n  >,\r\n  boolean\r\n> &\r\n  Record<\r\n    keyof Pick<\r\n      V2FundingCycleMetadata,\r\n      'reservedRate' | 'redemptionRate' | 'ballotRedemptionRate' | 'dataSource'\r\n    >,\r\n    string\r\n  > &\r\n  Pick<V2FundingCycleMetadata, 'global'>\r\n\r\nexport type SerializedV2FundingCycleData = Record<\r\n  keyof V2FundingCycleData,\r\n  string\r\n>\r\n\r\nexport type SerializedV2FundAccessConstraint = Record<\r\n  keyof V2FundAccessConstraint,\r\n  string\r\n>\r\n\r\nexport const serializeV2FundingCycleMetadata = (\r\n  fundingCycleMetadata: V2FundingCycleMetadata,\r\n): SerializedV2FundingCycleMetadata => ({\r\n  global: {\r\n    allowSetTerminals: fundingCycleMetadata.global.allowSetTerminals,\r\n    allowSetController: fundingCycleMetadata.global.allowSetController,\r\n  },\r\n  reservedRate: fundingCycleMetadata.reservedRate.toString(),\r\n  redemptionRate: fundingCycleMetadata.redemptionRate.toString(),\r\n  ballotRedemptionRate: fundingCycleMetadata.ballotRedemptionRate.toString(),\r\n  pausePay: fundingCycleMetadata.pausePay,\r\n  pauseDistributions: fundingCycleMetadata.pauseDistributions,\r\n  pauseRedeem: fundingCycleMetadata.pauseRedeem,\r\n  allowMinting: fundingCycleMetadata.allowMinting,\r\n  pauseBurn: fundingCycleMetadata.pauseBurn,\r\n  allowChangeToken: fundingCycleMetadata.allowChangeToken,\r\n  allowTerminalMigration: fundingCycleMetadata.allowTerminalMigration,\r\n  allowControllerMigration: fundingCycleMetadata.allowControllerMigration,\r\n  holdFees: fundingCycleMetadata.holdFees,\r\n  useTotalOverflowForRedemptions:\r\n    fundingCycleMetadata.useTotalOverflowForRedemptions,\r\n  useDataSourceForPay: fundingCycleMetadata.useDataSourceForPay,\r\n  useDataSourceForRedeem: fundingCycleMetadata.useDataSourceForRedeem,\r\n  dataSource: fundingCycleMetadata.dataSource, // hex, contract address\r\n})\r\n\r\nexport const deserializeV2FundingCycleMetadata = (\r\n  serializedFundingCycleMetadata: SerializedV2FundingCycleMetadata,\r\n): Omit<V2FundingCycleMetadata, 'version'> => ({\r\n  global: {\r\n    allowSetTerminals: serializedFundingCycleMetadata.global.allowSetTerminals,\r\n    allowSetController:\r\n      serializedFundingCycleMetadata.global.allowSetController,\r\n  },\r\n  reservedRate: BigNumber.from(serializedFundingCycleMetadata.reservedRate),\r\n  redemptionRate: BigNumber.from(serializedFundingCycleMetadata.redemptionRate),\r\n  ballotRedemptionRate: BigNumber.from(\r\n    serializedFundingCycleMetadata.ballotRedemptionRate,\r\n  ),\r\n  pausePay: serializedFundingCycleMetadata.pausePay,\r\n  pauseDistributions: serializedFundingCycleMetadata.pauseDistributions,\r\n  pauseRedeem: serializedFundingCycleMetadata.pauseRedeem,\r\n  allowMinting: serializedFundingCycleMetadata.allowMinting,\r\n  pauseBurn: serializedFundingCycleMetadata.pauseBurn,\r\n  allowChangeToken: serializedFundingCycleMetadata.allowChangeToken,\r\n  allowTerminalMigration: serializedFundingCycleMetadata.allowTerminalMigration,\r\n  allowControllerMigration:\r\n    serializedFundingCycleMetadata.allowControllerMigration,\r\n  holdFees: serializedFundingCycleMetadata.holdFees,\r\n  useTotalOverflowForRedemptions:\r\n    serializedFundingCycleMetadata.useTotalOverflowForRedemptions,\r\n  useDataSourceForPay: serializedFundingCycleMetadata.useDataSourceForPay,\r\n  useDataSourceForRedeem: serializedFundingCycleMetadata.useDataSourceForRedeem,\r\n  dataSource: serializedFundingCycleMetadata.dataSource, // hex, contract address\r\n})\r\n\r\nexport const serializeV2FundingCycleData = (\r\n  fundingCycleData: V2FundingCycleData,\r\n): SerializedV2FundingCycleData => ({\r\n  duration: fundingCycleData.duration.toString(),\r\n  weight: fundingCycleData.weight.toString(),\r\n  discountRate: fundingCycleData.discountRate.toString(),\r\n  ballot: fundingCycleData.ballot, // hex, contract address\r\n})\r\n\r\nexport const deserializeV2FundingCycleData = (\r\n  serializedFundingCycleData: SerializedV2FundingCycleData,\r\n): V2FundingCycleData => ({\r\n  duration: BigNumber.from(serializedFundingCycleData.duration || '0'),\r\n  weight: BigNumber.from(serializedFundingCycleData.weight),\r\n  discountRate: BigNumber.from(serializedFundingCycleData.discountRate),\r\n  ballot: serializedFundingCycleData.ballot, // hex, contract address\r\n})\r\n\r\nexport const serializeFundAccessConstraint = (\r\n  fundAccessConstraint: V2FundAccessConstraint,\r\n): SerializedV2FundAccessConstraint => {\r\n  return {\r\n    terminal: fundAccessConstraint.terminal,\r\n    token: fundAccessConstraint.token,\r\n    distributionLimit: fromWad(fundAccessConstraint.distributionLimit),\r\n    distributionLimitCurrency:\r\n      fundAccessConstraint.distributionLimitCurrency.toString(),\r\n    overflowAllowance: fromWad(fundAccessConstraint.overflowAllowance),\r\n    overflowAllowanceCurrency:\r\n      fundAccessConstraint.overflowAllowanceCurrency.toString(),\r\n  }\r\n}\r\n\r\nexport const deserializeFundAccessConstraint = (\r\n  fundAccessConstraint: SerializedV2FundAccessConstraint,\r\n): V2FundAccessConstraint => {\r\n  return {\r\n    terminal: fundAccessConstraint.terminal,\r\n    token: fundAccessConstraint.token,\r\n    distributionLimit: parseWad(fundAccessConstraint.distributionLimit),\r\n    distributionLimitCurrency: BigNumber.from(\r\n      fundAccessConstraint.distributionLimitCurrency,\r\n    ),\r\n    overflowAllowance: parseWad(fundAccessConstraint.overflowAllowance),\r\n    overflowAllowanceCurrency: BigNumber.from(\r\n      fundAccessConstraint.overflowAllowanceCurrency.toString(),\r\n    ),\r\n  }\r\n}\r\n","import { t } from '@lingui/macro'\r\nimport { BallotStrategy } from 'models/ballot'\r\n\r\nexport const createCustomStrategy = (address: string): BallotStrategy => ({\r\n  address,\r\n  name: t`Custom strategy`,\r\n  description: t`This address is an unrecognized strategy contract. Make sure it is correct!`,\r\n  unknown: true,\r\n})\r\n","import { Transactor } from 'hooks/Transactor'\r\nimport { V2Contracts } from 'models/v2/contracts'\r\nimport { createContext } from 'react'\r\n\r\nexport const V2UserContext: React.Context<{\r\n  contracts?: V2Contracts\r\n  transactor?: Transactor\r\n}> = createContext({})\r\n","import { QuestionCircleOutlined } from '@ant-design/icons'\r\nimport { Tooltip, TooltipProps } from 'antd'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { CSSProperties, useContext } from 'react'\r\n\r\nexport default function TooltipIcon({\r\n  tip,\r\n  placement,\r\n  iconStyle,\r\n}: {\r\n  tip?: string | JSX.Element\r\n  placement?: TooltipProps['placement']\r\n  iconStyle?: CSSProperties\r\n}) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n  return (\r\n    <Tooltip title={tip} placement={placement} trigger={['hover', 'click']}>\r\n      <QuestionCircleOutlined\r\n        style={{ color: colors.text.primary, ...iconStyle }}\r\n      />\r\n    </Tooltip>\r\n  )\r\n}\r\n","import TooltipLabel from 'components/TooltipLabel'\r\n\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { CSSProperties, useContext } from 'react'\r\n\r\nimport { ThemeOption } from 'constants/theme/theme-option'\r\n\r\nexport default function SectionHeader({\r\n  text,\r\n  tip,\r\n  style,\r\n}: {\r\n  text: string | JSX.Element | undefined\r\n  tip?: string | JSX.Element\r\n  style?: CSSProperties\r\n}) {\r\n  const {\r\n    forThemeOption,\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  if (text === undefined) return null\r\n\r\n  const _style: CSSProperties = {\r\n    color: colors.text.header,\r\n    fontWeight:\r\n      forThemeOption &&\r\n      forThemeOption({\r\n        [ThemeOption.light]: 600,\r\n        [ThemeOption.dark]: 400,\r\n      }),\r\n    ...style,\r\n  }\r\n\r\n  if (tip !== undefined) {\r\n    return <TooltipLabel label={text} tip={tip} style={_style} />\r\n  } else {\r\n    return <h4 style={_style}>{text}</h4>\r\n  }\r\n}\r\n","const allowedChars = 'abcdefghijklmnopqrstuvwxyz1234567890_'\r\n\r\nexport const normalizeHandle = (handle: string) =>\r\n  handle\r\n    .toLowerCase()\r\n    .split('')\r\n    .filter(char => allowedChars.includes(char))\r\n    .join('')\r\n","import { useErc20Contract } from 'hooks/Erc20Contract'\r\nimport { useEffect, useState } from 'react'\r\n\r\n/** Returns symbol for ERC20 token with `address`. */\r\nexport default function useSymbolOfERC20(address: string | undefined) {\r\n  const [data, setData] = useState<string>()\r\n\r\n  const contract = useErc20Contract(address)\r\n\r\n  useEffect(() => {\r\n    async function fetchSymbol() {\r\n      if (!contract || !address) return\r\n\r\n      const symbol = await contract.symbol()\r\n      setData(symbol)\r\n    }\r\n\r\n    fetchSymbol()\r\n  }, [address, contract])\r\n\r\n  return data\r\n}\r\n","import { Collapse, CollapseProps } from 'antd'\r\nimport CollapsePanel from 'antd/lib/collapse/CollapsePanel'\r\nimport { CSSProperties, PropsWithChildren } from 'react'\r\n\r\nexport function MinimalCollapse({\r\n  children,\r\n  header,\r\n  style,\r\n  ...props\r\n}: PropsWithChildren<{ header: string | JSX.Element; style?: CSSProperties }> &\r\n  CollapseProps) {\r\n  return (\r\n    <Collapse\r\n      bordered={false}\r\n      ghost\r\n      style={{\r\n        background: 'transparent',\r\n        ...style,\r\n      }}\r\n      className=\"minimal ant-collapse-header-text-primary ant-collapse-header-p-0\"\r\n      {...props}\r\n    >\r\n      <CollapsePanel key=\"1\" header={header}>\r\n        {children}\r\n      </CollapsePanel>\r\n    </Collapse>\r\n  )\r\n}\r\n","import { Skeleton } from 'antd'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { CSSProperties, useContext } from 'react'\r\n\r\nimport { textSecondary } from 'constants/styles/text'\r\n\r\nimport TooltipLabel from '../TooltipLabel'\r\n\r\nexport default function StatLine({\r\n  statLabel,\r\n  statLabelTip,\r\n  statValue,\r\n  style = {},\r\n  loading = false,\r\n}: {\r\n  statLabel: JSX.Element\r\n  statLabelTip: JSX.Element\r\n  statValue: JSX.Element\r\n  style?: CSSProperties\r\n  loading?: boolean\r\n}) {\r\n  const { theme } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'baseline',\r\n        flexWrap: 'nowrap',\r\n        ...style,\r\n      }}\r\n    >\r\n      <div style={textSecondary(theme)}>\r\n        <TooltipLabel label={statLabel} tip={statLabelTip} />\r\n      </div>\r\n\r\n      {loading ? (\r\n        <div style={{ width: 60, height: 16 }}>\r\n          <Skeleton\r\n            paragraph={{ rows: 1, width: '100%' }}\r\n            title={false}\r\n            active\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            marginLeft: 10,\r\n          }}\r\n        >\r\n          {statValue}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import { isAddress } from '@ethersproject/address'\r\nimport { Contract } from '@ethersproject/contracts'\r\n\r\nimport { NetworkContext } from 'contexts/networkContext'\r\nimport erc20Abi from 'erc-20-abi'\r\nimport * as constants from '@ethersproject/constants'\r\nimport { useContext, useEffect, useState } from 'react'\r\n\r\nimport { readProvider } from 'constants/readProvider'\r\n\r\nexport function useErc20Contract(address: string | undefined) {\r\n  const [contract, setContract] = useState<Contract>()\r\n  const { signingProvider } = useContext(NetworkContext)\r\n\r\n  useEffect(() => {\r\n    const provider = signingProvider ?? readProvider\r\n\r\n    provider.listAccounts().then(accounts => {\r\n      if (\r\n        !address ||\r\n        !isAddress(address) ||\r\n        address === constants.AddressZero\r\n      ) {\r\n        setContract(undefined)\r\n      } else if (!accounts.length) {\r\n        setContract(new Contract(address, erc20Abi, readProvider))\r\n      } else {\r\n        setContract(new Contract(address, erc20Abi, provider.getSigner()))\r\n      }\r\n    })\r\n  }, [address, signingProvider])\r\n\r\n  return contract\r\n}\r\n","import { ThemeContext } from 'contexts/themeContext'\r\nimport { CSSProperties, PropsWithChildren, useContext } from 'react'\r\n\r\nexport default function FormItemLabel({\r\n  children,\r\n  style,\r\n}: PropsWithChildren<{ style?: CSSProperties }>) {\r\n  const { colors } = useContext(ThemeContext).theme\r\n\r\n  return (\r\n    <h3 style={{ ...style, color: colors.text.primary, marginRight: '1rem' }}>\r\n      {children}\r\n    </h3>\r\n  )\r\n}\r\n","import { t, Trans } from '@lingui/macro'\r\nimport { Button, Modal } from 'antd'\r\nimport ProjectTicketMods from 'components/v1/shared/ProjectTicketMods'\r\nimport Mod from 'components/v1/shared/Mod'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport {\r\n  OperatorPermission,\r\n  useHasPermission,\r\n} from 'hooks/v1/contractReader/HasPermission'\r\nimport { useSetTicketModsTx } from 'hooks/v1/transactor/SetTicketModsTx'\r\nimport { V1FundingCycle } from 'models/v1/fundingCycle'\r\nimport { TicketMod } from 'models/mods'\r\nimport { useContext, useLayoutEffect, useMemo, useState } from 'react'\r\nimport { formatWad, permyriadToPercent } from 'utils/formatNumber'\r\nimport { tokenSymbolText } from 'utils/tokenSymbolText'\r\n\r\nexport default function TicketModsList({\r\n  total,\r\n  mods,\r\n  fundingCycle,\r\n  projectId,\r\n  reservedRate,\r\n}: {\r\n  total?: BigNumber\r\n  mods: TicketMod[] | undefined\r\n  fundingCycle: V1FundingCycle | undefined\r\n  projectId: number | undefined\r\n  reservedRate: number\r\n}) {\r\n  const [modalVisible, setModalVisible] = useState<boolean>(false)\r\n  const [loading, setLoading] = useState<boolean>(false)\r\n  const [editingMods, setEditingMods] = useState<TicketMod[]>()\r\n  const { owner, tokenSymbol } = useContext(V1ProjectContext)\r\n  const setTicketModsTx = useSetTicketModsTx()\r\n\r\n  const { editableMods, lockedMods } = useMemo(() => {\r\n    const now = new Date().valueOf() / 1000\r\n\r\n    return {\r\n      editableMods:\r\n        mods?.filter(m => !m.lockedUntil || m.lockedUntil < now) ?? [],\r\n      lockedMods: mods?.filter(m => m.lockedUntil && m.lockedUntil > now) ?? [],\r\n    }\r\n  }, [mods])\r\n\r\n  useLayoutEffect(() => setEditingMods(editableMods), [editableMods])\r\n\r\n  function setMods() {\r\n    if (!fundingCycle || !editingMods) return\r\n\r\n    setLoading(true)\r\n\r\n    setTicketModsTx(\r\n      {\r\n        configured: fundingCycle.configured,\r\n        ticketMods: [...lockedMods, ...editingMods],\r\n      },\r\n      {\r\n        onDone: () => setLoading(false),\r\n        onConfirmed: () => {\r\n          setModalVisible(false)\r\n          setEditingMods(editableMods)\r\n        },\r\n      },\r\n    )\r\n  }\r\n\r\n  const modsTotal = mods?.reduce((acc, curr) => acc + curr.percent, 0)\r\n  const ownerPercent = 10000 - (modsTotal ?? 0)\r\n\r\n  const hasEditPermission = useHasPermission(OperatorPermission.SetTicketMods)\r\n\r\n  return (\r\n    <div>\r\n      {mods?.length\r\n        ? [...mods]\r\n            .sort((a, b) => (a.percent < b.percent ? 1 : -1))\r\n            .map(mod => (\r\n              <div\r\n                key={mod.beneficiary ?? '' + mod.percent}\r\n                style={{ marginBottom: 5 }}\r\n              >\r\n                <Mod\r\n                  mod={mod}\r\n                  value={\r\n                    permyriadToPercent(mod.percent) +\r\n                    '%' +\r\n                    (total\r\n                      ? ` (${formatWad(total?.mul(mod.percent).div(10000), {\r\n                          precision: 0,\r\n                        })} ${tokenSymbolText({\r\n                          tokenSymbol: tokenSymbol,\r\n                          capitalize: false,\r\n                          plural: true,\r\n                        })})`\r\n                      : '')\r\n                  }\r\n                />\r\n              </div>\r\n            ))\r\n        : null}\r\n\r\n      {ownerPercent > 0 && (\r\n        <Mod\r\n          mod={{ beneficiary: owner, percent: ownerPercent }}\r\n          value={\r\n            <span style={{ fontWeight: 400 }}>\r\n              {permyriadToPercent(ownerPercent)}%\r\n              {total\r\n                ? ` (${formatWad(total?.mul(ownerPercent).div(10000), {\r\n                    precision: 0,\r\n                  })} ${tokenSymbolText({\r\n                    tokenSymbol: tokenSymbol,\r\n                    capitalize: false,\r\n                    plural: true,\r\n                  })})`\r\n                : ''}\r\n            </span>\r\n          }\r\n        />\r\n      )}\r\n\r\n      {fundingCycle && projectId && hasEditPermission ? (\r\n        <div style={{ marginTop: 10 }}>\r\n          <Button size=\"small\" onClick={() => setModalVisible(true)}>\r\n            <Trans>Edit token allocation</Trans>\r\n          </Button>\r\n        </div>\r\n      ) : null}\r\n\r\n      {fundingCycle ? (\r\n        <Modal\r\n          visible={modalVisible}\r\n          title={t`Edit reserved token allocation`}\r\n          okText={t`Save token allocation`}\r\n          onOk={() => setMods()}\r\n          onCancel={() => {\r\n            setEditingMods(mods)\r\n            setModalVisible(false)\r\n          }}\r\n          confirmLoading={loading}\r\n          width={720}\r\n        >\r\n          <ProjectTicketMods\r\n            mods={editingMods}\r\n            lockedMods={lockedMods}\r\n            onModsChanged={setEditingMods}\r\n            reservedRate={reservedRate}\r\n          />\r\n        </Modal>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n","import { NetworkContext } from 'contexts/networkContext'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { V1UserContext } from 'contexts/v1/userContext'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport * as constants from '@ethersproject/constants'\r\nimport { TicketMod } from 'models/mods'\r\nimport { useContext } from 'react'\r\n\r\nimport { TransactorInstance } from '../../Transactor'\r\n\r\nexport function useSetTicketModsTx(): TransactorInstance<{\r\n  configured: BigNumber\r\n  ticketMods: TicketMod[]\r\n}> {\r\n  const { transactor, contracts } = useContext(V1UserContext)\r\n  const { userAddress } = useContext(NetworkContext)\r\n  const { projectId, terminal } = useContext(V1ProjectContext)\r\n\r\n  return ({ configured, ticketMods }, txOpts) => {\r\n    if (\r\n      !transactor ||\r\n      !userAddress ||\r\n      !projectId ||\r\n      !contracts?.Projects ||\r\n      !terminal?.version\r\n    ) {\r\n      txOpts?.onDone?.()\r\n      return Promise.resolve(false)\r\n    }\r\n\r\n    return transactor(\r\n      contracts.ModStore,\r\n      'setTicketMods',\r\n      [\r\n        BigNumber.from(projectId).toHexString(),\r\n        configured.toHexString(),\r\n        ticketMods.map(m => ({\r\n          preferUnstaked: false,\r\n          percent: BigNumber.from(m.percent).toHexString(),\r\n          lockedUntil: BigNumber.from(m.lockedUntil ?? 0).toHexString(),\r\n          beneficiary: m.beneficiary || constants.AddressZero,\r\n        })),\r\n      ],\r\n      txOpts,\r\n    )\r\n  }\r\n}\r\n","import { CopyOutlined } from '@ant-design/icons'\r\nimport { Tooltip } from 'antd'\r\nimport { CSSProperties, useContext, useState } from 'react'\r\nimport { t } from '@lingui/macro'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\n\r\n// Copies a given text to clipboard when clicked\r\nexport default function CopyTextButton({\r\n  value,\r\n  style = {},\r\n}: {\r\n  value: string | undefined\r\n  style?: CSSProperties\r\n}) {\r\n  const { colors } = useContext(ThemeContext).theme\r\n  const [copied, setCopied] = useState<boolean>(false)\r\n  const copyText = () => {\r\n    navigator.clipboard.writeText(value ?? '')\r\n    setCopied(true)\r\n    setTimeout(() => setCopied(false), 3000)\r\n  }\r\n  return (\r\n    <Tooltip\r\n      trigger={['hover']}\r\n      title={<span>{copied ? t`Copied!` : t`Copy to clipboard`}</span>}\r\n    >\r\n      <CopyOutlined\r\n        onClick={copyText}\r\n        className=\"copyIcon\"\r\n        style={{ ...style, paddingLeft: 10, color: colors.text.primary }}\r\n      />\r\n    </Tooltip>\r\n  )\r\n}\r\n","import {\r\n  BaseEventEntity,\r\n  BaseEventEntityJson,\r\n  parseBaseEventEntityJson,\r\n} from '../base/base-event-entity'\r\nimport {\r\n  BaseProjectEntity,\r\n  BaseProjectEntityJson,\r\n  parseBaseProjectEntityJson,\r\n} from '../base/base-project-entity'\r\n\r\nexport interface DeployedERC20Event extends BaseProjectEntity, BaseEventEntity {\r\n  symbol: string\r\n}\r\n\r\nexport type DeployedERC20EventJson = Partial<\r\n  Record<keyof DeployedERC20Event, string> &\r\n    BaseProjectEntityJson &\r\n    BaseEventEntityJson\r\n>\r\n\r\nexport const parseDeployedERC20EventJson = (\r\n  j: DeployedERC20EventJson,\r\n): Partial<DeployedERC20Event> => ({\r\n  ...parseBaseProjectEntityJson(j),\r\n  ...parseBaseEventEntityJson(j),\r\n  symbol: j.symbol,\r\n})\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\n\r\nimport { parseProjectJson } from 'models/subgraph-entities/vX/project'\r\n\r\nimport { Project, ProjectJson } from '../vX/project'\r\nimport {\r\n  BaseEventEntity,\r\n  BaseEventEntityJson,\r\n  parseBaseEventEntityJson,\r\n} from '../base/base-event-entity'\r\n\r\nexport interface DistributeToPayoutModEvent extends BaseEventEntity {\r\n  project: Partial<Project>\r\n  fundingCycleId: BigNumber\r\n  projectId: BigNumber\r\n  modBeneficiary: string\r\n  modPreferUnstaked: boolean\r\n  modProjectId: BigNumber\r\n  modAllocator: string\r\n  modCut: BigNumber\r\n  tapEvent: string\r\n}\r\n\r\nexport type DistributeToPayoutModEventJson = Partial<\r\n  Record<Exclude<keyof DistributeToPayoutModEvent, 'project'>, string> & {\r\n    project: ProjectJson\r\n  } & BaseEventEntityJson\r\n>\r\n\r\nexport const parseDistributeToPayoutModEvent = (\r\n  j: DistributeToPayoutModEventJson,\r\n): Partial<DistributeToPayoutModEvent> => ({\r\n  ...parseBaseEventEntityJson(j),\r\n  fundingCycleId: j.fundingCycleId\r\n    ? BigNumber.from(j.fundingCycleId)\r\n    : undefined,\r\n  project: j.project ? parseProjectJson(j.project) : undefined,\r\n  projectId: j.projectId ? BigNumber.from(j.projectId) : undefined,\r\n  modBeneficiary: j.modBeneficiary,\r\n  modPreferUnstaked: !!j.modPreferUnstaked,\r\n  modProjectId: j.modProjectId ? BigNumber.from(j.modProjectId) : undefined,\r\n  modAllocator: j.modAllocator,\r\n  modCut: j.modCut ? BigNumber.from(j.modCut) : undefined,\r\n  tapEvent: j.tapEvent,\r\n})\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport {\r\n  parseProjectJson,\r\n  Project,\r\n  ProjectJson,\r\n} from 'models/subgraph-entities/vX/project'\r\n\r\nimport {\r\n  BaseEventEntity,\r\n  BaseEventEntityJson,\r\n  parseBaseEventEntityJson,\r\n} from '../base/base-event-entity'\r\nimport {\r\n  parsePrintReservesEventJson,\r\n  PrintReservesEvent,\r\n  PrintReservesEventJson,\r\n} from './print-reserves-event'\r\n\r\nexport interface DistributeToTicketModEvent extends BaseEventEntity {\r\n  project: Partial<Project>\r\n  fundingCycleId: BigNumber\r\n  projectId: BigNumber\r\n  modBeneficiary: string\r\n  modPreferUnstaked: boolean\r\n  modCut: BigNumber\r\n  printReservesEvent: Partial<PrintReservesEvent>\r\n}\r\n\r\nexport type DistributeToTicketModEventJson = Partial<\r\n  Record<\r\n    Exclude<keyof DistributeToTicketModEvent, 'project' | 'printReservesEvent'>,\r\n    string\r\n  > & {\r\n    project: ProjectJson\r\n    printReservesEvent: PrintReservesEventJson\r\n  } & BaseEventEntityJson\r\n>\r\n\r\nexport const parseDistributeToTicketModEvent = (\r\n  j: DistributeToTicketModEventJson,\r\n): Partial<DistributeToTicketModEvent> => ({\r\n  ...parseBaseEventEntityJson(j),\r\n  fundingCycleId: j.fundingCycleId\r\n    ? BigNumber.from(j.fundingCycleId)\r\n    : undefined,\r\n  project: j.project ? parseProjectJson(j.project) : undefined,\r\n  projectId: j.projectId ? BigNumber.from(j.projectId) : undefined,\r\n  modBeneficiary: j.modBeneficiary,\r\n  modPreferUnstaked: !!j.modPreferUnstaked,\r\n  modCut: j.modCut ? BigNumber.from(j.modCut) : undefined,\r\n  printReservesEvent: j.printReservesEvent\r\n    ? parsePrintReservesEventJson(j.printReservesEvent)\r\n    : undefined,\r\n})\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\n\r\nimport {\r\n  BaseEventEntity,\r\n  BaseEventEntityJson,\r\n  parseBaseEventEntityJson,\r\n} from '../base/base-event-entity'\r\nimport {\r\n  BaseProjectEntity,\r\n  BaseProjectEntityJson,\r\n  parseBaseProjectEntityJson,\r\n} from '../base/base-project-entity'\r\n\r\nexport interface PayEvent extends BaseProjectEntity, BaseEventEntity {\r\n  fundingCycleId: BigNumber\r\n  beneficiary: string\r\n  amount: BigNumber\r\n  note: string\r\n}\r\n\r\nexport type PayEventJson = Partial<\r\n  Record<keyof PayEvent, string> & BaseProjectEntityJson & BaseEventEntityJson\r\n>\r\n\r\nexport const parsePayEventJson = (j: PayEventJson): Partial<PayEvent> => ({\r\n  ...parseBaseProjectEntityJson(j),\r\n  ...parseBaseEventEntityJson(j),\r\n  fundingCycleId: j.fundingCycleId\r\n    ? BigNumber.from(j.fundingCycleId)\r\n    : undefined,\r\n  beneficiary: j.beneficiary,\r\n  amount: j.amount ? BigNumber.from(j.amount) : undefined,\r\n  note: j.note,\r\n})\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\n\r\nimport {\r\n  BaseEventEntity,\r\n  BaseEventEntityJson,\r\n  parseBaseEventEntityJson,\r\n} from '../base/base-event-entity'\r\nimport {\r\n  BaseProjectEntity,\r\n  BaseProjectEntityJson,\r\n  parseBaseProjectEntityJson,\r\n} from '../base/base-project-entity'\r\n\r\nexport interface MintTokensEvent extends BaseEventEntity, BaseProjectEntity {\r\n  beneficiary: string\r\n  amount: BigNumber\r\n  memo: string\r\n}\r\n\r\nexport type MintTokensEventJson = Partial<\r\n  Record<keyof MintTokensEvent, string> &\r\n    BaseEventEntityJson &\r\n    BaseProjectEntityJson\r\n>\r\n\r\nexport const parseMintTokensEventJson = (\r\n  j: MintTokensEventJson,\r\n): Partial<MintTokensEvent> => ({\r\n  ...parseBaseEventEntityJson(j),\r\n  ...parseBaseProjectEntityJson(j),\r\n  beneficiary: j.beneficiary,\r\n  amount: j.amount ? BigNumber.from(j.amount) : undefined,\r\n  memo: j.memo,\r\n})\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\n\r\nimport {\r\n  BaseEventEntity,\r\n  BaseEventEntityJson,\r\n  parseBaseEventEntityJson,\r\n} from '../base/base-event-entity'\r\nimport {\r\n  BaseProjectEntity,\r\n  BaseProjectEntityJson,\r\n  parseBaseProjectEntityJson,\r\n} from '../base/base-project-entity'\r\n\r\nexport interface RedeemEvent extends BaseProjectEntity, BaseEventEntity {\r\n  id: string\r\n  holder: string\r\n  beneficiary: string\r\n  amount: BigNumber\r\n  returnAmount: BigNumber\r\n  caller: string\r\n}\r\n\r\nexport type RedeemEventJson = Partial<\r\n  Record<keyof RedeemEvent, string> &\r\n    BaseProjectEntityJson &\r\n    BaseEventEntityJson\r\n>\r\n\r\nexport const parseRedeemEventJson = (\r\n  j: RedeemEventJson,\r\n): Partial<RedeemEvent> => ({\r\n  ...parseBaseEventEntityJson(j),\r\n  ...parseBaseProjectEntityJson(j),\r\n  id: j.id,\r\n  holder: j.holder,\r\n  beneficiary: j.beneficiary,\r\n  amount: j.amount ? BigNumber.from(j.amount) : undefined,\r\n  returnAmount: j.returnAmount ? BigNumber.from(j.returnAmount) : undefined,\r\n  caller: j.caller,\r\n})\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\n\r\nimport { parseProjectJson, Project, ProjectJson } from '../vX/project'\r\nimport {\r\n  BaseEventEntity,\r\n  BaseEventEntityJson,\r\n  parseBaseEventEntityJson,\r\n} from '../base/base-event-entity'\r\n\r\nexport interface TapEvent extends BaseEventEntity {\r\n  project: Partial<Project>\r\n  fundingCycleId: BigNumber\r\n  beneficiary: string\r\n  amount: BigNumber\r\n  currency: BigNumber\r\n  netTransferAmount: BigNumber\r\n  beneficiaryTransferAmount: BigNumber\r\n  govFeeAmount: BigNumber\r\n}\r\n\r\nexport type TapEventJson = Partial<\r\n  Record<Exclude<keyof TapEvent, 'project'>, string> & {\r\n    project: ProjectJson\r\n  } & BaseEventEntityJson\r\n>\r\n\r\nexport const parseTapEventJson = (j: TapEventJson): Partial<TapEvent> => ({\r\n  ...parseBaseEventEntityJson(j),\r\n  project: j.project ? parseProjectJson(j.project) : undefined,\r\n  fundingCycleId: j.fundingCycleId\r\n    ? BigNumber.from(j.fundingCycleId)\r\n    : undefined,\r\n  beneficiary: j.beneficiary,\r\n  amount: j.amount ? BigNumber.from(j.amount) : undefined,\r\n  currency: j.currency ? BigNumber.from(j.currency) : undefined,\r\n  netTransferAmount: j.netTransferAmount\r\n    ? BigNumber.from(j.netTransferAmount)\r\n    : undefined,\r\n  beneficiaryTransferAmount: j.beneficiaryTransferAmount\r\n    ? BigNumber.from(j.beneficiaryTransferAmount)\r\n    : undefined,\r\n  govFeeAmount: j.govFeeAmount ? BigNumber.from(j.govFeeAmount) : undefined,\r\n})\r\n","import { NetworkName } from 'models/network-name'\r\n\r\nimport { readNetwork } from 'constants/networks'\r\nimport { V1_PROJECT_IDS } from './projectIds'\r\n\r\nconst {\r\n  PX_DAO,\r\n  SVSPOOL002,\r\n  FIDENZA420,\r\n  MICHAEL_JACKSON,\r\n  SANTA_DAO,\r\n  INFLATIONLESS_DAO,\r\n  VOTING_DAO,\r\n  LUNAR_DAO,\r\n  BLUECOLLARDS,\r\n  CITYMONK,\r\n} = V1_PROJECT_IDS\r\n\r\nconst V1ArchivedProjectIdsByNetwork: Partial<Record<NetworkName, number[]>> = {\r\n  [NetworkName.mainnet]: [\r\n    PX_DAO,\r\n    SVSPOOL002,\r\n    FIDENZA420,\r\n    MICHAEL_JACKSON,\r\n    SANTA_DAO,\r\n    INFLATIONLESS_DAO,\r\n    VOTING_DAO,\r\n    LUNAR_DAO,\r\n    BLUECOLLARDS,\r\n    CITYMONK,\r\n  ],\r\n  [NetworkName.rinkeby]: [],\r\n}\r\n\r\nexport const V1ArchivedProjectIds =\r\n  V1ArchivedProjectIdsByNetwork[readNetwork.name] ?? []\r\n","import { CSSProperties } from 'react'\r\n\r\nexport const padding: Record<string, CSSProperties['padding']> = {\r\n  app: 20,\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { V1FundingCycle } from 'models/v1/fundingCycle'\r\nimport {\r\n  perbicentToPercent,\r\n  permilleToPercent,\r\n  fromWad,\r\n  percentToPerbicent,\r\n  percentToPermille,\r\n  parseWad,\r\n} from 'utils/formatNumber'\r\n\r\n// Spreads all properties from both v0 or v1 FundingCycleMetadata\r\nexport type EditingV1FundingCycle = Omit<V1FundingCycle, 'metadata'> & {\r\n  reserved: BigNumber\r\n  bondingCurveRate: BigNumber\r\n  payIsPaused: boolean | null\r\n  ticketPrintingIsAllowed: boolean | null\r\n  treasuryExtension: string | null\r\n}\r\n\r\nexport type SerializedV1FundingCycle = Record<\r\n  keyof Omit<\r\n    EditingV1FundingCycle,\r\n    'payIsPaused' | 'ticketPrintingIsAllowed' | 'treasuryExtension'\r\n  >,\r\n  string\r\n> &\r\n  Record<\r\n    keyof Pick<\r\n      EditingV1FundingCycle,\r\n      'payIsPaused' | 'ticketPrintingIsAllowed'\r\n    >,\r\n    null | boolean\r\n  > &\r\n  Record<keyof Pick<EditingV1FundingCycle, 'treasuryExtension'>, null | string>\r\n\r\nexport const serializeV1FundingCycle = (\r\n  fc: EditingV1FundingCycle,\r\n): SerializedV1FundingCycle => ({\r\n  projectId: fc.projectId.toString(),\r\n  id: fc.id.toString(),\r\n  number: fc.number.toString(),\r\n  basedOn: fc.basedOn.toString(),\r\n  target: fromWad(fc.target),\r\n  currency: fc.currency.toString(),\r\n  start: fc.start.toString(),\r\n  duration: fc.duration.toString(),\r\n  tapped: fromWad(fc.tapped),\r\n  reserved: perbicentToPercent(fc.reserved),\r\n  weight: fromWad(fc.weight),\r\n  fee: perbicentToPercent(fc.fee),\r\n  bondingCurveRate: perbicentToPercent(fc.bondingCurveRate),\r\n  discountRate: permilleToPercent(fc.discountRate),\r\n  configured: fc.configured.toString(),\r\n  cycleLimit: fc.cycleLimit.toString(),\r\n  ballot: fc.ballot,\r\n  payIsPaused: fc.payIsPaused,\r\n  ticketPrintingIsAllowed: fc.ticketPrintingIsAllowed,\r\n  treasuryExtension: fc.treasuryExtension,\r\n})\r\n\r\nexport const deserializeV1FundingCycle = (\r\n  fc: SerializedV1FundingCycle,\r\n): EditingV1FundingCycle => ({\r\n  ...fc,\r\n  projectId: BigNumber.from(fc.projectId),\r\n  id: BigNumber.from(fc.id),\r\n  number: BigNumber.from(fc.number),\r\n  basedOn: BigNumber.from(fc.basedOn),\r\n  target: parseWad(fc.target),\r\n  currency: BigNumber.from(fc.currency),\r\n  start: BigNumber.from(fc.start),\r\n  duration: BigNumber.from(fc.duration),\r\n  tapped: parseWad(fc.tapped),\r\n  weight: parseWad(fc.weight),\r\n  fee: percentToPerbicent(fc.fee),\r\n  reserved: percentToPerbicent(fc.reserved),\r\n  bondingCurveRate: percentToPerbicent(fc.bondingCurveRate),\r\n  discountRate: percentToPermille(fc.discountRate),\r\n  cycleLimit: BigNumber.from(fc.cycleLimit),\r\n  configured: BigNumber.from(fc.configured),\r\n  ballot: fc.ballot,\r\n  payIsPaused: fc.payIsPaused,\r\n  ticketPrintingIsAllowed: fc.ticketPrintingIsAllowed,\r\n  treasuryExtension: fc.treasuryExtension,\r\n})\r\n","import { BigNumber, BigNumberish } from '@ethersproject/bignumber'\r\nimport { V1ContractName } from 'models/v1/contracts'\r\nimport { V1TerminalName } from 'models/v1/terminals'\r\nimport { useMemo } from 'react'\r\n\r\nexport default function useShouldUpdateTokens(\r\n  projectId: BigNumberish | undefined,\r\n  terminalName: V1TerminalName | undefined,\r\n  userAddress: string | undefined,\r\n) {\r\n  const _projectId = projectId\r\n    ? BigNumber.from(projectId).toHexString()\r\n    : undefined\r\n\r\n  return useMemo(\r\n    () =>\r\n      userAddress && _projectId && terminalName\r\n        ? [\r\n            {\r\n              contract: terminalName,\r\n              eventName: 'Pay',\r\n              topics: _projectId ? [[], _projectId] : undefined,\r\n            },\r\n            {\r\n              contract: terminalName,\r\n              eventName: 'PrintTickets',\r\n              topics: _projectId ? [_projectId] : undefined,\r\n            },\r\n            {\r\n              contract: V1ContractName.TicketBooth,\r\n              eventName: 'Redeem',\r\n              topics: _projectId ? [_projectId] : undefined,\r\n            },\r\n            {\r\n              contract: V1ContractName.TicketBooth,\r\n              eventName: 'Convert',\r\n              topics:\r\n                userAddress && _projectId\r\n                  ? [userAddress, _projectId]\r\n                  : undefined,\r\n            },\r\n          ]\r\n        : [],\r\n    [_projectId, userAddress, terminalName],\r\n  )\r\n}\r\n","import axios from 'axios'\r\nimport { useEffect, useState } from 'react'\r\n\r\nexport function useContentType(link?: string) {\r\n  const [contentType, setContentType] = useState<string>()\r\n\r\n  useEffect(() => {\r\n    if (link) {\r\n      axios\r\n        .get(link)\r\n        .then(res => setContentType(res.headers['content-type']))\r\n        .catch(() => setContentType(undefined))\r\n    } else {\r\n      setContentType(undefined)\r\n    }\r\n  }, [link])\r\n\r\n  return contentType\r\n}\r\n","import { t } from '@lingui/macro'\r\nimport { Image } from 'antd'\r\nimport { useContentType } from 'hooks/ContentType'\r\nimport { CSSProperties } from 'react'\r\n\r\nexport default function RichImgPreview({\r\n  src,\r\n  width,\r\n  height,\r\n  style,\r\n}: {\r\n  src: string | undefined\r\n  width?: CSSProperties['width']\r\n  height?: CSSProperties['height']\r\n  style?: CSSProperties\r\n}) {\r\n  const contentType = useContentType(src)\r\n\r\n  const w = width ?? 100\r\n  const h = height ?? 100\r\n\r\n  if (\r\n    contentType === 'image/jpeg' ||\r\n    contentType === 'image/jpg' ||\r\n    contentType === 'image/gif' ||\r\n    contentType === 'image/png' ||\r\n    contentType === 'image/svg'\r\n  ) {\r\n    return (\r\n      <div style={style}>\r\n        <Image\r\n          src={src}\r\n          style={{\r\n            maxWidth: w,\r\n            maxHeight: h,\r\n            width: w,\r\n            height: h,\r\n          }}\r\n          alt={t`Payment memo image`}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return null\r\n}\r\n","import Autolinker from 'autolinker'\r\nimport RichImgPreview from 'components/RichImgPreview'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { useContentType } from 'hooks/ContentType'\r\nimport { useContext, useMemo } from 'react'\r\n\r\ntype RichNoteProps = {\r\n  note: string | undefined\r\n  style?: React.CSSProperties | undefined\r\n}\r\n\r\nexport default function RichNote({\r\n  note,\r\n  style,\r\n  children,\r\n}: React.PropsWithChildren<RichNoteProps>) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  const mediaLink = useMemo(() => {\r\n    if (!note) return ''\r\n\r\n    const https = 'https://'\r\n    const http = 'http://'\r\n\r\n    if (note.includes(https)) {\r\n      return https + note.split(https)[1].split(' ')[0]\r\n    } else if (note.includes(http)) {\r\n      return http + note.split(http)[1].split(' ')[0]\r\n    }\r\n    return ''\r\n  }, [note])\r\n\r\n  const contentType = useContentType(mediaLink)\r\n\r\n  if (!note) return null\r\n\r\n  const sanitizedNote =\r\n    mediaLink &&\r\n    (contentType === 'image/jpeg' ||\r\n      contentType === 'image/jpg' ||\r\n      contentType === 'image/gif' ||\r\n      contentType === 'image/png' ||\r\n      contentType === 'image/svg')\r\n      ? note.replace(mediaLink, '')\r\n      : note\r\n\r\n  return (\r\n    <div style={{ marginTop: 5, ...style }}>\r\n      <span\r\n        style={{\r\n          color: colors.text.secondary,\r\n          overflowWrap: 'break-word',\r\n          paddingRight: '0.5rem',\r\n        }}\r\n        dangerouslySetInnerHTML={{\r\n          __html: Autolinker.link(sanitizedNote, {\r\n            sanitizeHtml: true,\r\n            truncate: {\r\n              length: 30,\r\n              location: 'smart',\r\n            },\r\n          }).replaceAll('\\n', '<br>'),\r\n        }}\r\n      ></span>\r\n\r\n      {children}\r\n\r\n      {mediaLink && (\r\n        <div>\r\n          <RichImgPreview\r\n            src={mediaLink}\r\n            style={{ marginTop: 10 }}\r\n            width=\"100%\"\r\n            height={140}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import { Web3Provider } from '@ethersproject/providers'\r\n\r\nimport { NetworkName } from 'models/network-name'\r\nimport { createContext } from 'react'\r\n\r\nexport const NetworkContext: React.Context<{\r\n  signingProvider?: Web3Provider\r\n  signerNetwork?: NetworkName\r\n  userAddress?: string\r\n  onNeedProvider?: () => Promise<void>\r\n  onSelectWallet?: () => void\r\n  onLogOut?: () => void\r\n}> = createContext({})\r\n","export enum IpfsCacheName {\r\n  trending,\r\n  trendingV2,\r\n}\r\n","import { CrownFilled, LockOutlined } from '@ant-design/icons'\r\nimport { t, Trans } from '@lingui/macro'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { Tooltip } from 'antd'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { PayoutMod, TicketMod } from 'models/mods'\r\nimport { useContext } from 'react'\r\nimport { formatDate } from 'utils/formatDate'\r\nimport FormattedAddress from 'components/FormattedAddress'\r\nimport TooltipLabel from 'components/TooltipLabel'\r\n\r\nimport V1ProjectHandle from './V1ProjectHandle'\r\n\r\nexport default function Mod({\r\n  mod,\r\n  value,\r\n}: {\r\n  mod: PayoutMod | TicketMod | undefined\r\n  value: string | JSX.Element\r\n}) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n  const { owner } = useContext(V1ProjectContext)\r\n\r\n  if (!mod) return null\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        alignItems: 'baseline',\r\n        justifyContent: 'space-between',\r\n        marginBottom: 5,\r\n      }}\r\n    >\r\n      <div style={{ lineHeight: 1.4 }}>\r\n        <div style={{ display: 'flex', alignItems: 'baseline' }}>\r\n          {(mod as PayoutMod).projectId &&\r\n          BigNumber.from((mod as PayoutMod).projectId).gt(0) ? (\r\n            <div>\r\n              <div style={{ fontWeight: 500 }}>\r\n                {(mod as PayoutMod).projectId ? (\r\n                  <V1ProjectHandle\r\n                    projectId={(mod as PayoutMod).projectId as BigNumber}\r\n                  />\r\n                ) : (\r\n                  '--'\r\n                )}\r\n                :\r\n              </div>\r\n              <div\r\n                style={{\r\n                  fontSize: '.8rem',\r\n                  color: colors.text.secondary,\r\n                  marginLeft: 10,\r\n                }}\r\n              >\r\n                <TooltipLabel\r\n                  label={t`Tokens` + ':'}\r\n                  tip={t`This address will receive any tokens minted when the recipient project gets paid.`}\r\n                />{' '}\r\n                <FormattedAddress address={mod.beneficiary} />{' '}\r\n                {owner === mod.beneficiary && (\r\n                  <Tooltip title={t`Project owner`}>\r\n                    <CrownFilled />\r\n                  </Tooltip>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div\r\n              style={{\r\n                fontWeight: 500,\r\n                display: 'flex',\r\n                alignItems: 'baseline',\r\n              }}\r\n            >\r\n              <FormattedAddress address={mod.beneficiary} />\r\n              {owner === mod.beneficiary && (\r\n                <span style={{ marginLeft: 5 }}>\r\n                  <Tooltip title={t`Project owner`}>\r\n                    <CrownFilled />\r\n                  </Tooltip>\r\n                </span>\r\n              )}\r\n              :\r\n            </div>\r\n          )}\r\n        </div>\r\n        {mod.lockedUntil ? (\r\n          <div style={{ fontSize: '.8rem', color: colors.text.secondary }}>\r\n            <LockOutlined /> <Trans>until</Trans>{' '}\r\n            {mod.lockedUntil\r\n              ? formatDate(mod.lockedUntil * 1000, 'yyyy-MM-DD')\r\n              : null}\r\n          </div>\r\n        ) : null}{' '}\r\n      </div>\r\n      <div>{value}</div>\r\n    </div>\r\n  )\r\n}\r\n","export const lightColors = {\r\n  black: '#000',\r\n  white: '#fff',\r\n  dark0: '#000000ee',\r\n  dark1: '#00000099',\r\n  dark2: '#00000055',\r\n  dark3: '#00000044',\r\n  juiceOrange: '#f5a312',\r\n  juiceLight: '#FFECBB',\r\n  cta: '#18b4c7',\r\n  ctaHighlight: '#25c4d8',\r\n  ctaHint: '#18b4c722',\r\n  green: '#0F8534',\r\n  red: '#FF4524',\r\n  yellow: '#BF7C08',\r\n}\r\n\r\nexport const darkColors = {\r\n  black: '#000',\r\n  white: '#fff',\r\n  light0: '#e1e0e8',\r\n  light1: '#e1e0e8d8',\r\n  light2: '#e1e0e8a4',\r\n  light3: '#e1e0e844',\r\n  dark0: '#1c1b21',\r\n  dark1: '#2e2b3c',\r\n  dark2: '#494361',\r\n  juiceOrange: '#FFB32C',\r\n  juiceLight: '#FFECBB',\r\n  cta: '#32c8db',\r\n  ctaHighlight: '#38e9ff',\r\n  ctaHint: '#32c8db22',\r\n  green: '#A0F3BA',\r\n  red: '#ff6c6c',\r\n  yellow: '#FCDC9C',\r\n}\r\n","import { SemanticColors } from 'models/semantic-theme/colors'\r\n\r\nimport { darkColors, lightColors } from 'constants/styles/colors'\r\nimport { ThemeOption } from 'constants/theme/theme-option'\r\n\r\nexport const backgroundColors: Record<\r\n  ThemeOption,\r\n  SemanticColors['background']\r\n> = {\r\n  [ThemeOption.light]: {\r\n    l0: '#FEFDFB',\r\n    l1: '#e7e3dc',\r\n    l2: '#f5f4ef',\r\n    disabled: '#00000018',\r\n    success: lightColors.green,\r\n    warn: lightColors.yellow,\r\n    failure: lightColors.red,\r\n    brand: {\r\n      primary: lightColors.juiceOrange,\r\n      secondary: lightColors.juiceLight,\r\n    },\r\n    action: {\r\n      primary: lightColors.cta,\r\n      secondary: '#32c8db44',\r\n      highlight: '#3dd1e4',\r\n    },\r\n  },\r\n  [ThemeOption.dark]: {\r\n    l0: darkColors.dark0,\r\n    l1: darkColors.dark1,\r\n    l2: darkColors.dark2,\r\n    disabled: darkColors.light0 + '44',\r\n    success: darkColors.green,\r\n    warn: darkColors.yellow,\r\n    failure: darkColors.red,\r\n    brand: {\r\n      primary: darkColors.juiceOrange,\r\n      secondary: darkColors.juiceLight,\r\n    },\r\n    action: {\r\n      primary: darkColors.cta,\r\n      secondary: darkColors.ctaHint,\r\n      highlight: darkColors.ctaHighlight,\r\n    },\r\n  },\r\n}\r\n","import { SemanticColors } from 'models/semantic-theme/colors'\r\n\r\nimport { darkColors, lightColors } from 'constants/styles/colors'\r\nimport { ThemeOption } from 'constants/theme/theme-option'\r\n\r\nexport const iconColors: Record<ThemeOption, SemanticColors['icon']> = {\r\n  [ThemeOption.light]: {\r\n    primary: lightColors.dark0,\r\n    secondary: lightColors.dark1,\r\n    tertiary: lightColors.dark2,\r\n    disabled: lightColors.dark3,\r\n    success: lightColors.green,\r\n    warn: lightColors.yellow,\r\n    failure: lightColors.red,\r\n    action: {\r\n      primary: lightColors.cta,\r\n      secondary: lightColors.cta,\r\n    },\r\n    brand: {\r\n      primary: lightColors.juiceOrange,\r\n      secondary: lightColors.juiceLight,\r\n    },\r\n    over: {\r\n      brand: {\r\n        primary: lightColors.white,\r\n        secondary: lightColors.black,\r\n      },\r\n      action: {\r\n        primary: lightColors.white,\r\n        secondary: lightColors.cta,\r\n        highlight: lightColors.ctaHighlight,\r\n      },\r\n      success: lightColors.white,\r\n      warn: lightColors.white,\r\n      failure: lightColors.white,\r\n      disabled: lightColors.dark2,\r\n    },\r\n  },\r\n  [ThemeOption.dark]: {\r\n    primary: darkColors.light0,\r\n    secondary: darkColors.light1,\r\n    tertiary: darkColors.light2,\r\n    disabled: darkColors.light2,\r\n    success: darkColors.green,\r\n    warn: darkColors.yellow,\r\n    failure: darkColors.red,\r\n    action: {\r\n      primary: darkColors.cta,\r\n      secondary: darkColors.cta,\r\n    },\r\n    brand: {\r\n      primary: darkColors.juiceOrange,\r\n      secondary: darkColors.juiceLight,\r\n    },\r\n    over: {\r\n      brand: {\r\n        primary: darkColors.white,\r\n        secondary: darkColors.black,\r\n      },\r\n      action: {\r\n        primary: darkColors.white,\r\n        secondary: darkColors.cta,\r\n        highlight: darkColors.dark0,\r\n      },\r\n      success: darkColors.white,\r\n      warn: darkColors.white,\r\n      failure: darkColors.white,\r\n      disabled: darkColors.light2,\r\n    },\r\n  },\r\n}\r\n","import { SemanticColors } from 'models/semantic-theme/colors'\r\n\r\nimport { darkColors, lightColors } from 'constants/styles/colors'\r\nimport { ThemeOption } from 'constants/theme/theme-option'\r\n\r\nexport const strokeColors: Record<ThemeOption, SemanticColors['stroke']> = {\r\n  [ThemeOption.light]: {\r\n    primary: '#00000048',\r\n    secondary: '#00000032',\r\n    tertiary: '#00000018',\r\n    success: lightColors.green,\r\n    warn: lightColors.yellow,\r\n    failure: lightColors.red,\r\n    disabled: '#00000018',\r\n    action: {\r\n      primary: lightColors.cta,\r\n      secondary: '#32c8db44',\r\n      highlight: '#3dd1e4',\r\n    },\r\n  },\r\n  [ThemeOption.dark]: {\r\n    primary: darkColors.light1,\r\n    secondary: darkColors.light2,\r\n    tertiary: darkColors.light3,\r\n    success: darkColors.green,\r\n    warn: darkColors.yellow,\r\n    failure: darkColors.red,\r\n    disabled: darkColors.light0 + '24',\r\n    action: {\r\n      primary: darkColors.cta,\r\n      secondary: darkColors.light3,\r\n      highlight: darkColors.ctaHighlight,\r\n    },\r\n  },\r\n}\r\n","import { SemanticColors } from 'models/semantic-theme/colors'\r\n\r\nimport { darkColors, lightColors } from 'constants/styles/colors'\r\nimport { ThemeOption } from 'constants/theme/theme-option'\r\n\r\nexport const textColors: Record<ThemeOption, SemanticColors['text']> = {\r\n  [ThemeOption.light]: {\r\n    primary: lightColors.dark0,\r\n    secondary: lightColors.dark1,\r\n    tertiary: lightColors.dark2,\r\n    placeholder: lightColors.dark2,\r\n    disabled: lightColors.dark3,\r\n    success: lightColors.green,\r\n    warn: lightColors.yellow,\r\n    failure: lightColors.red,\r\n    header: lightColors.juiceOrange,\r\n    action: {\r\n      primary: lightColors.cta,\r\n      secondary: lightColors.cta,\r\n      highlight: lightColors.ctaHighlight,\r\n    },\r\n    brand: {\r\n      primary: lightColors.juiceOrange,\r\n      secondary: lightColors.juiceLight,\r\n    },\r\n    over: {\r\n      brand: {\r\n        primary: lightColors.white,\r\n        secondary: lightColors.black,\r\n      },\r\n      action: {\r\n        primary: lightColors.white,\r\n        secondary: lightColors.cta,\r\n        highlight: lightColors.dark0,\r\n      },\r\n      success: lightColors.white,\r\n      warn: lightColors.white,\r\n      failure: lightColors.white,\r\n      disabled: lightColors.dark2,\r\n    },\r\n  },\r\n  [ThemeOption.dark]: {\r\n    primary: darkColors.light0,\r\n    secondary: darkColors.light1,\r\n    tertiary: darkColors.light2,\r\n    placeholder: darkColors.light3,\r\n    disabled: darkColors.light2,\r\n    success: darkColors.green,\r\n    warn: darkColors.yellow,\r\n    failure: darkColors.red,\r\n    header: darkColors.juiceOrange,\r\n    action: {\r\n      primary: darkColors.cta,\r\n      secondary: darkColors.cta,\r\n      highlight: darkColors.ctaHighlight,\r\n    },\r\n    brand: {\r\n      primary: darkColors.juiceOrange,\r\n      secondary: darkColors.juiceLight,\r\n    },\r\n    over: {\r\n      brand: {\r\n        primary: darkColors.white,\r\n        secondary: darkColors.black,\r\n      },\r\n      action: {\r\n        primary: darkColors.dark0,\r\n        secondary: darkColors.light0,\r\n        highlight: darkColors.dark0,\r\n      },\r\n      success: darkColors.white,\r\n      warn: darkColors.white,\r\n      failure: darkColors.white,\r\n      disabled: darkColors.light2,\r\n    },\r\n  },\r\n}\r\n","import { SemanticColors } from 'models/semantic-theme/colors'\r\n\r\nimport { ThemeOption } from 'constants/theme/theme-option'\r\n\r\nexport const boxShadow: Record<ThemeOption, SemanticColors['boxShadow']> = {\r\n  [ThemeOption.light]: { primary: 'rgba(0, 0, 0, 0.1)' },\r\n  [ThemeOption.dark]: { primary: '#000000' },\r\n}\r\n","import { SemanticColors } from 'models/semantic-theme/colors'\r\n\r\nimport { ThemeOption } from 'constants/theme/theme-option'\r\n\r\nimport { backgroundColors } from './background'\r\nimport { iconColors } from './icon'\r\nimport { strokeColors } from './stroke'\r\nimport { textColors } from './text'\r\nimport { boxShadow } from './boxShadow'\r\n\r\nexport const juiceThemeColors = (themeOption: ThemeOption): SemanticColors => ({\r\n  background: backgroundColors[themeOption],\r\n  text: textColors[themeOption],\r\n  icon: iconColors[themeOption],\r\n  stroke: strokeColors[themeOption],\r\n  boxShadow: boxShadow[themeOption],\r\n})\r\n","import { SemanticRadii } from 'models/semantic-theme/radii'\r\n\r\nexport const juiceRadii: SemanticRadii = {\r\n  xs: '1px',\r\n  sm: '1px',\r\n  md: '1px',\r\n  lg: '1px',\r\n  xl: '1px',\r\n  // xs: '2px',\r\n  // sm: '4px',\r\n  // md: '8px',\r\n  // lg: '12px',\r\n  // xl: '20px',\r\n}\r\n","import { SemanticTheme } from 'models/semantic-theme/theme'\r\n\r\nimport { ThemeOption } from 'constants/theme/theme-option'\r\n\r\nimport { juiceThemeColors } from './colors'\r\nimport { juiceRadii } from './radius'\r\n\r\nexport const juiceTheme = (themeOption: ThemeOption): SemanticTheme => ({\r\n  colors: juiceThemeColors(themeOption),\r\n  radii: juiceRadii,\r\n})\r\n","import { Contract } from '@ethersproject/contracts'\r\n\r\nexport enum V2ContractName {\r\n  JBController = 'JBController',\r\n  JBDirectory = 'JBDirectory',\r\n  JBETHPaymentTerminal = 'JBETHPaymentTerminal',\r\n  JBFundingCycleStore = 'JBFundingCycleStore',\r\n  JBOperatorStore = 'JBOperatorStore',\r\n  JBPrices = 'JBPrices',\r\n  JBProjects = 'JBProjects',\r\n  JBSplitsStore = 'JBSplitsStore',\r\n  JBTokenStore = 'JBTokenStore',\r\n  JBSingleTokenPaymentTerminalStore = 'JBSingleTokenPaymentTerminalStore',\r\n  JBETHERC20ProjectPayerDeployer = 'JBETHERC20ProjectPayerDeployer',\r\n  JBProjectHandles = 'JBProjectHandles',\r\n  PublicResolver = 'PublicResolver',\r\n  DeprecatedJBController = 'DeprecatedJBController',\r\n  DeprecatedJBSplitsStore = 'DeprecatedJBSplitsStore',\r\n  DeprecatedJBDirectory = 'DeprecatedJBDirectory',\r\n}\r\n// eslint-disable-next-line no-console\r\nconsole.log(Contract)\r\n\r\nexport type V2Contracts = Record<V2ContractName, Contract>\r\n","const HELP_PAGE_HOSTNAME = 'https://info.juicebox.money'\r\n\r\nexport function helpPagePath(path: string): string {\r\n  return new URL(path, HELP_PAGE_HOSTNAME).toString()\r\n}\r\n","import { CaretRightFilled } from '@ant-design/icons'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { ComponentPropsWithoutRef, CSSProperties, useContext } from 'react'\r\n\r\nexport default function RichButton({\r\n  heading,\r\n  prefix,\r\n  description,\r\n  disabled,\r\n  icon,\r\n  primaryColor,\r\n  ...props\r\n}: {\r\n  heading: JSX.Element | string\r\n  description: JSX.Element | string\r\n  disabled?: boolean\r\n  prefix?: JSX.Element | string\r\n  icon?: JSX.Element\r\n  primaryColor?: string\r\n} & ComponentPropsWithoutRef<'div'>) {\r\n  const {\r\n    theme: { colors, radii },\r\n  } = useContext(ThemeContext)\r\n\r\n  const headingColor = disabled\r\n    ? colors.text.disabled\r\n    : primaryColor ?? colors.text.action.primary\r\n\r\n  const subheadingColor = disabled\r\n    ? colors.text.disabled\r\n    : primaryColor ?? colors.text.primary\r\n\r\n  const cardStyles: CSSProperties = {\r\n    ...props?.style,\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    borderRadius: radii.md,\r\n    cursor: disabled ? 'not-allowed' : 'pointer',\r\n    border:\r\n      '1px solid ' +\r\n      (disabled ? colors.stroke.disabled : colors.stroke.action.primary),\r\n    background: colors.background.l0,\r\n    padding: '1rem 0 1rem 1rem',\r\n    borderColor: headingColor,\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"clickable-border\"\r\n      {...props}\r\n      style={{\r\n        ...cardStyles,\r\n      }}\r\n      role=\"button\"\r\n      onClick={e => {\r\n        if (disabled) return\r\n\r\n        props?.onClick?.(e)\r\n      }}\r\n    >\r\n      <div style={{ display: 'flex' }}>\r\n        {prefix ? (\r\n          <h4\r\n            style={{\r\n              color: headingColor,\r\n              marginRight: '1rem',\r\n            }}\r\n          >\r\n            {prefix}\r\n          </h4>\r\n        ) : null}\r\n\r\n        <div>\r\n          <h4\r\n            style={{\r\n              color: headingColor,\r\n            }}\r\n          >\r\n            {heading}\r\n          </h4>\r\n          <p\r\n            style={{\r\n              color: subheadingColor,\r\n              margin: 0,\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            {description}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          padding: 5,\r\n          marginRight: '0.5rem',\r\n        }}\r\n      >\r\n        {icon ?? (\r\n          <CaretRightFilled\r\n            style={{\r\n              color: headingColor,\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { Contract } from '@ethersproject/contracts'\r\n\r\nexport enum V1ContractName {\r\n  FundingCycles = 'FundingCycles',\r\n  TerminalV1 = 'TerminalV1',\r\n  TerminalV1_1 = 'TerminalV1_1',\r\n  TerminalDirectory = 'TerminalDirectory',\r\n  ModStore = 'ModStore',\r\n  OperatorStore = 'OperatorStore',\r\n  Prices = 'Prices',\r\n  Projects = 'Projects',\r\n  TicketBooth = 'TicketBooth',\r\n}\r\n\r\nexport type V1Contracts = Record<V1ContractName, Contract>\r\n","import { V1CurrencyOption } from 'models/v1/currencyOption'\r\nimport {\r\n  V2CurrencyETH,\r\n  V2CurrencyOption,\r\n  V2CurrencyUSD,\r\n} from 'models/v2/currencyOption'\r\n\r\nimport { V1_CURRENCY_ETH, V1_CURRENCY_USD } from 'constants/v1/currency'\r\nimport {\r\n  CurrencyMetadata,\r\n  CurrencyName,\r\n  CurrencySymbol,\r\n  CURRENCY_METADATA,\r\n} from 'constants/currency'\r\n\r\n// If a project has no fund access constraint,\r\n// then currency will be 0.\r\n// If this is the case, then we'll display the amount as ETH\r\nexport const NO_CURRENCY = 0\r\nexport const V2_CURRENCY_ETH: V2CurrencyETH = 1\r\nexport const V2_CURRENCY_USD: V2CurrencyUSD = 2\r\n\r\nexport const V2_CURRENCY_METADATA: Record<V2CurrencyOption, CurrencyMetadata> =\r\n  {\r\n    [V2_CURRENCY_ETH]: CURRENCY_METADATA.ETH,\r\n    [V2_CURRENCY_USD]: CURRENCY_METADATA.USD,\r\n  }\r\n\r\nconst CURRENCY_MAP: { [key in V1CurrencyOption]: V2CurrencyOption } = {\r\n  [V1_CURRENCY_ETH]: V2_CURRENCY_ETH,\r\n  [V1_CURRENCY_USD]: V2_CURRENCY_USD,\r\n}\r\n\r\nexport const V2CurrencyName = (\r\n  currency?: V2CurrencyOption,\r\n): CurrencyName | undefined =>\r\n  currency !== undefined ? V2_CURRENCY_METADATA[currency]?.name : undefined\r\n\r\nexport const getV2CurrencyOption = (\r\n  currencyName: CurrencyName,\r\n): V2CurrencyOption =>\r\n  currencyName === 'ETH' ? V2_CURRENCY_ETH : V2_CURRENCY_USD\r\n\r\nexport const V2CurrencySymbol = (\r\n  currency?: V2CurrencyOption,\r\n): CurrencySymbol | undefined =>\r\n  currency !== undefined ? V2_CURRENCY_METADATA[currency]?.symbol : undefined\r\n\r\nexport const V2CurrencyStyle = (currency?: V2CurrencyOption) =>\r\n  currency !== undefined ? V2_CURRENCY_METADATA[currency]?.style : undefined\r\n\r\nexport const toV2Currency = (\r\n  v1Currency: V1CurrencyOption,\r\n): V2CurrencyOption => {\r\n  return CURRENCY_MAP[v1Currency]\r\n}\r\n","import { shallowEqual, TypedUseSelectorHook, useSelector } from 'react-redux'\r\nimport { RootState } from 'redux/store'\r\nimport { deserializeV1FundingCycle } from 'utils/v1/serializers'\r\nimport { useMemo } from 'react'\r\nimport {\r\n  deserializeFundAccessConstraint,\r\n  deserializeV2FundingCycleData,\r\n  deserializeV2FundingCycleMetadata,\r\n} from 'utils/v2/serializers'\r\n\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\r\n\r\nexport const useEditingV1FundingCycleSelector = () => {\r\n  const serializedFundingCycle = useAppSelector(\r\n    state => state.editingProject.fundingCycle,\r\n    shallowEqual,\r\n  )\r\n\r\n  const fc = useMemo(\r\n    () => deserializeV1FundingCycle(serializedFundingCycle),\r\n    [serializedFundingCycle],\r\n  )\r\n\r\n  return fc\r\n}\r\n\r\nexport const useEditingV2FundingCycleMetadataSelector = () => {\r\n  const serializedFundingCycleMetadata = useAppSelector(\r\n    state => state.editingV2Project.fundingCycleMetadata,\r\n    shallowEqual,\r\n  )\r\n\r\n  const fundingCycleMetadata = useMemo(\r\n    () => deserializeV2FundingCycleMetadata(serializedFundingCycleMetadata),\r\n    [serializedFundingCycleMetadata],\r\n  )\r\n\r\n  return fundingCycleMetadata\r\n}\r\n\r\nexport const useEditingV2FundingCycleDataSelector = () => {\r\n  const serializedFundingCycleData = useAppSelector(\r\n    state => state.editingV2Project.fundingCycleData,\r\n    shallowEqual,\r\n  )\r\n\r\n  const fundingCycleData = useMemo(\r\n    () => deserializeV2FundingCycleData(serializedFundingCycleData),\r\n    [serializedFundingCycleData],\r\n  )\r\n\r\n  return fundingCycleData\r\n}\r\n\r\nexport const useEditingV2FundAccessConstraintsSelector = () => {\r\n  const serializedFundAccessConstraints = useAppSelector(\r\n    state => state.editingV2Project.fundAccessConstraints,\r\n    shallowEqual,\r\n  )\r\n\r\n  const fundAccessConstraints = useMemo(\r\n    () =>\r\n      serializedFundAccessConstraints.map(d =>\r\n        deserializeFundAccessConstraint(d),\r\n      ),\r\n    [serializedFundAccessConstraints],\r\n  )\r\n\r\n  return fundAccessConstraints\r\n}\r\n","import { useDispatch } from 'react-redux'\r\nimport { AppDispatch } from 'redux/store'\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\n","import { t, Trans } from '@lingui/macro'\r\nimport { Modal, ModalProps } from 'antd'\r\nimport { NetworkContext } from 'contexts/networkContext'\r\n\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { PropsWithChildren, useContext } from 'react'\r\n\r\ntype TransactionModalProps = PropsWithChildren<\r\n  ModalProps & {\r\n    transactionPending?: boolean\r\n    connectWalletText?: string\r\n  }\r\n>\r\n\r\nconst PendingTransactionModalBody = () => {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        margin: '2rem 0',\r\n      }}\r\n    >\r\n      <div style={{ textAlign: 'center', maxWidth: 400 }}>\r\n        <img\r\n          src=\"/assets/quint.gif\"\r\n          alt={t`Juicebox loading animation`}\r\n          style={{ maxWidth: 100, marginBottom: '1rem' }}\r\n        />\r\n        <h2 style={{ color: colors.text.primary }}>\r\n          <Trans>Transaction pending...</Trans>\r\n        </h2>\r\n        <p>\r\n          <Trans>\r\n            Your transaction has been submitted and is awaiting confirmation.\r\n          </Trans>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n/**\r\n * A thin wrapper around antd Modal for ETH transactions.\r\n * When transactionPending prop is true, the Modal children\r\n * are replaced with a juicy loading state.\r\n */\r\nexport default function TransactionModal(props: TransactionModalProps) {\r\n  const { userAddress } = useContext(NetworkContext)\r\n  const okText = userAddress\r\n    ? props.okText\r\n    : props.connectWalletText ?? t`Connect wallet`\r\n  const modalProps = {\r\n    ...props,\r\n    ...{\r\n      confirmLoading: props.transactionPending || props.confirmLoading,\r\n      cancelText: t`Close`,\r\n      okButtonProps: {\r\n        ...props.okButtonProps,\r\n        disabled: !userAddress,\r\n      },\r\n      okText: okText,\r\n    },\r\n  }\r\n\r\n  return (\r\n    <Modal {...modalProps}>\r\n      {props.transactionPending ? (\r\n        <PendingTransactionModalBody />\r\n      ) : (\r\n        props.children\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n","import { ThemeContext } from 'contexts/themeContext'\r\nimport { CSSProperties, PropsWithChildren, useContext } from 'react'\r\nimport { InfoCircleOutlined } from '@ant-design/icons'\r\n\r\nexport default function Callout({\r\n  style,\r\n  transparent,\r\n  children,\r\n  iconComponent,\r\n}: PropsWithChildren<{\r\n  style?: CSSProperties\r\n  transparent?: boolean\r\n  iconComponent?: JSX.Element\r\n}>) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n  return (\r\n    <div\r\n      style={{\r\n        color: colors.text.primary,\r\n        padding: '1rem',\r\n        backgroundColor: transparent ? undefined : colors.background.l2,\r\n        display: 'flex',\r\n        alignItems: 'flex-start',\r\n        ...style,\r\n      }}\r\n    >\r\n      <span style={{ marginRight: '1rem', lineHeight: 1.8 }}>\r\n        {iconComponent ?? <InfoCircleOutlined />}\r\n      </span>\r\n      <div style={{ width: '100%' }}>{children}</div>\r\n    </div>\r\n  )\r\n}\r\n","import { t } from '@lingui/macro'\r\nimport { Button } from 'antd'\r\n\r\nimport { useState, useMemo } from 'react'\r\n\r\nimport RichNote from './RichNote'\r\n\r\nexport default function Paragraph({\r\n  description,\r\n  characterLimit,\r\n}: {\r\n  description: string\r\n  characterLimit?: number\r\n}) {\r\n  const CHARACTER_LIMIT_EXCEEDED =\r\n    (characterLimit && description.length > characterLimit) ||\r\n    description.split('\\n').length > 3\r\n\r\n  const [expanded, setExpanded] = useState<boolean>(false)\r\n  const toggleExpanded = () => setExpanded(!expanded)\r\n\r\n  // Apply character limit to first 3 lines\r\n  const shortDescription = useMemo(() => {\r\n    const allLines = description.split('\\n')\r\n    const firstThreeLines = allLines.slice(0, 3).join('\\n')\r\n    return `${firstThreeLines.slice(0, characterLimit).trim()}...`\r\n  }, [characterLimit, description])\r\n\r\n  return (\r\n    <div>\r\n      <RichNote\r\n        style={{ maxWidth: '700px', display: 'inline' }} // good line length for reading\r\n        note={\r\n          !expanded && CHARACTER_LIMIT_EXCEEDED ? shortDescription : description\r\n        }\r\n      >\r\n        {CHARACTER_LIMIT_EXCEEDED && (\r\n          <Button\r\n            type=\"link\"\r\n            style={{ padding: 0, paddingBottom: 0, height: 'auto' }}\r\n            onClick={e => {\r\n              toggleExpanded()\r\n              e.stopPropagation()\r\n            }}\r\n          >\r\n            {expanded ? t`Read less` : t`Read more`}\r\n          </Button>\r\n        )}\r\n      </RichNote>\r\n    </div>\r\n  )\r\n}\r\n","import { NetworkName } from 'models/network-name'\r\n\r\nconst infuraId = process.env.REACT_APP_INFURA_ID\r\n\r\ntype NetworkInfo = {\r\n  name: NetworkName\r\n  color: string\r\n  chainId: number\r\n  blockExplorer: string\r\n  rpcUrl: string\r\n  faucet?: string\r\n  price?: number\r\n  gasPrice?: number\r\n}\r\n\r\nexport const NETWORKS: Record<number, NetworkInfo> = {\r\n  31337: {\r\n    name: NetworkName.localhost,\r\n    color: '#666666',\r\n    chainId: 31337,\r\n    blockExplorer: '',\r\n    rpcUrl: 'http://' + window.location.hostname + ':8545',\r\n  },\r\n  1: {\r\n    name: NetworkName.mainnet,\r\n    color: '#ff8b9e',\r\n    chainId: 1,\r\n    rpcUrl: `https://mainnet.infura.io/v3/${infuraId}`,\r\n    blockExplorer: 'https://etherscan.io/',\r\n  },\r\n  42: {\r\n    name: NetworkName.kovan,\r\n    color: '#7003DD',\r\n    chainId: 42,\r\n    rpcUrl: `https://kovan.infura.io/v3/${infuraId}`,\r\n    blockExplorer: 'https://kovan.etherscan.io/',\r\n    faucet: 'https://gitter.im/kovan-testnet/faucet', //https://faucet.kovan.network/\r\n  },\r\n  4: {\r\n    name: NetworkName.rinkeby,\r\n    color: '#e0d068',\r\n    chainId: 4,\r\n    rpcUrl: `https://rinkeby.infura.io/v3/${infuraId}`,\r\n    faucet: 'https://faucet.rinkeby.io/',\r\n    blockExplorer: 'https://rinkeby.etherscan.io/',\r\n  },\r\n  3: {\r\n    name: NetworkName.ropsten,\r\n    color: '#F60D09',\r\n    chainId: 3,\r\n    faucet: 'https://faucet.ropsten.be/',\r\n    blockExplorer: 'https://ropsten.etherscan.io/',\r\n    rpcUrl: `https://ropsten.infura.io/v3/${infuraId}`,\r\n  },\r\n  5: {\r\n    name: NetworkName.goerli,\r\n    color: '#0975F6',\r\n    chainId: 5,\r\n    faucet: 'https://goerli-faucet.slock.it/',\r\n    blockExplorer: 'https://goerli.etherscan.io/',\r\n    rpcUrl: `https://goerli.infura.io/v3/${infuraId}`,\r\n  },\r\n  100: {\r\n    name: NetworkName.xdai,\r\n    color: '#48a9a6',\r\n    chainId: 100,\r\n    price: 1,\r\n    gasPrice: 1000000000,\r\n    rpcUrl: 'https://dai.poa.network',\r\n    faucet: 'https://xdai-faucet.top/',\r\n    blockExplorer: 'https://blockscout.com/poa/xdai/',\r\n  },\r\n  137: {\r\n    name: NetworkName.matic,\r\n    color: '#2bbdf7',\r\n    chainId: 137,\r\n    price: 1,\r\n    gasPrice: 1000000000,\r\n    rpcUrl: 'https://rpc-mainnet.maticvigil.com',\r\n    faucet: 'https://faucet.matic.network/',\r\n    blockExplorer: 'https://explorer-mainnet.maticvigil.com//',\r\n  },\r\n  80001: {\r\n    name: NetworkName.mumbai,\r\n    color: '#92D9FA',\r\n    chainId: 80001,\r\n    price: 1,\r\n    gasPrice: 1000000000,\r\n    rpcUrl: 'https://rpc-mumbai.maticvigil.com',\r\n    faucet: 'https://faucet.matic.network/',\r\n    blockExplorer: 'https://mumbai-explorer.matic.today/',\r\n  },\r\n}\r\n\r\nexport const NETWORKS_BY_NAME = Object.values(NETWORKS).reduce(\r\n  (acc, curr) => ({\r\n    ...acc,\r\n    [curr.name]: curr,\r\n  }),\r\n  {} as Record<NetworkName, NetworkInfo>,\r\n)\r\n\r\nexport const readNetwork =\r\n  NETWORKS_BY_NAME[process.env.REACT_APP_INFURA_NETWORK as NetworkName]\r\n","import * as constants from '@ethersproject/constants'\r\nimport { t } from '@lingui/macro'\r\n\r\nimport { NetworkName } from 'models/network-name'\r\n\r\nimport { readNetwork } from 'constants/networks'\r\nimport { SECONDS_IN_DAY } from 'constants/numbers'\r\n\r\ntype BallotOption = Record<\r\n  'THREE_DAY' | 'SEVEN_DAY',\r\n  Partial<Record<NetworkName, string>>\r\n>\r\n\r\n// based on @jbx-protocol/v2-contracts@4.0.0\r\nexport const DEPRECATED_BALLOT_ADDRESSES: BallotOption = {\r\n  THREE_DAY: {\r\n    rinkeby: '0xf91150aa07a1AC707148420713cefd299b8D094A',\r\n    mainnet: '0x9733F02d3A1068A11B07516fa2f3C3BaEf90e7eF',\r\n  },\r\n  SEVEN_DAY: {\r\n    // No 7 day delay contract deployed with original V2\r\n    rinkeby: constants.AddressZero,\r\n    mainnet: constants.AddressZero,\r\n  },\r\n}\r\n\r\nexport const BALLOT_ADDRESSES: BallotOption = {\r\n  THREE_DAY: {\r\n    rinkeby: '0xC3890c4Dac5D06C4DAA2eE3Fdc95eC1686A4718e',\r\n    mainnet: '0x4b9f876c7Fc5f6DEF8991fDe639b2C812a85Fb12',\r\n  },\r\n  SEVEN_DAY: {\r\n    rinkeby: '0x69f9aAC8e68cBa3685b84A1990a0F29F131Ca791',\r\n    mainnet: '0x642EFF5259624FD09D021AB764a4b47d1DbD5770',\r\n  },\r\n}\r\n\r\nexport function ballotStrategies() {\r\n  return [\r\n    {\r\n      name: t`No strategy`,\r\n      description: t`Any reconfiguration to an upcoming funding cycle will take effect once the current cycle ends. A project with no strategy may be vulnerable to being rug-pulled by its owner.`,\r\n      address: constants.AddressZero,\r\n      durationSeconds: 0,\r\n    },\r\n    {\r\n      name: t`3-day delay`,\r\n      description: t`A reconfiguration to an upcoming funding cycle must be submitted at least 3 days before it starts.`,\r\n      address: BALLOT_ADDRESSES.THREE_DAY[readNetwork.name]!,\r\n      durationSeconds: SECONDS_IN_DAY * 3,\r\n    },\r\n    {\r\n      name: t`7-day delay`,\r\n      description: t`A reconfiguration to an upcoming funding cycle must be submitted at least 7 days before it starts.`,\r\n      address: BALLOT_ADDRESSES.SEVEN_DAY[readNetwork.name]!,\r\n      durationSeconds: SECONDS_IN_DAY * 7,\r\n    },\r\n  ]\r\n}\r\n\r\nexport const DEFAULT_BALLOT_STRATEGY = ballotStrategies()[1]\r\n","import { Switch } from 'antd'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { CSSProperties, PropsWithChildren, useContext } from 'react'\r\n\r\nexport default function SwitchHeading({\r\n  children,\r\n  checked,\r\n  onChange,\r\n  disabled,\r\n  style,\r\n}: PropsWithChildren<{\r\n  checked: boolean\r\n  disabled?: boolean\r\n  onChange?: (checked: boolean) => void\r\n  style?: CSSProperties\r\n}>) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n  return (\r\n    <div style={{ display: 'flex', alignItems: 'center', ...style }}>\r\n      <Switch\r\n        checked={checked}\r\n        onChange={onChange}\r\n        style={{ marginRight: 10 }}\r\n        disabled={disabled}\r\n      />\r\n      <label\r\n        style={{\r\n          margin: 0,\r\n          lineHeight: 1,\r\n          fontSize: '1rem',\r\n          color: colors.text.primary,\r\n        }}\r\n      >\r\n        {children}\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { V1TerminalVersion } from 'models/v1/terminals'\r\nimport { V1UserContext } from 'contexts/v1/userContext'\r\nimport { useContext, useEffect, useState } from 'react'\r\n\r\nexport function useTerminalFee(version?: V1TerminalVersion) {\r\n  const [fee, setFee] = useState<BigNumber>()\r\n  const { contracts } = useContext(V1UserContext)\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      if (!version || !contracts) return\r\n\r\n      let terminalContract: Contract | undefined = undefined\r\n\r\n      switch (version) {\r\n        case '1':\r\n          terminalContract = contracts?.TerminalV1\r\n          break\r\n        case '1.1':\r\n          terminalContract = contracts?.TerminalV1_1\r\n          break\r\n      }\r\n\r\n      if (!terminalContract) return\r\n\r\n      const res = await terminalContract?.functions.fee()\r\n\r\n      if (res) setFee(res[0])\r\n    }\r\n    fetchData()\r\n  }, [version, contracts])\r\n\r\n  return fee\r\n}\r\n","import { useQuery } from 'react-query'\r\n\r\nimport { readProvider } from 'constants/readProvider'\r\n\r\nexport function useEthBalanceQuery(address: string | undefined) {\r\n  return useQuery(\r\n    ['eth-balance', address],\r\n    async () => {\r\n      if (!address) {\r\n        throw new Error(\"Can't fetch ETH balance, address is undefined\")\r\n      }\r\n      return readProvider.getBalance(address)\r\n    },\r\n    {\r\n      enabled: !!address,\r\n      staleTime: 30000,\r\n      refetchInterval: 30000,\r\n    },\r\n  )\r\n}\r\n","import { NetworkName } from 'models/network-name'\r\n\r\nimport { readNetwork } from 'constants/networks'\r\nimport { V2_PROJECT_IDS } from './projectIds'\r\n\r\nconst {\r\n  SUSTAIN_DAO_A,\r\n  SUSTAIN_DAO_B,\r\n  JUS_DAO,\r\n  ELONS_GAMES,\r\n  INVESTORS_EDGE_DAO,\r\n} = V2_PROJECT_IDS\r\n\r\nconst V2ArchivedProjectIdsByNetwork: Partial<Record<NetworkName, number[]>> = {\r\n  [NetworkName.mainnet]: [\r\n    SUSTAIN_DAO_A,\r\n    SUSTAIN_DAO_B,\r\n    JUS_DAO,\r\n    ELONS_GAMES,\r\n    INVESTORS_EDGE_DAO,\r\n  ],\r\n  [NetworkName.rinkeby]: [\r\n    83, // AngelDAO\r\n    63, // CauseFund.coin\r\n  ],\r\n}\r\n\r\nexport const V2ArchivedProjectIds =\r\n  V2ArchivedProjectIdsByNetwork[readNetwork.name] ?? []\r\n","import { useCurrencyConverter } from 'hooks/CurrencyConverter'\r\nimport { parseEther } from 'ethers/lib/utils'\r\n\r\nimport { useContext } from 'react'\r\nimport { CurrencyContext } from 'contexts/currencyContext'\r\nimport { CurrencyOption } from 'models/currencyOption'\r\n\r\n// Converts an amount (ETH or USD) to WEIw\r\nexport default function useWeiConverter<C extends CurrencyOption>({\r\n  currency,\r\n  amount,\r\n}: {\r\n  currency?: C\r\n  amount?: string\r\n}) {\r\n  const converter = useCurrencyConverter()\r\n  const {\r\n    currencies: { USD },\r\n  } = useContext(CurrencyContext)\r\n  if (currency === USD) {\r\n    return converter.usdToWei(amount)\r\n  }\r\n\r\n  return parseEther(amount ?? '0')\r\n}\r\n","import { CloseCircleFilled } from '@ant-design/icons'\r\nimport { FileImageOutlined } from '@ant-design/icons'\r\nimport { t, Trans } from '@lingui/macro'\r\nimport { Button, Col, message, Row, Space, Upload } from 'antd'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { useContext, useLayoutEffect, useState } from 'react'\r\nimport { ipfsCidUrl, pinFileToIpfs } from 'utils/ipfs'\r\n\r\nimport ExternalLink from '../ExternalLink'\r\n\r\nenum ByteUnit {\r\n  KB = 'KB',\r\n  MB = 'MB',\r\n}\r\n\r\nexport default function ImageUploader({\r\n  initialUrl,\r\n  onSuccess,\r\n  maxSizeKBs: maxSize,\r\n  metadata,\r\n  text,\r\n}: {\r\n  initialUrl?: string\r\n  metadata?: Record<string | number, any> // eslint-disable-line @typescript-eslint/no-explicit-any\r\n  onSuccess?: (url?: string) => void\r\n  maxSizeKBs?: number // KB\r\n  text?: string\r\n}) {\r\n  const [url, setUrl] = useState<string | undefined>(initialUrl)\r\n  const [loadingUpload, setLoadingUpload] = useState<boolean>()\r\n\r\n  const { theme } = useContext(ThemeContext)\r\n\r\n  const setValue = (cid?: string) => {\r\n    const newUrl = cid ? ipfsCidUrl(cid) : undefined\r\n    setUrl(newUrl)\r\n    onSuccess && onSuccess(newUrl)\r\n  }\r\n\r\n  useLayoutEffect(() => setUrl(initialUrl), [initialUrl])\r\n\r\n  return (\r\n    <Row\r\n      style={{\r\n        color: theme.colors.text.secondary,\r\n      }}\r\n      gutter={30}\r\n    >\r\n      <Col xs={24} md={7}>\r\n        <Space align=\"start\">\r\n          {url && (\r\n            <img\r\n              style={{\r\n                maxHeight: 80,\r\n                maxWidth: 120,\r\n                objectFit: 'cover',\r\n                objectPosition: 'center',\r\n                borderRadius: theme.radii.md,\r\n              }}\r\n              src={url}\r\n              alt=\"Uploaded user content\"\r\n            />\r\n          )}\r\n\r\n          {url ? (\r\n            <Button\r\n              icon={<CloseCircleFilled />}\r\n              type=\"text\"\r\n              onClick={() => setValue()}\r\n            />\r\n          ) : (\r\n            <Upload\r\n              accept=\"image/png, image/jpeg, image/jpg, image/gif\"\r\n              beforeUpload={file => {\r\n                if (maxSize !== undefined && file.size > maxSize * 1000) {\r\n                  const unit = maxSize > 999 ? ByteUnit.MB : ByteUnit.KB\r\n                  const formattedSize =\r\n                    unit === ByteUnit.MB\r\n                      ? (maxSize / 1000.0).toFixed(1)\r\n                      : maxSize.toString()\r\n                  message.error(\r\n                    t`File must be less than ${formattedSize}${unit}`,\r\n                  )\r\n                  return Upload.LIST_IGNORE\r\n                }\r\n              }}\r\n              customRequest={async req => {\r\n                setLoadingUpload(true)\r\n                const res = await pinFileToIpfs(req.file, metadata)\r\n                setValue(res.IpfsHash)\r\n                setLoadingUpload(false)\r\n              }}\r\n            >\r\n              <Button loading={loadingUpload} type=\"dashed\">\r\n                <FileImageOutlined /> {text ?? null}\r\n              </Button>\r\n            </Upload>\r\n          )}\r\n        </Space>\r\n      </Col>\r\n\r\n      <Col xs={24} md={17}>\r\n        {url?.length ? (\r\n          <span\r\n            style={{\r\n              fontSize: '.7rem',\r\n              wordBreak: 'break-all',\r\n              textOverflow: 'ellipsis',\r\n            }}\r\n          >\r\n            <Trans>\r\n              Uploaded to: <ExternalLink href={url}>{url}</ExternalLink>\r\n            </Trans>\r\n          </span>\r\n        ) : null}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n","import { NetworkContext } from 'contexts/networkContext'\r\nimport { useContext } from 'react'\r\n\r\nexport function useIsUserAddress(address: string | undefined) {\r\n  const { userAddress } = useContext(NetworkContext)\r\n\r\n  return (\r\n    address !== undefined &&\r\n    userAddress !== undefined &&\r\n    address.toLowerCase() === userAddress.toLowerCase()\r\n  )\r\n}\r\n","import {\r\n  REDUX_STORE_V1_PROJECT_VERSION,\r\n  defaultProjectState as defaultV1ProjectState,\r\n} from './slices/editingProject'\r\nimport {\r\n  REDUX_STORE_V2_PROJECT_VERSION,\r\n  defaultProjectState as defaultV2ProjectState,\r\n} from './slices/editingV2Project'\r\n\r\nimport { RootState, REDUX_STATE_LOCALSTORAGE_KEY } from './store'\r\n\r\ninterface PreloadedState {\r\n  reduxState: RootState\r\n}\r\n\r\nexport default function getLocalStoragePreloadedState(): RootState | undefined {\r\n  try {\r\n    const stateString = localStorage.getItem(REDUX_STATE_LOCALSTORAGE_KEY)\r\n    if (!stateString) {\r\n      return undefined\r\n    }\r\n\r\n    let parsedState: PreloadedState = JSON.parse(stateString)\r\n\r\n    // if theres a version mismatch, reset the editingProject state (for Juicebox V1).\r\n    if (\r\n      parsedState?.reduxState?.editingProject?.version !==\r\n      REDUX_STORE_V1_PROJECT_VERSION\r\n    ) {\r\n      parsedState = {\r\n        ...parsedState,\r\n        reduxState: {\r\n          ...parsedState.reduxState,\r\n          editingProject: defaultV1ProjectState,\r\n        },\r\n      }\r\n    }\r\n\r\n    // if theres a version mismatch, reset the editingV2Project state\r\n    if (\r\n      parsedState?.reduxState?.editingV2Project?.version !==\r\n      REDUX_STORE_V2_PROJECT_VERSION\r\n    ) {\r\n      parsedState = {\r\n        ...parsedState,\r\n        reduxState: {\r\n          ...parsedState.reduxState,\r\n          editingV2Project: defaultV2ProjectState,\r\n        },\r\n      }\r\n    }\r\n\r\n    // update local storage with the (maybe) new state\r\n    localStorage.setItem(\r\n      REDUX_STATE_LOCALSTORAGE_KEY,\r\n      JSON.stringify(parsedState),\r\n    )\r\n\r\n    return parsedState.reduxState\r\n  } catch (e) {\r\n    return undefined\r\n  }\r\n}\r\n","import { combineReducers, configureStore } from '@reduxjs/toolkit'\r\n\r\nimport editingProjectReducer from './slices/editingProject'\r\nimport editingV2ProjectReducer from './slices/editingV2Project'\r\nimport getLocalStoragePreloadedState from './localStoragePreload'\r\n\r\nexport const REDUX_STATE_LOCALSTORAGE_KEY = 'jb_redux_preloadedState'\r\n\r\nconst rootReducer = combineReducers({\r\n  editingProject: editingProjectReducer,\r\n  editingV2Project: editingV2ProjectReducer,\r\n})\r\n\r\nexport function createStore() {\r\n  return configureStore({\r\n    reducer: rootReducer,\r\n    devTools: process.env.NODE_ENV !== 'production',\r\n    preloadedState: getLocalStoragePreloadedState(),\r\n  })\r\n}\r\n\r\nconst store = createStore()\r\n\r\nstore.subscribe(() => {\r\n  localStorage.setItem(\r\n    REDUX_STATE_LOCALSTORAGE_KEY,\r\n    JSON.stringify({\r\n      reduxState: store.getState(),\r\n    }),\r\n  )\r\n})\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\nexport type AppDispatch = typeof store.dispatch\r\n\r\nexport default store\r\n","import { useEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { t } from '@lingui/macro'\r\n\r\nimport { DEFAULT_SITE_TITLE } from 'constants/siteMetadata'\r\n\r\nconst pageTitles = (): { [k in string]: string } => {\r\n  return {\r\n    '/create': t`Create project`,\r\n    '/projects': t`Projects`,\r\n  }\r\n}\r\n\r\nexport function usePageTitle({ title }: { title?: string } = {}) {\r\n  const location = useLocation()\r\n\r\n  useEffect(() => {\r\n    if (title) {\r\n      document.title = title\r\n      return\r\n    }\r\n\r\n    const name = pageTitles()[location.pathname]\r\n    document.title = name ? `${name} | Juicebox` : DEFAULT_SITE_TITLE\r\n  }, [location, title])\r\n}\r\n","export const DEFAULT_SITE_TITLE =\r\n  'Juicebox | The Decentralized Funding Platform'\r\n","import { Contract, EventFilter } from '@ethersproject/contracts'\r\nimport { V1UserContext } from 'contexts/v1/userContext'\r\nimport { V1ContractName } from 'models/v1/contracts'\r\nimport { V1Contracts } from 'models/v1/contracts'\r\nimport { useCallback, useContext, useState } from 'react'\r\nimport { useDeepCompareEffectNoCheck } from 'use-deep-compare-effect'\r\nimport * as Sentry from '@sentry/browser'\r\n\r\ntype ContractUpdateOn = {\r\n  contract?: ContractConfig\r\n  eventName?: string\r\n  topics?: EventFilter['topics']\r\n}[]\r\n\r\ntype ContractConfig = V1ContractName | Contract | undefined\r\n\r\nexport default function useContractReader<V>({\r\n  contract,\r\n  functionName,\r\n  args,\r\n  updateOn,\r\n  formatter,\r\n  callback,\r\n  valueDidChange,\r\n}: {\r\n  contract?: ContractConfig\r\n  functionName?: string\r\n  args?: unknown[] | null\r\n  updateOn?: ContractUpdateOn\r\n  formatter?: (val?: any) => V | undefined // eslint-disable-line @typescript-eslint/no-explicit-any\r\n  callback?: (val?: V) => void\r\n  valueDidChange?: (oldVal?: V, newVal?: V) => boolean\r\n}): V | undefined {\r\n  const [value, setValue] = useState<V | undefined>()\r\n\r\n  const { contracts } = useContext(V1UserContext)\r\n\r\n  const _formatter = useCallback(\r\n    (val: any) => (formatter ? formatter(val) : val), // eslint-disable-line @typescript-eslint/no-explicit-any\r\n    [formatter],\r\n  )\r\n  const _callback = useCallback(\r\n    (val: any) => (callback ? callback(val) : val), // eslint-disable-line @typescript-eslint/no-explicit-any\r\n    [callback],\r\n  )\r\n  const _valueDidChange = useCallback(\r\n    (a?: any, b?: any) => (valueDidChange ? valueDidChange(a, b) : a !== b), // eslint-disable-line @typescript-eslint/no-explicit-any\r\n    [valueDidChange],\r\n  )\r\n\r\n  useDeepCompareEffectNoCheck(() => {\r\n    async function getValue() {\r\n\r\n      const readContract = contractToRead(contract, contracts)\r\n\r\n\r\n      // eslint-disable-next-line no-console\r\n      console.log(contract,contracts,readContract,'lzy')\r\n      // eslint-disable-next-line no-console\r\n      if (!readContract || !functionName || args === null) return\r\n\r\n      try {\r\n        console.info('📚 Read >', functionName)\r\n\r\n        const result = await readContract[functionName](...(args ?? []))\r\n\r\n        const newValue = _formatter(result)\r\n\r\n        if (_valueDidChange(value, newValue)) {\r\n          console.info(\r\n            '📗 New >',\r\n            functionName,\r\n            { args },\r\n            { newValue },\r\n            { contract: readContract.address },\r\n          )\r\n          setValue(newValue)\r\n          _callback(newValue)\r\n        }\r\n      } catch (err) {\r\n        console.error(\r\n          '📕 Read error >',\r\n          functionName,\r\n          { args },\r\n          { err },\r\n          { contract: readContract.address },\r\n          contracts,\r\n        )\r\n\r\n        Sentry.captureException(err, {\r\n          tags: {\r\n            contract: typeof contract === 'string' ? contract : undefined,\r\n            contract_function: functionName,\r\n          },\r\n        })\r\n\r\n        setValue(_formatter(undefined))\r\n        _callback(_formatter(undefined))\r\n      }\r\n    }\r\n\r\n    getValue()\r\n\r\n    const listener = () => getValue()\r\n\r\n    const subscriptions: {\r\n      contract: Contract\r\n      filter: EventFilter\r\n    }[] = []\r\n\r\n    if (updateOn?.length) {\r\n      try {\r\n        // Subscribe listener to updateOn events\r\n        updateOn.forEach(u => {\r\n          const _contract = contractToRead(u.contract, contracts)\r\n\r\n          if (!u.eventName || !_contract) return\r\n\r\n          const filter = _contract.filters[u.eventName](...(u.topics ?? []))\r\n          _contract?.on(filter, listener)\r\n          subscriptions.push({\r\n            contract: _contract,\r\n            filter,\r\n          })\r\n        })\r\n      } catch (error) {\r\n        console.info('Read contract >', {\r\n          functionName,\r\n          error,\r\n        })\r\n      }\r\n    }\r\n\r\n    return () => subscriptions.forEach(s => s.contract.off(s.filter, listener))\r\n  }, [\r\n    contract,\r\n    contracts,\r\n    functionName,\r\n    updateOn,\r\n    args,\r\n    _formatter,\r\n    _callback,\r\n    _valueDidChange,\r\n  ])\r\n\r\n  return value\r\n}\r\n\r\nfunction contractToRead(\r\n  contractConfig?: ContractConfig,\r\n  contracts?: V1Contracts,\r\n): Contract | undefined {\r\n  if (!contractConfig) return\r\n\r\n  if (typeof contractConfig === 'string') {\r\n    return contracts ? contracts[contractConfig] : undefined\r\n  } else return contractConfig\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { V1ContractName } from 'models/v1/contracts'\r\nimport { useCallback, useState } from 'react'\r\nimport { fromWad } from 'utils/formatNumber'\r\n\r\nimport useContractReader from './v1/contractReader/ContractReader'\r\n\r\nexport function useEtherPrice() {\r\n  const [price, setPrice] = useState<number>()\r\n\r\n  useContractReader({\r\n    contract: V1ContractName.Prices,\r\n    functionName: 'getETHPriceFor',\r\n    args: ['1'], // $1 USD\r\n    callback: useCallback(\r\n      (val?: BigNumber) => setPrice(parseFloat(fromWad(val))),\r\n      [setPrice],\r\n    ),\r\n  })\r\n\r\n  return price\r\n}\r\n","import { TokenRef } from './token-ref'\r\n\r\ntype ProjectMetadata =\r\n  | ProjectMetadataV1\r\n  | ProjectMetadataV2\r\n  | ProjectMetadataV3\r\n  | ProjectMetadataV4\r\n\r\ntype ProjectMetadataV1 = Partial<{\r\n  name: string\r\n  description: string\r\n  logoUri: string\r\n  infoUri: string\r\n  payText: string\r\n  version: 1\r\n}>\r\n\r\n// add `tokens`\r\ntype ProjectMetadataV2 = Partial<\r\n  Omit<ProjectMetadataV1, 'version'> & {\r\n    version: 2\r\n    tokens: TokenRef[]\r\n  }\r\n>\r\n\r\n// `payText` -> `payButton`\r\ntype ProjectMetadataV3 = Partial<\r\n  Omit<ProjectMetadataV2, 'version' | 'payText'> & {\r\n    version: 3\r\n    twitter: string\r\n    discord: string\r\n    payButton: string\r\n    payDisclosure: string\r\n  }\r\n>\r\n\r\n// add `archived`\r\nexport type ProjectMetadataV4 = Partial<\r\n  Omit<ProjectMetadataV3, 'version'> & {\r\n    version: 4\r\n    archived: boolean\r\n  }\r\n>\r\n\r\n// Converts metadata of any version to latest version\r\nexport const consolidateMetadata = (\r\n  metadata: ProjectMetadata,\r\n): ProjectMetadataV4 => {\r\n  return {\r\n    ...metadata,\r\n    payButton:\r\n      (metadata as ProjectMetadataV3).payButton ??\r\n      (metadata as ProjectMetadataV2).payText,\r\n    version: 4,\r\n  }\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\n\r\nimport {\r\n  BaseProjectEntity,\r\n  BaseProjectEntityJson,\r\n  parseBaseProjectEntityJson,\r\n} from '../base/base-project-entity'\r\n\r\nexport interface Participant extends BaseProjectEntity {\r\n  wallet: string\r\n  totalPaid: BigNumber\r\n  balance: BigNumber\r\n  stakedBalance: BigNumber\r\n  unstakedBalance: BigNumber\r\n  lastPaidTimestamp: number\r\n}\r\n\r\nexport type ParticipantJson = Partial<\r\n  Record<keyof Participant, string> & BaseProjectEntityJson\r\n>\r\n\r\nexport const parseParticipantJson = (\r\n  j: ParticipantJson,\r\n): Partial<Participant> => ({\r\n  ...parseBaseProjectEntityJson(j),\r\n  wallet: j.wallet,\r\n  totalPaid: j.totalPaid ? BigNumber.from(j.totalPaid) : undefined,\r\n  balance: j.balance ? BigNumber.from(j.balance) : undefined,\r\n  stakedBalance: j.stakedBalance ? BigNumber.from(j.stakedBalance) : undefined,\r\n  unstakedBalance: j.unstakedBalance\r\n    ? BigNumber.from(j.unstakedBalance)\r\n    : undefined,\r\n  lastPaidTimestamp: j.lastPaidTimestamp\r\n    ? parseInt(j.lastPaidTimestamp)\r\n    : undefined,\r\n})\r\n","import { V1FundingCycle } from 'models/v1/fundingCycle'\r\n\r\nexport const deepEqFundingCycles = (a?: V1FundingCycle, b?: V1FundingCycle) => {\r\n  if (a && !b) return false\r\n  if (b && !a) return false\r\n  return (\r\n    a?.ballot === b?.ballot &&\r\n    a?.configured.eq(b?.configured ?? -1) &&\r\n    a?.currency === (b?.currency ?? -1) &&\r\n    a?.cycleLimit === (b?.cycleLimit ?? -1) &&\r\n    a?.discountRate.eq(b?.discountRate ?? -1) &&\r\n    a?.duration.eq(b?.duration ?? -1) &&\r\n    a?.fee.eq(b?.fee ?? -1) &&\r\n    a?.id.eq(b?.id ?? -1) &&\r\n    a?.metadata.eq(b?.metadata ?? -1) &&\r\n    a?.number.eq(b?.number ?? -1) &&\r\n    a?.basedOn.eq(b?.basedOn ?? -1) &&\r\n    a?.projectId.eq(b?.projectId ?? -1) &&\r\n    a?.start.eq(b?.start ?? -1) &&\r\n    a?.tapped.eq(b?.tapped ?? -1) &&\r\n    a?.target.eq(b?.target ?? -1) &&\r\n    a?.weight.eq(b?.weight ?? -1)\r\n  )\r\n}\r\n","import { BigNumber, BigNumberish } from '@ethersproject/bignumber'\r\nimport { V1ContractName } from 'models/v1/contracts'\r\n\r\nimport useContractReader from './ContractReader'\r\n\r\n/** Returns address of terminal contract used by project. */\r\nexport default function useTerminalOfProject(\r\n  projectId: BigNumberish | undefined,\r\n) {\r\n  return useContractReader<string>({\r\n    contract: V1ContractName.TerminalDirectory,\r\n    functionName: 'terminalOf',\r\n    args:\r\n      projectId !== undefined\r\n        ? [BigNumber.from(projectId).toHexString()]\r\n        : null,\r\n  })\r\n}\r\n","import { BigNumber, BigNumberish } from '@ethersproject/bignumber'\r\nimport { V1ContractName } from 'models/v1/contracts'\r\nimport { useMemo } from 'react'\r\n\r\nimport useContractReader from './ContractReader'\r\n\r\n/** Returns address of ERC20 token issued for project with `projectId`. */\r\nexport default function useTokenAddressOfProject(\r\n  projectId: BigNumberish | undefined,\r\n) {\r\n  return useContractReader<string>({\r\n    contract: V1ContractName.TicketBooth,\r\n    functionName: 'ticketsOf',\r\n    args: projectId ? [BigNumber.from(projectId).toHexString()] : null,\r\n    updateOn: useMemo(\r\n      () => [\r\n        {\r\n          contract: V1ContractName.TicketBooth,\r\n          eventName: 'Issue',\r\n          topics: projectId\r\n            ? [BigNumber.from(projectId).toHexString()]\r\n            : undefined,\r\n        },\r\n      ],\r\n      [projectId],\r\n    ),\r\n  })\r\n}\r\n","import { BigNumberish } from '@ethersproject/bignumber'\r\nimport { V1ContractName } from 'models/v1/contracts'\r\n\r\nimport useContractReader from './ContractReader'\r\n\r\n/** Returns address of project owner. */\r\nexport default function useOwnerOfProject(projectId: BigNumberish | undefined) {\r\n  return useContractReader<string>({\r\n    contract: V1ContractName.Projects,\r\n    functionName: 'ownerOf',\r\n    args: projectId ? [projectId] : null,\r\n  })\r\n}\r\n","import * as constants from '@ethersproject/constants'\r\nimport { t } from '@lingui/macro'\r\nimport { BallotStrategy } from 'models/ballot'\r\n\r\nexport function ballotStrategies(): BallotStrategy[] {\r\n  return [\r\n    {\r\n      name: t`No strategy`,\r\n      description: t`Any reconfiguration to an upcoming funding cycle will take effect once the current cycle ends. A project with no strategy may be vulnerable to being rug-pulled by its owner.`,\r\n      address: constants.AddressZero,\r\n    },\r\n    {\r\n      name: t`7-day delay`,\r\n      description: t`A reconfiguration to an upcoming funding cycle must be submitted at least 7 days before it starts.`,\r\n      address: '0xEf7480b6E7CEd228fFB0854fe49A428F562a8982',\r\n    },\r\n    {\r\n      name: t`3-day delay`,\r\n      description: t`A reconfiguration to an upcoming funding cycle must be submitted at least 3 days before it starts.`,\r\n      address: '0x6d6da471703647Fd8b84FFB1A29e037686dBd8b2',\r\n    },\r\n  ]\r\n}\r\n","export default function ExternalLink({\r\n  children,\r\n  ...props\r\n}: React.HTMLProps<HTMLAnchorElement>) {\r\n  return (\r\n    <a {...props} target=\"_blank\" rel=\"noopener noreferrer\">\r\n      {children}\r\n    </a>\r\n  )\r\n}\r\n","import { BigNumber, BigNumberish } from '@ethersproject/bignumber'\r\nimport { useErc20Contract } from 'hooks/Erc20Contract'\r\nimport { V1TerminalName } from 'models/v1/terminals'\r\nimport { bigNumbersDiff } from 'utils/bigNumbers'\r\n\r\nimport useContractReader from './ContractReader'\r\nimport useShouldUpdateTokens from './ShouldUpdateTokens'\r\n\r\n/** Returns ERC20 balance of `wallet`. Pass arguments for `projectId` and `terminalName` if the ERC20 is a project token, to update the returned value when relevant on-chain events are emitted. */\r\nexport default function useERC20BalanceOf(\r\n  tokenAddress: string | undefined,\r\n  wallet: string | undefined,\r\n  projectId?: BigNumberish,\r\n  terminalName?: V1TerminalName,\r\n) {\r\n  return useContractReader<BigNumber>({\r\n    contract: useErc20Contract(tokenAddress),\r\n    functionName: 'balanceOf',\r\n    args: wallet ? [wallet] : null,\r\n    valueDidChange: bigNumbersDiff,\r\n    updateOn: useShouldUpdateTokens(projectId, terminalName, wallet),\r\n  })\r\n}\r\n","import axios from 'axios'\r\nimport { TxGasOption } from 'models/tx-gas-option'\r\nimport { useQuery } from 'react-query'\r\n\r\nexport function useGasPriceQuery(speed: TxGasOption) {\r\n  return useQuery(\r\n    ['gas-price', speed],\r\n    async () => {\r\n      const response = await axios.get(\r\n        'https://ethgasstation.info/json/ethgasAPI.json',\r\n      )\r\n      return response.data[speed] * 100000000\r\n    },\r\n    {\r\n      refetchInterval: 30000,\r\n      staleTime: 30000,\r\n    },\r\n  )\r\n}\r\n","import { BigNumber, BigNumberish } from '@ethersproject/bignumber'\r\nimport { hexlify } from '@ethersproject/bytes'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { Deferrable } from '@ethersproject/properties'\r\nimport { JsonRpcSigner, TransactionRequest } from '@ethersproject/providers'\r\nimport { parseUnits } from '@ethersproject/units'\r\nimport Notify, { InitOptions, TransactionEvent } from 'bnc-notify'\r\nimport { NetworkContext } from 'contexts/networkContext'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { useCallback, useContext } from 'react'\r\n\r\nimport { emitErrorNotification } from 'utils/notifications'\r\n\r\nimport * as Sentry from '@sentry/browser'\r\nimport { t } from '@lingui/macro'\r\n\r\ntype TransactorCallback = (e?: TransactionEvent, signer?: JsonRpcSigner) => void\r\n\r\ntype TransactorOptions = {\r\n  value?: BigNumberish\r\n  onDone?: VoidFunction\r\n  onConfirmed?: TransactorCallback\r\n  onCancelled?: TransactorCallback\r\n  onError?: ErrorCallback\r\n}\r\n\r\nexport type Transactor = (\r\n  contract: Contract,\r\n  functionName: string,\r\n  args: any[], // eslint-disable-line @typescript-eslint/no-explicit-any\r\n  options?: TransactorOptions,\r\n) => Promise<boolean>\r\n\r\nexport type TransactorInstance<T = undefined> = (\r\n  args: T,\r\n  txOpts?: Omit<TransactorOptions, 'value'>,\r\n) => ReturnType<Transactor>\r\n\r\n// Check user has their wallet connected. If not, show select wallet prompt\r\nconst checkWalletConnected = (\r\n  onSelectWallet: VoidFunction,\r\n  userAddress?: string,\r\n) => {\r\n  if (!userAddress && onSelectWallet) {\r\n    onSelectWallet()\r\n  }\r\n}\r\n\r\n// wrapper around BlockNative's Notify.js\r\n// https://docs.blocknative.com/notify\r\nexport function useTransactor({\r\n  gasPrice,\r\n}: {\r\n  gasPrice?: BigNumber\r\n}): Transactor | undefined {\r\n  const {\r\n    signingProvider: provider,\r\n    onSelectWallet,\r\n    userAddress,\r\n  } = useContext(NetworkContext)\r\n\r\n  const { isDarkMode } = useContext(ThemeContext)\r\n\r\n  return useCallback(\r\n    async (\r\n      contract: Contract,\r\n      functionName: string,\r\n      args: any[], // eslint-disable-line @typescript-eslint/no-explicit-any\r\n      options?: TransactorOptions,\r\n    ) => {\r\n      if (!onSelectWallet) return false\r\n\r\n      if (!provider) {\r\n        onSelectWallet()\r\n        if (options?.onDone) options.onDone()\r\n        return false\r\n      }\r\n\r\n      checkWalletConnected(onSelectWallet, userAddress)\r\n\r\n      if (!provider) return false\r\n\r\n      const signer = provider.getSigner()\r\n\r\n      const network = await provider.getNetwork()\r\n\r\n      const notifyOpts: InitOptions = {\r\n        dappId: process.env.REACT_APP_BLOCKNATIVE_API_KEY,\r\n        system: 'ethereum',\r\n        networkId: network.chainId,\r\n        darkMode: isDarkMode,\r\n        transactionHandler: txInformation => {\r\n          console.info('HANDLE TX', txInformation)\r\n          if (options && txInformation.transaction.status === 'confirmed') {\r\n            options?.onConfirmed?.(txInformation, signer)\r\n            options?.onDone?.()\r\n          }\r\n          if (options && txInformation.transaction.status === 'cancelled') {\r\n            options?.onCancelled?.(txInformation, signer)\r\n          }\r\n        },\r\n      }\r\n      const notify = Notify(notifyOpts)\r\n\r\n      let etherscanNetwork = ''\r\n      if (network.name && network.chainId > 1) {\r\n        etherscanNetwork = network.name + '.'\r\n      }\r\n\r\n      let etherscanTxUrl = 'https://' + etherscanNetwork + 'etherscan.io/tx/'\r\n      if (network.chainId === 100) {\r\n        etherscanTxUrl = 'https://blockscout.com/poa/xdai/tx/'\r\n      }\r\n\r\n      const tx: Deferrable<TransactionRequest> =\r\n        options?.value !== undefined\r\n          ? contract[functionName](...args, { value: options.value })\r\n          : contract[functionName](...args)\r\n\r\n      const reportArgs = Object.values(contract.interface.functions)\r\n        .find(f => f.name === functionName)\r\n        ?.inputs.reduce(\r\n          (acc, input, i) => ({\r\n            ...acc,\r\n            [input.name]: args[i],\r\n          }),\r\n          {},\r\n        )\r\n\r\n      console.info(\r\n        '🧃 Calling ' + functionName + '() with args:',\r\n        reportArgs,\r\n        tx,\r\n      )\r\n\r\n      try {\r\n        let result\r\n\r\n        if (tx instanceof Promise) {\r\n          console.info('AWAITING TX', tx)\r\n          result = await tx\r\n        } else {\r\n          console.info('RUNNING TX', tx)\r\n\r\n          if (!tx.gasPrice) tx.gasPrice = gasPrice ?? parseUnits('4.1', 'gwei')\r\n\r\n          if (!tx.gasLimit) tx.gasLimit = hexlify(120000)\r\n\r\n          result = await signer.sendTransaction(tx)\r\n          await result.wait()\r\n        }\r\n        console.info('RESULT:', result)\r\n\r\n        // if it is a valid Notify.js network, use that, if not, just send a default notification\r\n        const isNotifyNetwork =\r\n          [1, 3, 4, 5, 42, 100].indexOf(network.chainId) >= 0\r\n\r\n        if (isNotifyNetwork) {\r\n          const { emitter } = notify.hash(result.hash)\r\n          emitter.on('all', transaction => ({\r\n            onclick: () => window.open(etherscanTxUrl + transaction.hash),\r\n          }))\r\n        } else {\r\n          console.info('LOCAL TX SENT', result.hash)\r\n          if (result.confirmations) {\r\n            options?.onConfirmed?.(result, signer)\r\n          } else {\r\n            options?.onCancelled?.(result, signer)\r\n          }\r\n        }\r\n\r\n        options?.onDone?.()\r\n\r\n        return true\r\n      } catch (e) {\r\n        const message = (e as Error).message\r\n\r\n        console.error('Transaction Error:', message)\r\n        Sentry.captureException(e, {\r\n          tags: {\r\n            contract_function: functionName,\r\n          },\r\n        })\r\n\r\n        let description: string\r\n\r\n        try {\r\n          let json = message.split('(error=')[1]\r\n          json = json.split(', method=')[0]\r\n          description = JSON.parse(json).message || message\r\n        } catch (_) {\r\n          description = message\r\n        }\r\n\r\n        emitErrorNotification(t`Transaction failed`, { description })\r\n\r\n        options?.onDone?.()\r\n\r\n        return false\r\n      }\r\n    },\r\n    [onSelectWallet, provider, isDarkMode, gasPrice, userAddress],\r\n  )\r\n}\r\n","import { Button, Col, Row, Space } from 'antd'\r\nimport { LockOutlined, CloseCircleOutlined } from '@ant-design/icons'\r\nimport CurrencySymbol from 'components/CurrencySymbol'\r\nimport FormattedAddress from 'components/FormattedAddress'\r\n\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { PropsWithChildren, useContext } from 'react'\r\nimport { formatDate } from 'utils/formatDate'\r\nimport {\r\n  formatWad,\r\n  parseWad,\r\n  percentToPerbicent,\r\n  permyriadToPercent,\r\n} from 'utils/formatNumber'\r\nimport { amountSubFee } from 'utils/math'\r\n\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\n\r\nimport { CurrencyName } from 'constants/currency'\r\nimport V1ProjectHandle from '../V1ProjectHandle'\r\nimport { EditingPayoutMod } from './types'\r\n\r\nconst FormattedRow = ({\r\n  label,\r\n  children,\r\n}: PropsWithChildren<{ label: string; disabled?: boolean }>) => {\r\n  return (\r\n    <Row gutter={10} style={{ width: '100%' }} align=\"middle\">\r\n      <Col span={7}>\r\n        <label>{label}:</label>{' '}\r\n      </Col>\r\n      <Col span={17}>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between',\r\n          }}\r\n        >\r\n          <span style={{ cursor: 'default' }}>{children}</span>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nconst FormattedPercentageAmount = ({\r\n  percent,\r\n  targetIsInfinite,\r\n  feePerbicent,\r\n  target,\r\n  currencyName,\r\n}: {\r\n  percent: number\r\n  feePerbicent: BigNumber\r\n  target: string\r\n  targetIsInfinite: boolean | undefined\r\n  currencyName: CurrencyName | undefined\r\n}) => {\r\n  return (\r\n    <Space size=\"large\">\r\n      <span>{permyriadToPercent(percent)}%</span>\r\n      {!targetIsInfinite && (\r\n        <span>\r\n          <CurrencySymbol currency={currencyName} />\r\n          {formatWad(\r\n            amountSubFee(parseWad(target), feePerbicent)\r\n              ?.mul(percent)\r\n              .div(10000),\r\n            { precision: 4, padEnd: true },\r\n          )}\r\n        </span>\r\n      )}\r\n    </Space>\r\n  )\r\n}\r\n\r\nexport function ProjectModInput({\r\n  mod,\r\n  index,\r\n  locked,\r\n  target,\r\n  targetIsInfinite,\r\n  currencyName,\r\n  feePercentage,\r\n  onSelect,\r\n  onDelete,\r\n}: {\r\n  mod: EditingPayoutMod\r\n  index: number\r\n  locked?: boolean\r\n  target: string\r\n  targetIsInfinite: boolean | undefined\r\n  currencyName: CurrencyName | undefined\r\n  feePercentage: string | undefined\r\n  onSelect?: (index: number) => void\r\n  onDelete?: (index: number) => void\r\n}) {\r\n  const {\r\n    theme: { colors, radii },\r\n  } = useContext(ThemeContext)\r\n\r\n  const feePerbicent = percentToPerbicent(feePercentage)\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        padding: 10,\r\n        border:\r\n          '1px solid ' +\r\n          (locked ? colors.stroke.disabled : colors.stroke.tertiary),\r\n        borderRadius: radii.md,\r\n      }}\r\n      key={mod.beneficiary ?? '' + index}\r\n    >\r\n      <Space\r\n        direction=\"vertical\"\r\n        style={{\r\n          width: '100%',\r\n          color: colors.text.primary,\r\n          cursor: locked ? 'default' : 'pointer',\r\n        }}\r\n        onClick={() => onSelect?.(index)}\r\n      >\r\n        {mod.projectId?.gt(0) ? (\r\n          <FormattedRow label={'Project'}>\r\n            <V1ProjectHandle projectId={mod.projectId} />\r\n          </FormattedRow>\r\n        ) : (\r\n          <FormattedRow label={'Address'}>\r\n            <FormattedAddress address={mod.beneficiary} />\r\n          </FormattedRow>\r\n        )}\r\n        {mod.projectId?.gt(0) && (\r\n          <FormattedRow label=\"Beneficiary\">\r\n            <FormattedAddress address={mod.beneficiary} />\r\n          </FormattedRow>\r\n        )}\r\n        <FormattedRow label=\"Percentage\">\r\n          <FormattedPercentageAmount\r\n            percent={mod.percent}\r\n            targetIsInfinite={targetIsInfinite}\r\n            feePerbicent={feePerbicent}\r\n            target={target}\r\n            currencyName={currencyName}\r\n          />\r\n        </FormattedRow>\r\n        {mod.lockedUntil ? (\r\n          <FormattedRow label=\"Locked\">\r\n            until {formatDate(mod.lockedUntil * 1000, 'yyyy-MM-DD')}\r\n          </FormattedRow>\r\n        ) : null}\r\n      </Space>\r\n\r\n      {locked ? (\r\n        <LockOutlined style={{ color: colors.icon.disabled }} />\r\n      ) : (\r\n        <Button\r\n          type=\"text\"\r\n          onClick={() => onDelete?.(index)}\r\n          icon={<CloseCircleOutlined />}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import { t, Trans } from '@lingui/macro'\r\nimport { DatePicker, Form, Modal, Select } from 'antd'\r\nimport CurrencySymbol from 'components/CurrencySymbol'\r\nimport { FormItems } from 'components/formItems'\r\nimport {\r\n  countDecimalPlaces,\r\n  ModalMode,\r\n  roundDown,\r\n  validateEthAddress,\r\n  validatePercentage,\r\n} from 'components/formItems/formHelpers'\r\nimport InputAccessoryButton from 'components/InputAccessoryButton'\r\nimport FormattedNumberInput from 'components/inputs/FormattedNumberInput'\r\nimport NumberSlider from 'components/inputs/NumberSlider'\r\n\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { isAddress } from 'ethers/lib/utils'\r\nimport { PayoutMod } from 'models/mods'\r\nimport { useCallback, useContext, useEffect, useState } from 'react'\r\nimport {\r\n  fromWad,\r\n  parseWad,\r\n  percentToPerbicent,\r\n  percentToPermyriad,\r\n  permyriadToPercent,\r\n} from 'utils/formatNumber'\r\nimport { amountSubFee } from 'utils/math'\r\nimport { getAmountFromPercent, getPercentFromAmount } from 'utils/v1/payouts'\r\n\r\nimport * as constants from '@ethersproject/constants'\r\nimport * as moment from 'moment'\r\n\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\n\r\nimport { useForm } from 'antd/lib/form/Form'\r\n\r\nimport { CurrencyName } from 'constants/currency'\r\nimport { EditingPayoutMod } from './types'\r\n\r\ntype ModType = 'project' | 'address'\r\n\r\ntype ProjectPayoutModsForm = {\r\n  projectId: string\r\n  handle: string\r\n  beneficiary: string\r\n  percent: number\r\n  amount: number\r\n  lockedUntil: moment.Moment\r\n}\r\n\r\nexport const ProjectPayoutModsModal = ({\r\n  visible,\r\n  mods,\r\n  editingModIndex,\r\n  target,\r\n  feePercentage,\r\n  targetIsInfinite,\r\n  currencyName,\r\n  onOk,\r\n  onCancel,\r\n}: {\r\n  visible: boolean\r\n  mods: PayoutMod[]\r\n  target: string\r\n  editingModIndex: number | undefined\r\n  feePercentage: string | undefined\r\n  targetIsInfinite?: boolean\r\n  currencyName: CurrencyName | undefined\r\n  onOk: (mods: EditingPayoutMod[]) => void\r\n  onCancel: VoidFunction\r\n}) => {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  const [modalMode, setModalMode] = useState<ModalMode>('Add') //either 'Add', or 'Edit'\r\n  const [editingModType, setEditingModType] = useState<ModType>('address')\r\n  const [editingModHandle, setEditingModHandle] = useState<string | BigNumber>()\r\n  const [, setEditingPercent] = useState<number>()\r\n  const [form] = useForm<ProjectPayoutModsForm>()\r\n\r\n  useEffect(() => {\r\n    const loadSelectedMod = (mod: EditingPayoutMod) => {\r\n      setModalMode('Edit')\r\n      setEditingModType(\r\n        BigNumber.from(mod.projectId ?? '0').gt(0) ? 'project' : 'address',\r\n      )\r\n      setEditingModHandle(mod.handle ?? mod.projectId)\r\n      const percent = parseFloat(permyriadToPercent(mod.percent))\r\n      setEditingPercent(percent)\r\n      form.setFieldsValue({\r\n        ...mod,\r\n        handle: mod.handle,\r\n        beneficiary: mod.beneficiary,\r\n        percent,\r\n        projectId: mod.projectId?.toString(),\r\n        amount: getAmountFromPercent(percent, target, feePercentage),\r\n        lockedUntil: mod.lockedUntil\r\n          ? moment.default(mod.lockedUntil * 1000)\r\n          : undefined,\r\n      })\r\n    }\r\n\r\n    const resetModal = () => {\r\n      form.resetFields()\r\n      setModalMode('Add')\r\n      setEditingModType('address')\r\n      setEditingModHandle(undefined)\r\n      setEditingPercent(undefined)\r\n    }\r\n\r\n    if (editingModIndex === undefined) {\r\n      resetModal()\r\n      return\r\n    }\r\n\r\n    const mod = mods[editingModIndex]\r\n    loadSelectedMod(mod)\r\n  }, [editingModIndex, feePercentage, form, mods, target])\r\n\r\n  const feePerbicent = percentToPerbicent(feePercentage)\r\n\r\n  // Validates the amount and percentage (ensures percent !== 0 or > 100)\r\n  const validatePayout = () => {\r\n    return validatePercentage(form.getFieldValue('percent'))\r\n  }\r\n\r\n  // Validates new payout receiving address\r\n  const validatePayoutAddress = () => {\r\n    return validateEthAddress(\r\n      form.getFieldValue('beneficiary'),\r\n      mods,\r\n      modalMode,\r\n      editingModIndex,\r\n    )\r\n  }\r\n\r\n  const isPercentBeingRounded = () => {\r\n    return countDecimalPlaces(form.getFieldValue('percent')) > 2\r\n  }\r\n\r\n  const roundedDownAmount = useCallback(() => {\r\n    const percent = roundDown(form.getFieldValue('percent'), 2)\r\n    const targetSubFee = parseFloat(\r\n      fromWad(amountSubFee(parseWad(target), feePerbicent)),\r\n    )\r\n    return parseFloat(((percent * targetSubFee) / 100).toFixed(4))\r\n  }, [feePerbicent, form, target])\r\n\r\n  const onAmountChange = (newAmount: number | undefined) => {\r\n    const newPercent = getPercentFromAmount(newAmount, target, feePercentage)\r\n    setEditingPercent(newPercent)\r\n    form.setFieldsValue({ amount: newAmount })\r\n    form.setFieldsValue({ percent: newPercent })\r\n  }\r\n\r\n  const validateAndSave = async () => {\r\n    await form.validateFields()\r\n\r\n    const handle = form.getFieldValue('handle')\r\n    const beneficiary = form.getFieldValue('beneficiary')\r\n    const percent = percentToPermyriad(form.getFieldValue('percent')).toNumber()\r\n    const _projectId = form.getFieldValue('projectId')\r\n    const projectId = _projectId ? BigNumber.from(_projectId) : undefined\r\n    const _lockedUntil = form.getFieldValue('lockedUntil') as\r\n      | moment.Moment\r\n      | undefined\r\n\r\n    const lockedUntil = _lockedUntil\r\n      ? Math.round(_lockedUntil.valueOf() / 1000)\r\n      : undefined\r\n\r\n    // Store handle in mod object only to repopulate handle input while editing\r\n    const newMod = { beneficiary, percent, handle, lockedUntil, projectId }\r\n\r\n    let modsToReturn = [...mods, newMod]\r\n    if (editingModIndex !== undefined && editingModIndex < mods.length) {\r\n      modsToReturn = mods.map((m, i) =>\r\n        i === editingModIndex ? { ...m, ...newMod } : m,\r\n      )\r\n    }\r\n    onOk(modsToReturn)\r\n\r\n    return true\r\n  }\r\n\r\n  const discardAndClose = () => {\r\n    onCancel()\r\n    return true\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={modalMode === 'Edit' ? t`Edit payout` : t`Add new payout`}\r\n      visible={visible}\r\n      onOk={validateAndSave}\r\n      okText={modalMode === 'Edit' ? t`Save payout` : t`Add payout`}\r\n      onCancel={discardAndClose}\r\n      destroyOnClose\r\n    >\r\n      <Form\r\n        form={form}\r\n        layout=\"vertical\"\r\n        onKeyDown={e => {\r\n          if (e.key === 'Enter') validateAndSave()\r\n        }}\r\n      >\r\n        <Form.Item>\r\n          <Select\r\n            value={editingModType}\r\n            onChange={type => {\r\n              setEditingModType(type)\r\n              if (type === 'address')\r\n                form.setFieldsValue({ handle: undefined, projectId: undefined })\r\n            }}\r\n          >\r\n            <Select.Option value=\"address\">\r\n              <Trans>Wallet address</Trans>\r\n            </Select.Option>\r\n            <Select.Option value=\"project\">\r\n              <Trans>Juicebox project</Trans>\r\n            </Select.Option>\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        {editingModType === 'address' ? (\r\n          <FormItems.EthAddress\r\n            name=\"beneficiary\"\r\n            defaultValue={form.getFieldValue('beneficiary')}\r\n            formItemProps={{\r\n              label: 'Address',\r\n              rules: [\r\n                {\r\n                  validator: validatePayoutAddress,\r\n                },\r\n              ],\r\n            }}\r\n            onAddressChange={beneficiary =>\r\n              form.setFieldsValue({ beneficiary })\r\n            }\r\n          />\r\n        ) : (\r\n          <FormItems.ProjectHandleFormItem\r\n            name=\"handle\"\r\n            requireState=\"exists\"\r\n            initialValue={editingModHandle}\r\n            returnValue=\"id\"\r\n            onValueChange={id => form.setFieldsValue({ projectId: id })}\r\n            formItemProps={{\r\n              label: t`Project handle`,\r\n            }}\r\n            required\r\n          />\r\n        )}\r\n        {editingModType === 'project' ? (\r\n          <FormItems.EthAddress\r\n            name=\"beneficiary\"\r\n            defaultValue={form.getFieldValue('beneficiary')}\r\n            formItemProps={{\r\n              label: t`Address`,\r\n              extra: t`The address that should receive the tokens minted from paying this project.`,\r\n              rules: [\r\n                {\r\n                  validator: () => {\r\n                    const address = form.getFieldValue('beneficiary')\r\n                    if (!address || !isAddress(address))\r\n                      return Promise.reject('Address is required')\r\n                    else if (address === constants.AddressZero)\r\n                      return Promise.reject('Cannot use zero address.')\r\n                    else return Promise.resolve()\r\n                  },\r\n                },\r\n              ],\r\n            }}\r\n            onAddressChange={beneficiary =>\r\n              form.setFieldsValue({ beneficiary })\r\n            }\r\n          />\r\n        ) : null}\r\n\r\n        {/* Only show amount input if project has a funding target */}\r\n        {!targetIsInfinite ? (\r\n          <Form.Item\r\n            label=\"Amount\"\r\n            // Display message to user if the amount they inputted\r\n            // will result in percentage with > 2 decimal places\r\n            // and no error is present\r\n            className=\"ant-form-item-extra-only\"\r\n            extra={\r\n              isPercentBeingRounded() &&\r\n              !(form.getFieldValue('percent') > 100) ? (\r\n                <div>\r\n                  <Trans>\r\n                    Will be rounded to{' '}\r\n                    <CurrencySymbol currency={currencyName} />\r\n                    {roundedDownAmount()}\r\n                  </Trans>\r\n                </div>\r\n              ) : null\r\n            }\r\n          >\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                color: colors.text.primary,\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <FormattedNumberInput\r\n                value={form.getFieldValue('amount')}\r\n                placeholder={'0'}\r\n                onChange={amount => onAmountChange(parseFloat(amount || '0'))}\r\n                formItemProps={{\r\n                  rules: [{ validator: validatePayout }],\r\n                }}\r\n                accessory={<InputAccessoryButton content={currencyName} />}\r\n              />\r\n            </div>\r\n          </Form.Item>\r\n        ) : null}\r\n\r\n        <Form.Item label={t`Percent`}>\r\n          <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <span style={{ flex: 1 }}>\r\n              <NumberSlider\r\n                onChange={(percent: number | undefined) => {\r\n                  const newAmount = getAmountFromPercent(\r\n                    percent ?? 0,\r\n                    target,\r\n                    feePercentage,\r\n                  )\r\n                  form.setFieldsValue({ amount: newAmount })\r\n                  form.setFieldsValue({ percent })\r\n                  setEditingPercent(percent)\r\n                }}\r\n                step={0.01}\r\n                defaultValue={form.getFieldValue('percent') || 0}\r\n                sliderValue={form.getFieldValue('percent')}\r\n                suffix=\"%\"\r\n                name=\"percent\"\r\n                formItemProps={{\r\n                  rules: [{ validator: validatePayout }],\r\n                }}\r\n              />\r\n            </span>\r\n          </div>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"lockedUntil\"\r\n          label={t`Lock until`}\r\n          extra={\r\n            <Trans>\r\n              If locked, this split can't be edited or removed until the lock\r\n              expires or the funding cycle is reconfigured.\r\n            </Trans>\r\n          }\r\n        >\r\n          <DatePicker />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { Button, Form, Space } from 'antd'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { useContext, useState } from 'react'\r\nimport { permyriadToPercent } from 'utils/formatNumber'\r\nimport FormattedAddress from 'components/FormattedAddress'\r\nimport { FormItemExt } from 'components/formItems/formItemExt'\r\n\r\nimport { CurrencyName } from 'constants/currency'\r\n\r\nimport { ProjectModInput } from './ProjectModInput'\r\nimport { ProjectPayoutModsModal } from './ProjectPayoutModsModal'\r\nimport { EditingPayoutMod } from './types'\r\n\r\nexport default function ProjectPayoutMods({\r\n  target,\r\n  currencyName,\r\n  feePercentage,\r\n  lockedMods,\r\n  mods,\r\n  onModsChanged,\r\n  targetIsInfinite,\r\n  formItemProps,\r\n}: {\r\n  target: string\r\n  currencyName: CurrencyName | undefined\r\n  feePercentage: string | undefined\r\n  // TODO: Do we need a separate locked mods\r\n  lockedMods?: EditingPayoutMod[]\r\n  mods: EditingPayoutMod[] | undefined\r\n  onModsChanged: (mods: EditingPayoutMod[]) => void\r\n  targetIsInfinite?: boolean\r\n} & FormItemExt) {\r\n  const [editingModalVisible, setEditingModalVisible] = useState<boolean>(false)\r\n  const [editingModIndex, setEditingModIndex] = useState<number>()\r\n\r\n  const { owner } = useContext(V1ProjectContext)\r\n\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  const openModalWithModIndex = (index: number) => {\r\n    setEditingModIndex(index)\r\n    setEditingModalVisible(true)\r\n  }\r\n\r\n  if (!mods) return null\r\n\r\n  const total = mods\r\n    .concat(lockedMods ? lockedMods : [])\r\n    .reduce(\r\n      (acc, curr) => acc + parseFloat(permyriadToPercent(curr.percent ?? '0')),\r\n      0,\r\n    )\r\n\r\n  return (\r\n    <Form.Item\r\n      {...formItemProps}\r\n      style={{ ...formItemProps?.style, display: 'block' }}\r\n    >\r\n      <Space\r\n        direction=\"vertical\"\r\n        style={{ width: '100%', minHeight: 0 }}\r\n        size=\"large\"\r\n      >\r\n        {lockedMods && (\r\n          <Space style={{ width: '100%' }} direction=\"vertical\" size=\"small\">\r\n            {lockedMods.map((v, i) =>\r\n              ProjectModInput({\r\n                mod: v,\r\n                index: i,\r\n                locked: true,\r\n                target,\r\n                targetIsInfinite,\r\n                currencyName,\r\n                feePercentage,\r\n              }),\r\n            )}\r\n          </Space>\r\n        )}\r\n        <Space style={{ width: '100%' }} direction=\"vertical\" size=\"small\">\r\n          {mods.map((v, i) => (\r\n            <ProjectModInput\r\n              mod={v}\r\n              key={i}\r\n              index={i}\r\n              target={target}\r\n              targetIsInfinite={targetIsInfinite}\r\n              currencyName={currencyName}\r\n              feePercentage={feePercentage}\r\n              onSelect={openModalWithModIndex}\r\n              onDelete={(index: number) => {\r\n                onModsChanged([\r\n                  ...mods.slice(0, index),\r\n                  ...mods.slice(index + 1),\r\n                ])\r\n              }}\r\n            />\r\n          ))}\r\n        </Space>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            color: colors.text.secondary,\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              color: total > 100 ? colors.text.failure : colors.text.secondary,\r\n            }}\r\n          >\r\n            <Trans>Total: {total.toFixed(2)}%</Trans>\r\n          </div>\r\n          <div>\r\n            {owner ? (\r\n              <Trans>\r\n                {(100 - total).toFixed(2)}% to{' '}\r\n                <FormattedAddress address={owner} />\r\n              </Trans>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <Button\r\n          type=\"dashed\"\r\n          onClick={() => {\r\n            setEditingModalVisible(true)\r\n          }}\r\n          block\r\n        >\r\n          <Trans>Add a payout</Trans>\r\n        </Button>\r\n      </Space>\r\n\r\n      <ProjectPayoutModsModal\r\n        visible={editingModalVisible}\r\n        target={target}\r\n        feePercentage={feePercentage}\r\n        mods={mods}\r\n        editingModIndex={editingModIndex}\r\n        targetIsInfinite={targetIsInfinite}\r\n        currencyName={currencyName}\r\n        onOk={newMods => {\r\n          onModsChanged(newMods)\r\n          setEditingModIndex(undefined)\r\n          setEditingModalVisible(false)\r\n        }}\r\n        onCancel={() => {\r\n          setEditingModalVisible(false)\r\n          setEditingModIndex(undefined)\r\n        }}\r\n      />\r\n    </Form.Item>\r\n  )\r\n}\r\n","import { BigNumber, BigNumberish } from '@ethersproject/bignumber'\r\n\r\nimport * as constants from '@ethersproject/constants'\r\nimport { V1FundingCycle, V1FundingCycleMetadata } from 'models/v1/fundingCycle'\r\nimport unsafeFundingCycleProperties from 'utils/unsafeFundingCycleProperties'\r\nimport { perbicentToPercent } from 'utils/formatNumber'\r\n\r\nimport { getBallotStrategyByAddress } from 'constants/v1/ballotStrategies/getBallotStrategiesByAddress'\r\n\r\nimport { EditingV1FundingCycle } from './serializers'\r\nimport { FundingCycleRiskFlags } from 'constants/fundingWarningText'\r\n\r\nconst DISCOUNT_RATE_NON_RECURRING = 201\r\n\r\n// packed `metadata` format: 0btTPRRRRRRRRBBBBBBBBrrrrrrrrVVVVVVVV\r\n// V: version (bits 0-7)\r\n// r: reserved (bits 8-15)\r\n// B: bondingCurveRate (bits 16-23)\r\n// R: reconfigurationBondingCurveRate (bits 24-31)\r\n// P: payIsPaused (bit 32)\r\n// T: ticketPrintingIsAllowed (bits 33)\r\n// t: treasuryExtension (bits 34-194)\r\n\r\nconst bits8 = 0b11111111\r\nconst bits1 = 0b1\r\n\r\nexport const decodeFundingCycleMetadata = (\r\n  metadata?: BigNumber,\r\n): V1FundingCycleMetadata | undefined => {\r\n  if (!metadata) return\r\n\r\n  const version = metadata\r\n    .and(bits8)\r\n    .toNumber() as V1FundingCycleMetadata['version']\r\n\r\n  return {\r\n    version,\r\n    reservedRate: metadata.shr(8).and(bits8).toNumber(),\r\n    bondingCurveRate: metadata.shr(16).and(bits8).toNumber(),\r\n    reconfigurationBondingCurveRate: metadata.shr(24).and(bits8).toNumber(),\r\n    payIsPaused:\r\n      version === 0 ? null : Boolean(metadata.shr(32).and(bits1).toNumber()),\r\n    ticketPrintingIsAllowed:\r\n      version === 0 ? null : Boolean(metadata.shr(33).and(bits1).toNumber()),\r\n    treasuryExtension: version === 0 ? null : metadata.shr(34).toHexString(),\r\n  } as V1FundingCycleMetadata\r\n}\r\n\r\nexport const encodeFundingCycleMetadata = (\r\n  reserved: BigNumberish,\r\n  bondingCurveRate: BigNumberish,\r\n  reconfigurationBondingCurveRate: BigNumberish,\r\n  payIsPaused: boolean | null,\r\n  ticketPrintingIsAllowed: boolean | null,\r\n  treasuryExtension: string | null,\r\n  version: 1 | 0,\r\n): BigNumber => {\r\n  let encoded = BigNumber.from(version)\r\n    .or(BigNumber.from(reserved).shl(8))\r\n    .or(BigNumber.from(bondingCurveRate).shl(16))\r\n    .or(BigNumber.from(reconfigurationBondingCurveRate).shl(24))\r\n\r\n  if (payIsPaused !== null) {\r\n    encoded = encoded.or(BigNumber.from(payIsPaused ? 1 : 0).shl(32))\r\n  }\r\n  if (ticketPrintingIsAllowed !== null) {\r\n    encoded = encoded.or(\r\n      BigNumber.from(ticketPrintingIsAllowed ? 1 : 0).shl(33),\r\n    )\r\n  }\r\n  if (treasuryExtension !== null) {\r\n    encoded = encoded.or(BigNumber.from(treasuryExtension).shl(34))\r\n  }\r\n\r\n  return encoded\r\n}\r\n\r\n/**\r\n * From the FundingCycles.sol contract:\r\n *    If discountRate is 201, an non-recurring funding cycle will get made.\r\n */\r\nexport const isRecurring = (\r\n  fundingCycle: V1FundingCycle | EditingV1FundingCycle,\r\n) => fundingCycle.discountRate.lt(DISCOUNT_RATE_NON_RECURRING)\r\n\r\nexport const hasFundingTarget = (\r\n  fundingCycle: Pick<V1FundingCycle | EditingV1FundingCycle, 'target'>,\r\n) => fundingCycle.target.lt(constants.MaxUint256)\r\n\r\nexport const hasFundingDuration = (\r\n  fundingCycle: Pick<V1FundingCycle | EditingV1FundingCycle, 'duration'>,\r\n) => fundingCycle.duration && !fundingCycle.duration.eq(constants.AddressZero)\r\n\r\n/**\r\n * Mark various funding cycle properties as \"unsafe\",\r\n * based on a subjective interpretation.\r\n *\r\n * If a value in the returned object is true, it is potentially unsafe.\r\n */\r\nexport const getUnsafeV1FundingCycleProperties = (\r\n  fundingCycle: V1FundingCycle,\r\n): FundingCycleRiskFlags => {\r\n  const metadata = decodeFundingCycleMetadata(fundingCycle.metadata)\r\n  const ballotAddress = getBallotStrategyByAddress(fundingCycle.ballot).address\r\n  const reservedRatePercentage = parseFloat(\r\n    perbicentToPercent(metadata?.reservedRate),\r\n  )\r\n  const allowMinting = Boolean(metadata?.ticketPrintingIsAllowed)\r\n\r\n  return unsafeFundingCycleProperties({\r\n    ballotAddress,\r\n    reservedRatePercentage,\r\n    hasFundingDuration: hasFundingDuration(fundingCycle),\r\n    allowMinting,\r\n  })\r\n}\r\n\r\n/**\r\n * Return number of risk indicators for a funding cycle.\r\n * 0 if we deem a project \"safe\" to contribute to.\r\n */\r\nexport const fundingCycleRiskCount = (fundingCycle: V1FundingCycle): number => {\r\n  return Object.values(getUnsafeV1FundingCycleProperties(fundingCycle)).filter(\r\n    v => v === true,\r\n  ).length\r\n}\r\n","import CurrencySymbol from 'components/CurrencySymbol'\r\n\r\nimport { useEtherPrice } from 'hooks/EtherPrice'\r\n\r\nimport { CURRENCY_METADATA } from 'constants/currency'\r\n\r\nexport default function EthPrice() {\r\n  const price = useEtherPrice()\r\n  return (\r\n    <div>\r\n      <CurrencySymbol currency=\"USD\" />\r\n      {price?.toFixed(2)}/{CURRENCY_METADATA.ETH.name}\r\n    </div>\r\n  )\r\n}\r\n","import EthPrice from 'components/Navbar/EthPrice'\r\n\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { useEthBalanceQuery } from 'hooks/EthBalance'\r\nimport { useContext } from 'react'\r\nimport { formatWad } from 'utils/formatNumber'\r\n\r\nimport CurrencySymbol from 'components/CurrencySymbol'\r\n\r\nexport default function Balance({\r\n  address,\r\n  showEthPrice,\r\n}: {\r\n  address: string | undefined\r\n  showEthPrice?: boolean\r\n}) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  const { data: balance } = useEthBalanceQuery(address)\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        verticalAlign: 'middle',\r\n        lineHeight: 1,\r\n        color: colors.text.tertiary,\r\n      }}\r\n    >\r\n      <CurrencySymbol currency=\"ETH\" />\r\n      {formatWad(balance, { precision: 4 }) ?? '--'}\r\n      {showEthPrice && (\r\n        <div style={{ color: colors.text.tertiary }}>\r\n          <EthPrice />\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import Modal from 'antd/lib/modal/Modal'\r\nimport { t } from '@lingui/macro'\r\nimport { FormInstance, Form, DatePicker } from 'antd'\r\n\r\nimport { FormItems } from 'components/formItems'\r\n\r\nimport NumberSlider from 'components/inputs/NumberSlider'\r\nimport { useState } from 'react'\r\n\r\ntype ModalMode = 'Add' | 'Edit' | undefined\r\n\r\nexport default function ReservedTokenReceiverModal({\r\n  mode,\r\n  visible,\r\n  form,\r\n  onOk,\r\n  onCancel,\r\n  validateReservedTokenReceiver,\r\n  validateSlider,\r\n  reservedRate,\r\n}: {\r\n  mode: ModalMode\r\n  visible: boolean\r\n  form: FormInstance\r\n  onOk: VoidFunction\r\n  onCancel: VoidFunction\r\n  validateReservedTokenReceiver: VoidFunction\r\n  validateSlider: VoidFunction\r\n  reservedRate: number\r\n}) {\r\n  const [percent, setPercent] = useState<number | undefined>(\r\n    form.getFieldValue('percent'),\r\n  )\r\n\r\n  // Clarifies that the slider percentage is of the overall reserved allocation\r\n  // and shows the percentage of all newly minted tokens only if percent != 0\r\n  function generateExtra() {\r\n    // Initially the state (percent) is not loaded, so we fall back on the form.\r\n    // But then subsequently, since the form does not update the UI immediately, we use the state\r\n    const percentOfReserved = percent ?? form.getFieldValue('percent')\r\n\r\n    const realTokenAllocation = (reservedRate ?? 0) * percentOfReserved\r\n    const realTokenAllocationPercent = (realTokenAllocation / 100).toFixed(2)\r\n    const extra =\r\n      t`The percentage this individual receives of the overall ${reservedRate}% reserved token allocation` +\r\n      `${\r\n        realTokenAllocation\r\n          ? ' ' +\r\n            t`(${realTokenAllocationPercent}% of all newly minted tokens).`\r\n          : '.'\r\n      }`\r\n    return extra\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={\r\n        mode === 'Add' ? t`Add token allocation` : t`Edit token allocation`\r\n      } // Full sentences for translation purposes\r\n      visible={visible}\r\n      // Must reset the state in case user opens this modal for another receiver straight away\r\n      onOk={() => {\r\n        setPercent(undefined)\r\n        onOk()\r\n      }}\r\n      okText={\r\n        mode === 'Add' ? t`Add token allocation` : t`Save token allocation`\r\n      }\r\n      onCancel={() => {\r\n        setPercent(undefined)\r\n        onCancel()\r\n      }}\r\n      destroyOnClose\r\n    >\r\n      <Form\r\n        form={form}\r\n        layout=\"vertical\"\r\n        onKeyDown={e => {\r\n          if (e.key === 'Enter') onOk()\r\n        }}\r\n      >\r\n        <FormItems.EthAddress\r\n          name=\"beneficiary\"\r\n          defaultValue={form.getFieldValue('beneficiary')}\r\n          formItemProps={{\r\n            label: t`Beneficiary address`,\r\n            extra: t`This address will receive the tokens minted from paying this project.`,\r\n            rules: [\r\n              {\r\n                validator: validateReservedTokenReceiver,\r\n              },\r\n            ],\r\n            required: true,\r\n          }}\r\n          onAddressChange={beneficiary => form.setFieldsValue({ beneficiary })}\r\n        />\r\n\r\n        <Form.Item label={t`Percentage allocation`} required={true}>\r\n          <NumberSlider\r\n            onChange={(percent: number | undefined) => {\r\n              setPercent(percent ?? form.getFieldValue('percent'))\r\n              form.setFieldsValue({ percent })\r\n            }}\r\n            step={0.01}\r\n            defaultValue={0}\r\n            sliderValue={form.getFieldValue('percent') ?? 0}\r\n            suffix=\"%\"\r\n            name=\"percent\"\r\n            formItemProps={{\r\n              rules: [{ validator: validateSlider }],\r\n              extra: generateExtra(),\r\n            }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"lockedUntil\"\r\n          label={t`Lock until`}\r\n          extra={t`If locked, this can't be edited or removed until the lock expires or the funding cycle is reconfigured.`}\r\n        >\r\n          <DatePicker />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  )\r\n}\r\n","import { DeleteOutlined, LockOutlined } from '@ant-design/icons'\r\nimport { t, Trans } from '@lingui/macro'\r\n\r\nimport { Button, Col, Form, Row, Space, Tooltip } from 'antd'\r\n\r\nimport { useForm } from 'antd/lib/form/Form'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { TicketMod } from 'models/mods'\r\nimport * as moment from 'moment'\r\nimport {\r\n  CSSProperties,\r\n  useCallback,\r\n  useContext,\r\n  useMemo,\r\n  useState,\r\n} from 'react'\r\nimport { formatDate } from 'utils/formatDate'\r\nimport { permyriadToPercent, percentToPermyriad } from 'utils/formatNumber'\r\n\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\n\r\nimport ReservedTokenReceiverModal from 'components/modals/ReservedTokenReceiverModal'\r\nimport {\r\n  validateEthAddress,\r\n  validatePercentage,\r\n} from 'components/formItems/formHelpers'\r\n\r\nimport FormattedAddress from 'components/FormattedAddress'\r\nimport { FormItemExt } from 'components/formItems/formItemExt'\r\n\r\ntype ModalMode = 'Add' | 'Edit' | undefined\r\n\r\nexport default function ProjectTicketMods({\r\n  name,\r\n  lockedMods,\r\n  mods,\r\n  reservedRate,\r\n  style = {},\r\n  onModsChanged,\r\n  formItemProps,\r\n}: {\r\n  lockedMods?: TicketMod[]\r\n  mods: TicketMod[] | undefined\r\n  reservedRate: number\r\n  style?: CSSProperties\r\n  onModsChanged: (mods: TicketMod[]) => void\r\n} & FormItemExt) {\r\n  const [form] = useForm<{\r\n    beneficiary: string\r\n    percent: number\r\n    lockedUntil: moment.Moment\r\n  }>()\r\n  const [editingModIndex, setEditingModIndex] = useState<number>() // index of the mod currently being edited (edit modal open)\r\n  const [modalMode, setModalMode] = useState<ModalMode>() //either 'Add', 'Edit' or undefined\r\n  const { owner } = useContext(V1ProjectContext)\r\n\r\n  const {\r\n    theme: { colors, radii },\r\n  } = useContext(ThemeContext)\r\n\r\n  const gutter = 10\r\n\r\n  const modInput = useCallback(\r\n    (mod: TicketMod, index: number, locked?: boolean) => {\r\n      if (!mods) return\r\n\r\n      return (\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            padding: 10,\r\n            border:\r\n              '1px solid ' +\r\n              (locked ? colors.stroke.disabled : colors.stroke.tertiary),\r\n            borderRadius: radii.md,\r\n          }}\r\n          key={mod.beneficiary ?? '' + index}\r\n        >\r\n          <Space\r\n            direction=\"vertical\"\r\n            style={{\r\n              width: '100%',\r\n              color: colors.text.primary,\r\n              cursor: locked ? 'default' : 'pointer',\r\n            }}\r\n            onClick={() => {\r\n              if (locked) return\r\n\r\n              const percent = parseFloat(permyriadToPercent(mod.percent))\r\n\r\n              form.setFieldsValue({\r\n                ...mod,\r\n                percent,\r\n                lockedUntil: mod.lockedUntil\r\n                  ? moment.default(mod.lockedUntil * 1000)\r\n                  : undefined,\r\n              })\r\n              setEditingModIndex(index)\r\n              setModalMode('Edit')\r\n            }}\r\n          >\r\n            <Row gutter={gutter} style={{ width: '100%' }} align=\"middle\">\r\n              <Col span={7}>\r\n                <label>Address</label>{' '}\r\n              </Col>\r\n              <Col span={17}>\r\n                <div\r\n                  style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'space-between',\r\n                  }}\r\n                >\r\n                  <span style={{ cursor: 'pointer' }}>\r\n                    <FormattedAddress address={mod.beneficiary} />\r\n                  </span>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row gutter={gutter} style={{ width: '100%' }} align=\"middle\">\r\n              <Col span={7}>\r\n                <label>Percentage</label>\r\n              </Col>\r\n              <Col span={17}>\r\n                <div\r\n                  style={{\r\n                    display: 'flex',\r\n                    width: '100%',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'center',\r\n                  }}\r\n                >\r\n                  <span\r\n                    style={{\r\n                      marginRight: 10,\r\n                      width: 100,\r\n                      maxWidth: 100,\r\n                    }}\r\n                  >\r\n                    {permyriadToPercent(mod.percent)}%\r\n                  </span>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n\r\n            {mod.lockedUntil ? (\r\n              <Row gutter={gutter} style={{ width: '100%' }} align=\"middle\">\r\n                <Col span={7}>\r\n                  <label>Locked</label>\r\n                </Col>\r\n                <Col span={17}>\r\n                  until {formatDate(mod.lockedUntil * 1000, 'yyyy-MM-DD')}\r\n                </Col>\r\n              </Row>\r\n            ) : null}\r\n          </Space>\r\n\r\n          {locked ? (\r\n            <LockOutlined style={{ color: colors.icon.disabled }} />\r\n          ) : (\r\n            <Tooltip title={t`Delete token allocation`}>\r\n              <Button\r\n                type=\"text\"\r\n                onClick={e => {\r\n                  onModsChanged([\r\n                    ...mods.slice(0, index),\r\n                    ...mods.slice(index + 1),\r\n                  ])\r\n                  e.stopPropagation()\r\n                }}\r\n                icon={<DeleteOutlined />}\r\n              />\r\n            </Tooltip>\r\n          )}\r\n        </div>\r\n      )\r\n    },\r\n    [\r\n      mods,\r\n      colors.stroke.disabled,\r\n      colors.stroke.tertiary,\r\n      colors.text.primary,\r\n      colors.icon.disabled,\r\n      radii.md,\r\n      form,\r\n      onModsChanged,\r\n    ],\r\n  )\r\n\r\n  if (!mods) return null\r\n\r\n  const total = useMemo(\r\n    () =>\r\n      parseFloat(\r\n        permyriadToPercent(mods.map(m => m.percent).reduce((a, b) => a + b, 0)),\r\n      ),\r\n    [mods],\r\n  )\r\n\r\n  const setReceiver = async () => {\r\n    await form.validateFields()\r\n\r\n    const beneficiary = form.getFieldValue('beneficiary')\r\n    const percent = percentToPermyriad(form.getFieldValue('percent')).toNumber()\r\n    const _lockedUntil = form.getFieldValue('lockedUntil') as moment.Moment\r\n\r\n    const lockedUntil = _lockedUntil\r\n      ? Math.round(_lockedUntil.valueOf() / 1000)\r\n      : undefined\r\n\r\n    const newMod = { beneficiary, percent, lockedUntil }\r\n\r\n    onModsChanged(\r\n      editingModIndex !== undefined && editingModIndex < mods.length\r\n        ? mods.map((m, i) =>\r\n            i === editingModIndex\r\n              ? {\r\n                  ...m,\r\n                  ...newMod,\r\n                }\r\n              : m,\r\n          )\r\n        : [...mods, newMod],\r\n    )\r\n\r\n    setEditingModIndex(undefined)\r\n    setModalMode(undefined)\r\n\r\n    form.resetFields()\r\n  }\r\n\r\n  // Validates new reserved token receiving address\r\n  const validateReservedTokenReceiver = () => {\r\n    return validateEthAddress(\r\n      form.getFieldValue('beneficiary'),\r\n      mods,\r\n      modalMode,\r\n      editingModIndex,\r\n    )\r\n  }\r\n\r\n  // Validates slider (ensures percent !== 0 && percent <= 100)\r\n  const validateSlider = () => {\r\n    return validatePercentage(form.getFieldValue('percent'))\r\n  }\r\n\r\n  const totalSplitsPercentageInvalid = total > 100\r\n\r\n  return (\r\n    <Form.Item\r\n      name={name}\r\n      {...formItemProps}\r\n      rules={[\r\n        {\r\n          validator: () => {\r\n            if (total > 100)\r\n              return Promise.reject(t`Percentages must add up to 100% or less`)\r\n\r\n            return Promise.resolve()\r\n          },\r\n        },\r\n      ]}\r\n      style={style}\r\n    >\r\n      <Space\r\n        direction=\"vertical\"\r\n        style={{ width: '100%', marginBottom: 10 }}\r\n        size=\"large\"\r\n      >\r\n        {lockedMods ? (\r\n          <Space style={{ width: '100%' }} direction=\"vertical\" size=\"small\">\r\n            {lockedMods.map((v, i) => modInput(v, i, true))}\r\n          </Space>\r\n        ) : null}\r\n        <Space style={{ width: '100%' }} direction=\"vertical\" size=\"small\">\r\n          {mods.map((v, i) => modInput(v, i))}\r\n        </Space>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            color: colors.text.secondary,\r\n          }}\r\n        >\r\n          <div style={{ textAlign: 'right' }}>\r\n            <span\r\n              style={{\r\n                color:\r\n                  total > 100 ? colors.text.failure : colors.text.secondary,\r\n              }}\r\n            >\r\n              <Trans>Total: {total.toFixed(2)}%</Trans>\r\n            </span>\r\n          </div>\r\n          {total < 100 ? (\r\n            <div>\r\n              <Trans>\r\n                {(100 - total).toFixed(2)}% to{' '}\r\n                {owner ? (\r\n                  <FormattedAddress address={owner} />\r\n                ) : (\r\n                  t`project owner`\r\n                )}\r\n              </Trans>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        {totalSplitsPercentageInvalid ? (\r\n          <span style={{ color: colors.text.failure, fontWeight: 600 }}>\r\n            <Trans>Sum of percentages cannot exceed 100%.</Trans>\r\n          </span>\r\n        ) : null}\r\n        <Button\r\n          type=\"dashed\"\r\n          onClick={() => {\r\n            setEditingModIndex(mods.length)\r\n            setModalMode('Add')\r\n            form.resetFields()\r\n          }}\r\n          block\r\n        >\r\n          <Trans>Add token allocation</Trans>\r\n        </Button>\r\n      </Space>\r\n      <ReservedTokenReceiverModal\r\n        visible={editingModIndex !== undefined}\r\n        onOk={setReceiver}\r\n        mode={modalMode}\r\n        form={form}\r\n        onCancel={() => {\r\n          form.resetFields()\r\n          setEditingModIndex(undefined)\r\n          setModalMode(undefined)\r\n        }}\r\n        validateReservedTokenReceiver={validateReservedTokenReceiver}\r\n        validateSlider={validateSlider}\r\n        reservedRate={reservedRate}\r\n      />\r\n    </Form.Item>\r\n  )\r\n}\r\n","import { ETHPayoutSplitGroup, ReservedTokensSplitGroup } from 'models/v2/splits'\r\n\r\nexport const ETH_PAYOUT_SPLIT_GROUP: ETHPayoutSplitGroup = 1\r\nexport const RESERVED_TOKEN_SPLIT_GROUP: ReservedTokensSplitGroup = 2\r\n","import { BigNumber, BigNumberish } from '@ethersproject/bignumber'\r\nimport { t } from '@lingui/macro'\r\n\r\nimport { SECONDS_IN_DAY, SECONDS_IN_HOUR } from 'constants/numbers'\r\nimport { DurationUnitsOption } from 'constants/time'\r\n\r\nexport function detailedTimeString({\r\n  timeSeconds,\r\n  roundToMinutes,\r\n  fullWords,\r\n}: {\r\n  timeSeconds?: BigNumberish\r\n  roundToMinutes?: boolean\r\n  fullWords?: boolean\r\n}) {\r\n  const timeSecondsNumber = BigNumber.from(timeSeconds).toNumber()\r\n\r\n  const days = Math.floor(timeSecondsNumber / 60 / 60 / 24)\r\n  const hours = (timeSecondsNumber / 60 / 60) % 24\r\n  const minutes = (timeSecondsNumber / 60) % 60\r\n  const seconds = timeSecondsNumber % 60\r\n\r\n  const daysString = fullWords ? ' ' + t`days` + ' ' : 'd '\r\n  const hoursString = fullWords ? ' ' + t`hours` + ' ' : 'h '\r\n  const minutesString = fullWords ? ' ' + t`minutes` + ' ' : 'm '\r\n  const secondsString = fullWords ? ' ' + t`seconds` : 's'\r\n\r\n  const daysText = `${days && days > 0 ? days.toString() + daysString : ''}`\r\n  const hoursText = `${\r\n    hours && hours >= 1 ? Math.floor(hours) + hoursString : ''\r\n  }`\r\n  const minutesText = `${\r\n    minutes && minutes >= 1 ? Math.floor(minutes) + minutesString : ''\r\n  }`\r\n  const secondsText = `${\r\n    seconds && seconds > 0 && !roundToMinutes\r\n      ? Math.floor(seconds) + secondsString\r\n      : ''\r\n  }`\r\n\r\n  return `${daysText}${hoursText}${minutesText}${secondsText}`.trimEnd() || '--'\r\n}\r\n\r\nexport function secondsUntil(timeSeconds?: BigNumberish) {\r\n  const nowSeconds = Math.floor(Date.now().valueOf() / 1000)\r\n  return BigNumber.from(timeSeconds).sub(Math.floor(nowSeconds)).toNumber()\r\n}\r\n\r\nexport function detailedTimeUntil(endTimeSeconds?: BigNumberish) {\r\n  const secondsLeft = secondsUntil(endTimeSeconds)\r\n  return detailedTimeString({\r\n    timeSeconds: secondsLeft,\r\n    roundToMinutes: secondsLeft > 120,\r\n  })\r\n}\r\n\r\nexport const otherUnitToSeconds = ({\r\n  duration,\r\n  unit,\r\n}: {\r\n  duration: number\r\n  unit: DurationUnitsOption\r\n}) => {\r\n  switch (unit) {\r\n    case 'days':\r\n      return duration * SECONDS_IN_DAY\r\n    case 'hours':\r\n      return duration * SECONDS_IN_HOUR\r\n    case 'minutes':\r\n      return duration * 60\r\n    default:\r\n      return duration\r\n  }\r\n}\r\n\r\nexport const secondsToOtherUnit = ({\r\n  duration,\r\n  unit,\r\n}: {\r\n  duration: number\r\n  unit: DurationUnitsOption\r\n}) => {\r\n  switch (unit) {\r\n    case 'days':\r\n      return duration / SECONDS_IN_DAY\r\n    case 'hours':\r\n      return duration / SECONDS_IN_HOUR\r\n    case 'minutes':\r\n      return duration / 60\r\n    default:\r\n      return duration\r\n  }\r\n}\r\n\r\nexport const deriveDurationUnit = (\r\n  durationSeconds: number | undefined,\r\n): DurationUnitsOption => {\r\n  // Default to days\r\n  if (!durationSeconds || durationSeconds === 0) return 'days'\r\n\r\n  // Less that 1 min\r\n  if (durationSeconds < 60) {\r\n    return 'seconds'\r\n  } else if (durationSeconds < SECONDS_IN_HOUR) {\r\n    return 'minutes'\r\n  } else if (durationSeconds < SECONDS_IN_DAY * 3) {\r\n    return 'hours'\r\n  }\r\n  return 'days'\r\n}\r\n","import { CSSProperties } from 'react'\r\n\r\nimport { CurrencyName, CURRENCY_METADATA } from 'constants/currency'\r\n\r\nexport default function CurrencySymbol({\r\n  currency,\r\n  style,\r\n}: {\r\n  currency?: CurrencyName\r\n  style?: CSSProperties\r\n}) {\r\n  if (!currency) return null\r\n\r\n  const metadata = CURRENCY_METADATA[currency]\r\n\r\n  return (\r\n    <span\r\n      style={{\r\n        ...style,\r\n        ...metadata.style,\r\n      }}\r\n    >\r\n      {metadata.symbol}\r\n    </span>\r\n  )\r\n}\r\n","/*eslint-disable*/module.exports={messages:{\"({0}%)\":[\"(\",[\"0\"],\"%)\"],\"({realTokenAllocationPercent}% of all newly minted tokens).\":[\"(\",[\"realTokenAllocationPercent\"],\"% of all newly minted tokens).\"],\"0% fee\":\"0% fee\",\"1 year\":\"1 year\",\"1. Get funded.\":\"1. Get funded.\",\"1. Project details\":\"1. Project details\",\"1. Set ENS name\":\"1. Set ENS name\",\"100% overflow\":\"100% overflow\",\"2. Funding cycle\":\"2. Funding cycle\",\"2. Give ownership\":\"2. Give ownership\",\"2. Set text record\":\"2. Set text record\",\"24 hours\":\"24 hours\",\"3-day delay\":\"3-day delay\",\"3. Manage your funds\":\"3. Manage your funds\",\"3. Review and deploy\":\"3. Review and deploy\",\"30 days\":\"30 days\",\"4. Build trust.\":\"4. Build trust.\",\"7 days\":\"7 days\",\"7-day delay\":\"7-day delay\",\"90 days\":\"90 days\",\"<0/> Archived projects have not been modified or deleted on the blockchain, and can still be interacted with directly through the Juicebox contracts.\":\"<0/> Archived projects have not been modified or deleted on the blockchain, and can still be interacted with directly through the Juicebox contracts.\",\"<0/> The Juicebox protocol is open to anyone, and project configurations can vary widely. There are risks associated with interacting with all projects on the protocol. Projects built on the protocol are not endorsed or vetted by JuiceboxDAO or Peel. Do your own research and understand the risks before committing your funds.\":\"<0/> The Juicebox protocol is open to anyone, and project configurations can vary widely. There are risks associated with interacting with all projects on the protocol. Projects built on the protocol are not endorsed or vetted by JuiceboxDAO or Peel. Do your own research and understand the risks before committing your funds.\",\"<0/> owner balance\":\"<0/> owner balance\",\"<0/>{0} after {feePercentage}% JBX membership fee\":[\"<0/>\",[\"0\"],\" after \",[\"feePercentage\"],\"% JBX membership fee\"],\"<0/>{0}{1} distributed\":[\"<0/>\",[\"0\"],[\"1\"],\" distributed\"],\"<0><1/>{netDistributionAmount}</0> after {feePercentage}% JBX fee\":[\"<0><1/>\",[\"netDistributionAmount\"],\"</0> after \",[\"feePercentage\"],\"% JBX fee\"],\"<0><1>This project has no overflow</1>, so you will not receive any ETH for burning tokens.</0>\":\"<0><1>This project has no overflow</1>, so you will not receive any ETH for burning tokens.</0>\",\"<0>A bonding curve rewards people who wait longer to redeem your tokens for overflow.</0><1>For example, with a bonding curve of 70%, redeeming 10% of the token supply at any given time will claim around 7% of the total overflow.</1><2>The rest is left to share between token holders.</2>,<3>For more info, check out this <4>short video</4> on bonding curves.</3>\":\"<0>A bonding curve rewards people who wait longer to redeem your tokens for overflow.</0><1>For example, with a bonding curve of 70%, redeeming 10% of the token supply at any given time will claim around 7% of the total overflow.</1><2>The rest is left to share between token holders.</2>,<3>For more info, check out this <4>short video</4> on bonding curves.</3>\",\"<0>A mechanism like Juicebox where upfront financial commitments should be honored over time is only guaranteed within an ecosystem like Ethereum.</0><1>Ethereum provides a public environment where internet apps like Juicebox can run in a permission-less, trustless, and unstoppable fashion.</1><2>This means that anyone can see the code that they're using, anyone can use the code without asking for permission, and no one can mess with the code or take it down.</2><3>People using Juicebox are interacting with each other through public infrastructure—not a private, profit-seeking corporate service that brokers the exchange.</3><4>Juicebox was built to allow people and projects to get paid for creating public art and infrastructure, as much as or more than they would working towards corporate ends. No more shady business.</4>\":\"<0>A mechanism like Juicebox where upfront financial commitments should be honored over time is only guaranteed within an ecosystem like Ethereum.</0><1>Ethereum provides a public environment where internet apps like Juicebox can run in a permission-less, trustless, and unstoppable fashion.</1><2>This means that anyone can see the code that they're using, anyone can use the code without asking for permission, and no one can mess with the code or take it down.</2><3>People using Juicebox are interacting with each other through public infrastructure—not a private, profit-seeking corporate service that brokers the exchange.</3><4>Juicebox was built to allow people and projects to get paid for creating public art and infrastructure, as much as or more than they would working towards corporate ends. No more shady business.</4>\",\"<0>A project can choose to reserve a percentage of tokens for itself. Instead of being distributed to paying users, this percentage of tokens is instead minted for the project.</0><1>Holding these tokens entitles a project to a portion of its own overflow.</1>\":\"<0>A project can choose to reserve a percentage of tokens for itself. Instead of being distributed to paying users, this percentage of tokens is instead minted for the project.</0><1>Holding these tokens entitles a project to a portion of its own overflow.</1>\",\"<0>Contribution threshold:</0> {0} ETH\":[\"<0>Contribution threshold:</0> \",[\"0\"],\" ETH\"],\"<0>Description: </0><1/>\":\"<0>Description: </0><1/>\",\"<0>Discount rate</0>, to reduce your project token's issuance rate (tokens per ETH) each funding cycle.\":\"<0>Discount rate</0>, to reduce your project token's issuance rate (tokens per ETH) each funding cycle.\",\"<0>External link: {0}</0>\":[\"<0>External link: \",[\"0\"],\"</0>\"],\"<0>If you know how much your project needs to earn over some period of time to be sustainable, you can set a funding target with that amount. If your project earns more than that, the surplus funds are locked in an overflow pool. Anyone holding your project's tokens can claim a portion of the overflow pool in exchange for redeeming their tokens.</0><1>For more info, check out this <2>short video</2>.</1>\":\"<0>If you know how much your project needs to earn over some period of time to be sustainable, you can set a funding target with that amount. If your project earns more than that, the surplus funds are locked in an overflow pool. Anyone holding your project's tokens can claim a portion of the overflow pool in exchange for redeeming their tokens.</0><1>For more info, check out this <2>short video</2>.</1>\",\"<0>Juicebox contracts</0> are unaudited, and may be vulnerable to bugs or hacks. All funds moved through Juicebox could be lost or stolen. JuiceboxDAO and Peel are not liable for any losses by projects or their supporters.\":\"<0>Juicebox contracts</0> are unaudited, and may be vulnerable to bugs or hacks. All funds moved through Juicebox could be lost or stolen. JuiceboxDAO and Peel are not liable for any losses by projects or their supporters.\",\"<0>Juicebox has handled tens of thousands of ETH through its protocol, and has so far had 0 security mishaps.</0> <1>However, Juicebox is still experimental software. Although the Juicebox contract team have done their part to shape the smart contracts for public use and have tested the code thoroughly, the risk of exploits is never 0%.</1><2>Due to their public nature, any exploits to the contracts may have irreversible consequences, including loss of funds. Please use Juicebox with caution.</2>\":\"<0>Juicebox has handled tens of thousands of ETH through its protocol, and has so far had 0 security mishaps.</0> <1>However, Juicebox is still experimental software. Although the Juicebox contract team have done their part to shape the smart contracts for public use and have tested the code thoroughly, the risk of exploits is never 0%.</1><2>Due to their public nature, any exploits to the contracts may have irreversible consequences, including loss of funds. Please use Juicebox with caution.</2>\",\"<0>Juicebox is a governance-minimal protocol. There are only a few levers that can be tuned, none of which impose changes for users without their consent. The Juicebox governance smart contract can adjust these levers.</0><1>The Juicebox protocol is governed by a community of JBX token holders who vote on proposals fortnightly.</1>\":\"<0>Juicebox is a governance-minimal protocol. There are only a few levers that can be tuned, none of which impose changes for users without their consent. The Juicebox governance smart contract can adjust these levers.</0><1>The Juicebox protocol is governed by a community of JBX token holders who vote on proposals fortnightly.</1>\",\"<0>Juicebox is an open protocol on Ethereum that is funded using Juicebox itself. You can check out the contractualized budget specs <1>here</1>.</0><2>Projects building on Juicebox pay a {JB_FEE}% JBX membership fee from withdrawn funds into the JuiceboxDAO treasury. Projects can then use their JBX to participate in the governance of JuiceboxDAO and its collective treasury, as well as redeem from its growing <3>overflow</3>. The fee is also subject to change via JBX member votes.</2>\":[\"<0>Juicebox is an open protocol on Ethereum that is funded using Juicebox itself. You can check out the contractualized budget specs <1>here</1>.</0><2>Projects building on Juicebox pay a \",[\"JB_FEE\"],\"% JBX membership fee from withdrawn funds into the JuiceboxDAO treasury. Projects can then use their JBX to participate in the governance of JuiceboxDAO and its collective treasury, as well as redeem from its growing <3>overflow</3>. The fee is also subject to change via JBX member votes.</2>\"],\"<0>Learn more</0> about burning tokens.\":\"<0>Learn more</0> about burning tokens.\",\"<0>Learn more</0> about funding cycle duration.\":\"<0>Learn more</0> about funding cycle duration.\",\"<0>Learn more</0> about funding cycles.\":\"<0>Learn more</0> about funding cycles.\",\"<0>Learn more</0> about overflow.\":\"<0>Learn more</0> about overflow.\",\"<0>Max. supply:</0> {0}\":[\"<0>Max. supply:</0> \",[\"0\"]],\"<0>NOTE:</0> This project has a balance of 0. Projects cannot be migrated without a balance. To migrate this project, first pay it or use the button below to deposit 1 wei (0.000000000000000001 or 10<1>-18</1> ETH).\":\"<0>NOTE:</0> This project has a balance of 0. Projects cannot be migrated without a balance. To migrate this project, first pay it or use the button below to deposit 1 wei (0.000000000000000001 or 10<1>-18</1> ETH).\",\"<0>No duration set.</0>Funding can be reconfigured at any time. Reconfigurations will start a new funding cycle.\":\"<0>No duration set.</0>Funding can be reconfigured at any time. Reconfigurations will start a new funding cycle.\",\"<0>Note:</0> These properties will <1>not</1> be editable immediately within a funding cycle. They can only be changed for <2>upcoming</2> funding cycles.\":\"<0>Note:</0> These properties will <1>not</1> be editable immediately within a funding cycle. They can only be changed for <2>upcoming</2> funding cycles.\",\"<0>Note:</0> Tokens cannot be claimed because no ERC-20 token has been issued for this project. ERC-20 tokens must be issued by the project owner.\":\"<0>Note:</0> Tokens cannot be claimed because no ERC-20 token has been issued for this project. ERC-20 tokens must be issued by the project owner.\",\"<0>On a lower redemption rate, redeeming a token increases the value of each remaining token, creating an incentive to hold tokens longer than other holders.</0> <1>A redemption rate of 100% means all tokens will have equal value regardless of when they are redeemed.</1>Learn more in this <2>short video</2>.\":\"<0>On a lower redemption rate, redeeming a token increases the value of each remaining token, creating an incentive to hold tokens longer than other holders.</0> <1>A redemption rate of 100% means all tokens will have equal value regardless of when they are redeemed.</1>Learn more in this <2>short video</2>.\",\"<0>Peel</0> is the DAO that manages the juicebox.money frontend interface. You can reach out to Peel either through the <1>Peel Discord</1> or the <2>Juicebox Discord</2>.\":\"<0>Peel</0> is the DAO that manages the juicebox.money frontend interface. You can reach out to Peel either through the <1>Peel Discord</1> or the <2>Juicebox Discord</2>.\",\"<0>Recurring funding cycles</0>. For example, distribute funds from your project's treasury every week.\":\"<0>Recurring funding cycles</0>. For example, distribute funds from your project's treasury every week.\",\"<0>Target is 0.</0> The project's entire balance will be considered overflow. <1>Learn more</1> about overflow.\":\"<0>Target is 0.</0> The project's entire balance will be considered overflow. <1>Learn more</1> about overflow.\",\"<0>That's the plan, but the core Juicebox contracts will first be deployed to Ethereum Mainnet.</0><1>The contract team will soon start working on L2 payment terminals for Juicebox projects.</1>\":\"<0>That's the plan, but the core Juicebox contracts will first be deployed to Ethereum Mainnet.</0><1>The contract team will soon start working on L2 payment terminals for Juicebox projects.</1>\",\"<0>There are unit tests written for every condition of every function in the contracts, and integration tests for every workflow that the protocol supports.</0><1>There was also a script written to iteratively run the integration tests using a random input generator, prioritizing edge cases. The code has successfully passed over 1 million test cases through this stress-testing script.</1> <2>The code could always use more eyes and more critique to further the community's confidence. Join our <3>Discord</3> and check out the code on <4>GitHub</4> to work with us.</2>\":\"<0>There are unit tests written for every condition of every function in the contracts, and integration tests for every workflow that the protocol supports.</0><1>There was also a script written to iteratively run the integration tests using a random input generator, prioritizing edge cases. The code has successfully passed over 1 million test cases through this stress-testing script.</1> <2>The code could always use more eyes and more critique to further the community's confidence. Join our <3>Discord</3> and check out the code on <4>GitHub</4> to work with us.</2>\",\"<0>This project has no overflow</0>, so you will not receive any ETH for burning tokens.\":\"<0>This project has no overflow</0>, so you will not receive any ETH for burning tokens.\",\"<0>This website (juicebox.money) connects to the Juicebox protocol's smart contracts, deployed on the Ethereum network. (note: anyone else can make a website that also connects to these same smart contracts. For now, don't trust any site other than this one to access the Juicebox protocol).</0><1>Creating a Juicebox project mints you an NFT (ERC-721) representing ownership over it. Whoever owns this NFT can configure the rules of the game and how payouts are distributed.</1><2>The project's tokens that are minted and distributed as a result of a received payment are ERC-20's. The amount of tokens minted and distributed are proportional to the volume of payments received, weighted by the project's discount rate over time.</2>\":\"<0>This website (juicebox.money) connects to the Juicebox protocol's smart contracts, deployed on the Ethereum network. (note: anyone else can make a website that also connects to these same smart contracts. For now, don't trust any site other than this one to access the Juicebox protocol).</0><1>Creating a Juicebox project mints you an NFT (ERC-721) representing ownership over it. Whoever owns this NFT can configure the rules of the game and how payouts are distributed.</1><2>The project's tokens that are minted and distributed as a result of a received payment are ERC-20's. The amount of tokens minted and distributed are proportional to the volume of payments received, weighted by the project's discount rate over time.</2>\",\"<0>Total project tokens minted</0> when 1 ETH is contributed. This can change over time according to the discount rate and reserved tokens amount of future funding cycles.\":\"<0>Total project tokens minted</0> when 1 ETH is contributed. This can change over time according to the discount rate and reserved tokens amount of future funding cycles.\",\"<0>Users fund your project by paying to use your app or service, or as a patron or investor by making a payment directly to your project's smart contract (like on this app).</0><1>For users paying through your app, you should route those funds through the Juicebox smart contracts so they receive tokens in return.</1>\":\"<0>Users fund your project by paying to use your app or service, or as a patron or investor by making a payment directly to your project's smart contract (like on this app).</0><1>For users paying through your app, you should route those funds through the Juicebox smart contracts so they receive tokens in return.</1>\",\"<0>Your unclaimed {tokenSymbol} tokens:</0> {0}\":[\"<0>Your unclaimed \",[\"tokenSymbol\"],\" tokens:</0> \",[\"0\"]],\"<0>{tokenSymbol} ERC-20 address:</0> <1/>\":[\"<0>\",[\"tokenSymbol\"],\" ERC-20 address:</0> <1/>\"],\"@\":\"@\",\"@{handle} not found\":[\"@\",[\"handle\"],\" not found\"],\"A project can be archived by its owner from the tools menu on the project page.\":\"A project can be archived by its owner from the tools menu on the project page.\",\"A project can reserve a percentage of the tokens minted from payments it receives. Reserved tokens can be distributed according to the allocation below at any time.\":\"A project can reserve a percentage of the tokens minted from payments it receives. Reserved tokens can be distributed according to the allocation below at any time.\",\"A project can reserve a percentage of tokens minted from every payment it receives. Reserved tokens can be distributed according to the allocation below at any time.\":\"A project can reserve a percentage of tokens minted from every payment it receives. Reserved tokens can be distributed according to the allocation below at any time.\",\"A project's handle is used in its URL, and allows it to be included in search results on the projects page.\":\"A project's handle is used in its URL, and allows it to be included in search results on the projects page.\",\"A project's lifetime is defined in funding cycles. If a funding target is set, the project can withdraw no more than the target for the duration of the cycle.\":\"A project's lifetime is defined in funding cycles. If a funding target is set, the project can withdraw no more than the target for the duration of the cycle.\",\"A reconfiguration to an upcoming funding cycle must be submitted at least 3 days before it starts.\":\"A reconfiguration to an upcoming funding cycle must be submitted at least 3 days before it starts.\",\"A reconfiguration to an upcoming funding cycle must be submitted at least 7 days before it starts.\":\"A reconfiguration to an upcoming funding cycle must be submitted at least 7 days before it starts.\",\"A reserved rate of more than 90% is risky for contributors. Contributors won't receive many tokens for their contribution.\":\"A reserved rate of more than 90% is risky for contributors. Contributors won't receive many tokens for their contribution.\",\"ARCHIVED\":\"ARCHIVED\",\"AVAILABLE\":\"AVAILABLE\",\"Activity\":\"Activity\",\"Add NFT reward\":\"Add NFT reward\",\"Add a payout\":\"Add a payout\",\"Add an on-chain memo to this payment.\":\"Add an on-chain memo to this payment.\",\"Add funds to this project's balance without minting tokens.\":\"Add funds to this project's balance without minting tokens.\",\"Add handle\":\"Add handle\",\"Add image\":\"Add image\",\"Add new payout\":\"Add new payout\",\"Add payout\":\"Add payout\",\"Add reward tier\":\"Add reward tier\",\"Add terminal\":\"Add terminal\",\"Add the V1 Token Payment Terminal to your project.\":\"Add the V1 Token Payment Terminal to your project.\",\"Add to Balance\":\"Add to Balance\",\"Add to balance\":\"Add to balance\",\"Add token\":\"Add token\",\"Add token allocation\":\"Add token allocation\",\"Address\":\"Address\",\"Address required\":\"Address required\",\"Address:\":\"Address:\",\"Address: <0/>\":\"Address: <0/>\",\"Adjust incentives for paying your project.\":\"Adjust incentives for paying your project.\",\"Advanced options (optional)\":\"Advanced options (optional)\",\"All\":\"All\",\"All assets\":\"All assets\",\"All changes will be applied to the <0>upcoming</0> funding cycle.\":\"All changes will be applied to the <0>upcoming</0> funding cycle.\",\"All events\":\"All events\",\"All funds can be distributed by the project. The project will have no overflow (the same as setting the target to infinity).\":\"All funds can be distributed by the project. The project will have no overflow (the same as setting the target to infinity).\",\"All funds received by the treasury will be distributed. Token holders will receive <0>no ETH</0> when burning their tokens.\":\"All funds received by the treasury will be distributed. Token holders will receive <0>no ETH</0> when burning their tokens.\",\"All {0} will go to the project owner:\":[\"All \",[\"0\"],\" will go to the project owner:\"],\"Allocate a portion of your project's reserved tokens to other Ethereum wallets or Juicebox projects.\":\"Allocate a portion of your project's reserved tokens to other Ethereum wallets or Juicebox projects.\",\"Allow minting tokens\":\"Allow minting tokens\",\"Allow token minting\":\"Allow token minting\",\"Allow your V1 project token holders to swap their tokens for your V2 project tokens.\":\"Allow your V1 project token holders to swap their tokens for your V2 project tokens.\",\"Allowed\":\"Allowed\",\"Almost definitely.\":\"Almost definitely.\",\"Amount\":\"Amount\",\"Amount of ERC-20 tokens to claim\":\"Amount of ERC-20 tokens to claim\",\"Amount of newly minted project tokens <0>reserved for the project</0> when 1 ETH is contributed. Reserve tokens are reserved for the project owner by default, but can also be allocated to other wallet addresses by the owner.\":\"Amount of newly minted project tokens <0>reserved for the project</0> when 1 ETH is contributed. Reserve tokens are reserved for the project owner by default, but can also be allocated to other wallet addresses by the owner.\",\"Amount of newly minted project tokens <0>reserved for the project</0> when 1 ETH is contributed. The project owner is allocated all reserved tokens by default, but they can also be allocated to other wallet addresses.\":\"Amount of newly minted project tokens <0>reserved for the project</0> when 1 ETH is contributed. The project owner is allocated all reserved tokens by default, but they can also be allocated to other wallet addresses.\",\"Amount paid\":\"Amount paid\",\"Amount required\":\"Amount required\",\"Amount to distribute\":\"Amount to distribute\",\"Amount:\":\"Amount:\",\"Amounts\":\"Amounts\",\"Any changes you make will take effect in <0>funding cycle #{0}</0>. The current funding cycle (#{currentFCNumber}) won't be altered.\":[\"Any changes you make will take effect in <0>funding cycle #\",[\"0\"],\"</0>. The current funding cycle (#\",[\"currentFCNumber\"],\") won't be altered.\"],\"Any reconfiguration to an upcoming funding cycle will take effect once the current cycle ends. A project with no strategy may be vulnerable to being rug-pulled by its owner.\":\"Any reconfiguration to an upcoming funding cycle will take effect once the current cycle ends. A project with no strategy may be vulnerable to being rug-pulled by its owner.\",\"Archive project\":\"Archive project\",\"Archived\":\"Archived\",\"Are you sure you want to start over?\":\"Are you sure you want to start over?\",\"Assets\":\"Assets\",\"Attach a sticker\":\"Attach a sticker\",\"Attach the image to be associated with this NFT.\":\"Attach the image to be associated with this NFT.\",\"Automate funding cycles\":\"Automate funding cycles\",\"Automated funding cycles enable the following characteristics:\":\"Automated funding cycles enable the following characteristics:\",\"Available after fee:\":\"Available after fee:\",\"Available funds are distributed according to the payouts below.\":\"Available funds are distributed according to the payouts below.\",\"Available funds can be distributed according to the payouts below{0}.\":[\"Available funds can be distributed according to the payouts below\",[\"0\"],\".\"],\"Available:\":\"Available:\",\"Back to top\":\"Back to top\",\"Balance exceeded\":\"Balance exceeded\",\"Balance of the project owner's wallet.\":\"Balance of the project owner's wallet.\",\"Beneficiary\":\"Beneficiary\",\"Beneficiary address\":\"Beneficiary address\",\"Big ups to the Ethereum community for crafting the infrastructure and economy to make Juicebox possible.\":\"Big ups to the Ethereum community for crafting the infrastructure and economy to make Juicebox possible.\",\"Block number\":\"Block number\",\"Blog\":\"Blog\",\"Bonding curve rate\":\"Bonding curve rate\",\"Bonding curve:\":\"Bonding curve:\",\"Built for:\":\"Built for:\",\"Burn project tokens\":\"Burn project tokens\",\"Burn your {tokensLabel}. You won't receive ETH in return because this project has no overflow.\":[\"Burn your \",[\"tokensLabel\"],\". You won't receive ETH in return because this project has no overflow.\"],\"Burn {0} {tokensTextShort}\":[\"Burn \",[\"0\"],\" \",[\"tokensTextShort\"]],\"Burn {tokensLabel}\":[\"Burn \",[\"tokensLabel\"]],\"Burn {tokensTextLong}\":[\"Burn \",[\"tokensTextLong\"]],\"By default, all unallocated funds can be distributed to the project owner's wallet.\":\"By default, all unallocated funds can be distributed to the project owner's wallet.\",\"By default, newly minted tokens will go to the wallet who sends funds to the address. You can enable this to set the token beneficiary to a custom address.\":\"By default, newly minted tokens will go to the wallet who sends funds to the address. You can enable this to set the token beneficiary to a custom address.\",\"Can I change my project's contract after it's been created?\":\"Can I change my project's contract after it's been created?\",\"Can I delete a project?\":\"Can I delete a project?\",\"Cancel\":\"Cancel\",\"Cannot redeem tokens for ETH because this project has no overflow.\":\"Cannot redeem tokens for ETH because this project has no overflow.\",\"Change ENS name\":\"Change ENS name\",\"Change project handle\":\"Change project handle\",\"Changes to payouts will take effect immediately.\":\"Changes to payouts will take effect immediately.\",\"Changes to project details will take effect immediately.\":\"Changes to project details will take effect immediately.\",\"Changes to these attributes can be made at any time and will be applied to your project immediately.\":\"Changes to these attributes can be made at any time and will be applied to your project immediately.\",\"Changes to your project's funding configuration require a community-approved period to take effect, which acts as a safeguard against rug pulls. Your supporters don't have to trust you — even though they already do.\":\"Changes to your project's funding configuration require a community-approved period to take effect, which acts as a safeguard against rug pulls. Your supporters don't have to trust you — even though they already do.\",\"Changes to your reserved token allocation will take effect immediately.\":\"Changes to your reserved token allocation will take effect immediately.\",\"Changes will take effect according to the project's custom ballot contract.\":\"Changes will take effect according to the project's custom ballot contract.\",\"Changes you make will take effect according to your <0>{0}</0> reconfiguration rule (the first funding cycle following <1>{1}</1> from now).\":[\"Changes you make will take effect according to your <0>\",[\"0\"],\"</0> reconfiguration rule (the first funding cycle following <1>\",[\"1\"],\"</1> from now).\"],\"Check this to mint this project's ERC-20 tokens to your wallet. Leave unchecked to have your token balance tracked by Juicebox, saving gas on this transaction. You can always claim your ERC-20 tokens later.\":\"Check this to mint this project's ERC-20 tokens to your wallet. Leave unchecked to have your token balance tracked by Juicebox, saving gas on this transaction. You can always claim your ERC-20 tokens later.\",\"Check this to mint {tokenSymbol} ERC-20 to your wallet. Leave unchecked to have your token balance tracked by Juicebox, saving gas on this transaction. You can always claim your ERC-20 tokens later.\":[\"Check this to mint \",[\"tokenSymbol\"],\" ERC-20 to your wallet. Leave unchecked to have your token balance tracked by Juicebox, saving gas on this transaction. You can always claim your ERC-20 tokens later.\"],\"Choose an ENS name to use as the project's handle. Subdomains are allowed and will be included in the handle. Handles won't include the \\\".eth\\\" extension.<0/><1/>juicebox.eth = @juicebox<2/>dao.juicebox.eth = @dao.juicebox\":\"Choose an ENS name to use as the project's handle. Subdomains are allowed and will be included in the handle. Handles won't include the \\\".eth\\\" extension.<0/><1/>juicebox.eth = @juicebox<2/>dao.juicebox.eth = @dao.juicebox\",\"Choose how you would like to configure your payouts.\":\"Choose how you would like to configure your payouts.\",\"Claim {tokenTextPlural}\":[\"Claim \",[\"tokenTextPlural\"]],\"Claim {tokenTextPlural} as ERC-20 tokens\":[\"Claim \",[\"tokenTextPlural\"],\" as ERC-20 tokens\"],\"Claim {tokenTextShort}\":[\"Claim \",[\"tokenTextShort\"]],\"Claim {tokenTextShort} as ERC-20 tokens\":[\"Claim \",[\"tokenTextShort\"],\" as ERC-20 tokens\"],\"Claim {tokensLabel} as ERC-20\":[\"Claim \",[\"tokensLabel\"],\" as ERC-20\"],\"Claiming {tokenSymbol} tokens will convert your {tokenSymbol} balance to ERC-20 tokens and mint them to your wallet.\":[\"Claiming \",[\"tokenSymbol\"],\" tokens will convert your \",[\"tokenSymbol\"],\" balance to ERC-20 tokens and mint them to your wallet.\"],\"Claiming {tokenTextLong} will convert your {tokenTextShort} balance to ERC-20 tokens and mint them to your wallet.\":[\"Claiming \",[\"tokenTextLong\"],\" will convert your \",[\"tokenTextShort\"],\" balance to ERC-20 tokens and mint them to your wallet.\"],\"Close\":\"Close\",\"Close, I'll do these later\":\"Close, I'll do these later\",\"Commit portions of your funds to the people or projects you want to support, or the contributors you want to pay. When you get paid, so do they.\":\"Commit portions of your funds to the people or projects you want to support, or the contributors you want to pay. When you get paid, so do they.\",\"Configure how your project will collect and spend funds.\":\"Configure how your project will collect and spend funds.\",\"Configure restrictions for your funding cycles.\":\"Configure restrictions for your funding cycles.\",\"Configure the dynamics of your project's token.\":\"Configure the dynamics of your project's token.\",\"Configure which Juicebox V1 project you'd like to accept tokens for. Token holders of this V1 project will be able to swap their V1 tokens for V2 tokens.\":\"Configure which Juicebox V1 project you'd like to accept tokens for. Token holders of this V1 project will be able to swap their V1 tokens for V2 tokens.\",\"Congratulations on launching your project! The next steps are optional and can be completed at any time.\":\"Congratulations on launching your project! The next steps are optional and can be completed at any time.\",\"Connect\":\"Connect\",\"Connect wallet\":\"Connect wallet\",\"Connect wallet to claim\":\"Connect wallet to claim\",\"Connect wallet to deploy\":\"Connect wallet to deploy\",\"Connect wallet to distribute\":\"Connect wallet to distribute\",\"Connect wallet to issue\":\"Connect wallet to issue\",\"Connect wallet to pay\":\"Connect wallet to pay\",\"Connect wallet to transfer\":\"Connect wallet to transfer\",\"Connect your wallet to see your holdings.\":\"Connect your wallet to see your holdings.\",\"Connect your wallet to see your projects.\":\"Connect your wallet to see your projects.\",\"Connected wallet not authorized\":\"Connected wallet not authorized\",\"Contract address: {0}\":[\"Contract address: \",[\"0\"]],\"Contribution threshold\":\"Contribution threshold\",\"Contributor rate\":\"Contributor rate\",\"Contributors receive the NFT when they contribute at least this amount.\":\"Contributors receive the NFT when they contribute at least this amount.\",\"Contributors will be rewarded this amount of your project's tokens per ETH contributed.\":\"Contributors will be rewarded this amount of your project's tokens per ETH contributed.\",\"Contributors will not receive any tokens in exchange for paying this project.\":\"Contributors will not receive any tokens in exchange for paying this project.\",\"Contributors will receive <0>{discountRatePercent}%</0> more tokens for contributions they make this funding cycle compared to the next funding cycle.\":[\"Contributors will receive <0>\",[\"discountRatePercent\"],\"%</0> more tokens for contributions they make this funding cycle compared to the next funding cycle.\"],\"Contributors will receive a relatively small portion of tokens in exchange for paying this project.\":\"Contributors will receive a relatively small portion of tokens in exchange for paying this project.\",\"Contributors will see this message before they pay your project.\":\"Contributors will see this message before they pay your project.\",\"Copied!\":\"Copied!\",\"Copy to clipboard\":\"Copy to clipboard\",\"Create a payable address (optional)\":\"Create a payable address (optional)\",\"Create an Ethereum address for your project. Enables direct payments without going through your project's Juicebox page.\":\"Create an Ethereum address for your project. Enables direct payments without going through your project's Juicebox page.\",\"Create an Ethereum address that can be used to pay your project directly.\":\"Create an Ethereum address that can be used to pay your project directly.\",\"Create payable address\":\"Create payable address\",\"Create project\":\"Create project\",\"Create your own ERC-20 token to represent stake in your project. Contributors will receive these tokens when they pay your project.\":\"Create your own ERC-20 token to represent stake in your project. Contributors will receive these tokens when they pay your project.\",\"Crowdfund your project with ETH. Set a funding target to cover predictable expenses, and any extra funds (<0>overflow</0>) can be claimed by anyone holding your project's tokens alongside you.\":\"Crowdfund your project with ETH. Set a funding target to cover predictable expenses, and any extra funds (<0>overflow</0>) can be claimed by anyone holding your project's tokens alongside you.\",\"Crowdfunding\":\"Crowdfunding\",\"Current\":\"Current\",\"Current 3rd Party Exchange Rates\":\"Current 3rd Party Exchange Rates\",\"Current owner: {ownerAddress}\":[\"Current owner: \",[\"ownerAddress\"]],\"Currently worth: <0><1/>{0}</0>\":[\"Currently worth: <0><1/>\",[\"0\"],\"</0>\"],\"Custom memo\":\"Custom memo\",\"Custom strategy\":\"Custom strategy\",\"Custom token beneficiary\":\"Custom token beneficiary\",\"Customize your project's \\\"pay\\\" button. Leave blank to use the default.\":\"Customize your project's \\\"pay\\\" button. Leave blank to use the default.\",\"Cycle #{0}\":[\"Cycle #\",[\"0\"]],\"Cycle #{0} -\":[\"Cycle #\",[\"0\"],\" -\"],\"DAOs\":\"DAOs\",\"Dark theme\":\"Dark theme\",\"Date\":\"Date\",\"Date created\":\"Date created\",\"Days\":\"Days\",\"Delete NFT\":\"Delete NFT\",\"Delete payout\":\"Delete payout\",\"Delete token allocation\":\"Delete token allocation\",\"Deploy funding cycle configuration\":\"Deploy funding cycle configuration\",\"Deploy project\":\"Deploy project\",\"Deploy project on {signerNetwork}\":[\"Deploy project on \",[\"signerNetwork\"]],\"Deploy project payer contract\":\"Deploy project payer contract\",\"Deploy project to {0}\":[\"Deploy project to \",[\"0\"]],\"Deployed ERC20 token\":\"Deployed ERC20 token\",\"Deposit 1 wei to @{handle}\":[\"Deposit 1 wei to @\",[\"handle\"]],\"Description\":\"Description\",\"Design how your tokens should work.\":\"Design how your tokens should work.\",\"Design your project\":\"Design your project\",\"Details\":\"Details\",\"Determines whether tokens will be minted from payments to this address.\":\"Determines whether tokens will be minted from payments to this address.\",\"Disabled\":\"Disabled\",\"Disabled when your funding cycle's distribution limit is <0>No limit</0> (infinite)\":\"Disabled when your funding cycle's distribution limit is <0>No limit</0> (infinite)\",\"Disabled when your project's funding cycle duration is 0.\":\"Disabled when your project's funding cycle duration is 0.\",\"Disabled when your project's funding cycle has no duration.\":\"Disabled when your project's funding cycle has no duration.\",\"Discard\":\"Discard\",\"Disclose any details to your contributors before they pay your project.\":\"Disclose any details to your contributors before they pay your project.\",\"Disconnect\":\"Disconnect\",\"Discord\":\"Discord\",\"Discord link\":\"Discord link\",\"Discount rate\":\"Discount rate\",\"Display ERC-20 and other Juicebox project tokens that this project owner holds.\":\"Display ERC-20 and other Juicebox project tokens that this project owner holds.\",\"Display ERC-20 tokens and other Juicebox project tokens that are in this project's owner's wallet.\":\"Display ERC-20 tokens and other Juicebox project tokens that are in this project's owner's wallet.\",\"Distribute a percentage of all funds received to entities. Your distribution limit will be <0>infinite</0>.\":\"Distribute a percentage of all funds received to entities. Your distribution limit will be <0>infinite</0>.\",\"Distribute a specific amount of funds to entities each funding cycle. Your distribution limit will equal the <0>sum of all payout amounts.</0>\":\"Distribute a specific amount of funds to entities each funding cycle. Your distribution limit will equal the <0>sum of all payout amounts.</0>\",\"Distribute available funds to other Ethereum wallets or Juicebox projects as payouts. Use this to pay contributors, charities, Juicebox projects you depend on, or anyone else. Funds are distributed whenever a withdrawal is made from your project.\":\"Distribute available funds to other Ethereum wallets or Juicebox projects as payouts. Use this to pay contributors, charities, Juicebox projects you depend on, or anyone else. Funds are distributed whenever a withdrawal is made from your project.\",\"Distribute funds\":\"Distribute funds\",\"Distribute reserved {tokenTextPlural}\":[\"Distribute reserved \",[\"tokenTextPlural\"]],\"Distribute {tokenTextPlural}\":[\"Distribute \",[\"tokenTextPlural\"]],\"Distribute {tokensText}\":[\"Distribute \",[\"tokensText\"]],\"Distributed\":\"Distributed\",\"Distributed Funds\":\"Distributed Funds\",\"Distributed Reserves\":\"Distributed Reserves\",\"Distributed Tokens\":\"Distributed Tokens\",\"Distributed funds\":\"Distributed funds\",\"Distributed reserved {0}\":[\"Distributed reserved \",[\"0\"]],\"Distributing funds to Juicebox projects won't incur fees.\":\"Distributing funds to Juicebox projects won't incur fees.\",\"Distribution\":\"Distribution\",\"Distribution Limit <0/>:\":\"Distribution Limit <0/>:\",\"Distribution limit\":\"Distribution limit\",\"Distribution limit is 0: All funds will be considered overflow and can be redeemed by token holders.\":\"Distribution limit is 0: All funds will be considered overflow and can be redeemed by token holders.\",\"Distribution limit is infinite. <0>The project will control how all funds are distributed, and none can be redeemed by token holders.</0>\":\"Distribution limit is infinite. <0>The project will control how all funds are distributed, and none can be redeemed by token holders.</0>\",\"Distribution limit, duration and payouts\":\"Distribution limit, duration and payouts\",\"Distribution limit: <0/>{0}\":[\"Distribution limit: <0/>\",[\"0\"]],\"Do I have to make my project open source to use Juicebox as its business model?\":\"Do I have to make my project open source to use Juicebox as its business model?\",\"Do I need this?\":\"Do I need this?\",\"Docs\":\"Docs\",\"Documentation on v1.1 contracts\":\"Documentation on v1.1 contracts\",\"Does a project benefit from its own overflow?\":\"Does a project benefit from its own overflow?\",\"Done\":\"Done\",\"Download CSV\":\"Download CSV\",\"Download CSV of payments\":\"Download CSV of payments\",\"Download CSV of project activity\":\"Download CSV of project activity\",\"Download CSV of {0} holders\":[\"Download CSV of \",[\"0\"],\" holders\"],\"Duration\":\"Duration\",\"Duration (seconds)\":\"Duration (seconds)\",\"ENS Name\":\"ENS Name\",\"ERC-20 tokens can only be minted once an ERC-20 token has been issued for this project.\":\"ERC-20 tokens can only be minted once an ERC-20 token has been issued for this project.\",\"ERC20 Deployed\":\"ERC20 Deployed\",\"Each payout will receive their percent of this total each funding cycle if there is enough in the treasury. Otherwise, they will receive their percent of whatever is in the treasury.\":\"Each payout will receive their percent of this total each funding cycle if there is enough in the treasury. Otherwise, they will receive their percent of whatever is in the treasury.\",\"Each project has its own <0>ERC-20 tokens</0>. Anyone who contributes funds to a project receives that project's tokens in return. Token balances will be tracked by the protocol until ERC-20 tokens are optionally issued by the project owner.\":\"Each project has its own <0>ERC-20 tokens</0>. Anyone who contributes funds to a project receives that project's tokens in return. Token balances will be tracked by the protocol until ERC-20 tokens are optionally issued by the project owner.\",\"Edit NFT reward\":\"Edit NFT reward\",\"Edit allocation\":\"Edit allocation\",\"Edit payout\":\"Edit payout\",\"Edit payouts\":\"Edit payouts\",\"Edit project\":\"Edit project\",\"Edit project details\":\"Edit project details\",\"Edit reserved token allocation\":\"Edit reserved token allocation\",\"Edit token allocation\":\"Edit token allocation\",\"Edit tracked assets\":\"Edit tracked assets\",\"Enabled\":\"Enabled\",\"Enabling this allows the project owner to manually mint any amount of tokens to any address.\":\"Enabling this allows the project owner to manually mint any amount of tokens to any address.\",\"Enabling this will mint {tokenSymbol} ERC-20 tokens. Otherwise unclaimed {tokenSymbol} tokens will be minted, which can be claimed later as ERC-20 by the receiver.\":[\"Enabling this will mint \",[\"tokenSymbol\"],\" ERC-20 tokens. Otherwise unclaimed \",[\"tokenSymbol\"],\" tokens will be minted, which can be claimed later as ERC-20 by the receiver.\"],\"Enabling this will mint {tokenSymbol} ERC-20 tokens. Otherwise, unclaimed {tokenSymbol} tokens will be minted, which can be claimed later as ERC-20 by the receiver.\":[\"Enabling this will mint \",[\"tokenSymbol\"],\" ERC-20 tokens. Otherwise, unclaimed \",[\"tokenSymbol\"],\" tokens will be minted, which can be claimed later as ERC-20 by the receiver.\"],\"Enabling token minting will appear risky to contributors.\":\"Enabling token minting will appear risky to contributors.\",\"End\":\"End\",\"Error loading holders\":\"Error loading holders\",\"Error loading payments\":\"Error loading payments\",\"Explore projects\":\"Explore projects\",\"FAQ\":\"FAQ\",\"FAQs\":\"FAQs\",\"Failed to update project metadata\":\"Failed to update project metadata\",\"File must be less than {formattedSize}{unit}\":[\"File must be less than \",[\"formattedSize\"],[\"unit\"]],\"Fund and operate your thing, your way.\":\"Fund and operate your thing, your way.\",\"Fund anything. Grow together.\":\"Fund anything. Grow together.\",\"Funding\":\"Funding\",\"Funding cycle\":\"Funding cycle\",\"Funding cycle details\":\"Funding cycle details\",\"Funding cycle duration\":\"Funding cycle duration\",\"Funding cycle preview\":\"Funding cycle preview\",\"Funding cycle required.\":\"Funding cycle required.\",\"Funding cycle target\":\"Funding cycle target\",\"Funding cycles can be reconfigured moments before a new cycle begins, without notifying contributors.\":\"Funding cycles can be reconfigured moments before a new cycle begins, without notifying contributors.\",\"Funding distribution\":\"Funding distribution\",\"Funding target\":\"Funding target\",\"Funds will be distributed to:\":\"Funds will be distributed to:\",\"General\":\"General\",\"Give feedback\":\"Give feedback\",\"Give this NFT a name.\":\"Give this NFT a name.\",\"Go to Etherscan\":\"Go to Etherscan\",\"Handle\":\"Handle\",\"Heads up\":\"Heads up\",\"History\":\"History\",\"Holders\":\"Holders\",\"Holdings\":\"Holdings\",\"Hours\":\"Hours\",\"How decentralized is Juicebox?\":\"How decentralized is Juicebox?\",\"How do I archive a project?\":\"How do I archive a project?\",\"How do I create a project?\":\"How do I create a project?\",\"How do I decide?\":\"How do I decide?\",\"How do I set the redemption rate?\":\"How do I set the redemption rate?\",\"How does it work?\":\"How does it work?\",\"How have the contracts been tested?\":\"How have the contracts been tested?\",\"How long before your next funding cycle must you reconfigure in order for changes to take effect.\":\"How long before your next funding cycle must you reconfigure in order for changes to take effect.\",\"How long one funding cycle will last. Funding cycle <0>reconfigurations</0> will only take effect for <1>upcoming</1> funding cycles, i.e. once a current funding cycle has ended.\":\"How long one funding cycle will last. Funding cycle <0>reconfigurations</0> will only take effect for <1>upcoming</1> funding cycles, i.e. once a current funding cycle has ended.\",\"How the {reservedPercentage}% of your project's reserved tokens will be split.\":[\"How the \",[\"reservedPercentage\"],\"% of your project's reserved tokens will be split.\"],\"How to Juice.\":\"How to Juice.\",\"How your project will distribute funds.\":\"How your project will distribute funds.\",\"I understand\":\"I understand\",\"ID\":\"ID\",\"ID: {projectId}\":[\"ID: \",[\"projectId\"]],\"If locked, this can't be edited or removed until the lock expires or the funding cycle is reconfigured.\":\"If locked, this can't be edited or removed until the lock expires or the funding cycle is reconfigured.\",\"If locked, this split can't be edited or removed until the lock expires or the funding cycle is reconfigured.\":\"If locked, this split can't be edited or removed until the lock expires or the funding cycle is reconfigured.\",\"If you don't raise the sum of all your payouts (<0/>{distributionLimit}), this address will receive {0}% of all the funds you raise.\":[\"If you don't raise the sum of all your payouts (<0/>\",[\"distributionLimit\"],\"), this address will receive \",[\"0\"],\"% of all the funds you raise.\"],\"If you don't raise this amount, your splits will receive their percentage of whatever you raise.\":\"If you don't raise this amount, your splits will receive their percentage of whatever you raise.\",\"If you have Juicebox project on Juicebox V1 and V2, we recommend you migrate to V2 exclusively.\":\"If you have Juicebox project on Juicebox V1 and V2, we recommend you migrate to V2 exclusively.\",\"If you have already deployed a payable address and have lost it, please contact the Juicebox team through <0>Discord.</0>\":\"If you have already deployed a payable address and have lost it, please contact the Juicebox team through <0>Discord.</0>\",\"If you lose your address, please contact the Juicebox team through <0>Discord</0>.\":\"If you lose your address, please contact the Juicebox team through <0>Discord</0>.\",\"If you're interested in creating a project but still confused on how to get started, consider watching this <0>instructional video</0>. Also feel free to reach out in the <1>Juicebox Discord</1> where our team will be happy to help bring your project idea to life!\":\"If you're interested in creating a project but still confused on how to get started, consider watching this <0>instructional video</0>. Also feel free to reach out in the <1>Juicebox Discord</1> where our team will be happy to help bring your project idea to life!\",\"If you're unsure if you need to claim, you probably don't.\":\"If you're unsure if you need to claim, you probably don't.\",\"Image file\":\"Image file\",\"In Juicebox\":\"In Juicebox\",\"In treasury\":\"In treasury\",\"In wallet\":\"In wallet\",\"Incentives\":\"Incentives\",\"Indie creators and builders\":\"Indie creators and builders\",\"Infinite (no limit)\":\"Infinite (no limit)\",\"Initial issuance rate\":\"Initial issuance rate\",\"Initial mint rate\":\"Initial mint rate\",\"Invalid address\":\"Invalid address\",\"Issue ERC-20\":\"Issue ERC-20\",\"Issue ERC-20 token\":\"Issue ERC-20 token\",\"Issue an ERC-20 to be used as this project's token. Once issued, anyone can claim their existing token balance in the new token.\":\"Issue an ERC-20 to be used as this project's token. Once issued, anyone can claim their existing token balance in the new token.\",\"Issue an ERC-20 token (optional)\":\"Issue an ERC-20 token (optional)\",\"Issue token\":\"Issue token\",\"It isn't possible to remove a project's data from the blockchain, but we can hide it in the app if you'd like to prevent people from seeing or interacting with it — just let us know in <0>Discord</0>. Keep in mind people will still be able to use your project by interacting directly with the contract.\":\"It isn't possible to remove a project's data from the blockchain, but we can hide it in the app if you'd like to prevent people from seeing or interacting with it — just let us know in <0>Discord</0>. Keep in mind people will still be able to use your project by interacting directly with the contract.\",\"It'd be a lot cooler if you did\":\"It'd be a lot cooler if you did\",\"JBX Fee ({0}%):\":[\"JBX Fee (\",[\"0\"],\"%):\"],\"JBX Fee ({feePercentage}%):\":[\"JBX Fee (\",[\"feePercentage\"],\"%):\"],\"Join <0>hundreds of projects</0> sippin' the Juice.\":\"Join <0>hundreds of projects</0> sippin' the Juice.\",\"Juicebox Project ID\":\"Juicebox Project ID\",\"Juicebox V1 project ID\":\"Juicebox V1 project ID\",\"Juicebox V2 project with ID {0}\":[\"Juicebox V2 project with ID \",[\"0\"]],\"Juicebox is new, unaudited, and not guaranteed to work perfectly. Before spending money, do your own research: <0>ask questions</0>, <1>check out the code</1>, and understand the risks!\":\"Juicebox is new, unaudited, and not guaranteed to work perfectly. Before spending money, do your own research: <0>ask questions</0>, <1>check out the code</1>, and understand the risks!\",\"Juicebox loading animation\":\"Juicebox loading animation\",\"Juicebox project\":\"Juicebox project\",\"Juicebox projects use <0>ENS names</0> as handles. Setting a handle involves 2 transactions:\":\"Juicebox projects use <0>ENS names</0> as handles. Setting a handle involves 2 transactions:\",\"Juicebox puts the fun back in funding so you can focus on building.\":\"Juicebox puts the fun back in funding so you can focus on building.\",\"Last paid\":\"Last paid\",\"Later\":\"Later\",\"Latest\":\"Latest\",\"Latest payments\":\"Latest payments\",\"Launch funding cycle\":\"Launch funding cycle\",\"Launch your project\":\"Launch your project\",\"Leave blank to start immediately.\":\"Leave blank to start immediately.\",\"Light theme\":\"Light theme\",\"Link Juicebox V1 project\":\"Link Juicebox V1 project\",\"Links\":\"Links\",\"Load more\":\"Load more\",\"Lock until\":\"Lock until\",\"Locked:\":\"Locked:\",\"Logo\":\"Logo\",\"MAX\":\"MAX\",\"Manage\":\"Manage\",\"Manage your {0}\":[\"Manage your \",[\"0\"]],\"Manage {tokenText}\":[\"Manage \",[\"tokenText\"]],\"Maximum supply\":\"Maximum supply\",\"Maximum supply required\":\"Maximum supply required\",\"Maximum {MAX_DESCRIPTION_LENGTH} characters\":[\"Maximum \",[\"MAX_DESCRIPTION_LENGTH\"],\" characters\"],\"Memo\":\"Memo\",\"Memo (optional)\":\"Memo (optional)\",\"Memo included on-chain\":\"Memo included on-chain\",\"Migrate to Juicebox V1.1\":\"Migrate to Juicebox V1.1\",\"Mint as ERC-20\":\"Mint as ERC-20\",\"Mint new {tokensLabel} into an account. Only a project's owner, a designated operator, or one of its terminal's delegates can mint its tokens.\":[\"Mint new \",[\"tokensLabel\"],\" into an account. Only a project's owner, a designated operator, or one of its terminal's delegates can mint its tokens.\"],\"Mint project tokens on demand\":\"Mint project tokens on demand\",\"Mint rate\":\"Mint rate\",\"Mint tokens\":\"Mint tokens\",\"Mint tokens as ERC-20\":\"Mint tokens as ERC-20\",\"Mint tokens to a custom address.\":\"Mint tokens to a custom address.\",\"Mint {tokensLabel}\":[\"Mint \",[\"tokensLabel\"]],\"Mint {tokensTokenLower}\":[\"Mint \",[\"tokensTokenLower\"]],\"Minutes\":\"Minutes\",\"Move your {tokensLabel} from the Juicebox contract to your wallet.\":[\"Move your \",[\"tokensLabel\"],\" from the Juicebox contract to your wallet.\"],\"My Projects\":\"My Projects\",\"NFT projects\":\"NFT projects\",\"NFT rewards\":\"NFT rewards\",\"NO LIMIT\":\"NO LIMIT\",\"Name\":\"Name\",\"New\":\"New\",\"Newly minted {tokenSymbolPlural} <0>received by contributors</0> per ETH they contribute to the treasury.\":[\"Newly minted \",[\"tokenSymbolPlural\"],\" <0>received by contributors</0> per ETH they contribute to the treasury.\"],\"Next: Funding cycle\":\"Next: Funding cycle\",\"Next: Review and deploy\":\"Next: Review and deploy\",\"No\":\"No\",\"No active funding cycle.\":\"No active funding cycle.\",\"No activity yet\":\"No activity yet\",\"No funding target: The project will control how all funds are distributed, and none can be redeemed by token holders.\":\"No funding target: The project will control how all funds are distributed, and none can be redeemed by token holders.\",\"No funds can be distributed out of the treasury. Funds can only be accessed by token holders redeeming their tokens.\":\"No funds can be distributed out of the treasury. Funds can only be accessed by token holders redeeming their tokens.\",\"No limit (infinite)\":\"No limit (infinite)\",\"No more than the funding cycle target can be distributed by the project in a single funding cycle.\":\"No more than the funding cycle target can be distributed by the project in a single funding cycle.\",\"No past funding cycles\":\"No past funding cycles\",\"No strategy\":\"No strategy\",\"No target\":\"No target\",\"No target set.\":\"No target set.\",\"Not a valid ETH address\":\"Not a valid ETH address\",\"Not set\":\"Not set\",\"Note\":\"Note\",\"Note: Tokens can be minted manually when allowed in the current funding cycle. This can be changed by the project owner for upcoming cycles.\":\"Note: Tokens can be minted manually when allowed in the current funding cycle. This can be changed by the project owner for upcoming cycles.\",\"Notice from {0}:\":[\"Notice from \",[\"0\"],\":\"],\"Once launched, your first funding cycle <0>can't be changed</0>. You can reconfigure upcoming funding cycles according to the project's <1>reconfiguration rules</1>.\":\"Once launched, your first funding cycle <0>can't be changed</0>. You can reconfigure upcoming funding cycles according to the project's <1>reconfiguration rules</1>.\",\"Other assets in this project's owner's wallet.\":\"Other assets in this project's owner's wallet.\",\"Other details\":\"Other details\",\"Overflow\":\"Overflow\",\"Overflow is created if your project's balance exceeds your funding cycle target. Overflow can be redeemed by your project's token holders.\":\"Overflow is created if your project's balance exceeds your funding cycle target. Overflow can be redeemed by your project's token holders.\",\"Owned by: <0/>\":\"Owned by: <0/>\",\"Owner can mint tokens at any time.\":\"Owner can mint tokens at any time.\",\"Owner is not allowed to mint tokens.\":\"Owner is not allowed to mint tokens.\",\"Owner token minting\":\"Owner token minting\",\"Owner tools\":\"Owner tools\",\"Paid\":\"Paid\",\"Paid as <0/>\":\"Paid as <0/>\",\"Pause payments\":\"Pause payments\",\"Pause received payments\":\"Pause received payments\",\"Paused\":\"Paused\",\"Pay\":\"Pay\",\"Pay amount\":\"Pay amount\",\"Pay amount must be greater than 0.\":\"Pay amount must be greater than 0.\",\"Pay button\":\"Pay button\",\"Pay button text\":\"Pay button text\",\"Pay disclosure\":\"Pay disclosure\",\"Pay {0}\":[\"Pay \",[\"0\"]],\"Payer\":\"Payer\",\"Paying <0>{0}</0> is not an investment — it's a way to support the project. Any value or utility of the tokens you receive is determined by <1>{1}</1>.\":[\"Paying <0>\",[\"0\"],\"</0> is not an investment — it's a way to support the project. Any value or utility of the tokens you receive is determined by <1>\",[\"1\"],\"</1>.\"],\"Paying <0>{0}</0> is not an investment — it's a way to support the project. Any value or utility of the tokens you receive is determined by {1}.\":[\"Paying <0>\",[\"0\"],\"</0> is not an investment — it's a way to support the project. Any value or utility of the tokens you receive is determined by \",[\"1\"],\".\"],\"Paying this project is currently disabled, because the token reserved rate is 100% and no tokens will be earned by making a payment.\":\"Paying this project is currently disabled, because the token reserved rate is 100% and no tokens will be earned by making a payment.\",\"Paying this project is currently disabled.\":\"Paying this project is currently disabled.\",\"Payment equivalent\":\"Payment equivalent\",\"Payment made through payable address\":\"Payment made through payable address\",\"Payment memo image\":\"Payment memo image\",\"Payments\":\"Payments\",\"Payments are paused for the current funding cycle.\":\"Payments are paused for the current funding cycle.\",\"Payments made\":\"Payments made\",\"Payments paused\":\"Payments paused\",\"Payout is locked\":\"Payout is locked\",\"Payout recipients\":\"Payout recipients\",\"Payouts\":\"Payouts\",\"Payouts (optional)\":\"Payouts (optional)\",\"Payouts to Ethereum addresses incur a 2.5% JBX membership fee\":\"Payouts to Ethereum addresses incur a 2.5% JBX membership fee\",\"Payouts to Ethereum addresses incur a {feePercentage}% fee. Your project will receive JBX in return at the current issuance rate.\":[\"Payouts to Ethereum addresses incur a \",[\"feePercentage\"],\"% fee. Your project will receive JBX in return at the current issuance rate.\"],\"Peel\":\"Peel\",\"Percent\":\"Percent\",\"Percentage allocation\":\"Percentage allocation\",\"Percentage:\":\"Percentage:\",\"Percentages\":\"Percentages\",\"Percentages must add up to 100% or less\":\"Percentages must add up to 100% or less\",\"Please contact the Juicebox dev team through our <0>Discord</0> to have your project archived.\":\"Please contact the Juicebox dev team through our <0>Discord</0> to have your project archived.\",\"Podcast\":\"Podcast\",\"Potential risks\":\"Potential risks\",\"Preview\":\"Preview\",\"Preview:\":\"Preview:\",\"Project Created\":\"Project Created\",\"Project ID must be a number.\":\"Project ID must be a number.\",\"Project ID:\":\"Project ID:\",\"Project Token\":\"Project Token\",\"Project configuration\":\"Project configuration\",\"Project created by\":\"Project created by\",\"Project description\":\"Project description\",\"Project details\":\"Project details\",\"Project details can be edited at any time.\":\"Project details can be edited at any time.\",\"Project details reconfigurations will create a separate transaction.\":\"Project details reconfigurations will create a separate transaction.\",\"Project handle\":\"Project handle\",\"Project handle must be unique.\":\"Project handle must be unique.\",\"Project is accepting payments this funding cycle.\":\"Project is accepting payments this funding cycle.\",\"Project is not accepting payments this funding cycle.\":\"Project is not accepting payments this funding cycle.\",\"Project launch successful\":\"Project launch successful\",\"Project name\":\"Project name\",\"Project name, handle, links, and other details.\":\"Project name, handle, links, and other details.\",\"Project not found\":\"Project not found\",\"Project owner\":\"Project owner\",\"Project owner (you)\":\"Project owner (you)\",\"Project owners can configure a delay period, meaning reconfigurations to an upcoming funding cycle must be submitted a certain number of days before it starts. For example, a 3-day delay period means reconfigurations must be submitted at least 3 days before the next funding cycle starts. This gives token holders time to react to the decision and reduces the chance of rug-pulls.\":\"Project owners can configure a delay period, meaning reconfigurations to an upcoming funding cycle must be submitted a certain number of days before it starts. For example, a 3-day delay period means reconfigurations must be submitted at least 3 days before the next funding cycle starts. This gives token holders time to react to the decision and reduces the chance of rug-pulls.\",\"Project page customizations\":\"Project page customizations\",\"Project token\":\"Project token\",\"Project tokens <0>aren't ERC-20 tokens</0> by default. Once you deploy your project, you can issue an ERC-20 for your holders to claim. This is <1>optional</1>.\":\"Project tokens <0>aren't ERC-20 tokens</0> by default. Once you deploy your project, you can issue an ERC-20 for your holders to claim. This is <1>optional</1>.\",\"Project {name} will be available soon! Try refreshing the page shortly.\":[\"Project \",[\"name\"],\" will be available soon! Try refreshing the page shortly.\"],\"Project {projectId}\":[\"Project \",[\"projectId\"]],\"Project {projectId} not found\":[\"Project \",[\"projectId\"],\" not found\"],\"Projects\":\"Projects\",\"Projects can be created with an optional discount rate designed to incentivize supporters to contribute earlier rather than later. The amount of tokens rewarded per amount paid to your project will decrease by the discount rate with each new funding cycle. A higher discount rate will incentivize supporters to pay your project earlier rather than later.\":\"Projects can be created with an optional discount rate designed to incentivize supporters to contribute earlier rather than later. The amount of tokens rewarded per amount paid to your project will decrease by the discount rate with each new funding cycle. A higher discount rate will incentivize supporters to pay your project earlier rather than later.\",\"Projects on Juicebox\":\"Projects on Juicebox\",\"Projects that you have created.\":\"Projects that you have created.\",\"Projects that you hold tokens for.\":\"Projects that you hold tokens for.\",\"Projects using a reserved rate of {reservedRateRiskyMin}% or more will appear risky to contributors, as a relatively small number of tokens will be received in exchange for paying your project.\":[\"Projects using a reserved rate of \",[\"reservedRateRiskyMin\"],\"% or more will appear risky to contributors, as a relatively small number of tokens will be received in exchange for paying your project.\"],\"Projects with a handle:<0/><1/>1. Are included in search results on the projects page<2/>2. Can be accessed via the URL: <3>juicebox.money/#{0}</3><4/><5/>(The original URL <6>juicebox.money/#{1}</6> will continue to work.)\":[\"Projects with a handle:<0/><1/>1. Are included in search results on the projects page<2/>2. Can be accessed via the URL: <3>juicebox.money/#\",[\"0\"],\"</3><4/><5/>(The original URL <6>juicebox.money/#\",[\"1\"],\"</6> will continue to work.)\"],\"Provide a link to additional information about this NFT.\":\"Provide a link to additional information about this NFT.\",\"Raised on Juicebox\":\"Raised on Juicebox\",\"Rankings based on number of contributions and volume gained in the last {trendingWindow} days. <0>See code</0>\":[\"Rankings based on number of contributions and volume gained in the last \",[\"trendingWindow\"],\" days. <0>See code</0>\"],\"Read less\":\"Read less\",\"Read more\":\"Read more\",\"Receive ERC-20\":\"Receive ERC-20\",\"Receive {receiveText}\":[\"Receive \",[\"receiveText\"]],\"Recipient\":\"Recipient\",\"Recipient address\":\"Recipient address\",\"Recipients will receive payouts in ETH.\":\"Recipients will receive payouts in ETH.\",\"Reconfiguration\":\"Reconfiguration\",\"Reconfiguration rules\":\"Reconfiguration rules\",\"Reconfiguration strategy\":\"Reconfiguration strategy\",\"Reconfigure\":\"Reconfigure\",\"Reconfigure funding\":\"Reconfigure funding\",\"Reconfigure payouts and limit\":\"Reconfigure payouts and limit\",\"Reconfigure payouts as percentages of your distribution limit.\":\"Reconfigure payouts as percentages of your distribution limit.\",\"Reconfigure project and funding details\":\"Reconfigure project and funding details\",\"Reconfigure project details\":\"Reconfigure project details\",\"Reconfigure token\":\"Reconfigure token\",\"Reconfigure upcoming\":\"Reconfigure upcoming\",\"Reconfigure upcoming funding\":\"Reconfigure upcoming funding\",\"Reconfigure upcoming funding cycles\":\"Reconfigure upcoming funding cycles\",\"Redeem your {tokensLabel} for a portion of the project's overflow. Any {tokensLabel} you redeem will be burned.\":[\"Redeem your \",[\"tokensLabel\"],\" for a portion of the project's overflow. Any \",[\"tokensLabel\"],\" you redeem will be burned.\"],\"Redeem {0} {tokensTextShort} for ETH\":[\"Redeem \",[\"0\"],\" \",[\"tokensTextShort\"],\" for ETH\"],\"Redeem {tokensLabel} for ETH\":[\"Redeem \",[\"tokensLabel\"],\" for ETH\"],\"Redeem {tokensTextLong} for ETH\":[\"Redeem \",[\"tokensTextLong\"],\" for ETH\"],\"Redeemed\":\"Redeemed\",\"Redemption rate\":\"Redemption rate\",\"Redemption rate: <0>{0}%</0>\":[\"Redemption rate: <0>\",[\"0\"],\"%</0>\"],\"Refresh\":\"Refresh\",\"Relaunch your funding cycle on the new Juicebox V2 contracts.\":\"Relaunch your funding cycle on the new Juicebox V2 contracts.\",\"Required\":\"Required\",\"Reserve a percentage of freshly minted tokens for your project to use.\":\"Reserve a percentage of freshly minted tokens for your project to use.\",\"Reserved rate\":\"Reserved rate\",\"Reserved rate is 0% but has reserved token allocation. Consider adding a reserved rate that is greater than zero, or remove the token allocation.\":\"Reserved rate is 0% but has reserved token allocation. Consider adding a reserved rate that is greater than zero, or remove the token allocation.\",\"Reserved token allocation\":\"Reserved token allocation\",\"Reserved token allocation (optional)\":\"Reserved token allocation (optional)\",\"Reserved token allocations\":\"Reserved token allocations\",\"Reserved tokens\":\"Reserved tokens\",\"Reserved {0}\":[\"Reserved \",[\"0\"]],\"Reserved {tokenSymbolPlural}\":[\"Reserved \",[\"tokenSymbolPlural\"]],\"Reserved {tokenTextPlural}: <0>{reservedTokensFormatted} {tokenTextPlural}</0>\":[\"Reserved \",[\"tokenTextPlural\"],\": <0>\",[\"reservedTokensFormatted\"],\" \",[\"tokenTextPlural\"],\"</0>\"],\"Reserved {tokensText}\":[\"Reserved \",[\"tokensText\"]],\"Resources\":\"Resources\",\"Restrict payments and printing tokens.\":\"Restrict payments and printing tokens.\",\"Restricted actions\":\"Restricted actions\",\"Review & Deploy\":\"Review & Deploy\",\"Review and launch funding cycle\":\"Review and launch funding cycle\",\"Review project\":\"Review project\",\"Reward contributors with NFT's.\":\"Reward contributors with NFT's.\",\"Reward contributors with NFTs when they meet your configured funding criteria.\":\"Reward contributors with NFTs when they meet your configured funding criteria.\",\"Reward specific community members with tokens.\":\"Reward specific community members with tokens.\",\"Rules\":\"Rules\",\"Rules for determining how funding cycles can be reconfigured\":\"Rules for determining how funding cycles can be reconfigured\",\"Rules for how changes can be made to your project.\":\"Rules for how changes can be made to your project.\",\"Rules for how this project's funding cycles can be reconfigured.\":\"Rules for how this project's funding cycles can be reconfigured.\",\"Save\":\"Save\",\"Save NFT reward\":\"Save NFT reward\",\"Save NFT rewards\":\"Save NFT rewards\",\"Save changes\":\"Save changes\",\"Save funding configuration\":\"Save funding configuration\",\"Save handle\":\"Save handle\",\"Save payout\":\"Save payout\",\"Save payouts\":\"Save payouts\",\"Save project details\":\"Save project details\",\"Save reconfiguration\":\"Save reconfiguration\",\"Save rules\":\"Save rules\",\"Save token allocation\":\"Save token allocation\",\"Save token configuration\":\"Save token configuration\",\"Save tracked assets\":\"Save tracked assets\",\"Search projects by handle\":\"Search projects by handle\",\"Seconds\":\"Seconds\",\"See transaction\":\"See transaction\",\"Set ENS name\":\"Set ENS name\",\"Set a distribution limit\":\"Set a distribution limit\",\"Set a funding cycle duration\":\"Set a funding cycle duration\",\"Set a funding cycle target\":\"Set a funding cycle target\",\"Set a project handle (optional)\":\"Set a project handle (optional)\",\"Set a text record for {0} with the key <0>\\\"juicebox\\\"</0> and the value <1>\\\"{projectId}\\\"</1> (this project's ID). You can do this on the <2>ENS app</2>, or use the button below (as long as your connected wallet owns or controls that ENS name).\":[\"Set a text record for \",[\"0\"],\" with the key <0>\\\"juicebox\\\"</0> and the value <1>\\\"\",[\"projectId\"],\"\\\"</1> (this project's ID). You can do this on the <2>ENS app</2>, or use the button below (as long as your connected wallet owns or controls that ENS name).\"],\"Set a unique name that will be visible in your project's URL, and that will allow your project to appear in search results.\":\"Set a unique name that will be visible in your project's URL, and that will allow your project to appear in search results.\",\"Set project handle\":\"Set project handle\",\"Set text record for {0}\":[\"Set text record for \",[\"0\"]],\"Set the amount of funds you'd like to raise each funding cycle. Any funds raised within the funding cycle target can be distributed by the project, and can't be redeemed by your project's token holders.\":\"Set the amount of funds you'd like to raise each funding cycle. Any funds raised within the funding cycle target can be distributed by the project, and can't be redeemed by your project's token holders.\",\"Set the length of your funding cycles.\":\"Set the length of your funding cycles.\",\"Set this to the sum of all your payouts\":\"Set this to the sum of all your payouts\",\"Set up V1 token migration\":\"Set up V1 token migration\",\"Set up token migration\":\"Set up token migration\",\"Set up your Juicebox V2 project for migration from your Juicebox V1 project.\":\"Set up your Juicebox V2 project for migration from your Juicebox V1 project.\",\"Should you Juicebox?\":\"Should you Juicebox?\",\"Since you have not set a funding duration, changes to these settings will be applied immediately.\":\"Since you have not set a funding duration, changes to these settings will be applied immediately.\",\"Some funding cycle properties may indicate risk for project contributors.\":\"Some funding cycle properties may indicate risk for project contributors.\",\"Some properties of the project's current funding cycle may indicate risk for contributors.\":\"Some properties of the project's current funding cycle may indicate risk for contributors.\",\"Something went wrong.\":\"Something went wrong.\",\"Spending\":\"Spending\",\"Start\":\"Start\",\"Start Over\":\"Start Over\",\"Start over\":\"Start over\",\"Start raising funds\":\"Start raising funds\",\"Start time (seconds, Unix time)\":\"Start time (seconds, Unix time)\",\"Step 1. Add V1 token payment terminal\":\"Step 1. Add V1 token payment terminal\",\"Step 2. Link your Juicebox V1 project\":\"Step 2. Link your Juicebox V1 project\",\"Sum of percentages cannot exceed 100%\":\"Sum of percentages cannot exceed 100%\",\"Sum of percentages cannot exceed 100%.\":\"Sum of percentages cannot exceed 100%.\",\"Target\":\"Target\",\"Target is 0: All funds will be considered overflow and can be redeemed by burning project tokens.\":\"Target is 0: All funds will be considered overflow and can be redeemed by burning project tokens.\",\"Text record is set\":\"Text record is set\",\"The <0>issuance rate</0> of your second funding cycle will be <1>{0} tokens per 1 ETH</1>, then <2>{1} tokens per 1 ETH </2>for your third funding cycle, and so on.\":[\"The <0>issuance rate</0> of your second funding cycle will be <1>\",[\"0\"],\" tokens per 1 ETH</1>, then <2>\",[\"1\"],\" tokens per 1 ETH </2>for your third funding cycle, and so on.\"],\"The Decentralized Funding Platform. Light enough for a group of friends, powerful enough for a global network of anons. <0>Community-owned</0>, on Ethereum.\":\"The Decentralized Funding Platform. Light enough for a group of friends, powerful enough for a global network of anons. <0>Community-owned</0>, on Ethereum.\",\"The JBX protocol is unaudited, and projects built on it may be vulnerable to bugs or exploits. Be smart!\":\"The JBX protocol is unaudited, and projects built on it may be vulnerable to bugs or exploits. Be smart!\",\"The address of any smart contract deployed on {0} that implements <0>this interface</0>.\":[\"The address of any smart contract deployed on \",[\"0\"],\" that implements <0>this interface</0>.\"],\"The address that should receive the tokens minted from paying this project.\":\"The address that should receive the tokens minted from paying this project.\",\"The amount of tokens minted to the receiver will be calculated based on if they had paid this amount to the project in the current funding cycle.\":\"The amount of tokens minted to the receiver will be calculated based on if they had paid this amount to the project in the current funding cycle.\",\"The amount of tokens this project has reserved. These tokens can be distributed to reserved token beneficiaries.\":\"The amount of tokens this project has reserved. These tokens can be distributed to reserved token beneficiaries.\",\"The amount of tokens to mint to the receiver.\":\"The amount of tokens to mint to the receiver.\",\"The amount that has been distributed from the Juicebox balance in this funding cycle, out of the current distribution limit. No more than the distribution limit can be distributed in a single funding cycle—any remaining ETH in Juicebox is overflow, until the next cycle begins.\":\"The amount that has been distributed from the Juicebox balance in this funding cycle, out of the current distribution limit. No more than the distribution limit can be distributed in a single funding cycle—any remaining ETH in Juicebox is overflow, until the next cycle begins.\",\"The amount that has been distributed from the Juicebox balance in this funding cycle, out of the current funding target. No more than the funding target can be distributed in a single funding cycle—any remaining ETH in Juicebox is overflow, until the next cycle begins.\":\"The amount that has been distributed from the Juicebox balance in this funding cycle, out of the current funding target. No more than the funding target can be distributed in a single funding cycle—any remaining ETH in Juicebox is overflow, until the next cycle begins.\",\"The balance of the project owner's wallet.\":\"The balance of the project owner's wallet.\",\"The balance of this project in the Juicebox contract.\":\"The balance of this project in the Juicebox contract.\",\"The distribution limit for this funding cycle is 0, meaning all funds in Juicebox are currently considered overflow. Overflow can be redeemed by token holders, but not distributed.\":\"The distribution limit for this funding cycle is 0, meaning all funds in Juicebox are currently considered overflow. Overflow can be redeemed by token holders, but not distributed.\",\"The funds available to distribution for this funding cycle (before the {feePercentage}% JBX fee is subtracted). This number won't roll over to the next funding cycle, so funds should be distributed before this funding cycle ends.\":[\"The funds available to distribution for this funding cycle (before the \",[\"feePercentage\"],\"% JBX fee is subtracted). This number won't roll over to the next funding cycle, so funds should be distributed before this funding cycle ends.\"],\"The future will be led by creators, and owned by communities.\":\"The future will be led by creators, and owned by communities.\",\"The maximum amount of funds allowed to be distributed from the project's treasury each funding cycle.\":\"The maximum amount of funds allowed to be distributed from the project's treasury each funding cycle.\",\"The maximum amount of funds that can be distributed from the treasury each funding cycle.\":\"The maximum amount of funds that can be distributed from the treasury each funding cycle.\",\"The maximum amount of funds that can be distributed from this project in one funding cycle. Funds will be withdrawn in ETH no matter the currency you choose.\":\"The maximum amount of funds that can be distributed from this project in one funding cycle. Funds will be withdrawn in ETH no matter the currency you choose.\",\"The maximum quantity of this NFT that can ever be minted.\":\"The maximum quantity of this NFT that can ever be minted.\",\"The number of project tokens minted when 1 ETH is contributed in the first funding cycle.\":\"The number of project tokens minted when 1 ETH is contributed in the first funding cycle.\",\"The number of project tokens minted when 1 ETH is contributed.\":\"The number of project tokens minted when 1 ETH is contributed.\",\"The onchain memo for each transaction made through the address. It will appear in the project's payment feed when someone pays this address.\":\"The onchain memo for each transaction made through the address. It will appear in the project's payment feed when someone pays this address.\",\"The percentage this individual receives of the overall {reservedRate}% reserved token allocation\":[\"The percentage this individual receives of the overall \",[\"reservedRate\"],\"% reserved token allocation\"],\"The project owner may mint any supply of tokens at any time, diluting the token share of all existing contributors.\":\"The project owner may mint any supply of tokens at any time, diluting the token share of all existing contributors.\",\"The project owner may reconfigure this funding cycle at any time, without notice.\":\"The project owner may reconfigure this funding cycle at any time, without notice.\",\"The project token's issuance rate will decrease by this percentage every funding cycle. A higher discount rate will incentivize contributors to pay the project earlier.\":\"The project token's issuance rate will decrease by this percentage every funding cycle. A higher discount rate will incentivize contributors to pay the project earlier.\",\"The ratio of tokens rewarded per payment amount will decrease by this percentage with each new funding cycle. A higher discount rate will incentivize supporters to pay your project earlier than later.\":\"The ratio of tokens rewarded per payment amount will decrease by this percentage with each new funding cycle. A higher discount rate will incentivize supporters to pay your project earlier than later.\",\"The redemption rate determines the amount of overflow each token can be redeemed for at any given time. On a lower redemption rate, redeeming a token increases the value of each remaining token, creating an incentive to hold tokens longer than other holders. A redemption rate of 100% means all tokens will have equal value regardless of when they are redeemed.\":\"The redemption rate determines the amount of overflow each token can be redeemed for at any given time. On a lower redemption rate, redeeming a token increases the value of each remaining token, creating an incentive to hold tokens longer than other holders. A redemption rate of 100% means all tokens will have equal value regardless of when they are redeemed.\",\"The redemption rate determines the amount of overflow each token can be redeemed for.\":\"The redemption rate determines the amount of overflow each token can be redeemed for.\",\"The target for this funding cycle is 0, meaning all funds in Juicebox are currently considered overflow. Overflow can be redeemed by token holders, but not distributed.\":\"The target for this funding cycle is 0, meaning all funds in Juicebox are currently considered overflow. Overflow can be redeemed by token holders, but not distributed.\",\"The total funds this Juicebox project has received since it was created.\":\"The total funds this Juicebox project has received since it was created.\",\"There are no payouts defined for this funding cycle. The project owner will receive all available funds.\":\"There are no payouts defined for this funding cycle. The project owner will receive all available funds.\",\"There are no reserved token recipients defined for this funding cycle. The project owner will receive all available tokens.\":\"There are no reserved token recipients defined for this funding cycle. The project owner will receive all available tokens.\",\"These attributes can be changed at any time.\":\"These attributes can be changed at any time.\",\"These settings will <0>not</0> be editable immediately within a funding cycle. They can only be changed for <1>upcoming</1> funding cycles.\":\"These settings will <0>not</0> be editable immediately within a funding cycle. They can only be changed for <1>upcoming</1> funding cycles.\",\"This address is an unrecognized strategy contract. Make sure it is correct!\":\"This address is an unrecognized strategy contract. Make sure it is correct!\",\"This address will disappear when you close this window. <0>Copy the address and save it now</0>.\":\"This address will disappear when you close this window. <0>Copy the address and save it now</0>.\",\"This address will receive any tokens minted when the recipient project gets paid.\":\"This address will receive any tokens minted when the recipient project gets paid.\",\"This address will receive the tokens minted from paying this project.\":\"This address will receive the tokens minted from paying this project.\",\"This funding cycle may pose risks to contributors. Check the funding cycle details before paying this project.\":\"This funding cycle may pose risks to contributors. Check the funding cycle details before paying this project.\",\"This is the maximum amount of funds that can leave the treasury each funding cycle.\":\"This is the maximum amount of funds that can leave the treasury each funding cycle.\",\"This list is using an experimental data index and may be inaccurate for some projects.\":\"This list is using an experimental data index and may be inaccurate for some projects.\",\"This project is archived and can't be paid.\":\"This project is archived and can't be paid.\",\"This project is currently using the Juicebox V1 terminal contract. New features introduced in V1.1 allow the project owner to:\":\"This project is currently using the Juicebox V1 terminal contract. New features introduced in V1.1 allow the project owner to:\",\"This project uses the V2 version of the Juicebox contracts.\":\"This project uses the V2 version of the Juicebox contracts.\",\"This project's balance in the Juicebox contract.\":\"This project's balance in the Juicebox contract.\",\"This proposed reconfiguration hasn't passed the {0} period. It's not guaranteed to take effect in the upcoming funding cycle.\":[\"This proposed reconfiguration hasn't passed the \",[\"0\"],\" period. It's not guaranteed to take effect in the upcoming funding cycle.\"],\"This rate determines the amount of overflow that each token can be redeemed for at any given time. On a lower bonding curve, redeeming a token increases the value of each remaining token, creating an incentive to hold tokens longer than others. A bonding curve of 100% means all tokens will have equal value regardless of when they are redeemed.\":\"This rate determines the amount of overflow that each token can be redeemed for at any given time. On a lower bonding curve, redeeming a token increases the value of each remaining token, creating an incentive to hold tokens longer than others. A bonding curve of 100% means all tokens will have equal value regardless of when they are redeemed.\",\"This will erase all of your changes.\":\"This will erase all of your changes.\",\"This will reset the data for your new project. All changes will be lost.\":\"This will reset the data for your new project. All changes will be lost.\",\"To do so, you need to give your V1 token holders the ability to exchange their V1 tokens for V2 tokens. Select <0>Set up token migration</0> below to get started.\":\"To do so, you need to give your V1 token holders the ability to exchange their V1 tokens for V2 tokens. Select <0>Set up token migration</0> below to get started.\",\"To: <0/>\":\"To: <0/>\",\"Token\":\"Token\",\"Token address: <0/>\":\"Token address: <0/>\",\"Token amount\":\"Token amount\",\"Token beneficiary address\":\"Token beneficiary address\",\"Token beneficiary:\":\"Token beneficiary:\",\"Token holders <0>cannot redeem their tokens</0> for any ETH when the redemption rate is 0.\":\"Token holders <0>cannot redeem their tokens</0> for any ETH when the redemption rate is 0.\",\"Token holders of your V1 project tokens will swap their V1 tokens for V2 tokens at a 1-to-1 exchange rate.\":\"Token holders of your V1 project tokens will swap their V1 tokens for V2 tokens at a 1-to-1 exchange rate.\",\"Token minting\":\"Token minting\",\"Token minting allows the project owner to mint project tokens at any time.\":\"Token minting allows the project owner to mint project tokens at any time.\",\"Token minting enabled\":\"Token minting enabled\",\"Token minting is only available for V1.1 projects. Token minting can be enabled or disabled by reconfiguring the project's funding cycle.\":\"Token minting is only available for V1.1 projects. Token minting can be enabled or disabled by reconfiguring the project's funding cycle.\",\"Token name\":\"Token name\",\"Token name is required\":\"Token name is required\",\"Token redeem value\":\"Token redeem value\",\"Token symbol\":\"Token symbol\",\"Token symbol is required\":\"Token symbol is required\",\"Tokens\":\"Tokens\",\"Tokens <0>contributors will receive</0> when they contribute 1 ETH.\":\"Tokens <0>contributors will receive</0> when they contribute 1 ETH.\",\"Tokens <0>reserved for the project</0> when 1 ETH is contributed.\":\"Tokens <0>reserved for the project</0> when 1 ETH is contributed.\",\"Tokens are earned by anyone who pays your project, and can be redeemed for overflow if your project has set a funding target.\":\"Tokens are earned by anyone who pays your project, and can be redeemed for overflow if your project has set a funding target.\",\"Tokens can be minted manually when allowed in the current funding cycle. The project owner can enable or disable minting for upcoming cycles.\":\"Tokens can be minted manually when allowed in the current funding cycle. The project owner can enable or disable minting for upcoming cycles.\",\"Tokens can be redeemed for a portion of a project's <0>overflow</0>, letting you benefit from its success. After all, you helped it get there. The token may also give you exclusive member-only privledges, and allow you to contribute to the governance of the community.\":\"Tokens can be redeemed for a portion of a project's <0>overflow</0>, letting you benefit from its success. After all, you helped it get there. The token may also give you exclusive member-only privledges, and allow you to contribute to the governance of the community.\",\"Tokens can be redeemed for a portion of this project's ETH overflow, according to the bonding curve rate of the current funding cycle. <0>Tokens are burned when they are redeemed.</0>\":\"Tokens can be redeemed for a portion of this project's ETH overflow, according to the bonding curve rate of the current funding cycle. <0>Tokens are burned when they are redeemed.</0>\",\"Tokens can be redeemed for a portion of this project's ETH overflow, according to the redemption rate of the current funding cycle. <0>Tokens are burned when they are redeemed.</0>\":\"Tokens can be redeemed for a portion of this project's ETH overflow, according to the redemption rate of the current funding cycle. <0>Tokens are burned when they are redeemed.</0>\",\"Tokens cannot be claimed because no ERC-20 token has been issued for this project. ERC-20 tokens must be issued by the project owner.\":\"Tokens cannot be claimed because no ERC-20 token has been issued for this project. ERC-20 tokens must be issued by the project owner.\",\"Tokens minted from payments to this address will belong to the payer by default. However, if someone pays the project through a custodial service platform such as Coinbase, <0>tokens can't be issued to their personal wallets and will be lost</0>.\":\"Tokens minted from payments to this address will belong to the payer by default. However, if someone pays the project through a custodial service platform such as Coinbase, <0>tokens can't be issued to their personal wallets and will be lost</0>.\",\"Tokens receiver\":\"Tokens receiver\",\"Tokens:\":\"Tokens:\",\"Tools\":\"Tools\",\"Total funds:\":\"Total funds:\",\"Total raised\":\"Total raised\",\"Total supply\":\"Total supply\",\"Total: {0}%\":[\"Total: \",[\"0\"],\"%\"],\"Transaction failed\":\"Transaction failed\",\"Transaction pending...\":\"Transaction pending...\",\"Transaction unsuccessful\":\"Transaction unsuccessful\",\"Transfer ownership\":\"Transfer ownership\",\"Transfer unclaimed {tokenSymbolShort}\":[\"Transfer unclaimed \",[\"tokenSymbolShort\"]],\"Transfer {tokenSymbolShort}\":[\"Transfer \",[\"tokenSymbolShort\"]],\"Trending\":\"Trending\",\"Trending projects\":\"Trending projects\",\"Twitter\":\"Twitter\",\"Twitter handle\":\"Twitter handle\",\"Unarchive project\":\"Unarchive project\",\"Unavailable\":\"Unavailable\",\"Unless payments are paused in your funding cycle settings, your project can still receive payments directly through the Juicebox protocol contracts.\":\"Unless payments are paused in your funding cycle settings, your project can still receive payments directly through the Juicebox protocol contracts.\",\"Unsaved changes\":\"Unsaved changes\",\"Untitled project\":\"Untitled project\",\"Untrack token\":\"Untrack token\",\"Upcoming\":\"Upcoming\",\"Updates you make to this section will only be applied to <0>upcoming</0> funding cycles.\":\"Updates you make to this section will only be applied to <0>upcoming</0> funding cycles.\",\"Upload\":\"Upload\",\"Upload an image or video\":\"Upload an image or video\",\"Uploaded to: <0>{url}</0>\":[\"Uploaded to: <0>\",[\"url\"],\"</0>\"],\"Use <0>Amounts</0> when you want to configure a <1>distribution limit</1>. Treasury funds that exceed the distribution limit are called <2>overflow</2>. Token holders can redeem (burn) their tokens for a portion of the overflow. <3>Learn more</3>.\":\"Use <0>Amounts</0> when you want to configure a <1>distribution limit</1>. Treasury funds that exceed the distribution limit are called <2>overflow</2>. Token holders can redeem (burn) their tokens for a portion of the overflow. <3>Learn more</3>.\",\"Use <0>Percentages</0> when you want to configure an <1>infinite distribution limit.</1> With an infinite distribution limit, your project reserves all funds for itself. Your project won't have overflow, so tokens can never be redeemed for ETH. <2>Learn more</2>.\":\"Use <0>Percentages</0> when you want to configure an <1>infinite distribution limit.</1> With an infinite distribution limit, your project reserves all funds for itself. Your project won't have overflow, so tokens can never be redeemed for ETH. <2>Learn more</2>.\",\"Using a duration is recommended. Allowing funding cycles to be reconfigured at any time will appear risky to contributors.\":\"Using a duration is recommended. Allowing funding cycles to be reconfigured at any time will appear risky to contributors.\",\"Using a reconfiguration strategy is recommended. Projects with no strategy will appear risky to contributors.\":\"Using a reconfiguration strategy is recommended. Projects with no strategy will appear risky to contributors.\",\"V1\":\"V1\",\"V1 token holders can swap their tokens for your V2 tokens on your V2 project's <0>Tokens</0> section.\":\"V1 token holders can swap their tokens for your V2 tokens on your V2 project's <0>Tokens</0> section.\",\"V1 token migration\":\"V1 token migration\",\"V1.1\":\"V1.1\",\"V2\":\"V2\",\"Version of the terminal contract used by this project.\":\"Version of the terminal contract used by this project.\",\"Volume\":\"Volume\",\"WAGMI!\":\"WAGMI!\",\"Wallet address\":\"Wallet address\",\"Website\":\"Website\",\"What are automated funding cycles?\":\"What are automated funding cycles?\",\"What are community tokens?\":\"What are community tokens?\",\"What are the risks?\":\"What are the risks?\",\"What does Juicebox cost?\":\"What does Juicebox cost?\",\"What is overflow?\":\"What is overflow?\",\"What is the V1 Token Payment Terminal?\":\"What is the V1 Token Payment Terminal?\",\"What's a bonding curve?\":\"What's a bonding curve?\",\"What's a discount rate?\":\"What's a discount rate?\",\"What's going on under the hood?\":\"What's going on under the hood?\",\"When checked, payments to this address will mint this project's ERC-20 tokens to the beneficiary's wallet. Payments will cost more gas. When unchecked, Juicebox will track the beneficiary's new tokens when they pay. The beneficiary can claim their ERC-20 tokens at any time.\":\"When checked, payments to this address will mint this project's ERC-20 tokens to the beneficiary's wallet. Payments will cost more gas. When unchecked, Juicebox will track the beneficiary's new tokens when they pay. The beneficiary can claim their ERC-20 tokens at any time.\",\"When distributing, payouts to Ethereum addresses incur a 2.5% JBX membership fee. Payouts to other Juicebox projects don't incur fees. Your project will receive (the <0>JuiceboxDAO</0> token) in return at the current issuance rate.\":\"When distributing, payouts to Ethereum addresses incur a 2.5% JBX membership fee. Payouts to other Juicebox projects don't incur fees. Your project will receive (the <0>JuiceboxDAO</0> token) in return at the current issuance rate.\",\"When enabled, the project owner can manually mint any amount of tokens to any address.\":\"When enabled, the project owner can manually mint any amount of tokens to any address.\",\"When enabled, your project cannot receive direct payments.\":\"When enabled, your project cannot receive direct payments.\",\"When someone pays your project, they'll receive your project's tokens in return. Tokens can be redeemed for a portion of your project's overflow funds; when you win, your community wins with you. Leverage your project's token to grant governance rights, community access, or other membership perks.\":\"When someone pays your project, they'll receive your project's tokens in return. Tokens can be redeemed for a portion of your project's overflow funds; when you win, your community wins with you. Leverage your project's token to grant governance rights, community access, or other membership perks.\",\"When token minting is allowed, the owner of this project has permission to mint any number of tokens to any address at their discretion. This has the effect of diluting all current token holders, without increasing the project's treasury balance. The project owner can reconfigure this along with all other properties of the funding cycle.\":\"When token minting is allowed, the owner of this project has permission to mint any number of tokens to any address at their discretion. This has the effect of diluting all current token holders, without increasing the project's treasury balance. The project owner can reconfigure this along with all other properties of the funding cycle.\",\"Whenever someone pays your project, this percentage of the newly minted tokens will be reserved and the rest will go to the payer. Reserve tokens are reserved for the project owner by default, but can also be allocated to other wallet addresses by the owner. Once tokens are reserved, anyone can \\\"mint\\\" them, which distributes them to their intended receivers.\":\"Whenever someone pays your project, this percentage of the newly minted tokens will be reserved and the rest will go to the payer. Reserve tokens are reserved for the project owner by default, but can also be allocated to other wallet addresses by the owner. Once tokens are reserved, anyone can \\\"mint\\\" them, which distributes them to their intended receivers.\",\"Who funds Juicebox projects?\":\"Who funds Juicebox projects?\",\"Who is Peel?\":\"Who is Peel?\",\"Why Ethereum?\":\"Why Ethereum?\",\"Why should I want to own a project's tokens?\":\"Why should I want to own a project's tokens?\",\"Will be rounded to <0/>{0}\":[\"Will be rounded to <0/>\",[\"0\"]],\"Will it work on L2s?\":\"Will it work on L2s?\",\"With Juicebox, projects are built and maintained by motivated punks getting paid transparently, and funded by a community of users and patrons who are rewarded as the projects they support succeed.\":\"With Juicebox, projects are built and maintained by motivated punks getting paid transparently, and funded by a community of users and patrons who are rewarded as the projects they support succeed.\",\"With no funding cycles, the project's owner can start a new funding cycle (Funding Cycle #2) on-demand. <0>Learn more.</0>\":\"With no funding cycles, the project's owner can start a new funding cycle (Funding Cycle #2) on-demand. <0>Learn more.</0>\",\"Withdraw\":\"Withdraw\",\"Withdraw funds\":\"Withdraw funds\",\"Workspace\":\"Workspace\",\"Would you like to issue an ERC-20 token to be used as this project's token?\":\"Would you like to issue an ERC-20 token to be used as this project's token?\",\"Yes\":\"Yes\",\"You can edit your project details after creation at any time, but the transaction will cost gas.\":\"You can edit your project details after creation at any time, but the transaction will cost gas.\",\"You can redeem your {tokenTextLong} for overflow without claiming them. You can transfer your unclaimed {tokenTextLong} to another address from the Tools menu, which can be accessed from the wrench icon in the upper right hand corner of this project.\":[\"You can redeem your \",[\"tokenTextLong\"],\" for overflow without claiming them. You can transfer your unclaimed \",[\"tokenTextLong\"],\" to another address from the Tools menu, which can be accessed from the wrench icon in the upper right hand corner of this project.\"],\"You can still redeem your {tokenSymbol} tokens for overflow without claiming them, and you can transfer your unclaimed {tokenSymbol} tokens to another address from the Tools menu, which can be accessed from the wrench icon in the upper right hand corner of this project.\":[\"You can still redeem your \",[\"tokenSymbol\"],\" tokens for overflow without claiming them, and you can transfer your unclaimed \",[\"tokenSymbol\"],\" tokens to another address from the Tools menu, which can be accessed from the wrench icon in the upper right hand corner of this project.\"],\"You don't have a funding cycle duration. Changes you make will take effect immediately.\":\"You don't have a funding cycle duration. Changes you make will take effect immediately.\",\"You don't hold tokens for any Juicebox project.\":\"You don't hold tokens for any Juicebox project.\",\"You have configured for all funds to be distributed from the treasury. Your current payouts do not sum to 100%, so the remainder will go to the project owner.\":\"You have configured for all funds to be distributed from the treasury. Your current payouts do not sum to 100%, so the remainder will go to the project owner.\",\"You have set a funding cycle target.\":\"You have set a funding cycle target.\",\"You have unsaved changes. Are you sure you want to discard them?\":\"You have unsaved changes. Are you sure you want to discard them?\",\"You haven't created any projects yet.\":\"You haven't created any projects yet.\",\"You must own this V1 project.\":\"You must own this V1 project.\",\"You will receive minimum {minReturnedTokensFormatted} ETH\":[\"You will receive minimum \",[\"minReturnedTokensFormatted\"],\" ETH\"],\"You will receive {0}{1} ETH\":[\"You will receive \",[\"0\"],[\"1\"],\" ETH\"],\"You will receive {minReturnedTokensFormatted} ETH\":[\"You will receive \",[\"minReturnedTokensFormatted\"],\" ETH\"],\"You'll be able to issue ERC-20 tokens once your project contract has been deployed. Until then, the protocol will track token balances, allowing your supporters to earn tokens and redeem for overflow in the meantime.\":\"You'll be able to issue ERC-20 tokens once your project contract has been deployed. Until then, the protocol will track token balances, allowing your supporters to earn tokens and redeem for overflow in the meantime.\",\"You're all set!\":\"You're all set!\",\"You've completed this step.\":\"You've completed this step.\",\"Your Juicebox project has no active funding cycle. Launch a funding cycle to re-enable payments on your project.\":\"Your Juicebox project has no active funding cycle. Launch a funding cycle to re-enable payments on your project.\",\"Your balance\":\"Your balance\",\"Your funding cycle configuration has been pre-populated using the configuration you originally launched with. If you need to customize it, contact us.\":\"Your funding cycle configuration has been pre-populated using the configuration you originally launched with. If you need to customize it, contact us.\",\"Your new payable address:\":\"Your new payable address:\",\"Your project can still receive payments directly through the Juicebox protocol contracts.\":\"Your project can still receive payments directly through the Juicebox protocol contracts.\",\"Your project cannot receive direct payments while paused.\":\"Your project cannot receive direct payments while paused.\",\"Your project is funded across funding cycles. A funding cycle has a funding target and a duration. Your project's funding cycle configuration will depend on the kind of project you're starting.\":\"Your project is funded across funding cycles. A funding cycle has a funding target and a duration. Your project's funding cycle configuration will depend on the kind of project you're starting.\",\"Your project will appear archived, and won't be able to receive payments through the juicebox.money app. You can unarchive a project at any time. Allow a few days for your project to appear under the \\\"archived\\\" filter on the Projects page.\":\"Your project will appear archived, and won't be able to receive payments through the juicebox.money app. You can unarchive a project at any time. Allow a few days for your project to appear under the \\\"archived\\\" filter on the Projects page.\",\"Your project will be created on the Juicebox V2 contracts. <0>Learn more.</0>\":\"Your project will be created on the Juicebox V2 contracts. <0>Learn more.</0>\",\"Your project will immediately appear active on the juicebox.money app. Please allow a few days for it to appear in the \\\"active\\\" projects list on the Projects page.\":\"Your project will immediately appear active on the juicebox.money app. Please allow a few days for it to appear in the \\\"active\\\" projects list on the Projects page.\",\"Your project's funding cycle target and duration.\":\"Your project's funding cycle target and duration.\",\"Your transaction has been submitted and is awaiting confirmation.\":\"Your transaction has been submitted and is awaiting confirmation.\",\"Your unclaimed token balance: {0}\":[\"Your unclaimed token balance: \",[\"0\"]],\"Your unclaimed {tokenTextLong}\":[\"Your unclaimed \",[\"tokenTextLong\"]],\"Zero\":\"Zero\",\"after {0}% JBX fee\":[\"after \",[\"0\"],\"% JBX fee\"],\"called by <0/>\":\"called by <0/>\",\"days\":\"days\",\"handle\":\"handle\",\"hours\":\"hours\",\"juiceboxETH\":\"juiceboxETH\",\"last {trendingWindowDays} days\":[\"last \",[\"trendingWindowDays\"],\" days\"],\"loading\":\"loading\",\"locked until {lockedUntilFormatted}\":[\"locked until \",[\"lockedUntilFormatted\"]],\"matching \\\"{searchText}\\\"\":[\"matching \\\"\",[\"searchText\"],\"\\\"\"],\"minutes\":\"minutes\",\"or <0><1>buy {tokenText} on exchange<2/></1></0>\":[\"or <0><1>buy \",[\"tokenText\"],\" on exchange<2/></1></0>\"],\"project\":\"project\",\"project owner\":\"project owner\",\"projects\":\"projects\",\"seconds\":\"seconds\",\"token\":\"token\",\"tokens\":\"tokens\",\"tokens per ETH contributed\":\"tokens per ETH contributed\",\"tokens redeemed\":\"tokens redeemed\",\"until\":\"until\",\"{0} after JBX fee\":[[\"0\"],\" after JBX fee\"],\"{0} ago\":[[\"0\"],\" ago\"],\"{0} are distributed to anyone who pays this project. If the project has set a funding target, tokens can be redeemed for a portion of the project's overflow whether or not they have been claimed yet.\":[[\"0\"],\" are distributed to anyone who pays this project. If the project has set a funding target, tokens can be redeemed for a portion of the project's overflow whether or not they have been claimed yet.\"],\"{0} balance\":[[\"0\"],\" balance\"],\"{0} balance: <0><1>{1} {tokensTextShort}</1><2>({share}% of supply)</2></0>\":[[\"0\"],\" balance: <0><1>\",[\"1\"],\" \",[\"tokensTextShort\"],\"</1><2>(\",[\"share\"],\"% of supply)</2></0>\"],\"{0} contributed\":[[\"0\"],\" contributed\"],\"{0} days\":[[\"0\"],\" days\"],\"{0} for you\":[[\"0\"],\" for you\"],\"{0} holders\":[[\"0\"],\" holders\"],\"{0} reserved\":[[\"0\"],\" reserved\"],\"{0} tokens/ETH\":[[\"0\"],\" tokens/ETH\"],\"{0} total\":[[\"0\"],\" total\"],\"{0} unclaimed\":[[\"0\"],\" unclaimed\"],\"{0} will go to the project owner: <0/>\":[[\"0\"],\" will go to the project owner: <0/>\"],\"{0} withdrawn\":[[\"0\"],\" withdrawn\"],\"{0} {tokenTextPlural} reserved\":[[\"0\"],\" \",[\"tokenTextPlural\"],\" reserved\"],\"{0}%\":[[\"0\"],\"%\"],\"{0}% of all newly minted tokens.\":[[\"0\"],\"% of all newly minted tokens.\"],\"{0}% of supply\":[[\"0\"],\"% of supply\"],\"{0}% to <0/>\":[[\"0\"],\"% to <0/>\"],\"{0}% to {1}\":[[\"0\"],\"% to \",[\"1\"]],\"{0}/{1} withdrawn\":[[\"0\"],\"/\",[\"1\"],\" withdrawn\"],\"{0}{1}\":[[\"0\"],[\"1\"]],\"{count} total\":[[\"count\"],\" total\"],\"{exchangeName} has no market for {tokenSymbol}.\":[[\"exchangeName\"],\" has no market for \",[\"tokenSymbol\"],\".\"],\"{formattedTimeLeft} left\":[[\"formattedTimeLeft\"],\" left\"],\"{formattedTimeLeft} until #{0}\":[[\"formattedTimeLeft\"],\" until #\",[\"0\"]],\"{inflationRate} tokens / ETH\":[[\"inflationRate\"],\" tokens / ETH\"],\"{issuanceRate} tokens / ETH\":[[\"issuanceRate\"],\" tokens / ETH\"],\"{label}\":[[\"label\"]],\"{payerRate} (+ {reservedRate} reserved) {tokenSymbolPlural}/ETH\":[[\"payerRate\"],\" (+ \",[\"reservedRate\"],\" reserved) \",[\"tokenSymbolPlural\"],\"/ETH\"],\"{payerRate} {tokenSymbolPlural}/ETH\":[[\"payerRate\"],\" \",[\"tokenSymbolPlural\"],\"/ETH\"],\"{paymentCount, plural, one {# payment} other {# payments}}\":[[\"paymentCount\",\"plural\",{one:[\"#\",\" payment\"],other:[\"#\",\" payments\"]}]],\"{reservedRate} {tokenSymbolPlural}/ETH ({0}%)\":[[\"reservedRate\"],\" \",[\"tokenSymbolPlural\"],\"/ETH (\",[\"0\"],\"%)\"],\"{tokenSymbolPluralCap} received per ETH paid to the treasury. This can change over time according to the discount rate and reserved tokens amount of future funding cycles.\":[[\"tokenSymbolPluralCap\"],\" received per ETH paid to the treasury. This can change over time according to the discount rate and reserved tokens amount of future funding cycles.\"],\"{tokenSymbol} ERC-20 address\":[[\"tokenSymbol\"],\" ERC-20 address\"],\"{tokenSymbol}/ETH exchange rate on {exchangeName}.\":[[\"tokenSymbol\"],\"/ETH exchange rate on \",[\"exchangeName\"],\".\"],\"{tokenTextSingular} recipients\":[[\"tokenTextSingular\"],\" recipients\"],\"{tokensLabel} are distributed to anyone who pays this project. If the project has set a funding target, tokens can be redeemed for a portion of the project's overflow whether or not they have been claimed yet.\":[[\"tokensLabel\"],\" are distributed to anyone who pays this project. If the project has set a funding target, tokens can be redeemed for a portion of the project's overflow whether or not they have been claimed yet.\"],\"{tokensText} reserved\":[[\"tokensText\"],\" reserved\"],\"{tokensTokenUpper} amount\":[[\"tokensTokenUpper\"],\" amount\"],\"{unclaimedBalanceFormatted} {tokenText} claimable\":[[\"unclaimedBalanceFormatted\"],\" \",[\"tokenText\"],\" claimable\"],\"{userOwnershipPercentage}% of total supply\":[[\"userOwnershipPercentage\"],\"% of total supply\"]}};","export const mainnetPublicResolver = {\r\n  address: '0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41',\r\n  abi: [\r\n    {\r\n      constant: true,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes4',\r\n          name: 'interfaceID',\r\n          type: 'bytes4',\r\n        },\r\n      ],\r\n      name: 'supportsInterface',\r\n      outputs: [\r\n        {\r\n          internalType: 'bool',\r\n          name: '',\r\n          type: 'bool',\r\n        },\r\n      ],\r\n      payable: false,\r\n      stateMutability: 'pure',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: false,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          internalType: 'string',\r\n          name: 'key',\r\n          type: 'string',\r\n        },\r\n        {\r\n          internalType: 'string',\r\n          name: 'value',\r\n          type: 'string',\r\n        },\r\n      ],\r\n      name: 'setText',\r\n      outputs: [],\r\n      payable: false,\r\n      stateMutability: 'nonpayable',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: true,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          internalType: 'bytes4',\r\n          name: 'interfaceID',\r\n          type: 'bytes4',\r\n        },\r\n      ],\r\n      name: 'interfaceImplementer',\r\n      outputs: [\r\n        {\r\n          internalType: 'address',\r\n          name: '',\r\n          type: 'address',\r\n        },\r\n      ],\r\n      payable: false,\r\n      stateMutability: 'view',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: true,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          internalType: 'uint256',\r\n          name: 'contentTypes',\r\n          type: 'uint256',\r\n        },\r\n      ],\r\n      name: 'ABI',\r\n      outputs: [\r\n        {\r\n          internalType: 'uint256',\r\n          name: '',\r\n          type: 'uint256',\r\n        },\r\n        {\r\n          internalType: 'bytes',\r\n          name: '',\r\n          type: 'bytes',\r\n        },\r\n      ],\r\n      payable: false,\r\n      stateMutability: 'view',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: false,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'x',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'y',\r\n          type: 'bytes32',\r\n        },\r\n      ],\r\n      name: 'setPubkey',\r\n      outputs: [],\r\n      payable: false,\r\n      stateMutability: 'nonpayable',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: false,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          internalType: 'bytes',\r\n          name: 'hash',\r\n          type: 'bytes',\r\n        },\r\n      ],\r\n      name: 'setContenthash',\r\n      outputs: [],\r\n      payable: false,\r\n      stateMutability: 'nonpayable',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: true,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n      ],\r\n      name: 'addr',\r\n      outputs: [\r\n        {\r\n          internalType: 'address',\r\n          name: '',\r\n          type: 'address',\r\n        },\r\n      ],\r\n      payable: false,\r\n      stateMutability: 'view',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: false,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          internalType: 'address',\r\n          name: 'target',\r\n          type: 'address',\r\n        },\r\n        {\r\n          internalType: 'bool',\r\n          name: 'isAuthorised',\r\n          type: 'bool',\r\n        },\r\n      ],\r\n      name: 'setAuthorisation',\r\n      outputs: [],\r\n      payable: false,\r\n      stateMutability: 'nonpayable',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: true,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          internalType: 'string',\r\n          name: 'key',\r\n          type: 'string',\r\n        },\r\n      ],\r\n      name: 'text',\r\n      outputs: [\r\n        {\r\n          internalType: 'string',\r\n          name: '',\r\n          type: 'string',\r\n        },\r\n      ],\r\n      payable: false,\r\n      stateMutability: 'view',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: false,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          internalType: 'uint256',\r\n          name: 'contentType',\r\n          type: 'uint256',\r\n        },\r\n        {\r\n          internalType: 'bytes',\r\n          name: 'data',\r\n          type: 'bytes',\r\n        },\r\n      ],\r\n      name: 'setABI',\r\n      outputs: [],\r\n      payable: false,\r\n      stateMutability: 'nonpayable',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: true,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n      ],\r\n      name: 'name',\r\n      outputs: [\r\n        {\r\n          internalType: 'string',\r\n          name: '',\r\n          type: 'string',\r\n        },\r\n      ],\r\n      payable: false,\r\n      stateMutability: 'view',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: false,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          internalType: 'string',\r\n          name: 'name',\r\n          type: 'string',\r\n        },\r\n      ],\r\n      name: 'setName',\r\n      outputs: [],\r\n      payable: false,\r\n      stateMutability: 'nonpayable',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: false,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          internalType: 'uint256',\r\n          name: 'coinType',\r\n          type: 'uint256',\r\n        },\r\n        {\r\n          internalType: 'bytes',\r\n          name: 'a',\r\n          type: 'bytes',\r\n        },\r\n      ],\r\n      name: 'setAddr',\r\n      outputs: [],\r\n      payable: false,\r\n      stateMutability: 'nonpayable',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: true,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n      ],\r\n      name: 'contenthash',\r\n      outputs: [\r\n        {\r\n          internalType: 'bytes',\r\n          name: '',\r\n          type: 'bytes',\r\n        },\r\n      ],\r\n      payable: false,\r\n      stateMutability: 'view',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: true,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n      ],\r\n      name: 'pubkey',\r\n      outputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'x',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'y',\r\n          type: 'bytes32',\r\n        },\r\n      ],\r\n      payable: false,\r\n      stateMutability: 'view',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: false,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          internalType: 'address',\r\n          name: 'a',\r\n          type: 'address',\r\n        },\r\n      ],\r\n      name: 'setAddr',\r\n      outputs: [],\r\n      payable: false,\r\n      stateMutability: 'nonpayable',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: false,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          internalType: 'bytes4',\r\n          name: 'interfaceID',\r\n          type: 'bytes4',\r\n        },\r\n        {\r\n          internalType: 'address',\r\n          name: 'implementer',\r\n          type: 'address',\r\n        },\r\n      ],\r\n      name: 'setInterface',\r\n      outputs: [],\r\n      payable: false,\r\n      stateMutability: 'nonpayable',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: true,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          internalType: 'uint256',\r\n          name: 'coinType',\r\n          type: 'uint256',\r\n        },\r\n      ],\r\n      name: 'addr',\r\n      outputs: [\r\n        {\r\n          internalType: 'bytes',\r\n          name: '',\r\n          type: 'bytes',\r\n        },\r\n      ],\r\n      payable: false,\r\n      stateMutability: 'view',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: true,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: '',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          internalType: 'address',\r\n          name: '',\r\n          type: 'address',\r\n        },\r\n        {\r\n          internalType: 'address',\r\n          name: '',\r\n          type: 'address',\r\n        },\r\n      ],\r\n      name: 'authorisations',\r\n      outputs: [\r\n        {\r\n          internalType: 'bool',\r\n          name: '',\r\n          type: 'bool',\r\n        },\r\n      ],\r\n      payable: false,\r\n      stateMutability: 'view',\r\n      type: 'function',\r\n    },\r\n    {\r\n      inputs: [\r\n        {\r\n          internalType: 'contract ENS',\r\n          name: '_ens',\r\n          type: 'address',\r\n        },\r\n      ],\r\n      payable: false,\r\n      stateMutability: 'nonpayable',\r\n      type: 'constructor',\r\n    },\r\n    {\r\n      anonymous: false,\r\n      inputs: [\r\n        {\r\n          indexed: true,\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          indexed: true,\r\n          internalType: 'address',\r\n          name: 'owner',\r\n          type: 'address',\r\n        },\r\n        {\r\n          indexed: true,\r\n          internalType: 'address',\r\n          name: 'target',\r\n          type: 'address',\r\n        },\r\n        {\r\n          indexed: false,\r\n          internalType: 'bool',\r\n          name: 'isAuthorised',\r\n          type: 'bool',\r\n        },\r\n      ],\r\n      name: 'AuthorisationChanged',\r\n      type: 'event',\r\n    },\r\n    {\r\n      anonymous: false,\r\n      inputs: [\r\n        {\r\n          indexed: true,\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          indexed: true,\r\n          internalType: 'string',\r\n          name: 'indexedKey',\r\n          type: 'string',\r\n        },\r\n        {\r\n          indexed: false,\r\n          internalType: 'string',\r\n          name: 'key',\r\n          type: 'string',\r\n        },\r\n      ],\r\n      name: 'TextChanged',\r\n      type: 'event',\r\n    },\r\n    {\r\n      anonymous: false,\r\n      inputs: [\r\n        {\r\n          indexed: true,\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          indexed: false,\r\n          internalType: 'bytes32',\r\n          name: 'x',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          indexed: false,\r\n          internalType: 'bytes32',\r\n          name: 'y',\r\n          type: 'bytes32',\r\n        },\r\n      ],\r\n      name: 'PubkeyChanged',\r\n      type: 'event',\r\n    },\r\n    {\r\n      anonymous: false,\r\n      inputs: [\r\n        {\r\n          indexed: true,\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          indexed: false,\r\n          internalType: 'string',\r\n          name: 'name',\r\n          type: 'string',\r\n        },\r\n      ],\r\n      name: 'NameChanged',\r\n      type: 'event',\r\n    },\r\n    {\r\n      anonymous: false,\r\n      inputs: [\r\n        {\r\n          indexed: true,\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          indexed: true,\r\n          internalType: 'bytes4',\r\n          name: 'interfaceID',\r\n          type: 'bytes4',\r\n        },\r\n        {\r\n          indexed: false,\r\n          internalType: 'address',\r\n          name: 'implementer',\r\n          type: 'address',\r\n        },\r\n      ],\r\n      name: 'InterfaceChanged',\r\n      type: 'event',\r\n    },\r\n    {\r\n      anonymous: false,\r\n      inputs: [\r\n        {\r\n          indexed: true,\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          indexed: false,\r\n          internalType: 'bytes',\r\n          name: 'hash',\r\n          type: 'bytes',\r\n        },\r\n      ],\r\n      name: 'ContenthashChanged',\r\n      type: 'event',\r\n    },\r\n    {\r\n      anonymous: false,\r\n      inputs: [\r\n        {\r\n          indexed: true,\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          indexed: false,\r\n          internalType: 'address',\r\n          name: 'a',\r\n          type: 'address',\r\n        },\r\n      ],\r\n      name: 'AddrChanged',\r\n      type: 'event',\r\n    },\r\n    {\r\n      anonymous: false,\r\n      inputs: [\r\n        {\r\n          indexed: true,\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          indexed: false,\r\n          internalType: 'uint256',\r\n          name: 'coinType',\r\n          type: 'uint256',\r\n        },\r\n        {\r\n          indexed: false,\r\n          internalType: 'bytes',\r\n          name: 'newAddress',\r\n          type: 'bytes',\r\n        },\r\n      ],\r\n      name: 'AddressChanged',\r\n      type: 'event',\r\n    },\r\n    {\r\n      anonymous: false,\r\n      inputs: [\r\n        {\r\n          indexed: true,\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          indexed: true,\r\n          internalType: 'uint256',\r\n          name: 'contentType',\r\n          type: 'uint256',\r\n        },\r\n      ],\r\n      name: 'ABIChanged',\r\n      type: 'event',\r\n    },\r\n  ],\r\n}\r\n","export const rinkebyPublicResolver = {\r\n  address: '0xf6305c19e814d2a75429Fd637d01F7ee0E77d615',\r\n  abi: [\r\n    {\r\n      constant: true,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes4',\r\n          name: 'interfaceID',\r\n          type: 'bytes4',\r\n        },\r\n      ],\r\n      name: 'supportsInterface',\r\n      outputs: [\r\n        {\r\n          internalType: 'bool',\r\n          name: '',\r\n          type: 'bool',\r\n        },\r\n      ],\r\n      payable: false,\r\n      stateMutability: 'pure',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: false,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          internalType: 'string',\r\n          name: 'key',\r\n          type: 'string',\r\n        },\r\n        {\r\n          internalType: 'string',\r\n          name: 'value',\r\n          type: 'string',\r\n        },\r\n      ],\r\n      name: 'setText',\r\n      outputs: [],\r\n      payable: false,\r\n      stateMutability: 'nonpayable',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: true,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          internalType: 'bytes4',\r\n          name: 'interfaceID',\r\n          type: 'bytes4',\r\n        },\r\n      ],\r\n      name: 'interfaceImplementer',\r\n      outputs: [\r\n        {\r\n          internalType: 'address',\r\n          name: '',\r\n          type: 'address',\r\n        },\r\n      ],\r\n      payable: false,\r\n      stateMutability: 'view',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: true,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          internalType: 'uint256',\r\n          name: 'contentTypes',\r\n          type: 'uint256',\r\n        },\r\n      ],\r\n      name: 'ABI',\r\n      outputs: [\r\n        {\r\n          internalType: 'uint256',\r\n          name: '',\r\n          type: 'uint256',\r\n        },\r\n        {\r\n          internalType: 'bytes',\r\n          name: '',\r\n          type: 'bytes',\r\n        },\r\n      ],\r\n      payable: false,\r\n      stateMutability: 'view',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: false,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'x',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'y',\r\n          type: 'bytes32',\r\n        },\r\n      ],\r\n      name: 'setPubkey',\r\n      outputs: [],\r\n      payable: false,\r\n      stateMutability: 'nonpayable',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: false,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          internalType: 'bytes',\r\n          name: 'hash',\r\n          type: 'bytes',\r\n        },\r\n      ],\r\n      name: 'setContenthash',\r\n      outputs: [],\r\n      payable: false,\r\n      stateMutability: 'nonpayable',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: true,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n      ],\r\n      name: 'addr',\r\n      outputs: [\r\n        {\r\n          internalType: 'address',\r\n          name: '',\r\n          type: 'address',\r\n        },\r\n      ],\r\n      payable: false,\r\n      stateMutability: 'view',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: false,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          internalType: 'address',\r\n          name: 'target',\r\n          type: 'address',\r\n        },\r\n        {\r\n          internalType: 'bool',\r\n          name: 'isAuthorised',\r\n          type: 'bool',\r\n        },\r\n      ],\r\n      name: 'setAuthorisation',\r\n      outputs: [],\r\n      payable: false,\r\n      stateMutability: 'nonpayable',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: true,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          internalType: 'string',\r\n          name: 'key',\r\n          type: 'string',\r\n        },\r\n      ],\r\n      name: 'text',\r\n      outputs: [\r\n        {\r\n          internalType: 'string',\r\n          name: '',\r\n          type: 'string',\r\n        },\r\n      ],\r\n      payable: false,\r\n      stateMutability: 'view',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: false,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          internalType: 'uint256',\r\n          name: 'contentType',\r\n          type: 'uint256',\r\n        },\r\n        {\r\n          internalType: 'bytes',\r\n          name: 'data',\r\n          type: 'bytes',\r\n        },\r\n      ],\r\n      name: 'setABI',\r\n      outputs: [],\r\n      payable: false,\r\n      stateMutability: 'nonpayable',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: true,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n      ],\r\n      name: 'name',\r\n      outputs: [\r\n        {\r\n          internalType: 'string',\r\n          name: '',\r\n          type: 'string',\r\n        },\r\n      ],\r\n      payable: false,\r\n      stateMutability: 'view',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: false,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          internalType: 'string',\r\n          name: 'name',\r\n          type: 'string',\r\n        },\r\n      ],\r\n      name: 'setName',\r\n      outputs: [],\r\n      payable: false,\r\n      stateMutability: 'nonpayable',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: false,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          internalType: 'uint256',\r\n          name: 'coinType',\r\n          type: 'uint256',\r\n        },\r\n        {\r\n          internalType: 'bytes',\r\n          name: 'a',\r\n          type: 'bytes',\r\n        },\r\n      ],\r\n      name: 'setAddr',\r\n      outputs: [],\r\n      payable: false,\r\n      stateMutability: 'nonpayable',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: true,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n      ],\r\n      name: 'contenthash',\r\n      outputs: [\r\n        {\r\n          internalType: 'bytes',\r\n          name: '',\r\n          type: 'bytes',\r\n        },\r\n      ],\r\n      payable: false,\r\n      stateMutability: 'view',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: true,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n      ],\r\n      name: 'pubkey',\r\n      outputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'x',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'y',\r\n          type: 'bytes32',\r\n        },\r\n      ],\r\n      payable: false,\r\n      stateMutability: 'view',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: false,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          internalType: 'address',\r\n          name: 'a',\r\n          type: 'address',\r\n        },\r\n      ],\r\n      name: 'setAddr',\r\n      outputs: [],\r\n      payable: false,\r\n      stateMutability: 'nonpayable',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: false,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          internalType: 'bytes4',\r\n          name: 'interfaceID',\r\n          type: 'bytes4',\r\n        },\r\n        {\r\n          internalType: 'address',\r\n          name: 'implementer',\r\n          type: 'address',\r\n        },\r\n      ],\r\n      name: 'setInterface',\r\n      outputs: [],\r\n      payable: false,\r\n      stateMutability: 'nonpayable',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: true,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          internalType: 'uint256',\r\n          name: 'coinType',\r\n          type: 'uint256',\r\n        },\r\n      ],\r\n      name: 'addr',\r\n      outputs: [\r\n        {\r\n          internalType: 'bytes',\r\n          name: '',\r\n          type: 'bytes',\r\n        },\r\n      ],\r\n      payable: false,\r\n      stateMutability: 'view',\r\n      type: 'function',\r\n    },\r\n    {\r\n      constant: true,\r\n      inputs: [\r\n        {\r\n          internalType: 'bytes32',\r\n          name: '',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          internalType: 'address',\r\n          name: '',\r\n          type: 'address',\r\n        },\r\n        {\r\n          internalType: 'address',\r\n          name: '',\r\n          type: 'address',\r\n        },\r\n      ],\r\n      name: 'authorisations',\r\n      outputs: [\r\n        {\r\n          internalType: 'bool',\r\n          name: '',\r\n          type: 'bool',\r\n        },\r\n      ],\r\n      payable: false,\r\n      stateMutability: 'view',\r\n      type: 'function',\r\n    },\r\n    {\r\n      inputs: [\r\n        {\r\n          internalType: 'contract ENS',\r\n          name: '_ens',\r\n          type: 'address',\r\n        },\r\n      ],\r\n      payable: false,\r\n      stateMutability: 'nonpayable',\r\n      type: 'constructor',\r\n    },\r\n    {\r\n      anonymous: false,\r\n      inputs: [\r\n        {\r\n          indexed: true,\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          indexed: true,\r\n          internalType: 'address',\r\n          name: 'owner',\r\n          type: 'address',\r\n        },\r\n        {\r\n          indexed: true,\r\n          internalType: 'address',\r\n          name: 'target',\r\n          type: 'address',\r\n        },\r\n        {\r\n          indexed: false,\r\n          internalType: 'bool',\r\n          name: 'isAuthorised',\r\n          type: 'bool',\r\n        },\r\n      ],\r\n      name: 'AuthorisationChanged',\r\n      type: 'event',\r\n    },\r\n    {\r\n      anonymous: false,\r\n      inputs: [\r\n        {\r\n          indexed: true,\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          indexed: true,\r\n          internalType: 'string',\r\n          name: 'indexedKey',\r\n          type: 'string',\r\n        },\r\n        {\r\n          indexed: false,\r\n          internalType: 'string',\r\n          name: 'key',\r\n          type: 'string',\r\n        },\r\n      ],\r\n      name: 'TextChanged',\r\n      type: 'event',\r\n    },\r\n    {\r\n      anonymous: false,\r\n      inputs: [\r\n        {\r\n          indexed: true,\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          indexed: false,\r\n          internalType: 'bytes32',\r\n          name: 'x',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          indexed: false,\r\n          internalType: 'bytes32',\r\n          name: 'y',\r\n          type: 'bytes32',\r\n        },\r\n      ],\r\n      name: 'PubkeyChanged',\r\n      type: 'event',\r\n    },\r\n    {\r\n      anonymous: false,\r\n      inputs: [\r\n        {\r\n          indexed: true,\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          indexed: false,\r\n          internalType: 'string',\r\n          name: 'name',\r\n          type: 'string',\r\n        },\r\n      ],\r\n      name: 'NameChanged',\r\n      type: 'event',\r\n    },\r\n    {\r\n      anonymous: false,\r\n      inputs: [\r\n        {\r\n          indexed: true,\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          indexed: true,\r\n          internalType: 'bytes4',\r\n          name: 'interfaceID',\r\n          type: 'bytes4',\r\n        },\r\n        {\r\n          indexed: false,\r\n          internalType: 'address',\r\n          name: 'implementer',\r\n          type: 'address',\r\n        },\r\n      ],\r\n      name: 'InterfaceChanged',\r\n      type: 'event',\r\n    },\r\n    {\r\n      anonymous: false,\r\n      inputs: [\r\n        {\r\n          indexed: true,\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          indexed: false,\r\n          internalType: 'bytes',\r\n          name: 'hash',\r\n          type: 'bytes',\r\n        },\r\n      ],\r\n      name: 'ContenthashChanged',\r\n      type: 'event',\r\n    },\r\n    {\r\n      anonymous: false,\r\n      inputs: [\r\n        {\r\n          indexed: true,\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          indexed: false,\r\n          internalType: 'address',\r\n          name: 'a',\r\n          type: 'address',\r\n        },\r\n      ],\r\n      name: 'AddrChanged',\r\n      type: 'event',\r\n    },\r\n    {\r\n      anonymous: false,\r\n      inputs: [\r\n        {\r\n          indexed: true,\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          indexed: false,\r\n          internalType: 'uint256',\r\n          name: 'coinType',\r\n          type: 'uint256',\r\n        },\r\n        {\r\n          indexed: false,\r\n          internalType: 'bytes',\r\n          name: 'newAddress',\r\n          type: 'bytes',\r\n        },\r\n      ],\r\n      name: 'AddressChanged',\r\n      type: 'event',\r\n    },\r\n    {\r\n      anonymous: false,\r\n      inputs: [\r\n        {\r\n          indexed: true,\r\n          internalType: 'bytes32',\r\n          name: 'node',\r\n          type: 'bytes32',\r\n        },\r\n        {\r\n          indexed: true,\r\n          internalType: 'uint256',\r\n          name: 'contentType',\r\n          type: 'uint256',\r\n        },\r\n      ],\r\n      name: 'ABIChanged',\r\n      type: 'event',\r\n    },\r\n  ],\r\n}\r\n","import { Contract, ContractInterface } from '@ethersproject/contracts'\r\nimport { JsonRpcProvider, JsonRpcSigner } from '@ethersproject/providers'\r\n\r\nimport { NetworkContext } from 'contexts/networkContext'\r\n\r\nimport { NetworkName } from 'models/network-name'\r\n\r\nimport { V2ContractName, V2Contracts } from 'models/v2/contracts'\r\n\r\nimport { useContext, useEffect, useState } from 'react'\r\n\r\nimport { mainnetPublicResolver } from 'constants/contracts/mainnet/PublicResolver'\r\nimport { rinkebyPublicResolver } from 'constants/contracts/rinkeby/PublicResolver'\r\nimport { NETWORKS_BY_NAME, readNetwork } from 'constants/networks'\r\nimport { readProvider } from 'constants/readProvider'\r\n\r\n/**\r\n *  Defines the ABI filename to use for a given V2ContractName.\r\n */\r\nconst CONTRACT_ABI_OVERRIDES: {\r\n  [k in V2ContractName]?: { filename: string; version: string }\r\n} = {\r\n  DeprecatedJBController: {\r\n    version: '4.0.0',\r\n    filename: 'JBController',\r\n  },\r\n  DeprecatedJBSplitsStore: {\r\n    version: '4.0.0',\r\n    filename: 'JBSplitsStore',\r\n  },\r\n  DeprecatedJBDirectory: {\r\n    version: '4.0.0',\r\n    filename: 'JBDirectory',\r\n  },\r\n}\r\n\r\nexport function useV2ContractLoader() {\r\n  const [contracts, setContracts] = useState<V2Contracts>()\r\n\r\n  const { signingProvider } = useContext(NetworkContext)\r\n\r\n  useEffect(() => {\r\n    async function loadContracts() {\r\n      try {\r\n        const network = readNetwork.name\r\n\r\n        // Contracts can be used read-only without a signer, but require a signer to create transactions.\r\n        const signerOrProvider = signingProvider?.getSigner() ?? readProvider\r\n\r\n        const contractLoaders = await Promise.all(\r\n          Object.values(V2ContractName).map(contractName =>\r\n            loadContract(contractName, network, signerOrProvider),\r\n          ),\r\n        )\r\n\r\n        const newContractMap = Object.values(V2ContractName).reduce(\r\n          (accumulator, contractName, idx) => ({\r\n            ...accumulator,\r\n            [contractName]: contractLoaders[idx],\r\n          }),\r\n          {} as V2Contracts,\r\n        )\r\n        // eslint-disable-next-line no-console\r\n        console.log(newContractMap)\r\n        setContracts(newContractMap)\r\n      } catch (e) {\r\n        console.error('CONTRACT LOADER ERROR:', e)\r\n      }\r\n    }\r\n\r\n    loadContracts()\r\n  }, [signingProvider, setContracts])\r\n\r\n  return contracts\r\n}\r\n\r\nconst loadContract = async (\r\n  contractName: V2ContractName,\r\n  network: NetworkName,\r\n  signerOrProvider: JsonRpcSigner | JsonRpcProvider,\r\n): Promise<Contract | undefined> => {\r\n  let contractJson: { abi: ContractInterface; address: string } | undefined =\r\n    undefined\r\n\r\n  if (contractName === V2ContractName.JBProjectHandles) {\r\n    contractJson = {\r\n      abi: (\r\n        await import(\r\n          `@jbx-protocol/project-handles/out/JBProjectHandles.sol/JBProjectHandles.json`\r\n        )\r\n      ).abi,\r\n      address: (\r\n        (await import(\r\n          `@jbx-protocol/project-handles/broadcast/Deploy.sol/${NETWORKS_BY_NAME[network].chainId}/run-latest.json`\r\n        )) as { receipts: { contractAddress: string }[] }\r\n      ).receipts[0].contractAddress, // contractAddress is prefixed `0x0x` in error, trim first `0x`\r\n    }\r\n  } else if (contractName === V2ContractName.PublicResolver) {\r\n    // ENS contracts package currently doesn't include rinkeby information, and ABI contains errors\r\n    if (network === NetworkName.mainnet) contractJson = mainnetPublicResolver\r\n    if (network === NetworkName.rinkeby) contractJson = rinkebyPublicResolver\r\n  } else {\r\n    const contractOverride = CONTRACT_ABI_OVERRIDES[contractName]\r\n    const version = contractOverride?.version ?? 'latest'\r\n    const filename = contractOverride?.filename ?? contractName\r\n    contractJson = await import(\r\n      `@jbx-protocol/contracts-v2-${version}/deployments/${network}/${filename}.json`\r\n    )\r\n  }\r\n\r\n  if (!contractJson) {\r\n    throw new Error(\r\n      `Error importing contract ${contractName}. Network: ${network})`,\r\n    )\r\n  }\r\n\r\n  return new Contract(contractJson.address, contractJson.abi, signerOrProvider)\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { V2UserContext } from 'contexts/v2/userContext'\r\nimport { useV2ContractLoader } from 'hooks/v2/V2ContractLoader'\r\nimport { useGasPriceQuery } from 'hooks/GasPrice'\r\nimport { useTransactor } from 'hooks/Transactor'\r\n\r\nexport const V2UserProvider: React.FC = ({ children }) => {\r\n  const contracts = useV2ContractLoader()\r\n\r\n  const { data: gasPrice } = useGasPriceQuery('average')\r\n\r\n  const transactor = useTransactor({\r\n    gasPrice: gasPrice ? BigNumber.from(gasPrice) : undefined,\r\n  })\r\n\r\n  return (\r\n    <V2UserContext.Provider\r\n      value={{\r\n        contracts,\r\n        transactor,\r\n      }}\r\n    >\r\n      {children}\r\n    </V2UserContext.Provider>\r\n  )\r\n}\r\n","import { t } from '@lingui/macro'\r\n\r\n// Function to return {tokenSymbol} and/or 'tokens', translated and (possibly) capitalized\r\nexport const tokenSymbolText = ({\r\n  tokenSymbol,\r\n  capitalize,\r\n  plural,\r\n  includeTokenWord,\r\n}: {\r\n  tokenSymbol?: string\r\n  capitalize?: boolean\r\n  plural?: boolean\r\n  includeTokenWord?: boolean\r\n}) => {\r\n  const tokenTextSingular = capitalize ? t`Token` : t`token`\r\n  const tokenTextPlural = capitalize ? t`Tokens` : t`tokens`\r\n  const tokenText = plural ? tokenTextPlural : tokenTextSingular\r\n\r\n  if (includeTokenWord) {\r\n    return tokenSymbol ? `${tokenSymbol} ${tokenText}` : tokenText\r\n  }\r\n\r\n  return tokenSymbol ?? tokenText\r\n}\r\n","import { isAddress } from '@ethersproject/address'\r\n\r\nimport { Tooltip } from 'antd'\r\n\r\nimport { useEffect, useState } from 'react'\r\n\r\nimport EtherscanLink from 'components/EtherscanLink'\r\nimport CopyTextButton from 'components/CopyTextButton'\r\n\r\nimport { readProvider } from 'constants/readProvider'\r\nimport { SECONDS_IN_DAY } from 'constants/numbers'\r\n\r\ntype EnsRecord = {\r\n  name: string | null\r\n  expires: number\r\n}\r\n\r\nconst getStorageKey = () => 'jb_ensDict_' + readProvider.network.chainId\r\n\r\nconst getEnsDict = () => {\r\n  try {\r\n    return JSON.parse(\r\n      window.localStorage.getItem(getStorageKey()) ?? '{}',\r\n    ) as Record<string, EnsRecord>\r\n  } catch (e) {\r\n    console.info('ENS storage not found')\r\n    return {}\r\n  }\r\n}\r\n\r\nexport default function FormattedAddress({\r\n  address,\r\n  label,\r\n  tooltipDisabled,\r\n}: {\r\n  address: string | undefined\r\n  label?: string\r\n  tooltipDisabled?: boolean\r\n}) {\r\n  const [ensName, setEnsName] = useState<string | null>()\r\n\r\n  const now = new Date().valueOf()\r\n\r\n  useEffect(() => {\r\n    if (!address || !isAddress(address)) return\r\n\r\n    const _address = address.toLowerCase()\r\n\r\n    const tryUpdateENSDict = async () => {\r\n      const record = getEnsDict()[_address]\r\n\r\n      if (record?.expires > now) {\r\n        setEnsName(record.name)\r\n        return\r\n      }\r\n\r\n      const newRecord = {\r\n        name: null,\r\n        expires: now + SECONDS_IN_DAY * 1000, // Expires in one day\r\n      } as EnsRecord\r\n\r\n      try {\r\n        const name = await readProvider.lookupAddress(_address)\r\n\r\n        // Reverse lookup to check validity\r\n        if (\r\n          name &&\r\n          (await readProvider.resolveName(name))?.toLowerCase() ===\r\n            _address.toLowerCase()\r\n        ) {\r\n          newRecord.name = name\r\n        }\r\n      } catch (e) {\r\n        console.error('Error looking up ENS name for address', address, e)\r\n      }\r\n\r\n      window.localStorage?.setItem(\r\n        getStorageKey(),\r\n        JSON.stringify({\r\n          ...getEnsDict(),\r\n          [_address]: newRecord,\r\n        }),\r\n      )\r\n\r\n      setEnsName(newRecord.name)\r\n    }\r\n\r\n    tryUpdateENSDict()\r\n  }, [address, now])\r\n\r\n  if (!address) return null\r\n\r\n  const formatted =\r\n    ensName ??\r\n    label ??\r\n    (address\r\n      ? address.substring(0, 6) + '...' + address.substr(address.length - 6, 6)\r\n      : '')\r\n\r\n  if (tooltipDisabled) {\r\n    return (\r\n      <span style={{ userSelect: 'all', lineHeight: '22px' }}>{formatted}</span>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Tooltip\r\n      trigger={['hover', 'click']}\r\n      title={\r\n        <span>\r\n          <EtherscanLink value={address} type=\"address\" />{' '}\r\n          <CopyTextButton value={address} />\r\n        </span>\r\n      }\r\n    >\r\n      <span style={{ userSelect: 'all', lineHeight: '22px' }}>{formatted}</span>\r\n    </Tooltip>\r\n  )\r\n}\r\n","import { BallotStrategy } from 'models/ballot'\r\nimport { createCustomStrategy } from 'utils/ballot'\r\n\r\nimport { ballotStrategies } from '.'\r\n\r\n// Put in separate files because lingui.js t macro was not working on ballot strategies\r\nexport const getBallotStrategyByAddress = (address: string): BallotStrategy => {\r\n  const s =\r\n    ballotStrategies().find(\r\n      s => s.address.toLowerCase() === address.toLowerCase(),\r\n    ) ?? createCustomStrategy(address)\r\n  return s\r\n}\r\n","import { SemanticTheme } from 'models/semantic-theme/theme'\r\nimport { CSSProperties } from 'react'\r\n\r\nexport const shadowCard = (theme: SemanticTheme): CSSProperties => ({\r\n  background: theme.colors.background.l2,\r\n  boxShadow: '10px 10px ' + theme.colors.background.l1,\r\n  borderRadius: theme.radii.lg,\r\n  stroke: 'none',\r\n})\r\n","import { Trans } from '@lingui/macro'\r\n\r\nexport const DISCOUNT_RATE_EXPLANATION = (\r\n  <Trans>\r\n    The project token's issuance rate will decrease by this percentage every\r\n    funding cycle. A higher discount rate will incentivize contributors to pay\r\n    the project earlier.\r\n  </Trans>\r\n)\r\n\r\nexport const REDEMPTION_RATE_EXPLANATION = (\r\n  <Trans>\r\n    The redemption rate determines the amount of overflow each token can be\r\n    redeemed for at any given time. On a lower redemption rate, redeeming a\r\n    token increases the value of each remaining token, creating an incentive to\r\n    hold tokens longer than other holders. A redemption rate of 100% means all\r\n    tokens will have equal value regardless of when they are redeemed.\r\n  </Trans>\r\n)\r\n","export const V2_PROJECT_IDS = {\r\n  JUICEBOX_DAO: 1,\r\n  MOON_MARS: 4,\r\n  SUSTAIN_DAO_A: 16,\r\n  SUSTAIN_DAO_B: 17,\r\n  JUS_DAO: 20,\r\n  ELONS_GAMES: 50,\r\n  INVESTORS_EDGE_DAO: 14,\r\n}\r\n","import { Trans } from '@lingui/macro'\r\n\r\nimport { layouts } from 'constants/styles/layouts'\r\nimport { padding } from 'constants/styles/padding'\r\n\r\nexport default function Project404({\r\n  projectId,\r\n  handle,\r\n}: {\r\n  projectId?: number | string | undefined\r\n  handle?: string\r\n}) {\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: padding.app,\r\n        height: '100%',\r\n        ...layouts.centered,\r\n      }}\r\n    >\r\n      <h2>\r\n        {handle ? (\r\n          <Trans>@{handle} not found</Trans>\r\n        ) : projectId ? (\r\n          <Trans>Project {projectId} not found</Trans>\r\n        ) : (\r\n          <Trans>Project not found</Trans>\r\n        )}\r\n      </h2>\r\n    </div>\r\n  )\r\n}\r\n","import { Form, FormItemProps, Input } from 'antd'\r\n\r\n/**\r\n * Item used in a Form to allow an item with no input.\r\n */\r\nexport function ItemNoInput(props: FormItemProps) {\r\n  return (\r\n    <Form.Item {...props}>\r\n      {/* Added a hidden input here because Form.Item needs \r\n      a child Input to work. */}\r\n      <Input hidden type=\"string\" autoComplete=\"off\" />\r\n    </Form.Item>\r\n  )\r\n}\r\n","import { ThemeContext } from 'contexts/themeContext'\r\nimport { CSSProperties, PropsWithChildren, useContext } from 'react'\r\n\r\nexport type BadgeVariant = 'warning' | 'danger'\r\n\r\nconst variantStyleLight: { [k in BadgeVariant]: CSSProperties } = {\r\n  warning: {\r\n    color: '#8F4700',\r\n    backgroundColor: '#FBDFAC',\r\n  },\r\n  danger: {\r\n    color: '#8A1500',\r\n    backgroundColor: '#FFD4CC',\r\n  },\r\n}\r\n\r\nconst variantStyleDark: { [k in BadgeVariant]: CSSProperties } = {\r\n  warning: {\r\n    color: '#FBD99D',\r\n    border: '1px solid #D1BB94',\r\n    backgroundColor: '#5C513D',\r\n  },\r\n  danger: {\r\n    color: '#FFBBAD',\r\n    border: '1px solid #FFBBAD',\r\n    backgroundColor: '#592E26',\r\n  },\r\n}\r\n\r\nexport function Badge({\r\n  children,\r\n  variant,\r\n  style,\r\n}: PropsWithChildren<{ variant: BadgeVariant; style?: CSSProperties }>) {\r\n  const { isDarkMode } = useContext(ThemeContext)\r\n\r\n  const variantStyle = isDarkMode ? variantStyleDark : variantStyleLight\r\n\r\n  return (\r\n    <span\r\n      style={{\r\n        padding: '0.1rem 0.5rem',\r\n        fontSize: 12,\r\n        fontWeight: 400,\r\n        borderRadius: 12,\r\n        ...variantStyle[variant],\r\n        ...style,\r\n      }}\r\n    >\r\n      {children}\r\n    </span>\r\n  )\r\n}\r\n","import {\r\n  ExclamationCircleOutlined,\r\n  ClockCircleOutlined,\r\n} from '@ant-design/icons'\r\nimport { t, Trans } from '@lingui/macro'\r\nimport { Collapse, Tooltip } from 'antd'\r\nimport CollapsePanel from 'antd/lib/collapse/CollapsePanel'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { useContext } from 'react'\r\nimport { detailedTimeUntil } from 'utils/formatTime'\r\nimport { BallotState } from 'models/v2/fundingCycle'\r\n\r\nimport { Badge, BadgeVariant } from '../Badge'\r\nimport { getBallotStrategyByAddress } from 'constants/v2/ballotStrategies/getBallotStrategiesByAddress'\r\n\r\nconst COLLAPSE_PANEL_KEY = 'funding-cycle-details'\r\n\r\nfunction BallotStateBadge({\r\n  ballotState,\r\n  ballotStrategyAddress,\r\n}: {\r\n  ballotState: BallotState\r\n  ballotStrategyAddress?: string\r\n}) {\r\n  const ballotStrategy = ballotStrategyAddress\r\n    ? getBallotStrategyByAddress(ballotStrategyAddress)\r\n    : undefined\r\n\r\n  // only show badge for ballot states 0 and 2 (don't show if ballot is 'approved'.)\r\n  const ballotStateVariantMap: { [k in BallotState]?: BadgeVariant } = {\r\n    0: 'warning',\r\n  }\r\n\r\n  const ballotStateLabelMap: { [k in BallotState]?: string } = {\r\n    0: 'Pending',\r\n  }\r\n\r\n  const ballotStateTooltips: { [k in BallotState]?: string } = {\r\n    0: t`This proposed reconfiguration hasn't passed the ${\r\n      ballotStrategy?.durationSeconds && ballotStrategy?.name\r\n        ? ballotStrategy.name\r\n        : 'delay'\r\n    } period. It's not guaranteed to take effect in the upcoming funding cycle.`,\r\n  }\r\n\r\n  const ballotStateIcons: { [k in BallotState]?: JSX.Element } = {\r\n    0: <ClockCircleOutlined />,\r\n  }\r\n\r\n  const variant = ballotStateVariantMap[ballotState]\r\n\r\n  if (!variant) return null\r\n\r\n  return (\r\n    <Badge\r\n      variant={variant}\r\n      style={{ marginLeft: '0.5rem', textTransform: 'capitalize' }}\r\n    >\r\n      <Tooltip title={ballotStateTooltips[ballotState]}>\r\n        {ballotStateIcons[ballotState]} {ballotStateLabelMap[ballotState]}\r\n      </Tooltip>\r\n    </Badge>\r\n  )\r\n}\r\n\r\nexport default function FundingCycleDetailsCard({\r\n  fundingCycleNumber,\r\n  fundingCycleStartTime,\r\n  fundingCycleDurationSeconds,\r\n  fundingCycleRiskCount,\r\n  isFundingCycleRecurring,\r\n  fundingCycleDetails,\r\n  expand,\r\n  isPreviewMode,\r\n  ballotState,\r\n  ballotStrategyAddress,\r\n}: {\r\n  fundingCycleNumber: BigNumber\r\n  fundingCycleStartTime: BigNumber\r\n  fundingCycleDurationSeconds: BigNumber\r\n  fundingCycleRiskCount: number\r\n  fundingCycleDetails: JSX.Element\r\n  isFundingCycleRecurring: boolean\r\n  expand?: boolean\r\n  isPreviewMode?: boolean\r\n  ballotState?: BallotState\r\n  ballotStrategyAddress?: string\r\n}) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  const HeaderText = () => {\r\n    if (ballotState !== undefined) {\r\n      return (\r\n        <BallotStateBadge\r\n          ballotState={ballotState}\r\n          ballotStrategyAddress={ballotStrategyAddress}\r\n        />\r\n      )\r\n    }\r\n\r\n    if (!fundingCycleDurationSeconds.gt(0)) return null\r\n\r\n    const endTimeSeconds = fundingCycleStartTime.add(\r\n      fundingCycleDurationSeconds,\r\n    )\r\n    const formattedTimeLeft = !isPreviewMode\r\n      ? detailedTimeUntil(endTimeSeconds)\r\n      : detailedTimeUntil(fundingCycleDurationSeconds)\r\n\r\n    return (\r\n      <span style={{ color: colors.text.secondary, marginLeft: 10 }}>\r\n        {isFundingCycleRecurring ? (\r\n          <Trans>\r\n            {formattedTimeLeft} until #{fundingCycleNumber.add(1).toString()}\r\n          </Trans>\r\n        ) : (\r\n          <Trans>{formattedTimeLeft} left</Trans>\r\n        )}\r\n      </span>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Collapse\r\n      style={{\r\n        background: 'transparent',\r\n        border: 'none',\r\n      }}\r\n      className=\"minimal\"\r\n      defaultActiveKey={expand ? COLLAPSE_PANEL_KEY : undefined}\r\n    >\r\n      <CollapsePanel\r\n        key={COLLAPSE_PANEL_KEY}\r\n        style={{ border: 'none' }}\r\n        header={\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              width: '100%',\r\n              justifyContent: 'space-between',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            <div>\r\n              <span>\r\n                {fundingCycleDurationSeconds.gt(0) ? (\r\n                  <Trans>Cycle #{fundingCycleNumber.toString()}</Trans>\r\n                ) : (\r\n                  <Trans>Details</Trans>\r\n                )}\r\n              </span>\r\n\r\n              {fundingCycleRiskCount > 0 && (\r\n                <span style={{ marginLeft: 10, color: colors.text.secondary }}>\r\n                  <Tooltip\r\n                    title={\r\n                      <Trans>\r\n                        Some funding cycle properties may indicate risk for\r\n                        project contributors.\r\n                      </Trans>\r\n                    }\r\n                  >\r\n                    <ExclamationCircleOutlined style={{ marginRight: 6 }} />\r\n                    {fundingCycleRiskCount}\r\n                  </Tooltip>\r\n                </span>\r\n              )}\r\n            </div>\r\n\r\n            <HeaderText />\r\n          </div>\r\n        }\r\n      >\r\n        {fundingCycleDetails}\r\n      </CollapsePanel>\r\n    </Collapse>\r\n  )\r\n}\r\n","export enum ThemeOption {\r\n  light = 'light',\r\n  dark = 'dark',\r\n}\r\n","import { Transactor } from 'hooks/Transactor'\r\nimport { V1Contracts } from 'models/v1/contracts'\r\nimport { createContext } from 'react'\r\n\r\nexport const V1UserContext: React.Context<{\r\n  contracts?: V1Contracts\r\n  transactor?: Transactor\r\n}> = createContext({})\r\n","import { BigNumberish } from '@ethersproject/bignumber'\r\nimport { Trans } from '@lingui/macro'\r\nimport ProjectVersionBadge from 'components/ProjectVersionBadge'\r\nimport { CSSProperties } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { v2ProjectRoute } from 'utils/routes'\r\n\r\nexport default function V2ProjectHandle({\r\n  projectId,\r\n  handle,\r\n  style,\r\n}: {\r\n  projectId: BigNumberish\r\n  handle: string | null | undefined\r\n  style?: CSSProperties\r\n}) {\r\n  return (\r\n    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n      <Link\r\n        to={v2ProjectRoute({ projectId, handle })}\r\n        style={{ fontWeight: 500, ...style }}\r\n        className=\"text-primary hover-text-action-primary hover-text-decoration-underline\"\r\n      >\r\n        <span style={{ marginRight: '0.5rem' }}>\r\n          {handle ? `@${handle}` : <Trans>Project {projectId}</Trans>}\r\n        </span>\r\n      </Link>\r\n      <ProjectVersionBadge versionText=\"V2\" size=\"small\" />\r\n    </div>\r\n  )\r\n}\r\n","import { ThemeContext } from 'contexts/themeContext'\r\nimport { useContext } from 'react'\r\n\r\nexport default function ProjectVersionBadge({\r\n  versionText,\r\n  size,\r\n}: {\r\n  versionText: string\r\n  size?: 'small'\r\n}) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <span\r\n      style={{\r\n        padding: size === 'small' ? '0 2px' : '2px 4px',\r\n        background: colors.background.l1,\r\n        color: colors.text.tertiary,\r\n        fontSize: size === 'small' ? '0.7rem' : 'auto',\r\n      }}\r\n    >\r\n      {versionText}\r\n    </span>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { Button } from 'antd'\r\n\r\nexport default function ScrollToTopButton() {\r\n  return (\r\n    <Button\r\n      type=\"link\"\r\n      onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}\r\n    >\r\n      <Trans>Back to top</Trans>\r\n    </Button>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { Button } from 'antd'\r\n\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { layouts } from 'constants/styles/layouts'\r\nimport { padding } from 'constants/styles/padding'\r\n\r\nexport default function NewDeployNotAvailable({\r\n  handleOrId: name,\r\n}: {\r\n  handleOrId: string | number | undefined\r\n}) {\r\n  const history = useHistory()\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: padding.app,\r\n        height: '100%',\r\n        ...layouts.centered,\r\n        textAlign: 'center',\r\n      }}\r\n    >\r\n      <h2>\r\n        <Trans>\r\n          Project {name} will be available soon! Try refreshing the page\r\n          shortly.\r\n        </Trans>\r\n        <br />\r\n        <br />\r\n        <Button type=\"primary\" onClick={() => history.go(0)}>\r\n          <Trans>Refresh</Trans>\r\n        </Button>\r\n      </h2>\r\n    </div>\r\n  )\r\n}\r\n","import * as constants from '@ethersproject/constants'\r\n\r\nimport { RESERVED_RATE_WARNING_THRESHOLD_PERCENT } from 'constants/fundingWarningText'\r\n\r\nexport default function unsafeFundingCycleProperties({\r\n  ballotAddress,\r\n  reservedRatePercentage,\r\n  hasFundingDuration,\r\n  allowMinting,\r\n}: {\r\n  ballotAddress: string | undefined\r\n  reservedRatePercentage: number | undefined\r\n  hasFundingDuration: boolean | undefined\r\n  allowMinting: boolean | undefined\r\n}) {\r\n  // when we set one of these values to true, we're saying it's potentially unsafe.\r\n  // This object is based on type FundingCycle\r\n  const configFlags = {\r\n    duration: false,\r\n    ballot: false,\r\n    allowMinting: false,\r\n    metadataReservedRate: false,\r\n    metadataMaxReservedRate: false,\r\n  }\r\n\r\n  /**\r\n   * Ballot address is 0x0000.\r\n   * Funding cycle reconfigurations can be created moments before a new cycle begins,\r\n   * giving project owners an opportunity to take advantage of contributors, for example by withdrawing overflow.\r\n   */\r\n  if (ballotAddress === constants.AddressZero) {\r\n    configFlags.ballot = true\r\n  }\r\n\r\n  /**\r\n   * Duration not set. Reconfigurations can be made at any point without notice.\r\n   */\r\n  if (!hasFundingDuration) {\r\n    configFlags.duration = true\r\n  }\r\n\r\n  /**\r\n   * Token minting is enabled.\r\n   * Any supply of tokens could be minted at any time by the project owners, diluting the token share of all existing contributors.\r\n   */\r\n  if (allowMinting) {\r\n    configFlags.allowMinting = true\r\n  }\r\n\r\n  /**\r\n   * Reserved rate is very high.\r\n   * Contributors will receive a relatively small portion of tokens in exchange for paying the project.\r\n   */\r\n  if ((reservedRatePercentage ?? 0) > RESERVED_RATE_WARNING_THRESHOLD_PERCENT) {\r\n    configFlags.metadataReservedRate = true\r\n  }\r\n\r\n  /**\r\n   * Reserved rate is maximum (100%).\r\n   * Contributors will receive no tokens in exchange for paying the project.\r\n   */\r\n  if (reservedRatePercentage === 100) {\r\n    configFlags.metadataReservedRate = false\r\n    configFlags.metadataMaxReservedRate = true\r\n  }\r\n\r\n  return configFlags\r\n}\r\n","import { Form, Space } from 'antd'\r\nimport { Trans } from '@lingui/macro'\r\n\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport {\r\n  CSSProperties,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useState,\r\n} from 'react'\r\nimport FormItemLabel from 'pages/create/FormItemLabel'\r\n\r\nimport ExternalLink from 'components/ExternalLink'\r\nimport { MinimalCollapse } from 'components/MinimalCollapse'\r\n\r\nimport NumberSlider from '../inputs/NumberSlider'\r\nimport { FormItemExt } from './formItemExt'\r\nimport FormItemWarningText from '../FormItemWarningText'\r\nimport SwitchHeading from '../SwitchHeading'\r\n\r\nconst GRAPH_CONTAINER_ID = 'graph-container'\r\nexport const DEFAULT_BONDING_CURVE_RATE_PERCENTAGE = '100'\r\n\r\nfunction BondingCurveRateExtra({\r\n  disabled,\r\n  value,\r\n}: {\r\n  disabled?: boolean\r\n  value: string | undefined\r\n}) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <Space style={{ fontSize: '0.9rem' }} direction=\"vertical\" size=\"large\">\r\n      <p style={{ margin: 0 }}>\r\n        <Trans>\r\n          The redemption rate determines the amount of overflow each token can\r\n          be redeemed for.\r\n        </Trans>\r\n      </p>\r\n\r\n      {value === '0' ? (\r\n        <span style={{ color: colors.text.warn }}>\r\n          <Trans>\r\n            Token holders <strong>cannot redeem their tokens</strong> for any\r\n            ETH when the redemption rate is 0.\r\n          </Trans>\r\n        </span>\r\n      ) : null}\r\n\r\n      <MinimalCollapse\r\n        header={<Trans>How do I set the redemption rate?</Trans>}\r\n      >\r\n        <Trans>\r\n          <p>\r\n            On a lower redemption rate, redeeming a token increases the value of\r\n            each remaining token, creating an incentive to hold tokens longer\r\n            than other holders.\r\n          </p>{' '}\r\n          <p>\r\n            A redemption rate of 100% means all tokens will have equal value\r\n            regardless of when they are redeemed.\r\n          </p>\r\n          Learn more in this{' '}\r\n          <ExternalLink href=\"https://youtu.be/dxqc3yMqi5M\">\r\n            short video\r\n          </ExternalLink>\r\n          .\r\n        </Trans>\r\n      </MinimalCollapse>\r\n\r\n      {disabled && (\r\n        <FormItemWarningText>\r\n          <Trans>\r\n            Disabled when your funding cycle's distribution limit is{' '}\r\n            <strong>No limit</strong> (infinite)\r\n          </Trans>\r\n        </FormItemWarningText>\r\n      )}\r\n    </Space>\r\n  )\r\n}\r\n\r\nexport function ProjectRedemptionRate({\r\n  name,\r\n  hideLabel,\r\n  value,\r\n  style = {},\r\n  label,\r\n  formItemProps,\r\n  onChange,\r\n  checked,\r\n  onToggled,\r\n  disabled,\r\n}: {\r\n  value: string | undefined\r\n  style?: CSSProperties\r\n  label?: string | JSX.Element\r\n  onChange: (val?: number) => void\r\n  checked?: boolean\r\n  onToggled?: (checked: boolean) => void\r\n  disabled?: boolean\r\n} & FormItemExt) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  const labelStyle: CSSProperties = {\r\n    fontSize: '.9rem',\r\n    fontWeight: 500,\r\n    textAlign: 'center',\r\n    position: 'absolute',\r\n  }\r\n\r\n  const graphSize = 300\r\n  const graphPad = 50\r\n  const [calculator, setCalculator] = useState<any>() // eslint-disable-line @typescript-eslint/no-explicit-any\r\n\r\n  const bondingCurveId = 'bonding-curve'\r\n  const baseCurveId = 'base-curve'\r\n\r\n  useLayoutEffect(() => {\r\n    try {\r\n      // https://www.desmos.com/api/v1.6/docs/index.html\r\n      setCalculator(\r\n        Desmos.GraphingCalculator(document.getElementById(GRAPH_CONTAINER_ID), {\r\n          keypad: false,\r\n          expressions: false,\r\n          settingsMenu: false,\r\n          zoomButtons: false,\r\n          expressionsTopbar: false,\r\n          pointsOfInterest: false,\r\n          trace: false,\r\n          border: false,\r\n          lockViewport: true,\r\n          images: false,\r\n          folders: false,\r\n          notes: false,\r\n          sliders: false,\r\n          links: false,\r\n          distributions: false,\r\n          pasteTableData: false,\r\n          showGrid: false,\r\n          showXAxis: false,\r\n          showYAxis: false,\r\n          xAxisNumbers: false,\r\n          yAxisNumbers: false,\r\n          polarNumbers: false,\r\n        }),\r\n      )\r\n    } catch (e) {\r\n      console.error('Error setting calculator', e)\r\n    }\r\n  }, [])\r\n\r\n  const graphCurve = useCallback(\r\n    (_value?: number) => {\r\n      if (_value === undefined || !calculator) return\r\n\r\n      const overflow = 10\r\n      const supply = 10\r\n\r\n      calculator.setMathBounds({\r\n        left: 0,\r\n        bottom: 0,\r\n        right: 10,\r\n        top: 10,\r\n      })\r\n      calculator.removeExpressions([\r\n        { id: bondingCurveId },\r\n        { id: baseCurveId },\r\n      ])\r\n      calculator.setExpression({\r\n        id: baseCurveId,\r\n        latex: `y=x`,\r\n        color: colors.stroke.secondary,\r\n      })\r\n      if (_value === 0) {\r\n        calculator.setExpression({\r\n          id: bondingCurveId,\r\n          latex: `y=0`,\r\n          color: colors.text.brand.primary,\r\n        })\r\n        return\r\n      }\r\n      calculator.setExpression({\r\n        id: bondingCurveId,\r\n        latex: `y=${overflow} * (x/${supply}) * (${_value / 100} + (x - x${\r\n          _value / 100\r\n        })/${supply})`,\r\n        color: colors.text.brand.primary,\r\n      })\r\n    },\r\n    [calculator, colors.stroke.secondary, colors.text.brand.primary],\r\n  )\r\n\r\n  useEffect(\r\n    () =>\r\n      graphCurve(parseFloat(value ?? DEFAULT_BONDING_CURVE_RATE_PERCENTAGE)),\r\n    [calculator, graphCurve, value],\r\n  )\r\n\r\n  return (\r\n    <div style={style}>\r\n      <Form.Item\r\n        name={name}\r\n        label={\r\n          hideLabel ? undefined : (\r\n            <div style={{ display: 'flex' }}>\r\n              {onToggled ? (\r\n                <SwitchHeading\r\n                  checked={Boolean(checked)}\r\n                  onChange={checked => {\r\n                    onToggled(checked)\r\n                    if (!checked)\r\n                      onChange(parseInt(DEFAULT_BONDING_CURVE_RATE_PERCENTAGE))\r\n                  }}\r\n                  disabled={disabled}\r\n                >\r\n                  {label ?? <Trans>Bonding curve rate</Trans>}\r\n                </SwitchHeading>\r\n              ) : (\r\n                <FormItemLabel>\r\n                  {label ?? <Trans>Bonding curve rate</Trans>}\r\n                </FormItemLabel>\r\n              )}\r\n            </div>\r\n          )\r\n        }\r\n        extra={<BondingCurveRateExtra disabled={disabled} value={value} />}\r\n        {...formItemProps}\r\n      >\r\n        {!disabled && !(onToggled && !checked) && (\r\n          <NumberSlider\r\n            min={0}\r\n            max={100}\r\n            step={0.5}\r\n            name={name}\r\n            sliderValue={parseFloat(\r\n              value ?? DEFAULT_BONDING_CURVE_RATE_PERCENTAGE,\r\n            )}\r\n            onChange={(val: number | undefined) => {\r\n              graphCurve(val)\r\n              onChange(val)\r\n            }}\r\n            suffix=\"%\"\r\n            style={{ flexGrow: 1 }}\r\n          />\r\n        )}\r\n      </Form.Item>\r\n\r\n      <div style={{ display: 'flex', alignItems: 'center' }}>\r\n        <div style={{ position: 'relative' }}>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              height: graphSize,\r\n              width: graphSize,\r\n            }}\r\n          >\r\n            <div\r\n              id={GRAPH_CONTAINER_ID}\r\n              style={{\r\n                width: graphSize - graphPad,\r\n                height: graphSize - graphPad,\r\n              }}\r\n            ></div>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              top: graphPad / 2,\r\n              left: graphPad / 2,\r\n              width: graphSize - graphPad,\r\n              height: graphSize - graphPad,\r\n              borderLeft: '2px solid ' + colors.stroke.secondary,\r\n              borderBottom: '2px solid ' + colors.stroke.secondary,\r\n            }}\r\n          ></div>\r\n\r\n          <div\r\n            style={{\r\n              ...labelStyle,\r\n              bottom: 0,\r\n              left: 0,\r\n              right: 0,\r\n            }}\r\n          >\r\n            % <Trans>tokens redeemed</Trans>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              ...labelStyle,\r\n              transform: 'rotate(-90deg)',\r\n              bottom: 0,\r\n              top: 0,\r\n              left: 0,\r\n              width: graphSize,\r\n            }}\r\n          >\r\n            <Trans>Token redeem value</Trans>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { CurrencyName } from 'constants/currency'\r\nimport InputAccessoryButton from './InputAccessoryButton'\r\n\r\nexport default function CurrencySwitch({\r\n  currency,\r\n  onCurrencyChange,\r\n}: {\r\n  currency: CurrencyName\r\n  onCurrencyChange: (currency: CurrencyName) => void\r\n}) {\r\n  return (\r\n    <InputAccessoryButton\r\n      onClick={() => {\r\n        const newCurrency = currency === 'USD' ? 'ETH' : 'USD'\r\n        onCurrencyChange(newCurrency)\r\n      }}\r\n      content={currency}\r\n      withArrow\r\n      placement=\"suffix\"\r\n    />\r\n  )\r\n}\r\n","import { t, Trans } from '@lingui/macro'\r\nimport { Space, Tooltip } from 'antd'\r\nimport Balance from 'components/Navbar/Balance'\r\nimport CurrencySymbol from 'components/CurrencySymbol'\r\nimport TooltipLabel from 'components/TooltipLabel'\r\nimport { formatWad } from 'utils/formatNumber'\r\nimport { CrownFilled } from '@ant-design/icons'\r\nimport { CSSProperties, useContext } from 'react'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\n\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { MAX_DISTRIBUTION_LIMIT } from 'utils/v2/math'\r\n\r\nimport { CurrencyName } from 'constants/currency'\r\n\r\nexport default function SpendingStats({\r\n  currency,\r\n  targetAmount,\r\n  distributedAmount,\r\n  projectBalanceInCurrency,\r\n  ownerAddress,\r\n  feePercentage,\r\n  hasFundingTarget,\r\n}: {\r\n  currency: CurrencyName | undefined\r\n  targetAmount: BigNumber\r\n  distributedAmount: BigNumber\r\n  projectBalanceInCurrency: BigNumber | undefined\r\n  ownerAddress: string | undefined\r\n  feePercentage: string | undefined\r\n  hasFundingTarget: boolean | undefined\r\n}) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  const untapped = targetAmount.sub(distributedAmount)\r\n\r\n  const distributableAmount = projectBalanceInCurrency?.gt(untapped)\r\n    ? untapped\r\n    : projectBalanceInCurrency\r\n\r\n  const smallHeaderStyle: CSSProperties = {\r\n    fontSize: '.7rem',\r\n    fontWeight: 500,\r\n    cursor: 'default',\r\n    color: colors.text.secondary,\r\n  }\r\n\r\n  const formattedDistributionLimit = !targetAmount.eq(MAX_DISTRIBUTION_LIMIT)\r\n    ? formatWad(targetAmount, { precision: 4 })\r\n    : t`NO LIMIT`\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <span\r\n          style={{\r\n            fontSize: '1rem',\r\n            fontWeight: 500,\r\n          }}\r\n        >\r\n          <CurrencySymbol currency={currency} />\r\n          {formatWad(distributableAmount, { precision: 4 }) || '0'}{' '}\r\n        </span>\r\n        <TooltipLabel\r\n          style={smallHeaderStyle}\r\n          label={<Trans>AVAILABLE</Trans>}\r\n          tip={\r\n            <Trans>\r\n              The funds available to distribution for this funding cycle (before\r\n              the {feePercentage}% JBX fee is subtracted). This number won't\r\n              roll over to the next funding cycle, so funds should be\r\n              distributed before this funding cycle ends.\r\n            </Trans>\r\n          }\r\n        />\r\n      </div>\r\n\r\n      <div style={{ ...smallHeaderStyle, color: colors.text.tertiary }}>\r\n        <div>\r\n          <Trans>\r\n            <CurrencySymbol currency={currency} />\r\n            {formatWad(distributedAmount, { precision: 4 }) || '0'}\r\n            {hasFundingTarget ? (\r\n              <span>/{formattedDistributionLimit} </span>\r\n            ) : null}{' '}\r\n            distributed\r\n          </Trans>\r\n        </div>\r\n\r\n        <div>\r\n          <Tooltip\r\n            title={<Trans>Balance of the project owner's wallet.</Trans>}\r\n          >\r\n            <Space>\r\n              <Balance address={ownerAddress} />\r\n              <Trans>\r\n                <CrownFilled /> owner balance\r\n              </Trans>\r\n            </Space>\r\n          </Tooltip>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { Space } from 'antd'\r\nimport { Trans } from '@lingui/macro'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\n\r\nimport { useContext, useState } from 'react'\r\n\r\nimport SectionHeader from 'components/SectionHeader'\r\n\r\nexport type TabType = {\r\n  key: string\r\n  label: string | JSX.Element\r\n  content: JSX.Element\r\n}\r\n\r\nexport default function FundingCycleSection({\r\n  tabs,\r\n  reconfigureButton,\r\n}: {\r\n  tabs: TabType[]\r\n  reconfigureButton: JSX.Element | null\r\n}) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  const [selectedTabKey, setSelectedTabKey] = useState<string>(tabs[0]?.key)\r\n\r\n  const currentTabContent = tabs.find(\r\n    tab => tab.key === selectedTabKey,\r\n  )?.content\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n          justifyContent: 'space-between',\r\n        }}\r\n      >\r\n        <SectionHeader\r\n          text={<Trans>Funding cycle</Trans>}\r\n          tip={\r\n            <Trans>\r\n              A project's lifetime is defined in funding cycles. If a funding\r\n              target is set, the project can withdraw no more than the target\r\n              for the duration of the cycle.\r\n            </Trans>\r\n          }\r\n          style={{\r\n            marginBottom: 10,\r\n          }}\r\n        />\r\n\r\n        {reconfigureButton}\r\n      </div>\r\n\r\n      <Space style={{ fontSize: '.8rem', marginBottom: 12 }} size=\"middle\">\r\n        {tabs.map(tab => (\r\n          <div\r\n            key={tab.key}\r\n            style={{\r\n              textTransform: 'uppercase',\r\n              cursor: 'pointer',\r\n              ...(tab.key === selectedTabKey\r\n                ? { color: colors.text.secondary, fontWeight: 600 }\r\n                : { color: colors.text.tertiary, fontWeight: 500 }),\r\n            }}\r\n            className=\"hover-text-secondary\"\r\n            role=\"button\"\r\n            onClick={() => setSelectedTabKey(tab.key)}\r\n          >\r\n            {tab.label}\r\n          </div>\r\n        ))}\r\n      </Space>\r\n\r\n      {currentTabContent && <div>{currentTabContent}</div>}\r\n    </div>\r\n  )\r\n}\r\n","import { Button, Form, FormInstance, Space, Switch } from 'antd'\r\nimport { t, Trans } from '@lingui/macro'\r\n\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { useContext, useEffect, useState } from 'react'\r\n\r\nimport FormItemWarningText from '../FormItemWarningText'\r\n\r\nexport type RestrictedActionsFormFields = {\r\n  payIsPaused: boolean\r\n  ticketPrintingIsAllowed: boolean\r\n}\r\n\r\nexport default function RestrictedActionsForm({\r\n  form,\r\n  onSave,\r\n  hasFundingDuration,\r\n}: {\r\n  form: FormInstance<RestrictedActionsFormFields>\r\n  onSave: VoidFunction\r\n  hasFundingDuration?: boolean\r\n}) {\r\n  const [showTicketPrintingWarning, setShowTicketPrintingWarning] =\r\n    useState<boolean>()\r\n\r\n  useEffect(() => {\r\n    setShowTicketPrintingWarning(form.getFieldValue('ticketPrintingIsAllowed'))\r\n  }, [form])\r\n\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <Space direction=\"vertical\" size=\"large\">\r\n      <div style={{ color: colors.text.secondary }}>\r\n        <h1>\r\n          <Trans>Restricted actions</Trans>\r\n        </h1>\r\n        {hasFundingDuration ? (\r\n          <p>\r\n            <Trans>\r\n              <strong>Note:</strong> These properties will <strong>not</strong>{' '}\r\n              be editable immediately within a funding cycle. They can only be\r\n              changed for <strong>upcoming</strong> funding cycles.\r\n            </Trans>\r\n          </p>\r\n        ) : null}\r\n      </div>\r\n\r\n      <Form form={form} layout=\"vertical\">\r\n        <Form.Item\r\n          name=\"payIsPaused\"\r\n          label={t`Pause payments`}\r\n          extra={t`Your project cannot receive direct payments while paused.`}\r\n          valuePropName={'checked'}\r\n        >\r\n          <Switch />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"ticketPrintingIsAllowed\"\r\n          label={t`Allow minting tokens`}\r\n          extra={t`Enabling this allows the project owner to manually mint any amount of tokens to any address.`}\r\n          valuePropName=\"checked\"\r\n        >\r\n          <Switch\r\n            onChange={val => {\r\n              setShowTicketPrintingWarning(val)\r\n            }}\r\n          />\r\n        </Form.Item>\r\n        {showTicketPrintingWarning && (\r\n          <Form.Item>\r\n            <FormItemWarningText>\r\n              <Trans>\r\n                Enabling token minting will appear risky to contributors.\r\n              </Trans>\r\n            </FormItemWarningText>\r\n          </Form.Item>\r\n        )}\r\n        <Form.Item>\r\n          <Button htmlType=\"submit\" type=\"primary\" onClick={() => onSave()}>\r\n            <Trans>Save</Trans>\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Space>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { Button, Drawer, DrawerProps } from 'antd'\r\n\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { BallotStrategy } from 'models/ballot'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport ReconfigurationStrategySelector from 'components/ReconfigurationStrategy/ReconfigurationStrategySelector'\r\n\r\nimport { ballotStrategies } from 'constants/v1/ballotStrategies'\r\n\r\nexport default function ReconfigurationStrategyDrawer({\r\n  visible,\r\n  onClose,\r\n  initialSelectedStrategy,\r\n  style = {},\r\n  onSave,\r\n}: {\r\n  visible: boolean\r\n  onClose: () => void\r\n  initialSelectedStrategy: BallotStrategy\r\n  style?: Partial<DrawerProps>\r\n  onSave: (strategy: BallotStrategy) => void\r\n}) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  const [strategy, setStrategy] = useState<BallotStrategy>(\r\n    initialSelectedStrategy,\r\n  )\r\n\r\n  useEffect(() => {\r\n    setStrategy(initialSelectedStrategy)\r\n  }, [initialSelectedStrategy])\r\n\r\n  return (\r\n    <Drawer visible={visible} {...style} onClose={onClose}>\r\n      <h1>\r\n        <Trans>Reconfiguration rules</Trans>\r\n      </h1>\r\n      <p style={{ color: colors.text.secondary }}>\r\n        <Trans>\r\n          Rules for how this project's funding cycles can be reconfigured.\r\n        </Trans>\r\n      </p>\r\n\r\n      <ReconfigurationStrategySelector\r\n        ballotStrategies={ballotStrategies()}\r\n        selectedStrategy={strategy}\r\n        onChange={strategy => setStrategy(strategy)}\r\n      />\r\n\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={() => onSave(strategy)}\r\n        style={{ marginTop: '1rem' }}\r\n      >\r\n        <Trans>Save rules</Trans>\r\n      </Button>\r\n    </Drawer>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { Button, Divider, Form, Space, Switch } from 'antd'\r\nimport { FormItems } from 'components/formItems'\r\n\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport * as constants from '@ethersproject/constants'\r\nimport { useAppDispatch } from 'hooks/AppDispatch'\r\nimport { useEditingV1FundingCycleSelector } from 'hooks/AppSelector'\r\nimport { useTerminalFee } from 'hooks/v1/TerminalFee'\r\nimport { V1CurrencyOption } from 'models/v1/currencyOption'\r\nimport { useContext, useLayoutEffect, useMemo, useState } from 'react'\r\nimport { editingProjectActions } from 'redux/slices/editingProject'\r\nimport { fromWad, parseWad } from 'utils/formatNumber'\r\nimport { hasFundingTarget, isRecurring } from 'utils/v1/fundingCycle'\r\nimport { helpPagePath } from 'utils/helpPageHelper'\r\nimport { getV1CurrencyOption, V1CurrencyName } from 'utils/v1/currency'\r\nimport ExternalLink from 'components/ExternalLink'\r\n\r\nimport FormItemWarningText from 'components/FormItemWarningText'\r\nimport {\r\n  targetSubFeeToTargetFormatted,\r\n  targetToTargetSubFeeFormatted,\r\n} from 'utils/v1/payouts'\r\n\r\nimport { CurrencyName } from 'constants/currency'\r\n\r\nconst DEFAULT_TARGET_AFTER_FEE = '10000'\r\n\r\nexport default function BudgetForm({\r\n  initialCurrency,\r\n  initialTarget,\r\n  initialDuration,\r\n  onSave,\r\n}: {\r\n  initialCurrency: V1CurrencyOption\r\n  initialTarget: string\r\n  initialDuration: string\r\n  onSave: (currency: V1CurrencyOption, target: string, duration: string) => void\r\n}) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n  // State objects avoid antd form input dependency rerendering issues\r\n  const [currency, setCurrency] = useState<CurrencyName>('ETH')\r\n  const [target, setTarget] = useState<string>('0')\r\n  const [targetSubFee, setTargetSubFee] = useState<string>('0')\r\n  const [duration, setDuration] = useState<string>('0')\r\n  const [showFundingFields, setShowFundingFields] = useState<boolean>()\r\n  // TODO budgetForm should not depend on dispatch\r\n  const dispatch = useAppDispatch()\r\n  const { terminal } = useContext(V1ProjectContext)\r\n  const editingFC = useEditingV1FundingCycleSelector()\r\n\r\n  const terminalFee = useTerminalFee(terminal?.version)\r\n\r\n  useLayoutEffect(() => {\r\n    setCurrency(V1CurrencyName(initialCurrency) ?? 'ETH')\r\n    setTarget(initialTarget)\r\n    setTargetSubFee(targetToTargetSubFeeFormatted(initialTarget, terminalFee))\r\n    setDuration(initialDuration)\r\n    setShowFundingFields(\r\n      hasFundingTarget({\r\n        target: parseWad(initialTarget),\r\n      }),\r\n    )\r\n  }, [initialCurrency, initialDuration, initialTarget, terminalFee])\r\n\r\n  const maxIntStr = fromWad(constants.MaxUint256)\r\n  const hasTarget = useMemo(() => {\r\n    return target !== maxIntStr\r\n  }, [target, maxIntStr])\r\n\r\n  return (\r\n    <Space direction=\"vertical\" size=\"large\" style={{ width: '100%' }}>\r\n      <h1>\r\n        <Trans>Funding cycle</Trans>\r\n      </h1>\r\n\r\n      <p>\r\n        <Trans>\r\n          Your project is funded across funding cycles. A funding cycle has a\r\n          funding target and a duration. Your project's funding cycle\r\n          configuration will depend on the kind of project you're starting.\r\n        </Trans>{' '}\r\n        <Trans>\r\n          <ExternalLink href={helpPagePath('dev/learn/glossary/funding-cycle')}>\r\n            Learn more\r\n          </ExternalLink>{' '}\r\n          about funding cycles.\r\n        </Trans>\r\n      </p>\r\n\r\n      <Form layout=\"vertical\">\r\n        <div style={{ color: colors.text.secondary }}>\r\n          <h4>\r\n            <Trans>Funding cycle target</Trans>\r\n          </h4>\r\n          <p>\r\n            <Trans>\r\n              Set the amount of funds you'd like to raise each funding cycle.\r\n              Any funds raised within the funding cycle target can be\r\n              distributed by the project, and can't be redeemed by your\r\n              project's token holders.\r\n            </Trans>\r\n          </p>\r\n          <p>\r\n            <Trans>\r\n              Overflow is created if your project's balance exceeds your funding\r\n              cycle target. Overflow can be redeemed by your project's token\r\n              holders.\r\n            </Trans>{' '}\r\n            <Trans>\r\n              <ExternalLink href={helpPagePath('dev/learn/glossary/overflow')}>\r\n                Learn more\r\n              </ExternalLink>{' '}\r\n              about overflow.\r\n            </Trans>\r\n          </p>\r\n        </div>\r\n\r\n        <Form.Item>\r\n          <Space>\r\n            <Switch\r\n              checked={showFundingFields}\r\n              onChange={checked => {\r\n                const targetSubFee = checked\r\n                  ? DEFAULT_TARGET_AFTER_FEE\r\n                  : maxIntStr || '0'\r\n                setTargetSubFee(targetSubFee)\r\n                setTarget(\r\n                  targetSubFeeToTargetFormatted(targetSubFee, terminalFee),\r\n                )\r\n                setCurrency('USD')\r\n                setShowFundingFields(checked)\r\n              }}\r\n            />\r\n            <label>\r\n              <Trans>Set a funding cycle target</Trans>\r\n            </label>\r\n          </Space>\r\n        </Form.Item>\r\n\r\n        {!hasTarget && (\r\n          <p style={{ color: colors.text.primary }}>\r\n            <span style={{ fontWeight: 600 }}>\r\n              <Trans>No target set.</Trans>{' '}\r\n            </span>\r\n            <Trans>\r\n              All funds can be distributed by the project. The project will have\r\n              no overflow (the same as setting the target to infinity).\r\n            </Trans>\r\n          </p>\r\n        )}\r\n\r\n        {showFundingFields && (\r\n          <FormItems.ProjectTarget\r\n            formItemProps={{\r\n              rules: [{ required: true }],\r\n              extra: null,\r\n            }}\r\n            target={target}\r\n            targetSubFee={targetSubFee}\r\n            onTargetChange={target => {\r\n              setTarget(target ?? '0')\r\n              setTargetSubFee(\r\n                targetToTargetSubFeeFormatted(target ?? '0', terminalFee),\r\n              )\r\n            }}\r\n            onTargetSubFeeChange={targetSubFee => {\r\n              setTargetSubFee(targetSubFee ?? '0')\r\n              setTarget(\r\n                targetSubFeeToTargetFormatted(targetSubFee ?? '0', terminalFee),\r\n              )\r\n            }}\r\n            currency={currency}\r\n            onCurrencyChange={setCurrency}\r\n            feePerbicent={terminalFee}\r\n          />\r\n        )}\r\n\r\n        {showFundingFields && target === '0' && (\r\n          <p style={{ color: colors.text.primary }}>\r\n            <Trans>\r\n              <span style={{ fontWeight: 600 }}>Target is 0.</span> The\r\n              project's entire balance will be considered overflow.{' '}\r\n              <ExternalLink href={helpPagePath('dev/learn/glossary/overflow')}>\r\n                Learn more\r\n              </ExternalLink>{' '}\r\n              about overflow.\r\n            </Trans>\r\n          </p>\r\n        )}\r\n\r\n        <Divider\r\n          style={{\r\n            margin: '40px 0',\r\n            borderColor: colors.stroke.tertiary,\r\n          }}\r\n        />\r\n\r\n        <div>\r\n          <h4>\r\n            <Trans>Funding cycle duration</Trans>\r\n          </h4>\r\n          <p style={{ color: colors.text.secondary }}>\r\n            <Trans>Set the length of your funding cycles.</Trans>{' '}\r\n            <Trans>\r\n              <ExternalLink\r\n                href={helpPagePath('dev/learn/glossary/funding-cycle')}\r\n              >\r\n                Learn more\r\n              </ExternalLink>{' '}\r\n              about funding cycle duration.\r\n            </Trans>\r\n          </p>\r\n\r\n          {hasTarget && (\r\n            <p style={{ color: colors.text.secondary }}>\r\n              <span style={{ fontWeight: 600 }}>\r\n                <Trans>You have set a funding cycle target.</Trans>\r\n              </span>{' '}\r\n              <Trans>\r\n                No more than the funding cycle target can be distributed by the\r\n                project in a single funding cycle.\r\n              </Trans>\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        <FormItems.ProjectDuration\r\n          value={duration}\r\n          isRecurring={isRecurring(editingFC)}\r\n          onToggleRecurring={() =>\r\n            dispatch(\r\n              editingProjectActions.setIsRecurring(!isRecurring(editingFC)),\r\n            )\r\n          }\r\n          onValueChange={val => setDuration(val ?? '0')}\r\n          formItemProps={{\r\n            rules: [{ required: true }],\r\n          }}\r\n        />\r\n\r\n        {duration === '0' && (\r\n          <p style={{ color: colors.text.primary, marginTop: 20 }}>\r\n            <Trans>\r\n              <span style={{ fontWeight: 600 }}>No duration set.</span>\r\n              Funding can be reconfigured at any time. Reconfigurations will\r\n              start a new funding cycle.\r\n            </Trans>\r\n            <FormItemWarningText>\r\n              <Trans>\r\n                Using a duration is recommended. Allowing funding cycles to be\r\n                reconfigured at any time will appear risky to contributors.\r\n              </Trans>\r\n            </FormItemWarningText>\r\n          </p>\r\n        )}\r\n\r\n        <Form.Item>\r\n          <Button\r\n            style={{ marginTop: 20 }}\r\n            htmlType=\"submit\"\r\n            type=\"primary\"\r\n            onClick={() =>\r\n              onSave(getV1CurrencyOption(currency), target, duration)\r\n            }\r\n          >\r\n            <Trans>Save funding configuration</Trans>\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Space>\r\n  )\r\n}\r\n","import { Button, Form, FormInstance, Space } from 'antd'\r\nimport { Trans } from '@lingui/macro'\r\nimport { FormItems } from 'components/formItems'\r\n\r\nexport type IncentivesFormFields = {\r\n  discountRate: string\r\n  bondingCurveRate: string\r\n}\r\n\r\nexport default function IncentivesForm({\r\n  form,\r\n  disableBondingCurve,\r\n  disableDiscountRate,\r\n  onSave,\r\n}: {\r\n  form: FormInstance<IncentivesFormFields>\r\n  disableBondingCurve?: boolean\r\n  disableDiscountRate?: boolean\r\n  onSave: (discountRate: string, bondingCurveRate: string) => void\r\n}) {\r\n  const discountRate = form.getFieldValue('discountRate')\r\n  const bondingCurveRate = form.getFieldValue('bondingCurveRate')\r\n\r\n  const saveButton = (\r\n    <Form.Item>\r\n      <Button\r\n        htmlType=\"submit\"\r\n        type=\"primary\"\r\n        onClick={() => {\r\n          if (discountRate === undefined || bondingCurveRate === undefined)\r\n            return\r\n          onSave(\r\n            form.getFieldValue('discountRate'),\r\n            form.getFieldValue('bondingCurveRate'),\r\n          )\r\n        }}\r\n      >\r\n        Save\r\n      </Button>\r\n    </Form.Item>\r\n  )\r\n\r\n  return (\r\n    <Space direction=\"vertical\" size=\"large\" style={{ width: '100%' }}>\r\n      <h1>\r\n        <Trans>Incentives</Trans>\r\n      </h1>\r\n\r\n      <Form form={form} layout=\"vertical\">\r\n        <FormItems.ProjectDiscountRate\r\n          name=\"discountRate\"\r\n          value={discountRate}\r\n          onChange={(val?: number) => {\r\n            form.setFieldsValue({ discountRate: val?.toString() })\r\n          }}\r\n          disabled={Boolean(disableDiscountRate)}\r\n        />\r\n\r\n        <FormItems.ProjectRedemptionRate\r\n          name=\"bondingCurveRate\"\r\n          value={form.getFieldValue('bondingCurveRate')}\r\n          onChange={(val?: number) =>\r\n            form.setFieldsValue({ bondingCurveRate: val?.toString() })\r\n          }\r\n          disabled={Boolean(disableBondingCurve)}\r\n        />\r\n        {saveButton}\r\n      </Form>\r\n    </Space>\r\n  )\r\n}\r\n","import { t, Trans } from '@lingui/macro'\r\n\r\nimport { Button, Form, Space, Input } from 'antd'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { useForm } from 'antd/lib/form/Form'\r\nimport { V1CurrencyOption } from 'models/v1/currencyOption'\r\nimport { PayoutMod } from 'models/mods'\r\nimport { useContext, useLayoutEffect, useState } from 'react'\r\nimport { fromWad, perbicentToPercent } from 'utils/formatNumber'\r\n\r\nimport { getTotalPercentage } from 'components/formItems/formHelpers'\r\nimport { CurrencyContext } from 'contexts/currencyContext'\r\nimport ProjectPayoutMods from 'components/v1/shared/ProjectPayMods/ProjectPayoutMods'\r\n\r\nimport * as constants from '@ethersproject/constants'\r\n\r\nexport default function PayModsForm({\r\n  initialMods,\r\n  currency,\r\n  target,\r\n  fee,\r\n  onSave,\r\n}: {\r\n  initialMods: PayoutMod[]\r\n  currency: V1CurrencyOption\r\n  target: BigNumber\r\n  fee: BigNumber | undefined\r\n  onSave: (mods: PayoutMod[]) => void\r\n}) {\r\n  // State objects avoid antd form input dependency rerendering issues\r\n  const [mods, setMods] = useState<PayoutMod[]>([])\r\n\r\n  const [form] = useForm<{\r\n    totalPercent: number\r\n  }>()\r\n\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  const {\r\n    currencies: { ETH },\r\n  } = useContext(CurrencyContext)\r\n\r\n  // Calculates sum of percentages of given payouts\r\n  function calculateTotalPercentage(newMods: PayoutMod[] | undefined) {\r\n    return getTotalPercentage(newMods)\r\n  }\r\n\r\n  useLayoutEffect(() => {\r\n    setMods(initialMods)\r\n  }, [initialMods])\r\n\r\n  async function validateAndSaveMods() {\r\n    await form.validateFields()\r\n    onSave(mods)\r\n  }\r\n\r\n  // Validates the total distribution percentage\r\n  const validateTotalDistributions = () => {\r\n    if (form.getFieldValue('totalPercent') > 100)\r\n      return Promise.reject(t`Sum of percentages cannot exceed 100%.`)\r\n    return Promise.resolve()\r\n  }\r\n\r\n  return (\r\n    <Space direction=\"vertical\" size=\"large\" style={{ width: '100%' }}>\r\n      <div style={{ color: colors.text.secondary }}>\r\n        <h1>\r\n          <Trans>Funding distribution</Trans>\r\n        </h1>\r\n\r\n        <p>\r\n          <Trans>\r\n            Distribute available funds to other Ethereum wallets or Juicebox\r\n            projects as payouts. Use this to pay contributors, charities,\r\n            Juicebox projects you depend on, or anyone else. Funds are\r\n            distributed whenever a withdrawal is made from your project.\r\n          </Trans>\r\n        </p>\r\n        <p>\r\n          <Trans>\r\n            By default, all unallocated funds can be distributed to the project\r\n            owner's wallet.\r\n          </Trans>\r\n        </p>\r\n      </div>\r\n\r\n      <Form form={form} layout=\"vertical\">\r\n        <Form.Item\r\n          name={'totalPercent'}\r\n          rules={[\r\n            {\r\n              validator: validateTotalDistributions,\r\n            },\r\n          ]}\r\n        >\r\n          {/* Added a hidden input here because Form.Item needs \r\n           a child Input to work. Need the parent Form.Item to \r\n           validate totalPercent */}\r\n          <Input hidden type=\"string\" autoComplete=\"off\" />\r\n        </Form.Item>\r\n        <ProjectPayoutMods\r\n          mods={mods}\r\n          target={fromWad(target)}\r\n          currencyName={currency === ETH ? 'ETH' : 'USD'}\r\n          onModsChanged={new_mods => {\r\n            setMods(new_mods)\r\n            form.setFieldsValue({\r\n              totalPercent: calculateTotalPercentage(new_mods),\r\n            })\r\n          }}\r\n          feePercentage={perbicentToPercent(fee)}\r\n          formItemProps={{\r\n            label: t`Payouts (optional)`,\r\n          }}\r\n          targetIsInfinite={!target || target.eq(constants.MaxUint256)}\r\n        />\r\n        <Form.Item>\r\n          <Button\r\n            style={{ marginTop: 20 }}\r\n            htmlType=\"submit\"\r\n            type=\"primary\"\r\n            onClick={validateAndSaveMods}\r\n          >\r\n            <Trans>Save payouts</Trans>\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Space>\r\n  )\r\n}\r\n","export enum NetworkName {\r\n  localhost = 'localhost',\r\n  ropsten = 'ropsten',\r\n  mainnet = 'mainnet',\r\n  kovan = 'kovan',\r\n  rinkeby = 'rinkeby',\r\n  goerli = 'goerli',\r\n  xdai = 'xdai',\r\n  matic = 'matic',\r\n  mumbai = 'mumbai',\r\n}\r\n","import { Button, Form, FormInstance, Space } from 'antd'\r\nimport { Trans } from '@lingui/macro'\r\nimport { FormItems } from 'components/formItems'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { TicketMod } from 'models/mods'\r\nimport { useContext, useLayoutEffect, useState } from 'react'\r\n\r\nimport { RESERVED_RATE_WARNING_THRESHOLD_PERCENT as reservedRateRiskyMin } from 'constants/fundingWarningText'\r\nimport FormItemWarningText from '../FormItemWarningText'\r\n\r\nexport type TicketingFormFields = {\r\n  reserved: number\r\n}\r\n\r\nexport default function TicketingForm({\r\n  form,\r\n  initialMods,\r\n  onSave,\r\n}: {\r\n  form: FormInstance<TicketingFormFields>\r\n  initialMods: TicketMod[]\r\n  onSave: (mods: TicketMod[]) => void\r\n}) {\r\n  const [mods, setMods] = useState<TicketMod[]>([])\r\n  const [showReservedRateWarning, setShowReservedRateWarning] =\r\n    useState<boolean>()\r\n\r\n  // Using a state here because relying on the form does not\r\n  // pass through updated reservedRate to ProjectTicketMods\r\n  const [reservedRate, setReservedRate] = useState<number>(\r\n    form.getFieldValue('reserved'),\r\n  )\r\n\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  useLayoutEffect(() => {\r\n    setMods(initialMods)\r\n  }, [initialMods])\r\n\r\n  return (\r\n    <Space direction=\"vertical\" size=\"large\">\r\n      <div style={{ color: colors.text.secondary }}>\r\n        <h1>\r\n          <Trans>Reserved tokens</Trans>\r\n        </h1>\r\n\r\n        <p>\r\n          <Trans>\r\n            Tokens are earned by anyone who pays your project, and can be\r\n            redeemed for overflow if your project has set a funding target.\r\n          </Trans>\r\n        </p>\r\n        <p>\r\n          <Trans>\r\n            You'll be able to issue ERC-20 tokens once your project contract has\r\n            been deployed. Until then, the protocol will track token balances,\r\n            allowing your supporters to earn tokens and redeem for overflow in\r\n            the meantime.\r\n          </Trans>\r\n        </p>\r\n      </div>\r\n\r\n      <Form form={form} layout=\"vertical\">\r\n        <FormItems.ProjectReserved\r\n          value={reservedRate}\r\n          name=\"reserved\"\r\n          onChange={(val?: number) => {\r\n            setReservedRate(val ?? 0)\r\n            form.setFieldsValue({ reserved: val })\r\n            setShowReservedRateWarning(\r\n              Boolean(val && val >= reservedRateRiskyMin),\r\n            )\r\n          }}\r\n          checked\r\n        />\r\n        {showReservedRateWarning && (\r\n          <Form.Item>\r\n            <FormItemWarningText>\r\n              <Trans>\r\n                Projects using a reserved rate of {reservedRateRiskyMin}% or\r\n                more will appear risky to contributors, as a relatively small\r\n                number of tokens will be received in exchange for paying your\r\n                project.\r\n              </Trans>\r\n            </FormItemWarningText>\r\n          </Form.Item>\r\n        )}\r\n        <FormItems.ProjectTicketMods\r\n          name=\"ticketMods\"\r\n          mods={mods}\r\n          onModsChanged={setMods}\r\n          formItemProps={{\r\n            label: <Trans>Reserved token allocation (optional)</Trans>,\r\n            extra: (\r\n              <Trans>\r\n                Allocate a portion of your project's reserved tokens to other\r\n                Ethereum wallets or Juicebox projects.\r\n              </Trans>\r\n            ),\r\n          }}\r\n          reservedRate={reservedRate}\r\n        />\r\n        <Form.Item>\r\n          <Button htmlType=\"submit\" type=\"primary\" onClick={() => onSave(mods)}>\r\n            <Trans>Save</Trans>\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Space>\r\n  )\r\n}\r\n","import { Tooltip } from 'antd'\r\n\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { formatWad, fromWad, parseWad } from 'utils/formatNumber'\r\nimport { betweenZeroAndOne } from 'utils/bigNumbers'\r\n\r\nimport { useCurrencyConverter } from 'hooks/CurrencyConverter'\r\n\r\nimport CurrencySymbol from '../CurrencySymbol'\r\n\r\n/**\r\n * Render a given amount formatted as USD. Displays ETH amount in a tooltip on hover.\r\n */\r\nexport default function USDAmount({\r\n  amount,\r\n  precision,\r\n  padEnd,\r\n}: {\r\n  amount?: BigNumber | string\r\n  precision?: number\r\n  padEnd?: boolean\r\n}) {\r\n  const converter = useCurrencyConverter()\r\n\r\n  // Account for being passed a string amount or a BigNumber amount\r\n  const isBetweenZeroAndOne =\r\n    (BigNumber.isBigNumber(amount) && betweenZeroAndOne(amount)) ||\r\n    betweenZeroAndOne(parseWad(amount))\r\n\r\n  const precisionAdjusted = isBetweenZeroAndOne ? 2 : precision\r\n\r\n  const formattedUSDAmount = formatWad(amount, {\r\n    precision: precisionAdjusted ?? 0,\r\n    padEnd: padEnd ?? false,\r\n  })\r\n\r\n  const ETHAmount = converter.usdToWei(fromWad(amount))\r\n  const formattedETHAmount = formatWad(ETHAmount, {\r\n    precision: precisionAdjusted ?? 0,\r\n    padEnd: padEnd ?? false,\r\n  })\r\n\r\n  if (!amount) return null\r\n\r\n  return (\r\n    <Tooltip\r\n      title={\r\n        <span>\r\n          <CurrencySymbol currency=\"ETH\" />\r\n          {formattedETHAmount}\r\n        </span>\r\n      }\r\n    >\r\n      <CurrencySymbol currency=\"USD\" />\r\n      {formattedUSDAmount}\r\n    </Tooltip>\r\n  )\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { Progress, Tooltip } from 'antd'\r\nimport { Property } from 'csstype'\r\n\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { useContext, useMemo, useState } from 'react'\r\nimport { fracDiv } from 'utils/formatNumber'\r\nimport { t } from '@lingui/macro'\r\n\r\nconst TargetIndicatorLine = (\r\n  props: { color: Property.Color } & React.DOMAttributes<HTMLDivElement>,\r\n) => (\r\n  <div\r\n    {...props}\r\n    style={{\r\n      minWidth: 4,\r\n      height: 15,\r\n      borderRadius: 2,\r\n      background: props.color,\r\n      marginLeft: 5,\r\n      marginRight: 5,\r\n      marginTop: 3,\r\n    }}\r\n  ></div>\r\n)\r\n\r\nconst ProgressWithOverflow = ({\r\n  percentOverflow,\r\n}: {\r\n  percentOverflow: number\r\n}) => {\r\n  const [showTooltips, setShowTooltips] = useState(false)\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n  return (\r\n    <div\r\n      style={{ display: 'flex', alignItems: 'center', paddingBottom: 8 }}\r\n      onMouseOver={() => setShowTooltips(true)}\r\n      onMouseEnter={() => setShowTooltips(true)}\r\n      onMouseLeave={() => setShowTooltips(false)}\r\n    >\r\n      <Tooltip\r\n        title={t`Distributed`}\r\n        visible={showTooltips}\r\n        placement=\"bottomLeft\"\r\n      >\r\n        <Progress\r\n          style={{\r\n            width: (1 - percentOverflow) * 100 + '%',\r\n            minWidth: 12,\r\n          }}\r\n          percent={100}\r\n          showInfo={false}\r\n          strokeColor={colors.text.brand.primary}\r\n        />\r\n      </Tooltip>\r\n\r\n      <TargetIndicatorLine color={colors.text.primary} />\r\n\r\n      <Tooltip title={t`Overflow`} visible={showTooltips} placement=\"topRight\">\r\n        <Progress\r\n          style={{\r\n            width: percentOverflow * 100 + '%',\r\n            minWidth: 12,\r\n          }}\r\n          percent={100}\r\n          showInfo={false}\r\n          strokeColor={colors.text.brand.primary}\r\n        />\r\n      </Tooltip>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ProgressNoOverflow = ({ percentPaid }: { percentPaid: number }) => {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n  return (\r\n    <Progress\r\n      percent={percentPaid ? Math.max(percentPaid, 1) : 0}\r\n      showInfo={false}\r\n      strokeColor={colors.text.brand.primary}\r\n    />\r\n  )\r\n}\r\n\r\nexport default function FundingProgressBar({\r\n  targetAmount,\r\n  balanceInTargetCurrency,\r\n  overflowAmountInTargetCurrency,\r\n}: {\r\n  targetAmount: BigNumber\r\n  balanceInTargetCurrency: BigNumber | undefined\r\n  overflowAmountInTargetCurrency: BigNumber | undefined\r\n}) {\r\n  const percentPaid = useMemo(\r\n    () =>\r\n      balanceInTargetCurrency && targetAmount\r\n        ? fracDiv(balanceInTargetCurrency.toString(), targetAmount.toString()) *\r\n          100\r\n        : 0,\r\n    [balanceInTargetCurrency, targetAmount],\r\n  )\r\n\r\n  // Percent overflow of target\r\n  const percentOverflow = useMemo(\r\n    () =>\r\n      fracDiv(\r\n        (\r\n          overflowAmountInTargetCurrency?.sub(targetAmount ?? 0) ?? 0\r\n        ).toString(),\r\n        (targetAmount ?? 0).toString(),\r\n      ),\r\n    [overflowAmountInTargetCurrency, targetAmount],\r\n  )\r\n\r\n  const hasTargetAmount = targetAmount.gt(0)\r\n  const hasOverFlow = overflowAmountInTargetCurrency?.gt(0) ?? false\r\n\r\n  if (!hasTargetAmount || !hasOverFlow) {\r\n    return <ProgressNoOverflow percentPaid={percentPaid} />\r\n  }\r\n\r\n  return <ProgressWithOverflow percentOverflow={percentOverflow} />\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport EtherscanLink from 'components/EtherscanLink'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { DeployedERC20Event } from 'models/subgraph-entities/vX/deployed-erc20-event'\r\nimport { useContext } from 'react'\r\nimport { formatHistoricalDate } from 'utils/formatDate'\r\n\r\nimport {\r\n  contentLineHeight,\r\n  primaryContentFontSize,\r\n  smallHeaderStyle,\r\n} from './styles'\r\n\r\nexport default function DeployedERC20EventElem({\r\n  event,\r\n}: {\r\n  event:\r\n    | Pick<DeployedERC20Event, 'symbol' | 'id' | 'timestamp' | 'txHash'>\r\n    | undefined\r\n}) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  if (!event) return null\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignContent: 'space-between',\r\n      }}\r\n    >\r\n      <div>\r\n        <div style={smallHeaderStyle(colors)}>\r\n          <Trans>Deployed ERC20 token</Trans>\r\n        </div>\r\n        <div\r\n          style={{\r\n            lineHeight: contentLineHeight,\r\n            fontSize: primaryContentFontSize,\r\n          }}\r\n        >\r\n          {event.symbol}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ textAlign: 'right' }}>\r\n        {event.timestamp && (\r\n          <div style={smallHeaderStyle(colors)}>\r\n            {formatHistoricalDate(event.timestamp * 1000)}{' '}\r\n            <EtherscanLink value={event.txHash} type=\"tx\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport ETHAmount from 'components/currency/ETHAmount'\r\nimport EtherscanLink from 'components/EtherscanLink'\r\nimport FormattedAddress from 'components/FormattedAddress'\r\nimport RichNote from 'components/RichNote'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { PayEvent } from 'models/subgraph-entities/vX/pay-event'\r\nimport { useCallback, useContext } from 'react'\r\nimport { formatHistoricalDate } from 'utils/formatDate'\r\n\r\nimport {\r\n  contentLineHeight,\r\n  primaryContentFontSize,\r\n  smallHeaderStyle,\r\n} from './styles'\r\n\r\n// Maps a project id to an internal map of payment event overrides.\r\nconst payEventOverrides = new Map<number, Map<string, string>>([\r\n  [\r\n    10,\r\n    new Map<string, string>([\r\n      ['Minted WikiToken for Page ID', 'WikiToken minted'],\r\n    ]),\r\n  ],\r\n])\r\n\r\nexport default function PayEventElem({\r\n  event,\r\n}: {\r\n  event:\r\n    | Pick<\r\n        PayEvent,\r\n        'amount' | 'timestamp' | 'beneficiary' | 'note' | 'id' | 'txHash'\r\n      >\r\n    | undefined\r\n}) {\r\n  const { projectId } = useContext(V1ProjectContext)\r\n\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  const usePayEventOverrides = projectId && payEventOverrides.has(projectId)\r\n\r\n  const formatPayEventOverride = useCallback(\r\n    (e: Partial<PayEvent>) => {\r\n      if (!projectId) {\r\n        return e.note\r\n      }\r\n\r\n      let override\r\n      payEventOverrides\r\n        .get(projectId)\r\n        ?.forEach((value: string, key: string) => {\r\n          if (e.note?.includes(key)) {\r\n            override = value\r\n            return\r\n          }\r\n        })\r\n\r\n      return override ? override : e.note\r\n    },\r\n    [projectId],\r\n  )\r\n\r\n  if (!event) return null\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          alignContent: 'space-between',\r\n        }}\r\n      >\r\n        <div>\r\n          <div style={smallHeaderStyle(colors)}>\r\n            <Trans>Paid</Trans>\r\n          </div>\r\n          <div\r\n            style={{\r\n              lineHeight: contentLineHeight,\r\n              fontSize: primaryContentFontSize,\r\n            }}\r\n          >\r\n            <ETHAmount amount={event.amount} precision={4} />\r\n          </div>\r\n        </div>\r\n\r\n        <div style={{ textAlign: 'right' }}>\r\n          {event.timestamp && (\r\n            <div style={smallHeaderStyle(colors)}>\r\n              {formatHistoricalDate(event.timestamp * 1000)}{' '}\r\n              <EtherscanLink value={event.txHash} type=\"tx\" />\r\n            </div>\r\n          )}\r\n          <div\r\n            style={{\r\n              ...smallHeaderStyle(colors),\r\n              lineHeight: contentLineHeight,\r\n            }}\r\n          >\r\n            <FormattedAddress address={event.beneficiary} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ marginTop: 5 }}>\r\n        <RichNote\r\n          note={\r\n            (usePayEventOverrides\r\n              ? formatPayEventOverride(event)\r\n              : event.note) ?? ''\r\n          }\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import EtherscanLink from 'components/EtherscanLink'\r\nimport FormattedAddress from 'components/FormattedAddress'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { ProjectCreateEvent } from 'models/subgraph-entities/vX/project-create-event'\r\nimport { useContext } from 'react'\r\nimport { formatHistoricalDate } from 'utils/formatDate'\r\n\r\nimport { Trans } from '@lingui/macro'\r\n\r\nimport { contentLineHeight, smallHeaderStyle } from './styles'\r\n\r\nexport default function ProjectCreateEventElem({\r\n  event,\r\n}: {\r\n  event: Pick<ProjectCreateEvent, 'id' | 'caller' | 'timestamp' | 'txHash'>\r\n}) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignContent: 'space-between',\r\n      }}\r\n    >\r\n      <div>\r\n        <div style={smallHeaderStyle(colors)}>Created</div>\r\n        <div\r\n          style={{\r\n            lineHeight: contentLineHeight,\r\n          }}\r\n        >\r\n          <Trans>Project created by</Trans>{' '}\r\n          <FormattedAddress address={event.caller} />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ textAlign: 'right' }}>\r\n        {event.timestamp && (\r\n          <div style={smallHeaderStyle(colors)}>\r\n            {formatHistoricalDate(event.timestamp * 1000)}{' '}\r\n            <EtherscanLink value={event.txHash} type=\"tx\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport CurrencySymbol from 'components/CurrencySymbol'\r\nimport EtherscanLink from 'components/EtherscanLink'\r\nimport FormattedAddress from 'components/FormattedAddress'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { RedeemEvent } from 'models/subgraph-entities/vX/redeem-event'\r\nimport { useContext } from 'react'\r\nimport { formatHistoricalDate } from 'utils/formatDate'\r\nimport { formatWad } from 'utils/formatNumber'\r\nimport { tokenSymbolText } from 'utils/tokenSymbolText'\r\n\r\nimport {\r\n  contentLineHeight,\r\n  primaryContentFontSize,\r\n  smallHeaderStyle,\r\n} from './styles'\r\n\r\nexport default function RedeemEventElem({\r\n  event,\r\n}: {\r\n  event:\r\n    | Pick<\r\n        RedeemEvent,\r\n        | 'id'\r\n        | 'amount'\r\n        | 'beneficiary'\r\n        | 'txHash'\r\n        | 'timestamp'\r\n        | 'returnAmount'\r\n      >\r\n    | undefined\r\n}) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n  const { tokenSymbol } = useContext(V1ProjectContext)\r\n\r\n  if (!event) return null\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          alignContent: 'space-between',\r\n        }}\r\n      >\r\n        <div>\r\n          <div style={smallHeaderStyle(colors)}>\r\n            <Trans>Redeemed</Trans>\r\n          </div>\r\n          <div\r\n            style={{\r\n              lineHeight: contentLineHeight,\r\n              fontSize: primaryContentFontSize,\r\n            }}\r\n          >\r\n            {formatWad(event.amount, { precision: 0 })}{' '}\r\n            {tokenSymbolText({\r\n              tokenSymbol: tokenSymbol,\r\n              capitalize: false,\r\n              plural: true,\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <div\r\n            style={{\r\n              ...smallHeaderStyle(colors),\r\n              textAlign: 'right',\r\n            }}\r\n          >\r\n            {event.timestamp && (\r\n              <span>{formatHistoricalDate(event.timestamp * 1000)}</span>\r\n            )}{' '}\r\n            <EtherscanLink value={event.txHash} type=\"tx\" />\r\n          </div>\r\n          <div\r\n            style={{\r\n              ...smallHeaderStyle(colors),\r\n              lineHeight: contentLineHeight,\r\n              textAlign: 'right',\r\n            }}\r\n          >\r\n            <FormattedAddress address={event.beneficiary} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ color: colors.text.secondary }}>\r\n        <CurrencySymbol currency=\"ETH\" />\r\n        {formatWad(event.returnAmount, { precision: 4 })} overflow received\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { Button, Space, Tooltip } from 'antd'\r\nimport { Trans } from '@lingui/macro'\r\nimport { useState } from 'react'\r\nimport { TransactorInstance } from 'hooks/Transactor'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { SettingOutlined } from '@ant-design/icons'\r\nimport { ButtonType } from 'antd/lib/button'\r\nimport { SizeType } from 'antd/lib/config-provider/SizeContext'\r\n\r\nimport IssueTokenModal from './modals/IssueTokenModal'\r\n\r\nexport type IssueTokenTxArgs = {\r\n  name: string\r\n  symbol: string\r\n}\r\n\r\nexport default function IssueTokenButton({\r\n  useIssueTokensTx,\r\n  type,\r\n  text,\r\n  size,\r\n  hideIcon,\r\n  onCompleted,\r\n  disabled,\r\n  tooltipText,\r\n}: {\r\n  useIssueTokensTx: () => TransactorInstance<IssueTokenTxArgs>\r\n  type?: ButtonType\r\n  text?: JSX.Element\r\n  size?: SizeType\r\n  hideIcon?: boolean\r\n  onCompleted?: VoidFunction\r\n  disabled?: boolean\r\n  tooltipText?: JSX.Element\r\n}) {\r\n  const [modalVisible, setModalVisible] = useState<boolean>(false)\r\n\r\n  const history = useHistory()\r\n\r\n  function IssueTokensButton() {\r\n    return (\r\n      <Tooltip\r\n        title={\r\n          !disabled &&\r\n          (tooltipText ?? (\r\n            <Trans>\r\n              Issue an ERC-20 to be used as this project's token. Once issued,\r\n              anyone can claim their existing token balance in the new token.\r\n            </Trans>\r\n          ))\r\n        }\r\n      >\r\n        <Button\r\n          size={size ?? 'small'}\r\n          icon={!hideIcon && <SettingOutlined />}\r\n          onClick={() => setModalVisible(true)}\r\n          type={type ?? 'default'}\r\n          disabled={disabled}\r\n        >\r\n          <span>{text ?? <Trans>Issue ERC-20</Trans>}</span>\r\n        </Button>\r\n      </Tooltip>\r\n    )\r\n  }\r\n\r\n  const onClose = () => {\r\n    setModalVisible(false)\r\n\r\n    // remove newDeploy=true query parameter\r\n    history.replace({\r\n      search: '',\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Space>\r\n        <IssueTokensButton />\r\n      </Space>\r\n      <IssueTokenModal\r\n        visible={modalVisible}\r\n        useIssueTokensTx={useIssueTokensTx}\r\n        onClose={onClose}\r\n        onConfirmed={onCompleted}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import { t, Trans } from '@lingui/macro'\r\nimport { Form, Input } from 'antd'\r\nimport { useForm } from 'antd/lib/form/Form'\r\nimport { TransactorInstance } from 'hooks/Transactor'\r\nimport { useState } from 'react'\r\n\r\nimport { IssueTokenTxArgs } from '../IssueTokenButton'\r\nimport TransactionModal from '../TransactionModal'\r\n\r\nexport default function IssueTokenModal({\r\n  visible,\r\n  onClose,\r\n  useIssueTokensTx,\r\n  isNewDeploy,\r\n  onConfirmed,\r\n}: {\r\n  visible: boolean\r\n  onClose: VoidFunction\r\n  useIssueTokensTx: () => TransactorInstance<IssueTokenTxArgs>\r\n  isNewDeploy?: boolean\r\n  onConfirmed?: VoidFunction\r\n}) {\r\n  const [transactionPending, setTransactionPending] = useState<boolean>()\r\n  const [loading, setLoading] = useState<boolean>()\r\n  const [form] = useForm<IssueTokenTxArgs>()\r\n\r\n  const issueTokensTx = useIssueTokensTx()\r\n\r\n  async function executeIssueTokensTx() {\r\n    await form.validateFields()\r\n\r\n    setLoading(true)\r\n\r\n    const fields = form.getFieldsValue(true)\r\n\r\n    const txSuccess = await issueTokensTx(\r\n      { name: fields.name, symbol: fields.symbol },\r\n      {\r\n        onDone: () => {\r\n          setTransactionPending(true)\r\n        },\r\n        onConfirmed: () => {\r\n          setTransactionPending(false)\r\n          setLoading(false)\r\n          onClose()\r\n          onConfirmed?.()\r\n        },\r\n      },\r\n    )\r\n\r\n    if (!txSuccess) {\r\n      setLoading(false)\r\n      setTransactionPending(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <TransactionModal\r\n      visible={visible}\r\n      title={t`Issue ERC-20 token`}\r\n      okText={t`Issue token`}\r\n      cancelText={t`Later`}\r\n      connectWalletText={t`Connect wallet to issue`}\r\n      onOk={executeIssueTokensTx}\r\n      onCancel={() => onClose()}\r\n      confirmLoading={loading}\r\n      transactionPending={transactionPending}\r\n    >\r\n      <p>\r\n        {!isNewDeploy ? (\r\n          <Trans>\r\n            Issue an ERC-20 to be used as this project's token. Once issued,\r\n            anyone can claim their existing token balance in the new token.\r\n          </Trans>\r\n        ) : (\r\n          <Trans>\r\n            Would you like to issue an ERC-20 token to be used as this project's\r\n            token?\r\n          </Trans>\r\n        )}\r\n      </p>\r\n      <Form form={form} layout=\"vertical\">\r\n        <Form.Item\r\n          name=\"name\"\r\n          label={t`Token name`}\r\n          rules={[{ required: true, message: t`Token name is required` }]}\r\n        >\r\n          <Input placeholder={t`Project Token`} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"symbol\"\r\n          label={t`Token symbol`}\r\n          rules={[{ required: true, message: t`Token symbol is required` }]}\r\n        >\r\n          <Input\r\n            placeholder=\"PRJ\"\r\n            onChange={e =>\r\n              form.setFieldsValue({ symbol: e.target.value.toUpperCase() })\r\n            }\r\n          />\r\n        </Form.Item>\r\n      </Form>\r\n    </TransactionModal>\r\n  )\r\n}\r\n","import { t, Trans } from '@lingui/macro'\r\nimport { Modal, Space, Tooltip } from 'antd'\r\nimport ExternalLink from 'components/ExternalLink'\r\nimport RichButton from 'components/RichButton'\r\nimport { PropsWithChildren, useState } from 'react'\r\nimport { tokenSymbolText } from 'utils/tokenSymbolText'\r\nimport * as constants from '@ethersproject/constants'\r\n\r\nconst BURN_DEFINITION_LINK =\r\n  'https://www.investopedia.com/tech/cryptocurrency-burning-can-it-manage-inflation/'\r\n\r\nconst BurnTokensHelp = () => {\r\n  return (\r\n    <Trans>\r\n      <ExternalLink href={BURN_DEFINITION_LINK}>Learn more</ExternalLink> about\r\n      burning tokens.\r\n    </Trans>\r\n  )\r\n}\r\n\r\nconst RedeemButtonTooltip = ({\r\n  buttonDisabled,\r\n  children,\r\n}: PropsWithChildren<{\r\n  buttonDisabled: boolean\r\n}>) => {\r\n  return (\r\n    <Tooltip\r\n      title={\r\n        buttonDisabled ? (\r\n          <Trans>\r\n            Cannot redeem tokens for ETH because this project has no overflow.\r\n          </Trans>\r\n        ) : (\r\n          <BurnTokensHelp />\r\n        )\r\n      }\r\n      placement=\"right\"\r\n    >\r\n      {children}\r\n    </Tooltip>\r\n  )\r\n}\r\n\r\ntype ModalProps = {\r\n  visible?: boolean\r\n  onCancel?: VoidFunction\r\n  onConfirmed?: VoidFunction\r\n}\r\n\r\nexport default function ManageTokensModal({\r\n  onCancel,\r\n  visible,\r\n  projectAllowsMint,\r\n  userHasMintPermission,\r\n  hasOverflow,\r\n  tokenSymbol,\r\n  tokenAddress,\r\n  RedeemModal,\r\n  ClaimTokensModal,\r\n  MintModal,\r\n}: {\r\n  userHasMintPermission: boolean\r\n  projectAllowsMint: boolean\r\n  onCancel?: VoidFunction\r\n  visible?: boolean\r\n  hasOverflow: boolean | undefined\r\n  tokenSymbol: string | undefined\r\n  tokenAddress: string | undefined\r\n\r\n  RedeemModal: (props: ModalProps) => JSX.Element | null\r\n  ClaimTokensModal: (props: ModalProps) => JSX.Element | null\r\n  MintModal: (props: ModalProps) => JSX.Element | null\r\n}) {\r\n  const [redeemModalVisible, setRedeemModalVisible] = useState<boolean>(false)\r\n  const [unstakeModalVisible, setUnstakeModalVisible] = useState<boolean>()\r\n  const [mintModalVisible, setMintModalVisible] = useState<boolean>()\r\n\r\n  const tokensLabel = tokenSymbolText({\r\n    tokenSymbol: tokenSymbol,\r\n    capitalize: false,\r\n    plural: true,\r\n  })\r\n\r\n  const redeemDisabled = !hasOverflow\r\n  const hasIssuedTokens = tokenAddress && tokenAddress !== constants.AddressZero\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={t`Manage your ${tokenSymbolText({\r\n          tokenSymbol: tokenSymbol,\r\n          capitalize: false,\r\n          plural: true,\r\n          includeTokenWord: true,\r\n        })}`}\r\n        visible={visible}\r\n        onCancel={onCancel}\r\n        okButtonProps={{ hidden: true }}\r\n        centered\r\n      >\r\n        <Space direction=\"vertical\" style={{ width: '100%' }}>\r\n          <RedeemButtonTooltip buttonDisabled={redeemDisabled}>\r\n            <RichButton\r\n              heading={<Trans>Redeem {tokensLabel} for ETH</Trans>}\r\n              description={\r\n                <Trans>\r\n                  Redeem your {tokensLabel} for a portion of the project's\r\n                  overflow. Any {tokensLabel} you redeem will be burned.\r\n                </Trans>\r\n              }\r\n              onClick={() => setRedeemModalVisible(true)}\r\n              disabled={redeemDisabled}\r\n            />\r\n          </RedeemButtonTooltip>\r\n\r\n          {redeemDisabled && (\r\n            <Tooltip title={<BurnTokensHelp />} placement=\"right\">\r\n              <RichButton\r\n                heading={<Trans>Burn {tokensLabel}</Trans>}\r\n                description={\r\n                  <Trans>\r\n                    Burn your {tokensLabel}. You won't receive ETH in return\r\n                    because this project has no overflow.\r\n                  </Trans>\r\n                }\r\n                onClick={() => setRedeemModalVisible(true)}\r\n              />\r\n            </Tooltip>\r\n          )}\r\n\r\n          {hasIssuedTokens && (\r\n            <RichButton\r\n              heading={<Trans>Claim {tokensLabel} as ERC-20</Trans>}\r\n              description={\r\n                <Trans>\r\n                  Move your {tokensLabel} from the Juicebox contract to your\r\n                  wallet.\r\n                </Trans>\r\n              }\r\n              onClick={() => setUnstakeModalVisible(true)}\r\n            />\r\n          )}\r\n\r\n          {userHasMintPermission && projectAllowsMint && (\r\n            <Tooltip\r\n              title={\r\n                <Trans>\r\n                  Token minting is only available for V1.1 projects. Token\r\n                  minting can be enabled or disabled by reconfiguring the\r\n                  project's funding cycle.\r\n                </Trans>\r\n              }\r\n              placement=\"right\"\r\n            >\r\n              <RichButton\r\n                heading={<Trans>Mint {tokensLabel}</Trans>}\r\n                description={\r\n                  <Trans>\r\n                    Mint new {tokensLabel} into an account. Only a project's\r\n                    owner, a designated operator, or one of its terminal's\r\n                    delegates can mint its tokens.\r\n                  </Trans>\r\n                }\r\n                onClick={() => setMintModalVisible(true)}\r\n                disabled={!projectAllowsMint}\r\n              />\r\n            </Tooltip>\r\n          )}\r\n        </Space>\r\n      </Modal>\r\n\r\n      <RedeemModal\r\n        visible={redeemModalVisible}\r\n        onCancel={() => setRedeemModalVisible(false)}\r\n        onConfirmed={() => window.location.reload()}\r\n      />\r\n      <ClaimTokensModal\r\n        visible={unstakeModalVisible}\r\n        onCancel={() => setUnstakeModalVisible(false)}\r\n        onConfirmed={() => window.location.reload()}\r\n      />\r\n      <MintModal\r\n        visible={mintModalVisible}\r\n        onCancel={() => setMintModalVisible(false)}\r\n        onConfirmed={() => window.location.reload()}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","export enum V1BallotState {\r\n  'Approved' = 0,\r\n  'Active' = 1,\r\n  'Failed' = 2,\r\n  'Standby' = 3,\r\n}\r\n\r\nexport enum V2BallotState {\r\n  'Active' = 0,\r\n  'Approved' = 1,\r\n  'Failed' = 2,\r\n}\r\n\r\nexport type BallotStrategy = {\r\n  address: string\r\n  name: string\r\n  description?: string\r\n  unknown?: boolean\r\n  durationSeconds?: number // Length in seconds (only applies to 0, 3 and 7 day ballot)\r\n}\r\n","import { Modal } from 'antd'\r\nimport { t, Trans } from '@lingui/macro'\r\nimport ExternalLink from 'components/ExternalLink'\r\n\r\nexport default function PayWarningModal({\r\n  visible,\r\n  onOk,\r\n  onCancel,\r\n}: {\r\n  visible: boolean\r\n  onOk: VoidFunction\r\n  onCancel: VoidFunction\r\n}) {\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      onOk={onOk}\r\n      onCancel={onCancel}\r\n      okText={t`I understand`}\r\n      cancelButtonProps={{ hidden: true }}\r\n      width={400}\r\n    >\r\n      <h2>\r\n        <Trans>Heads up</Trans>\r\n      </h2>\r\n      <p style={{ fontWeight: 500 }}>\r\n        <Trans>\r\n          <ExternalLink href=\"https://github.com/jbx-protocol/juice-contracts\">\r\n            Juicebox contracts\r\n          </ExternalLink>{' '}\r\n          are unaudited, and may be vulnerable to bugs or hacks. All funds moved\r\n          through Juicebox could be lost or stolen. JuiceboxDAO and Peel are not\r\n          liable for any losses by projects or their supporters.\r\n        </Trans>\r\n      </p>\r\n    </Modal>\r\n  )\r\n}\r\n","import { useContext } from 'react'\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons'\r\n\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { Trans } from '@lingui/macro'\r\n\r\nimport {\r\n  FundingCycleRiskFlags,\r\n  FUNDING_CYCLE_WARNING_TEXT,\r\n} from 'constants/fundingWarningText'\r\n\r\nexport default function ProjectRiskNotice({\r\n  unsafeProperties,\r\n}: {\r\n  unsafeProperties: FundingCycleRiskFlags\r\n}) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  const unsafePropertyKeys = Object.keys(\r\n    unsafeProperties,\r\n  ) as (keyof FundingCycleRiskFlags)[]\r\n\r\n  const warnings = unsafePropertyKeys\r\n    .filter(k => unsafeProperties[k] === true)\r\n    .map(k => FUNDING_CYCLE_WARNING_TEXT()[k])\r\n\r\n  return (\r\n    <div style={{ backgroundColor: colors.background.l1, padding: '1rem' }}>\r\n      <h4 style={{ color: colors.text.primary, fontWeight: 600 }}>\r\n        <ExclamationCircleOutlined /> <Trans>Potential risks</Trans>\r\n      </h4>\r\n      <p style={{ color: colors.text.secondary }}>\r\n        <Trans>\r\n          Some properties of the project's current funding cycle may indicate\r\n          risk for contributors.\r\n        </Trans>\r\n      </p>\r\n      <ul>\r\n        {warnings.map((text, i) => (\r\n          <li key={i}>{text}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n","import { parseEther } from '@ethersproject/units'\r\nimport { Trans } from '@lingui/macro'\r\nimport { Descriptions } from 'antd'\r\nimport CurrencySymbol from 'components/CurrencySymbol'\r\n\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { V1CurrencyOption } from 'models/v1/currencyOption'\r\nimport { V1FundingCycle } from 'models/v1/fundingCycle'\r\nimport { useContext } from 'react'\r\nimport { formatDate } from 'utils/formatDate'\r\nimport {\r\n  formatWad,\r\n  perbicentToPercent,\r\n  permilleToPercent,\r\n} from 'utils/formatNumber'\r\nimport {\r\n  decodeFundingCycleMetadata,\r\n  getUnsafeV1FundingCycleProperties,\r\n  hasFundingTarget,\r\n  isRecurring,\r\n} from 'utils/v1/fundingCycle'\r\nimport { weightedRate } from 'utils/math'\r\nimport { tokenSymbolText } from 'utils/tokenSymbolText'\r\n\r\nimport { V1CurrencyName } from 'utils/v1/currency'\r\n\r\nimport TooltipLabel from 'components/TooltipLabel'\r\n\r\nimport FundingCycleDetailWarning from 'components/Project/FundingCycleDetailWarning'\r\nimport EtherscanLink from 'components/EtherscanLink'\r\n\r\nimport { getBallotStrategyByAddress } from 'constants/v1/ballotStrategies/getBallotStrategiesByAddress'\r\nimport { FUNDING_CYCLE_WARNING_TEXT } from 'constants/fundingWarningText'\r\nimport { SECONDS_IN_DAY } from 'constants/numbers'\r\n\r\nexport default function FundingCycleDetails({\r\n  fundingCycle,\r\n}: {\r\n  fundingCycle: V1FundingCycle | undefined\r\n}) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  const { tokenSymbol } = useContext(V1ProjectContext)\r\n\r\n  if (!fundingCycle) return null\r\n\r\n  const formattedStartTime = formatDate(fundingCycle.start.mul(1000))\r\n\r\n  const formattedEndTime = formatDate(\r\n    fundingCycle.start.add(fundingCycle.duration.mul(SECONDS_IN_DAY)).mul(1000),\r\n  )\r\n\r\n  const metadata = decodeFundingCycleMetadata(fundingCycle.metadata)\r\n  const fcReservedRate = metadata?.reservedRate\r\n\r\n  const ballotStrategy = getBallotStrategyByAddress(fundingCycle.ballot)\r\n  const unsafeFundingCycleProperties =\r\n    getUnsafeV1FundingCycleProperties(fundingCycle)\r\n\r\n  const tokenSymbolPluralCap = tokenSymbolText({\r\n    tokenSymbol,\r\n    capitalize: true,\r\n    plural: true,\r\n  })\r\n\r\n  const tokenSymbolPlural = tokenSymbolText({\r\n    tokenSymbol,\r\n    capitalize: false,\r\n    plural: true,\r\n  })\r\n\r\n  const ReservedRateText = () => {\r\n    const payerRate = formatWad(\r\n      weightedRate(\r\n        fundingCycle?.weight,\r\n        fcReservedRate,\r\n        parseEther('1'),\r\n        'payer',\r\n      ),\r\n      {\r\n        precision: 0,\r\n      },\r\n    )\r\n\r\n    const reservedRate = formatWad(\r\n      weightedRate(\r\n        fundingCycle?.weight,\r\n        fcReservedRate,\r\n        parseEther('1'),\r\n        'reserved',\r\n      ),\r\n      {\r\n        precision: 0,\r\n      },\r\n    )\r\n\r\n    const withReservedRate = (\r\n      <Trans>\r\n        {payerRate} (+ {reservedRate} reserved) {tokenSymbolPlural}/ETH\r\n      </Trans>\r\n    )\r\n    const withoutReservedRate = (\r\n      <Trans>\r\n        {payerRate} {tokenSymbolPlural}/ETH\r\n      </Trans>\r\n    )\r\n\r\n    return (\r\n      <span>{fcReservedRate ? withReservedRate : withoutReservedRate}</span>\r\n    )\r\n  }\r\n\r\n  const riskWarningText = FUNDING_CYCLE_WARNING_TEXT()\r\n\r\n  return (\r\n    <div>\r\n      <Descriptions\r\n        labelStyle={{ fontWeight: 600 }}\r\n        size=\"small\"\r\n        column={{ xs: 1, sm: 1, md: 1, lg: 1, xl: 1, xxl: 2 }}\r\n      >\r\n        <Descriptions.Item label={<Trans>Target</Trans>}>\r\n          {hasFundingTarget(fundingCycle) ? (\r\n            <>\r\n              <CurrencySymbol\r\n                currency={V1CurrencyName(\r\n                  fundingCycle.currency.toNumber() as V1CurrencyOption,\r\n                )}\r\n              />\r\n              {formatWad(fundingCycle.target)}\r\n            </>\r\n          ) : (\r\n            <Trans>No target</Trans>\r\n          )}\r\n        </Descriptions.Item>\r\n\r\n        <Descriptions.Item label={<Trans>Duration</Trans>}>\r\n          {fundingCycle.duration.gt(0) ? (\r\n            <Trans>{fundingCycle.duration.toString()} days</Trans>\r\n          ) : (\r\n            <FundingCycleDetailWarning\r\n              showWarning={true}\r\n              tooltipTitle={riskWarningText.duration}\r\n            >\r\n              <Trans>Not set</Trans>\r\n            </FundingCycleDetailWarning>\r\n          )}\r\n        </Descriptions.Item>\r\n\r\n        {fundingCycle.duration.gt(0) && (\r\n          <Descriptions.Item label={<Trans>Start</Trans>}>\r\n            {formattedStartTime}\r\n          </Descriptions.Item>\r\n        )}\r\n\r\n        {fundingCycle.duration.gt(0) && (\r\n          <Descriptions.Item label={<Trans>End</Trans>}>\r\n            {formattedEndTime}\r\n          </Descriptions.Item>\r\n        )}\r\n\r\n        {isRecurring(fundingCycle) && (\r\n          <Descriptions.Item\r\n            label={\r\n              <TooltipLabel\r\n                label={<Trans>Discount rate</Trans>}\r\n                tip={\r\n                  <Trans>\r\n                    The ratio of tokens rewarded per payment amount will\r\n                    decrease by this percentage with each new funding cycle. A\r\n                    higher discount rate will incentivize supporters to pay your\r\n                    project earlier than later.\r\n                  </Trans>\r\n                }\r\n              />\r\n            }\r\n          >\r\n            {permilleToPercent(fundingCycle.discountRate)}%\r\n          </Descriptions.Item>\r\n        )}\r\n\r\n        {isRecurring(fundingCycle) && (\r\n          <Descriptions.Item\r\n            span={2}\r\n            label={\r\n              <TooltipLabel\r\n                label={<Trans>Bonding curve rate</Trans>}\r\n                tip={\r\n                  <Trans>\r\n                    This rate determines the amount of overflow that each token\r\n                    can be redeemed for at any given time. On a lower bonding\r\n                    curve, redeeming a token increases the value of each\r\n                    remaining token, creating an incentive to hold tokens longer\r\n                    than others. A bonding curve of 100% means all tokens will\r\n                    have equal value regardless of when they are redeemed.\r\n                  </Trans>\r\n                }\r\n              />\r\n            }\r\n          >\r\n            {perbicentToPercent(metadata?.bondingCurveRate)}%\r\n          </Descriptions.Item>\r\n        )}\r\n\r\n        <Descriptions.Item\r\n          label={\r\n            <TooltipLabel\r\n              label={<Trans>Reserved {tokenSymbolPlural}</Trans>}\r\n              tip={\r\n                <Trans>\r\n                  Whenever someone pays your project, this percentage of the\r\n                  newly minted tokens will be reserved and the rest will go to\r\n                  the payer. Reserve tokens are reserved for the project owner\r\n                  by default, but can also be allocated to other wallet\r\n                  addresses by the owner. Once tokens are reserved, anyone can\r\n                  \"mint\" them, which distributes them to their intended\r\n                  receivers.\r\n                </Trans>\r\n              }\r\n            />\r\n          }\r\n        >\r\n          <FundingCycleDetailWarning\r\n            showWarning={unsafeFundingCycleProperties.metadataReservedRate}\r\n            tooltipTitle={riskWarningText.metadataReservedRate}\r\n          >\r\n            {perbicentToPercent(metadata?.reservedRate)}%\r\n          </FundingCycleDetailWarning>\r\n        </Descriptions.Item>\r\n\r\n        <Descriptions.Item\r\n          label={\r\n            <TooltipLabel\r\n              label={<Trans>Contributor rate</Trans>}\r\n              tip={\r\n                <Trans>\r\n                  {tokenSymbolPluralCap} received per ETH paid to the treasury.\r\n                  This can change over time according to the discount rate and\r\n                  reserved tokens amount of future funding cycles.\r\n                </Trans>\r\n              }\r\n            />\r\n          }\r\n          span={2}\r\n          contentStyle={{ minWidth: '10em' }}\r\n        >\r\n          <ReservedRateText />\r\n        </Descriptions.Item>\r\n\r\n        <Descriptions.Item\r\n          span={2}\r\n          label={\r\n            <TooltipLabel\r\n              label={<Trans>Token minting</Trans>}\r\n              tip={\r\n                <Trans>\r\n                  When token minting is allowed, the owner of this project has\r\n                  permission to mint any number of tokens to any address at\r\n                  their discretion. This has the effect of diluting all current\r\n                  token holders, without increasing the project's treasury\r\n                  balance. The project owner can reconfigure this along with all\r\n                  other properties of the funding cycle.\r\n                </Trans>\r\n              }\r\n            />\r\n          }\r\n        >\r\n          {metadata?.ticketPrintingIsAllowed ? (\r\n            <FundingCycleDetailWarning\r\n              showWarning={true}\r\n              tooltipTitle={riskWarningText.allowMinting}\r\n            >\r\n              <Trans>Allowed</Trans>\r\n            </FundingCycleDetailWarning>\r\n          ) : (\r\n            <Trans>Disabled</Trans>\r\n          )}\r\n        </Descriptions.Item>\r\n\r\n        <Descriptions.Item\r\n          span={2}\r\n          label={<TooltipLabel label={<Trans>Payments</Trans>} />}\r\n        >\r\n          {metadata?.payIsPaused ? (\r\n            <Trans>Paused</Trans>\r\n          ) : (\r\n            <Trans>Enabled</Trans>\r\n          )}\r\n        </Descriptions.Item>\r\n      </Descriptions>\r\n\r\n      <div>\r\n        <span style={{ fontWeight: 600, color: colors.text.secondary }}>\r\n          <TooltipLabel\r\n            label={<Trans>Reconfiguration strategy</Trans>}\r\n            tip={\r\n              <Trans>\r\n                Rules for determining how funding cycles can be reconfigured\r\n              </Trans>\r\n            }\r\n          />\r\n          :\r\n        </span>{' '}\r\n        <FundingCycleDetailWarning\r\n          showWarning={unsafeFundingCycleProperties.ballot}\r\n          tooltipTitle={riskWarningText.ballot}\r\n        >\r\n          {ballotStrategy.name}\r\n        </FundingCycleDetailWarning>\r\n        <div style={{ color: colors.text.secondary }}>\r\n          <div style={{ fontSize: '0.7rem' }}>\r\n            <Trans>\r\n              Address:{' '}\r\n              <EtherscanLink value={ballotStrategy.address} type=\"address\" />\r\n            </Trans>\r\n            <br />\r\n            {ballotStrategy.description}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import FundingCycleDetailsCard from 'components/Project/FundingCycleDetailsCard'\r\n\r\nimport { V1FundingCycle } from 'models/v1/fundingCycle'\r\n\r\nimport { fundingCycleRiskCount, isRecurring } from 'utils/v1/fundingCycle'\r\n\r\nimport { SECONDS_IN_DAY } from 'constants/numbers'\r\n\r\nimport FundingCycleDetails from './FundingCycleDetails'\r\n\r\nexport default function FundingCyclePreview({\r\n  fundingCycle,\r\n  expand,\r\n}: {\r\n  fundingCycle: V1FundingCycle | undefined\r\n  expand?: boolean\r\n}) {\r\n  if (!fundingCycle) return null\r\n\r\n  return (\r\n    <FundingCycleDetailsCard\r\n      fundingCycleDetails={<FundingCycleDetails fundingCycle={fundingCycle} />}\r\n      fundingCycleDurationSeconds={fundingCycle.duration.mul(SECONDS_IN_DAY)}\r\n      fundingCycleNumber={fundingCycle.number}\r\n      fundingCycleStartTime={fundingCycle.start}\r\n      isFundingCycleRecurring={isRecurring(fundingCycle)}\r\n      fundingCycleRiskCount={fundingCycleRiskCount(fundingCycle)}\r\n      expand={expand}\r\n    />\r\n  )\r\n}\r\n","import { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { BigNumber, BigNumberish } from '@ethersproject/bignumber'\r\nimport { V1ContractName } from 'models/v1/contracts'\r\nimport { useContext, useMemo } from 'react'\r\nimport { bigNumbersDiff } from 'utils/bigNumbers'\r\n\r\nimport useContractReader from './ContractReader'\r\n\r\n/** Returns supply of reserved tokens for project in current context, using provided `reservedRate` argument. */\r\nexport default function useReservedTokensOfProject(\r\n  reservedRate: BigNumberish | undefined,\r\n) {\r\n  const { projectId, terminal } = useContext(V1ProjectContext)\r\n\r\n  const _projectId = BigNumber.from(projectId).toHexString()\r\n\r\n  return useContractReader<BigNumber>({\r\n    contract: terminal?.name,\r\n    functionName: 'reservedTicketBalanceOf',\r\n    args:\r\n      projectId && reservedRate\r\n        ? [_projectId, BigNumber.from(reservedRate).toHexString()]\r\n        : null,\r\n    valueDidChange: bigNumbersDiff,\r\n    updateOn: useMemo(\r\n      () => [\r\n        {\r\n          contract: terminal?.name,\r\n          eventName: 'Pay',\r\n          topics: _projectId ? [[], _projectId] : undefined,\r\n        },\r\n        {\r\n          contract: terminal?.name,\r\n          eventName: 'PrintTickets',\r\n          topics: _projectId ? [_projectId] : undefined,\r\n        },\r\n        {\r\n          contract: V1ContractName.TicketBooth,\r\n          eventName: 'Redeem',\r\n          topics: _projectId ? [_projectId] : undefined,\r\n        },\r\n        {\r\n          contract: terminal?.name,\r\n          eventName: 'PrintReserveTickets',\r\n          topics: _projectId ? [[], _projectId] : undefined,\r\n        },\r\n      ],\r\n      [_projectId, terminal?.name],\r\n    ),\r\n  })\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { Modal, Space } from 'antd'\r\nimport FormattedAddress from 'components/FormattedAddress'\r\nimport TicketModsList from 'components/v1/shared/TicketModsList'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport useReservedTokensOfProject from 'hooks/v1/contractReader/ReservedTokensOfProject'\r\nimport { useDistributeTokensTx } from 'hooks/v1/transactor/DistributeTokensTx'\r\nimport { useContext, useState } from 'react'\r\nimport { formatWad } from 'utils/formatNumber'\r\nimport { decodeFundingCycleMetadata } from 'utils/v1/fundingCycle'\r\nimport { tokenSymbolText } from 'utils/tokenSymbolText'\r\n\r\nexport default function DistributeTokensModal({\r\n  visible,\r\n  onCancel,\r\n  onConfirmed,\r\n  reservedRate,\r\n}: {\r\n  visible?: boolean\r\n  onCancel?: VoidFunction\r\n  onConfirmed?: VoidFunction\r\n  reservedRate: number\r\n}) {\r\n  const [loading, setLoading] = useState<boolean>()\r\n  const { tokenSymbol, currentFC, projectId, currentTicketMods, owner } =\r\n    useContext(V1ProjectContext)\r\n  const distributeTokensTx = useDistributeTokensTx()\r\n\r\n  const metadata = decodeFundingCycleMetadata(currentFC?.metadata)\r\n\r\n  const reservedTokens = useReservedTokensOfProject(metadata?.reservedRate)\r\n\r\n  function distribute() {\r\n    setLoading(true)\r\n\r\n    distributeTokensTx(undefined, {\r\n      onDone: () => setLoading(false),\r\n      onConfirmed: () => onConfirmed && onConfirmed(),\r\n    })\r\n  }\r\n\r\n  const reservedTokensFormatted = formatWad(reservedTokens, { precision: 0 })\r\n\r\n  return (\r\n    <Modal\r\n      title={`Distribute reserved ${tokenSymbolText({\r\n        tokenSymbol: tokenSymbol,\r\n        capitalize: false,\r\n        plural: true,\r\n      })}`}\r\n      visible={visible}\r\n      onOk={distribute}\r\n      okText={`Distribute ${tokenSymbolText({\r\n        tokenSymbol: tokenSymbol,\r\n        capitalize: false,\r\n        plural: true,\r\n      })}`}\r\n      confirmLoading={loading}\r\n      onCancel={onCancel}\r\n      okButtonProps={{ disabled: !reservedTokens?.gt(0) }}\r\n      width={640}\r\n      centered={true}\r\n    >\r\n      <Space direction=\"vertical\" style={{ width: '100%' }} size=\"large\">\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          <Trans>Available:</Trans>{' '}\r\n          <div>\r\n            {tokenSymbol\r\n              ? `${reservedTokensFormatted} ${tokenSymbol}`\r\n              : reservedTokensFormatted}\r\n          </div>\r\n        </div>\r\n        {currentTicketMods?.length ? (\r\n          <div>\r\n            <h4>\r\n              <Trans>Funds will be distributed to:</Trans>\r\n            </h4>\r\n            <TicketModsList\r\n              total={reservedTokens}\r\n              mods={currentTicketMods}\r\n              fundingCycle={currentFC}\r\n              projectId={projectId}\r\n              reservedRate={reservedRate}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <p>\r\n            <Trans>\r\n              All{' '}\r\n              {tokenSymbolText({\r\n                tokenSymbol: tokenSymbol,\r\n                capitalize: false,\r\n                plural: true,\r\n              })}{' '}\r\n              will go to the project owner:\r\n            </Trans>{' '}\r\n            <FormattedAddress address={owner} />\r\n          </p>\r\n        )}\r\n      </Space>\r\n    </Modal>\r\n  )\r\n}\r\n","import { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { V1UserContext } from 'contexts/v1/userContext'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { useContext } from 'react'\r\n\r\nimport { TransactorInstance } from '../../Transactor'\r\n\r\nexport function useDistributeTokensTx(): TransactorInstance {\r\n  const { transactor, contracts } = useContext(V1UserContext)\r\n  const { terminal, projectId } = useContext(V1ProjectContext)\r\n\r\n  return (_, txOpts) => {\r\n    if (!transactor || !terminal || !projectId || !contracts) {\r\n      txOpts?.onDone?.()\r\n      return Promise.resolve(false)\r\n    }\r\n\r\n    return transactor(\r\n      terminal.version === '1.1'\r\n        ? contracts.TerminalV1_1\r\n        : contracts.TerminalV1,\r\n      'printReservedTickets',\r\n      [BigNumber.from(projectId).toHexString()],\r\n      txOpts,\r\n    )\r\n  }\r\n}\r\n","import { Button } from 'antd'\r\nimport { t, Trans } from '@lingui/macro'\r\nimport TooltipLabel from 'components/TooltipLabel'\r\n\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport useReservedTokensOfProject from 'hooks/v1/contractReader/ReservedTokensOfProject'\r\nimport { V1FundingCycle } from 'models/v1/fundingCycle'\r\nimport { TicketMod } from 'models/mods'\r\nimport { NetworkName } from 'models/network-name'\r\nimport { useContext, useState } from 'react'\r\nimport { formatWad, perbicentToPercent } from 'utils/formatNumber'\r\nimport { decodeFundingCycleMetadata } from 'utils/v1/fundingCycle'\r\nimport { tokenSymbolText } from 'utils/tokenSymbolText'\r\n\r\nimport { readNetwork } from 'constants/networks'\r\n\r\nimport DistributeTokensModal from './modals/DistributeTokensModal'\r\nimport TicketModsList from '../TicketModsList'\r\nimport { V1_PROJECT_IDS } from 'constants/v1/projectIds'\r\n\r\nexport default function ReservedTokens({\r\n  fundingCycle,\r\n  ticketMods,\r\n  hideActions,\r\n}: {\r\n  fundingCycle: V1FundingCycle | undefined\r\n  ticketMods: TicketMod[] | undefined\r\n  hideActions?: boolean\r\n}) {\r\n  const [modalIsVisible, setModalIsVisible] = useState<boolean>()\r\n\r\n  const { projectId, tokenSymbol, isPreviewMode } = useContext(V1ProjectContext)\r\n\r\n  const metadata = decodeFundingCycleMetadata(fundingCycle?.metadata)\r\n\r\n  const reservedTokens = useReservedTokensOfProject(metadata?.reservedRate)\r\n\r\n  const tokenTextPlural = tokenSymbolText({ tokenSymbol, plural: true })\r\n\r\n  const isConstitutionDAO =\r\n    readNetwork.name === NetworkName.mainnet &&\r\n    projectId === V1_PROJECT_IDS.CONSTITUTION_DAO\r\n\r\n  const isSharkDAO =\r\n    readNetwork.name === NetworkName.mainnet &&\r\n    projectId === V1_PROJECT_IDS.SHARK_DAO\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <TooltipLabel\r\n          label={\r\n            <h4 style={{ display: 'inline-block' }}>\r\n              <Trans>\r\n                Reserved{' '}\r\n                {tokenSymbolText({\r\n                  tokenSymbol: tokenSymbol,\r\n                  capitalize: false,\r\n                  plural: true,\r\n                })}\r\n              </Trans>{' '}\r\n              ({perbicentToPercent(metadata?.reservedRate)}%)\r\n            </h4>\r\n          }\r\n          tip={t`A project can reserve a percentage of the tokens minted from payments it receives. Reserved tokens can be distributed according to the allocation below at any time.`}\r\n        />\r\n      </div>\r\n\r\n      {metadata?.reservedRate ? (\r\n        <TicketModsList\r\n          mods={ticketMods}\r\n          fundingCycle={fundingCycle}\r\n          projectId={projectId}\r\n          reservedRate={parseFloat(perbicentToPercent(metadata?.reservedRate))}\r\n        />\r\n      ) : null}\r\n\r\n      {!hideActions && !isConstitutionDAO && !isSharkDAO && (\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'baseline',\r\n            marginBottom: 20,\r\n          }}\r\n        >\r\n          <span>\r\n            <Trans>\r\n              {formatWad(reservedTokens, { precision: 0 }) || 0}{' '}\r\n              {tokenTextPlural} reserved\r\n            </Trans>\r\n          </span>\r\n          <Button\r\n            style={{ marginLeft: 10 }}\r\n            size=\"small\"\r\n            onClick={() => setModalIsVisible(true)}\r\n            disabled={isPreviewMode}\r\n          >\r\n            <Trans>Distribute {tokenTextPlural}</Trans>\r\n          </Button>\r\n\r\n          <DistributeTokensModal\r\n            visible={modalIsVisible}\r\n            reservedRate={parseFloat(\r\n              perbicentToPercent(metadata?.reservedRate),\r\n            )}\r\n            onCancel={() => setModalIsVisible(false)}\r\n            onConfirmed={() => setModalIsVisible(false)}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import { Space } from 'antd'\r\nimport Modal from 'antd/lib/modal/Modal'\r\nimport { t, Trans } from '@lingui/macro'\r\n\r\nimport CurrencySymbol from 'components/CurrencySymbol'\r\nimport FormattedAddress from 'components/FormattedAddress'\r\nimport InputAccessoryButton from 'components/InputAccessoryButton'\r\nimport FormattedNumberInput from 'components/inputs/FormattedNumberInput'\r\nimport PayoutModsList from 'components/v1/shared/PayoutModsList'\r\n\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { useCurrencyConverter } from 'hooks/CurrencyConverter'\r\nimport { useTapProjectTx } from 'hooks/v1/transactor/TapProjectTx'\r\nimport { V1CurrencyOption } from 'models/v1/currencyOption'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport { V1CurrencyName } from 'utils/v1/currency'\r\nimport {\r\n  formatWad,\r\n  perbicentToPercent,\r\n  fromWad,\r\n  parseWad,\r\n} from 'utils/formatNumber'\r\nimport { amountSubFee, feeForAmount } from 'utils/math'\r\n\r\nimport { V1_CURRENCY_USD } from 'constants/v1/currency'\r\n\r\nexport default function WithdrawModal({\r\n  visible,\r\n  onCancel,\r\n  onConfirmed,\r\n}: {\r\n  visible?: boolean\r\n  onCancel?: VoidFunction\r\n  onConfirmed?: VoidFunction\r\n}) {\r\n  const [loading, setLoading] = useState<boolean>()\r\n  const [tapAmount, setTapAmount] = useState<string>()\r\n  const { balanceInCurrency, projectId, currentFC, currentPayoutMods, owner } =\r\n    useContext(V1ProjectContext)\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  const tapProjectTx = useTapProjectTx()\r\n\r\n  const converter = useCurrencyConverter()\r\n\r\n  useEffect(() => {\r\n    if (!currentFC) return\r\n\r\n    const untapped = currentFC.target.sub(currentFC.tapped)\r\n    const withdrawable = balanceInCurrency?.gt(untapped)\r\n      ? untapped\r\n      : balanceInCurrency\r\n\r\n    setTapAmount(fromWad(withdrawable))\r\n  }, [balanceInCurrency, currentFC])\r\n\r\n  if (!currentFC) return null\r\n\r\n  const currentFCCurrency = V1CurrencyName(\r\n    currentFC.currency.toNumber() as V1CurrencyOption,\r\n  )\r\n  const untapped = currentFC.target.sub(currentFC.tapped)\r\n\r\n  const withdrawable = balanceInCurrency?.gt(untapped)\r\n    ? untapped\r\n    : balanceInCurrency\r\n\r\n  function tap() {\r\n    if (!currentFC || !tapAmount) return\r\n\r\n    const minAmount = (\r\n      currentFC.currency.eq(V1_CURRENCY_USD)\r\n        ? converter.usdToWei(tapAmount)\r\n        : parseWad(tapAmount)\r\n    )?.sub(1e12) // Arbitrary value subtracted\r\n\r\n    if (!minAmount) return\r\n\r\n    setLoading(true)\r\n\r\n    tapProjectTx(\r\n      {\r\n        tapAmount: parseWad(tapAmount),\r\n        currency: currentFC.currency.toNumber() as V1CurrencyOption,\r\n        minAmount,\r\n      },\r\n      {\r\n        onDone: () => setLoading(false),\r\n        onConfirmed: () => onConfirmed && onConfirmed(),\r\n      },\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={t`Withdraw funds`}\r\n      visible={visible}\r\n      onOk={tap}\r\n      onCancel={() => {\r\n        setTapAmount(undefined)\r\n        onCancel && onCancel()\r\n      }}\r\n      okButtonProps={{\r\n        disabled: !tapAmount || tapAmount === '0',\r\n      }}\r\n      confirmLoading={loading}\r\n      okText={t`Withdraw`}\r\n      width={640}\r\n    >\r\n      <Space direction=\"vertical\" size=\"large\" style={{ width: '100%' }}>\r\n        <div>\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Trans>Total funds:</Trans>{' '}\r\n            <div>\r\n              <CurrencySymbol currency={currentFCCurrency} />\r\n              {formatWad(withdrawable, { precision: 4 })}\r\n            </div>\r\n          </div>\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <div>\r\n              <Trans>JBX Fee ({perbicentToPercent(currentFC.fee)}%):</Trans>\r\n            </div>\r\n            <div>\r\n              - <CurrencySymbol currency={currentFCCurrency} />\r\n              {formatWad(feeForAmount(withdrawable, currentFC.fee) ?? 0, {\r\n                precision: 4,\r\n              })}\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              fontWeight: 500,\r\n            }}\r\n          >\r\n            <div>\r\n              <Trans>Available after fee:</Trans>\r\n            </div>\r\n            <div>\r\n              <CurrencySymbol currency={currentFCCurrency} />\r\n              {formatWad(amountSubFee(withdrawable, currentFC.fee) ?? 0, {\r\n                precision: 4,\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <FormattedNumberInput\r\n            placeholder=\"0\"\r\n            value={tapAmount}\r\n            onChange={value => setTapAmount(value)}\r\n            accessory={\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                <span\r\n                  style={{\r\n                    marginRight: 8,\r\n                    color: colors.text.primary,\r\n                  }}\r\n                >\r\n                  {V1CurrencyName(\r\n                    currentFC.currency.toNumber() as V1CurrencyOption,\r\n                  )}\r\n                </span>\r\n                <InputAccessoryButton\r\n                  content={t`MAX`}\r\n                  onClick={() => setTapAmount(fromWad(withdrawable))}\r\n                />\r\n              </div>\r\n            }\r\n          />\r\n\r\n          <div style={{ color: colors.text.primary, marginBottom: 10 }}>\r\n            <span style={{ fontWeight: 500 }}>\r\n              <CurrencySymbol currency=\"ETH\" />\r\n              {formatWad(\r\n                amountSubFee(\r\n                  currentFC.currency.eq(V1_CURRENCY_USD)\r\n                    ? converter.usdToWei(tapAmount)\r\n                    : parseWad(tapAmount),\r\n                  currentFC.fee,\r\n                ),\r\n                { precision: 4 },\r\n              )}\r\n            </span>{' '}\r\n            <Trans>\r\n              after {perbicentToPercent(currentFC.fee?.toString())}% JBX fee\r\n            </Trans>\r\n          </div>\r\n        </div>\r\n\r\n        {currentPayoutMods?.length ? (\r\n          <div>\r\n            <h4>\r\n              <Trans>Funds will be distributed to:</Trans>\r\n            </h4>\r\n            <PayoutModsList\r\n              total={amountSubFee(parseWad(tapAmount || '0'), currentFC.fee)}\r\n              mods={currentPayoutMods}\r\n              fundingCycle={currentFC}\r\n              projectId={projectId}\r\n              feePerbicent={currentFC.fee}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <p>\r\n            <CurrencySymbol currency=\"ETH\" />\r\n            <Trans>\r\n              {formatWad(\r\n                amountSubFee(\r\n                  currentFC.currency.eq(V1_CURRENCY_USD)\r\n                    ? converter.usdToWei(tapAmount)\r\n                    : parseWad(tapAmount),\r\n                  currentFC.fee,\r\n                ),\r\n                { precision: 4 },\r\n              )}{' '}\r\n              will go to the project owner: <FormattedAddress address={owner} />\r\n            </Trans>\r\n          </p>\r\n        )}\r\n      </Space>\r\n    </Modal>\r\n  )\r\n}\r\n","import { NetworkContext } from 'contexts/networkContext'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { V1UserContext } from 'contexts/v1/userContext'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { useContext } from 'react'\r\n\r\nimport { V1CurrencyOption } from 'models/v1/currencyOption'\r\n\r\nimport { TransactorInstance } from '../../Transactor'\r\n\r\nexport function useTapProjectTx(): TransactorInstance<{\r\n  tapAmount: BigNumber\r\n  minAmount: BigNumber\r\n  currency: V1CurrencyOption\r\n}> {\r\n  const { transactor, contracts } = useContext(V1UserContext)\r\n  const { userAddress } = useContext(NetworkContext)\r\n  const { projectId, terminal } = useContext(V1ProjectContext)\r\n\r\n  return ({ tapAmount, minAmount, currency }, txOpts) => {\r\n    if (\r\n      !transactor ||\r\n      !userAddress ||\r\n      !projectId ||\r\n      !contracts?.Projects ||\r\n      !terminal?.version\r\n    ) {\r\n      txOpts?.onDone?.()\r\n      return Promise.resolve(false)\r\n    }\r\n\r\n    return transactor(\r\n      terminal.version === '1.1'\r\n        ? contracts.TerminalV1_1\r\n        : contracts.TerminalV1,\r\n      'tap',\r\n      [\r\n        BigNumber.from(projectId).toHexString(),\r\n        tapAmount.toHexString(),\r\n        currency,\r\n        minAmount?.toHexString(),\r\n      ],\r\n      txOpts,\r\n    )\r\n  }\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { Button, Space } from 'antd'\r\nimport WithdrawModal from 'components/v1/shared/FundingCycle/modals/WithdrawModal'\r\nimport TooltipLabel from 'components/TooltipLabel'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { PayoutMod } from 'models/mods'\r\nimport { useContext, useState } from 'react'\r\nimport PayoutModsList from 'components/v1/shared/PayoutModsList'\r\n\r\nimport { hasFundingTarget } from 'utils/v1/fundingCycle'\r\nimport { V1CurrencyName } from 'utils/v1/currency'\r\n\r\nimport { V1CurrencyOption } from 'models/v1/currencyOption'\r\nimport { perbicentToPercent } from 'utils/formatNumber'\r\nimport SpendingStats from 'components/Project/SpendingStats'\r\n\r\nexport default function Spending({\r\n  payoutMods,\r\n}: {\r\n  payoutMods: PayoutMod[] | undefined\r\n}) {\r\n  const { projectId, currentFC, isPreviewMode, balanceInCurrency, owner } =\r\n    useContext(V1ProjectContext)\r\n\r\n  const [withdrawModalVisible, setWithdrawModalVisible] = useState<boolean>()\r\n\r\n  if (!currentFC) return null\r\n\r\n  return (\r\n    <div>\r\n      <Space direction=\"vertical\" size=\"large\" style={{ width: '100%' }}>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'baseline',\r\n          }}\r\n        >\r\n          <SpendingStats\r\n            hasFundingTarget={hasFundingTarget(currentFC)}\r\n            currency={V1CurrencyName(\r\n              currentFC.currency.toNumber() as V1CurrencyOption,\r\n            )}\r\n            projectBalanceInCurrency={balanceInCurrency}\r\n            targetAmount={currentFC.target}\r\n            distributedAmount={currentFC.tapped}\r\n            feePercentage={perbicentToPercent(currentFC.fee)}\r\n            ownerAddress={owner}\r\n          />\r\n\r\n          <Button\r\n            type=\"ghost\"\r\n            size=\"small\"\r\n            onClick={() => setWithdrawModalVisible(true)}\r\n            disabled={isPreviewMode}\r\n          >\r\n            <Trans>Distribute funds</Trans>\r\n          </Button>\r\n        </div>\r\n\r\n        {currentFC.target.gt(0) && (\r\n          <div>\r\n            <TooltipLabel\r\n              label={\r\n                <h4 style={{ display: 'inline-block' }}>\r\n                  <Trans>Funding distribution</Trans>\r\n                </h4>\r\n              }\r\n              tip={\r\n                <Trans>\r\n                  Available funds are distributed according to the payouts\r\n                  below.\r\n                </Trans>\r\n              }\r\n            />\r\n            <PayoutModsList\r\n              mods={payoutMods}\r\n              fundingCycle={currentFC}\r\n              projectId={projectId}\r\n              feePerbicent={currentFC.fee}\r\n            />\r\n          </div>\r\n        )}\r\n      </Space>\r\n\r\n      <WithdrawModal\r\n        visible={withdrawModalVisible}\r\n        onCancel={() => setWithdrawModalVisible(false)}\r\n        onConfirmed={() => setWithdrawModalVisible(false)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import { CardSection } from 'components/CardSection'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { useContext } from 'react'\r\n\r\nimport FundingCyclePreview from './FundingCyclePreview'\r\nimport ReservedTokens from './ReservedTokens'\r\nimport Spending from './Spending'\r\n\r\nexport default function CurrentFundingCycle({\r\n  showCurrentDetail,\r\n}: {\r\n  showCurrentDetail?: boolean\r\n}) {\r\n  const { projectId, currentFC, currentPayoutMods, currentTicketMods } =\r\n    useContext(V1ProjectContext)\r\n\r\n  if (!projectId) return null\r\n\r\n  return (\r\n    <div style={{ position: 'relative' }}>\r\n      <CardSection>\r\n        <FundingCyclePreview\r\n          fundingCycle={currentFC}\r\n          expand={showCurrentDetail}\r\n        />\r\n      </CardSection>\r\n      <CardSection>\r\n        <Spending payoutMods={currentPayoutMods} />\r\n      </CardSection>\r\n      <CardSection>\r\n        <ReservedTokens\r\n          fundingCycle={currentFC}\r\n          ticketMods={currentTicketMods}\r\n        />\r\n      </CardSection>\r\n    </div>\r\n  )\r\n}\r\n","import { CardSection } from 'components/CardSection'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { useContext } from 'react'\r\n\r\nimport ReservedTokens from './ReservedTokens'\r\nimport PayoutModsList from '../PayoutModsList'\r\nimport FundingCycleDetails from './FundingCycleDetails'\r\n\r\nexport default function QueuedFundingCycle() {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  const { projectId, queuedFC, queuedPayoutMods, queuedTicketMods } =\r\n    useContext(V1ProjectContext)\r\n\r\n  if (!projectId) return null\r\n\r\n  return (\r\n    <div>\r\n      {queuedFC?.number.gt(0) ? (\r\n        <div style={{ position: 'relative' }}>\r\n          <CardSection>\r\n            <FundingCycleDetails fundingCycle={queuedFC} />\r\n          </CardSection>\r\n          <CardSection>\r\n            <PayoutModsList\r\n              mods={queuedPayoutMods}\r\n              fundingCycle={queuedFC}\r\n              projectId={projectId}\r\n              feePerbicent={queuedFC.fee}\r\n            />\r\n          </CardSection>\r\n          <CardSection>\r\n            <ReservedTokens\r\n              fundingCycle={queuedFC}\r\n              ticketMods={queuedTicketMods}\r\n              hideActions={true}\r\n            />\r\n          </CardSection>\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              zIndex: -1,\r\n              left: 10,\r\n              right: -10,\r\n              top: 10,\r\n              bottom: 0,\r\n              background: colors.background.l1,\r\n            }}\r\n          ></div>\r\n        </div>\r\n      ) : (\r\n        <div>No upcoming funding cycle</div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import { CaretRightOutlined } from '@ant-design/icons'\r\nimport { t, Trans } from '@lingui/macro'\r\n\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { Space } from 'antd'\r\nimport Modal from 'antd/lib/modal/Modal'\r\nimport CurrencySymbol from 'components/CurrencySymbol'\r\nimport Loading from 'components/Loading'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport useContractReader from 'hooks/v1/contractReader/ContractReader'\r\nimport { V1ContractName } from 'models/v1/contracts'\r\nimport { V1CurrencyOption } from 'models/v1/currencyOption'\r\nimport { V1FundingCycle } from 'models/v1/fundingCycle'\r\nimport { useCallback, useContext, useState } from 'react'\r\nimport { deepEqFundingCycles } from 'utils/v1/deepEqFundingCycles'\r\nimport { formatHistoricalDate } from 'utils/formatDate'\r\nimport { formatWad } from 'utils/formatNumber'\r\nimport { hasFundingTarget } from 'utils/v1/fundingCycle'\r\n\r\nimport FundingCycleDetails from 'components/v1/shared/FundingCycle/FundingCycleDetails'\r\nimport { V1CurrencyName } from 'utils/v1/currency'\r\n\r\nexport default function FundingHistory({\r\n  startId,\r\n}: {\r\n  startId: BigNumber | undefined\r\n}) {\r\n  const [selectedIndex, setSelectedIndex] = useState<number>()\r\n  const [fundingCycles, setFundingCycles] = useState<V1FundingCycle[]>([])\r\n  const [cycleIds, setCycleIds] = useState<BigNumber[]>([])\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  //startId = currentFC.basedOn\r\n  if (startId?.gt(0) && !cycleIds.length) setCycleIds([startId])\r\n\r\n  const allCyclesLoaded = fundingCycles.length >= cycleIds.length\r\n  const cycleNumber = allCyclesLoaded\r\n    ? undefined\r\n    : cycleIds[cycleIds.length - 1]\r\n  const selectedFC =\r\n    selectedIndex !== undefined ? fundingCycles[selectedIndex] : undefined\r\n\r\n  useContractReader<V1FundingCycle>({\r\n    contract: V1ContractName.FundingCycles,\r\n    functionName: 'get',\r\n    args: cycleNumber ? [cycleNumber] : null,\r\n    valueDidChange: useCallback((a, b) => !deepEqFundingCycles(a, b), []),\r\n    callback: useCallback(\r\n      cycle => {\r\n        if (\r\n          !cycle ||\r\n          !cycleNumber ||\r\n          cycleIds.includes(cycle.basedOn) ||\r\n          cycle.id.eq(0)\r\n        )\r\n          return\r\n\r\n        setFundingCycles([...fundingCycles, cycle])\r\n        setCycleIds([\r\n          ...cycleIds,\r\n          ...(cycle.basedOn.toNumber() > 0 ? [cycle.basedOn] : []),\r\n        ])\r\n      },\r\n      [cycleNumber, cycleIds, fundingCycles],\r\n    ),\r\n  })\r\n\r\n  const fundingCycleElems = (\r\n    <Space direction=\"vertical\" size=\"large\" style={{ width: '100%' }}>\r\n      {fundingCycles.length ? (\r\n        fundingCycles.map((cycle, i) => (\r\n          <div\r\n            key={cycle.id.toString()}\r\n            onClick={() => setSelectedIndex(i)}\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'baseline',\r\n              justifyContent: 'space-between',\r\n              cursor: 'pointer',\r\n              ...(i < fundingCycles.length - 1\r\n                ? {\r\n                    paddingBottom: 20,\r\n                    borderBottom: '1px solid ' + colors.stroke.tertiary,\r\n                  }\r\n                : {}),\r\n            }}\r\n          >\r\n            <Space align=\"baseline\">\r\n              <h3>#{cycle.number.toString()}</h3>\r\n\r\n              <div style={{ fontSize: '.8rem', marginLeft: 10 }}>\r\n                <CurrencySymbol\r\n                  currency={V1CurrencyName(\r\n                    cycle.currency.toNumber() as V1CurrencyOption,\r\n                  )}\r\n                />\r\n                {hasFundingTarget(cycle) ? (\r\n                  <>\r\n                    <Trans>\r\n                      {formatWad(cycle.tapped, { precision: 2 })}/\r\n                      {formatWad(cycle.target, { precision: 2 })} withdrawn\r\n                    </Trans>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Trans>\r\n                      {formatWad(cycle.tapped, { precision: 2 })} withdrawn\r\n                    </Trans>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </Space>\r\n\r\n            <div style={{ flex: 1 }}></div>\r\n\r\n            <Space align=\"baseline\" style={{ fontSize: '.8rem' }}>\r\n              {formatHistoricalDate(\r\n                cycle.start.add(cycle.duration).mul(1000).toNumber(),\r\n              )}\r\n              <CaretRightOutlined />\r\n            </Space>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <div>\r\n          <Trans>No past funding cycles</Trans>\r\n        </div>\r\n      )}\r\n    </Space>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      {fundingCycleElems}\r\n\r\n      {allCyclesLoaded ? null : <Loading />}\r\n\r\n      {selectedFC && (\r\n        <Modal\r\n          visible={!!selectedFC}\r\n          width={600}\r\n          title={`Cycle #${selectedFC.number.toString()}`}\r\n          onCancel={() => setSelectedIndex(undefined)}\r\n          onOk={() => setSelectedIndex(undefined)}\r\n          cancelButtonProps={{ hidden: true }}\r\n          okText={t`Done`}\r\n        >\r\n          <FundingCycleDetails fundingCycle={selectedFC} />\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import { CaretRightFilled } from '@ant-design/icons'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { t, Trans } from '@lingui/macro'\r\nimport { Drawer, DrawerProps, Space, Statistic } from 'antd'\r\nimport { useForm } from 'antd/lib/form/Form'\r\nimport Modal from 'antd/lib/modal/Modal'\r\nimport RestrictedActionsForm, {\r\n  RestrictedActionsFormFields,\r\n} from 'components/forms/RestrictedActionsForm'\r\nimport CurrencySymbol from 'components/CurrencySymbol'\r\nimport PayoutModsList from 'components/v1/shared/PayoutModsList'\r\nimport TicketModsList from 'components/v1/shared/TicketModsList'\r\nimport ReconfigurationStrategyDrawer from 'components/v1/shared/ReconfigurationStrategyDrawer'\r\n\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport * as constants from '@ethersproject/constants'\r\nimport { useAppDispatch } from 'hooks/AppDispatch'\r\nimport { useEditingV1FundingCycleSelector } from 'hooks/AppSelector'\r\nimport { useTerminalFee } from 'hooks/v1/TerminalFee'\r\nimport { useConfigureProjectTx } from 'hooks/v1/transactor/ConfigureProjectTx'\r\nimport { V1CurrencyOption } from 'models/v1/currencyOption'\r\nimport { V1FundingCycleMetadata } from 'models/v1/fundingCycle'\r\nimport { PayoutMod, TicketMod } from 'models/mods'\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useLayoutEffect,\r\n  useState,\r\n} from 'react'\r\nimport { editingProjectActions } from 'redux/slices/editingProject'\r\nimport {\r\n  formattedNum,\r\n  formatWad,\r\n  perbicentToPercent,\r\n  permilleToPercent,\r\n  fromWad,\r\n} from 'utils/formatNumber'\r\nimport {\r\n  decodeFundingCycleMetadata,\r\n  hasFundingTarget,\r\n  isRecurring,\r\n} from 'utils/v1/fundingCycle'\r\nimport { amountSubFee } from 'utils/math'\r\nimport { serializeV1FundingCycle } from 'utils/v1/serializers'\r\nimport { drawerWidth } from 'utils/drawerWidth'\r\n\r\nimport { V1CurrencyName } from 'utils/v1/currency'\r\n\r\nimport BudgetForm from 'components/v1/shared/forms/BudgetForm'\r\n\r\nimport IncentivesForm, {\r\n  IncentivesFormFields,\r\n} from 'components/forms/IncentivesForm'\r\nimport PayModsForm from 'components/v1/shared/forms/PayModsForm'\r\nimport TicketingForm, {\r\n  TicketingFormFields,\r\n} from 'components/forms/TicketingForm'\r\n\r\nimport { BallotStrategy } from 'models/ballot'\r\n\r\nimport { getBallotStrategyByAddress } from 'constants/v1/ballotStrategies/getBallotStrategiesByAddress'\r\n\r\nexport default function ReconfigureFCModal({\r\n  visible,\r\n  onDone,\r\n}: {\r\n  visible?: boolean\r\n  onDone?: VoidFunction\r\n}) {\r\n  const { colors, radii } = useContext(ThemeContext).theme\r\n  const [currentStep, setCurrentStep] = useState<number>()\r\n  const [payModsModalVisible, setPayModsFormModalVisible] =\r\n    useState<boolean>(false)\r\n  const [budgetFormModalVisible, setBudgetFormModalVisible] =\r\n    useState<boolean>(false)\r\n  const [rulesFormModalVisible, setRulesFormModalVisible] =\r\n    useState<boolean>(false)\r\n  const [incentivesFormModalVisible, setIncentivesFormModalVisible] =\r\n    useState<boolean>(false)\r\n  const [ticketingFormModalVisible, setTicketingFormModalVisible] =\r\n    useState<boolean>(false)\r\n  const [\r\n    restrictedActionsFormModalVisible,\r\n    setRestrictedActionsFormModalVisible,\r\n  ] = useState<boolean>(false)\r\n  useState<boolean>(false)\r\n  const [loading, setLoading] = useState<boolean>()\r\n  const [ticketingForm] = useForm<TicketingFormFields>()\r\n  const [incentivesForm] = useForm<IncentivesFormFields>()\r\n  const [restrictedActionsForm] = useForm<RestrictedActionsFormFields>()\r\n  const [editingPayoutMods, setEditingPayoutMods] = useState<PayoutMod[]>([])\r\n  const [editingTicketMods, setEditingTicketMods] = useState<TicketMod[]>([])\r\n  const dispatch = useAppDispatch()\r\n  const {\r\n    queuedFC,\r\n    currentFC,\r\n    terminal,\r\n    isPreviewMode,\r\n    queuedPayoutMods,\r\n    currentPayoutMods,\r\n    queuedTicketMods,\r\n    currentTicketMods,\r\n  } = useContext(V1ProjectContext)\r\n\r\n  const editingFC = useEditingV1FundingCycleSelector()\r\n  const terminalFee = useTerminalFee(terminal?.version)\r\n  const configureProjectTx = useConfigureProjectTx()\r\n\r\n  const resetTicketingForm = () =>\r\n    ticketingForm.setFieldsValue({\r\n      reserved: parseFloat(perbicentToPercent(editingFC?.reserved)),\r\n    })\r\n\r\n  const fcMetadata: V1FundingCycleMetadata | undefined =\r\n    decodeFundingCycleMetadata(currentFC?.metadata)\r\n\r\n  const editingFCCurrency = V1CurrencyName(\r\n    editingFC.currency.toNumber() as V1CurrencyOption,\r\n  )\r\n\r\n  const resetRestrictedActionsForm = () => {\r\n    if (fcMetadata?.version === 1) {\r\n      restrictedActionsForm.setFieldsValue({\r\n        payIsPaused: fcMetadata?.payIsPaused,\r\n        ticketPrintingIsAllowed: fcMetadata?.ticketPrintingIsAllowed,\r\n      })\r\n    }\r\n  }\r\n\r\n  const onPayModsFormSaved = (mods: PayoutMod[]) => setEditingPayoutMods(mods)\r\n\r\n  const onBudgetFormSaved = (\r\n    currency: V1CurrencyOption,\r\n    target: string,\r\n    duration: string,\r\n  ) => {\r\n    dispatch(editingProjectActions.setTarget(target))\r\n    dispatch(editingProjectActions.setDuration(duration))\r\n    dispatch(editingProjectActions.setCurrency(currency))\r\n  }\r\n\r\n  const onTicketingFormSaved = (mods: TicketMod[]) => {\r\n    const fields = ticketingForm.getFieldsValue(true)\r\n    dispatch(editingProjectActions.setReserved(fields.reserved))\r\n    setEditingTicketMods(mods)\r\n  }\r\n\r\n  const onRestrictedActionsFormSaved = () => {\r\n    const fields = restrictedActionsForm.getFieldsValue(true)\r\n    dispatch(\r\n      editingProjectActions.setTicketPrintingIsAllowed(\r\n        fields.ticketPrintingIsAllowed,\r\n      ),\r\n    )\r\n    dispatch(editingProjectActions.setPayIsPaused(fields.payIsPaused))\r\n  }\r\n\r\n  const onRulesFormSaved = (ballot: string) => {\r\n    dispatch(editingProjectActions.setBallot(ballot))\r\n  }\r\n\r\n  const onIncentivesFormSaved = (\r\n    discountRate: string,\r\n    bondingCurveRate: string,\r\n  ) => {\r\n    dispatch(editingProjectActions.setDiscountRate(discountRate))\r\n    dispatch(editingProjectActions.setBondingCurveRate(bondingCurveRate))\r\n  }\r\n\r\n  useLayoutEffect(() => {\r\n    const fundingCycle = queuedFC?.number.gt(0) ? queuedFC : currentFC\r\n    const payoutMods = queuedFC?.number.gt(0)\r\n      ? queuedPayoutMods\r\n      : currentPayoutMods\r\n    const ticketMods = queuedFC?.number.gt(0)\r\n      ? queuedTicketMods\r\n      : currentTicketMods\r\n\r\n    if (\r\n      !visible ||\r\n      isPreviewMode ||\r\n      !fundingCycle ||\r\n      !ticketMods ||\r\n      !payoutMods\r\n    )\r\n      return\r\n\r\n    const metadata = decodeFundingCycleMetadata(fundingCycle.metadata)\r\n    if (!metadata) return\r\n\r\n    dispatch(\r\n      editingProjectActions.setFundingCycle(\r\n        serializeV1FundingCycle({\r\n          ...fundingCycle,\r\n          ...metadata,\r\n          reserved: BigNumber.from(metadata.reservedRate),\r\n          bondingCurveRate: BigNumber.from(metadata.bondingCurveRate),\r\n        }),\r\n      ),\r\n    )\r\n    setEditingTicketMods(ticketMods)\r\n    setEditingPayoutMods(payoutMods)\r\n    ticketingForm.setFieldsValue({\r\n      reserved: parseFloat(perbicentToPercent(metadata.reservedRate)),\r\n    })\r\n    incentivesForm.setFieldsValue({\r\n      discountRate: permilleToPercent(fundingCycle.discountRate),\r\n      bondingCurveRate: perbicentToPercent(metadata.bondingCurveRate),\r\n    })\r\n\r\n    if (metadata.version === 1) {\r\n      restrictedActionsForm.setFieldsValue({\r\n        payIsPaused: metadata.payIsPaused,\r\n        ticketPrintingIsAllowed: metadata.ticketPrintingIsAllowed,\r\n      })\r\n    }\r\n  }, [\r\n    currentFC,\r\n    queuedFC,\r\n    currentPayoutMods,\r\n    queuedPayoutMods,\r\n    currentTicketMods,\r\n    queuedTicketMods,\r\n    dispatch,\r\n    ticketingForm,\r\n    incentivesForm,\r\n    restrictedActionsForm,\r\n    isPreviewMode,\r\n    visible,\r\n  ])\r\n\r\n  async function reconfigure() {\r\n    setLoading(true)\r\n\r\n    configureProjectTx(\r\n      {\r\n        fcProperties: {\r\n          target: editingFC.target,\r\n          currency: editingFC.currency,\r\n          duration: editingFC.duration,\r\n          discountRate: editingFC.discountRate,\r\n          cycleLimit: BigNumber.from(0), // TODO support in UI\r\n          ballot: editingFC.ballot,\r\n        },\r\n        fcMetadata: {\r\n          reservedRate: editingFC.reserved.toNumber(),\r\n          bondingCurveRate: editingFC.bondingCurveRate.toNumber(),\r\n          reconfigurationBondingCurveRate:\r\n            editingFC.bondingCurveRate.toNumber(),\r\n          payIsPaused: editingFC.payIsPaused,\r\n          ticketPrintingIsAllowed: editingFC.ticketPrintingIsAllowed,\r\n          treasuryExtension: constants.AddressZero,\r\n        },\r\n        payoutMods: editingPayoutMods,\r\n        ticketMods: editingTicketMods,\r\n      },\r\n      {\r\n        onDone: () => {\r\n          setLoading(false)\r\n          if (onDone) onDone()\r\n        },\r\n      },\r\n    )\r\n  }\r\n\r\n  const drawerStyle: Partial<DrawerProps> = {\r\n    placement: 'right',\r\n    width: drawerWidth(),\r\n  }\r\n\r\n  const buildSteps = useCallback(\r\n    (steps: { title: string; callback: VoidFunction }[]) => (\r\n      <Space direction=\"vertical\" size=\"middle\" style={{ width: '100%' }}>\r\n        {steps.map((step, i) => {\r\n          const active = currentStep === i\r\n\r\n          return (\r\n            <div\r\n              key={step.title}\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                cursor: 'pointer',\r\n                padding: 10,\r\n                borderRadius: radii.sm,\r\n                border:\r\n                  '1px solid ' +\r\n                  (active\r\n                    ? colors.stroke.action.primary\r\n                    : colors.stroke.action.secondary),\r\n              }}\r\n              onClick={() => {\r\n                setCurrentStep(i)\r\n                step.callback()\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  fontWeight: active ? 600 : 500,\r\n                  color: active\r\n                    ? colors.text.action.primary\r\n                    : colors.text.primary,\r\n                }}\r\n              >\r\n                {step.title}\r\n              </div>\r\n              <div\r\n                style={{\r\n                  color: active\r\n                    ? colors.icon.action.primary\r\n                    : colors.icon.primary,\r\n                }}\r\n              >\r\n                <CaretRightFilled />\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </Space>\r\n    ),\r\n    [currentStep, colors, radii],\r\n  )\r\n\r\n  if (!terminal?.version) return null\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      onOk={reconfigure}\r\n      confirmLoading={loading}\r\n      onCancel={onDone}\r\n      okText={t`Save reconfiguration`}\r\n      width={600}\r\n    >\r\n      <div>\r\n        {currentFC?.duration.gt(0) ? (\r\n          <React.Fragment>\r\n            <h1 style={{ marginBottom: 20 }}>\r\n              <Trans>Reconfigure upcoming funding</Trans>\r\n            </h1>\r\n            <p>\r\n              <Trans>\r\n                All changes will be applied to the <strong>upcoming</strong>{' '}\r\n                funding cycle.\r\n              </Trans>\r\n            </p>\r\n          </React.Fragment>\r\n        ) : (\r\n          <h1 style={{ marginBottom: 20 }}>\r\n            <Trans>Reconfigure funding</Trans>\r\n          </h1>\r\n        )}\r\n\r\n        <Space direction=\"vertical\" size=\"large\" style={{ width: '100%' }}>\r\n          <div>\r\n            {buildSteps([\r\n              {\r\n                title: t`Funding cycle`,\r\n                callback: () => setBudgetFormModalVisible(true),\r\n              },\r\n              ...(editingFC.target.gt(0)\r\n                ? [\r\n                    {\r\n                      title: t`Funding distribution`,\r\n                      callback: () => setPayModsFormModalVisible(true),\r\n                    },\r\n                  ]\r\n                : []),\r\n              {\r\n                title: t`Reserved tokens`,\r\n                callback: () => setTicketingFormModalVisible(true),\r\n              },\r\n              {\r\n                title: t`Rules`,\r\n                callback: () => setRulesFormModalVisible(true),\r\n              },\r\n              ...(terminal.version === '1.1'\r\n                ? [\r\n                    {\r\n                      title: 'Actions',\r\n                      callback: () =>\r\n                        setRestrictedActionsFormModalVisible(true),\r\n                    },\r\n                  ]\r\n                : []),\r\n              ...(isRecurring(editingFC) && hasFundingTarget(editingFC)\r\n                ? [\r\n                    {\r\n                      title: t`Incentives`,\r\n                      callback: () => setIncentivesFormModalVisible(true),\r\n                    },\r\n                  ]\r\n                : []),\r\n            ])}\r\n          </div>\r\n\r\n          <Space size=\"large\">\r\n            <Statistic\r\n              title={t`Duration`}\r\n              value={\r\n                editingFC.duration.gt(0)\r\n                  ? formattedNum(editingFC.duration)\r\n                  : 'Not set'\r\n              }\r\n              suffix={editingFC.duration.gt(0) ? 'days' : ''}\r\n            />\r\n            {hasFundingTarget(editingFC) && (\r\n              <Statistic\r\n                title={t`Amount`}\r\n                valueRender={() => (\r\n                  <span>\r\n                    <CurrencySymbol currency={editingFCCurrency} />\r\n                    {formatWad(editingFC.target)}{' '}\r\n                    <span style={{ fontSize: '0.8rem' }}>\r\n                      (\r\n                      {terminalFee?.gt(0) ? (\r\n                        <span>\r\n                          <CurrencySymbol currency={editingFCCurrency} />\r\n                          <Trans>\r\n                            {formatWad(\r\n                              amountSubFee(editingFC.target, terminalFee),\r\n                              { precision: 4 },\r\n                            )}{' '}\r\n                            after JBX fee\r\n                          </Trans>\r\n                        </span>\r\n                      ) : (\r\n                        <span>\r\n                          <Trans>0% fee</Trans>\r\n                        </span>\r\n                      )}\r\n                      )\r\n                    </span>\r\n                  </span>\r\n                )}\r\n              />\r\n            )}\r\n          </Space>\r\n\r\n          <Space size=\"large\" align=\"end\">\r\n            <Statistic\r\n              title={t`Reserved tokens`}\r\n              value={perbicentToPercent(editingFC.reserved)}\r\n              suffix=\"%\"\r\n            />\r\n            {editingFC &&\r\n              isRecurring(editingFC) &&\r\n              hasFundingTarget(editingFC) && (\r\n                <Statistic\r\n                  title={t`Discount rate`}\r\n                  value={permilleToPercent(editingFC.discountRate)}\r\n                  suffix=\"%\"\r\n                />\r\n              )}\r\n            {editingFC &&\r\n              isRecurring(editingFC) &&\r\n              hasFundingTarget(editingFC) && (\r\n                <Statistic\r\n                  title={t`Bonding curve rate`}\r\n                  value={perbicentToPercent(editingFC.bondingCurveRate)}\r\n                  suffix=\"%\"\r\n                />\r\n              )}\r\n          </Space>\r\n\r\n          <Statistic\r\n            title={t`Reconfiguration strategy`}\r\n            valueRender={() => {\r\n              const ballot = getBallotStrategyByAddress(editingFC.ballot)\r\n              return (\r\n                <div>\r\n                  {ballot.name}{' '}\r\n                  <div style={{ fontSize: '0.7rem' }}>{ballot.address}</div>\r\n                </div>\r\n              )\r\n            }}\r\n          />\r\n\r\n          {terminal.version === '1.1' && (\r\n            <Space size=\"large\">\r\n              <Statistic\r\n                title={t`Payments paused`}\r\n                value={editingFC.payIsPaused ? 'Yes' : 'No'}\r\n              />\r\n              <Statistic\r\n                title={t`Token minting`}\r\n                value={\r\n                  editingFC.ticketPrintingIsAllowed ? 'Allowed' : 'Disabled'\r\n                }\r\n              />\r\n            </Space>\r\n          )}\r\n\r\n          <div>\r\n            <h4>\r\n              <Trans>Spending</Trans>\r\n            </h4>\r\n            <PayoutModsList\r\n              mods={editingPayoutMods}\r\n              projectId={undefined}\r\n              fundingCycle={editingFC}\r\n              feePerbicent={terminalFee}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <h4>\r\n              <Trans>Reserved token allocations</Trans>\r\n            </h4>\r\n            <TicketModsList\r\n              mods={editingTicketMods}\r\n              projectId={undefined}\r\n              fundingCycle={undefined}\r\n              reservedRate={parseFloat(\r\n                perbicentToPercent(fcMetadata?.reservedRate),\r\n              )}\r\n            />\r\n          </div>\r\n        </Space>\r\n      </div>\r\n\r\n      <Drawer\r\n        visible={budgetFormModalVisible}\r\n        {...drawerStyle}\r\n        onClose={() => {\r\n          setBudgetFormModalVisible(false)\r\n          setCurrentStep(undefined)\r\n        }}\r\n        destroyOnClose\r\n      >\r\n        <BudgetForm\r\n          initialCurrency={editingFC.currency.toNumber() as V1CurrencyOption}\r\n          initialTarget={fromWad(editingFC.target)}\r\n          initialDuration={editingFC.duration.toString()}\r\n          onSave={async (currency, target, duration) => {\r\n            onBudgetFormSaved(currency, target, duration)\r\n            setBudgetFormModalVisible(false)\r\n            setCurrentStep(undefined)\r\n          }}\r\n        />\r\n      </Drawer>\r\n\r\n      <Drawer\r\n        visible={payModsModalVisible}\r\n        {...drawerStyle}\r\n        onClose={() => {\r\n          setPayModsFormModalVisible(false)\r\n          setCurrentStep(undefined)\r\n        }}\r\n        destroyOnClose\r\n      >\r\n        <PayModsForm\r\n          initialMods={editingPayoutMods}\r\n          currency={editingFC.currency.toNumber() as V1CurrencyOption}\r\n          target={editingFC.target}\r\n          fee={terminalFee}\r\n          onSave={async mods => {\r\n            onPayModsFormSaved(mods)\r\n            setPayModsFormModalVisible(false)\r\n            setCurrentStep(undefined)\r\n          }}\r\n        />\r\n      </Drawer>\r\n\r\n      <Drawer\r\n        visible={ticketingFormModalVisible}\r\n        {...drawerStyle}\r\n        onClose={() => {\r\n          resetTicketingForm()\r\n          setTicketingFormModalVisible(false)\r\n          setCurrentStep(undefined)\r\n        }}\r\n      >\r\n        <TicketingForm\r\n          form={ticketingForm}\r\n          initialMods={editingTicketMods}\r\n          onSave={async mods => {\r\n            await ticketingForm.validateFields()\r\n            onTicketingFormSaved(mods)\r\n            setTicketingFormModalVisible(false)\r\n            setCurrentStep(undefined)\r\n          }}\r\n        />\r\n      </Drawer>\r\n\r\n      <ReconfigurationStrategyDrawer\r\n        visible={rulesFormModalVisible}\r\n        style={drawerStyle}\r\n        onClose={() => {\r\n          setCurrentStep(undefined)\r\n          setRulesFormModalVisible(false)\r\n        }}\r\n        initialSelectedStrategy={getBallotStrategyByAddress(editingFC.ballot)}\r\n        onSave={(strategy: BallotStrategy) => {\r\n          onRulesFormSaved(strategy.address)\r\n          setCurrentStep(undefined)\r\n          setRulesFormModalVisible(false)\r\n        }}\r\n      />\r\n\r\n      <Drawer\r\n        visible={incentivesFormModalVisible}\r\n        {...drawerStyle}\r\n        onClose={() => {\r\n          setIncentivesFormModalVisible(false)\r\n          setCurrentStep(undefined)\r\n        }}\r\n      >\r\n        <IncentivesForm\r\n          form={incentivesForm}\r\n          disableBondingCurve={!hasFundingTarget(editingFC)}\r\n          onSave={async (discountRate: string, bondingCurveRate: string) => {\r\n            await incentivesForm.validateFields()\r\n            onIncentivesFormSaved(discountRate, bondingCurveRate)\r\n            setIncentivesFormModalVisible(false)\r\n            setCurrentStep(undefined)\r\n          }}\r\n        />\r\n      </Drawer>\r\n\r\n      {terminal.version === '1.1' && (\r\n        <Drawer\r\n          visible={restrictedActionsFormModalVisible}\r\n          {...drawerStyle}\r\n          onClose={() => {\r\n            resetRestrictedActionsForm()\r\n            setRestrictedActionsFormModalVisible(false)\r\n            setCurrentStep(undefined)\r\n          }}\r\n        >\r\n          <RestrictedActionsForm\r\n            form={restrictedActionsForm}\r\n            onSave={() => {\r\n              onRestrictedActionsFormSaved()\r\n              setRestrictedActionsFormModalVisible(false)\r\n              setCurrentStep(undefined)\r\n            }}\r\n          />\r\n        </Drawer>\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n","import { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { V1UserContext } from 'contexts/v1/userContext'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport * as constants from '@ethersproject/constants'\r\nimport {\r\n  V1FundingCycleMetadata,\r\n  V1FundingCycleProperties,\r\n} from 'models/v1/fundingCycle'\r\nimport { PayoutMod, TicketMod } from 'models/mods'\r\nimport { useContext } from 'react'\r\n\r\nimport { TransactorInstance } from '../../Transactor'\r\n\r\nexport function useConfigureProjectTx(): TransactorInstance<{\r\n  fcProperties: V1FundingCycleProperties\r\n  fcMetadata: Omit<V1FundingCycleMetadata, 'version'>\r\n  payoutMods: PayoutMod[]\r\n  ticketMods: TicketMod[]\r\n}> {\r\n  const { transactor, contracts } = useContext(V1UserContext)\r\n  const { projectId, terminal } = useContext(V1ProjectContext)\r\n\r\n  return ({ fcProperties, fcMetadata, payoutMods, ticketMods }, txOpts) => {\r\n    if (\r\n      !transactor ||\r\n      !projectId ||\r\n      !contracts?.Projects ||\r\n      !terminal?.version\r\n    ) {\r\n      txOpts?.onDone?.()\r\n      return Promise.resolve(false)\r\n    }\r\n\r\n    const properties: Record<keyof V1FundingCycleProperties, string> = {\r\n      target: fcProperties.target.toHexString(),\r\n      currency: fcProperties.currency.toHexString(),\r\n      duration: fcProperties.duration.toHexString(),\r\n      discountRate: fcProperties.discountRate.toHexString(),\r\n      cycleLimit: fcProperties.cycleLimit.toHexString(),\r\n      ballot: fcProperties.ballot,\r\n    }\r\n\r\n    return transactor(\r\n      terminal.version === '1.1'\r\n        ? contracts.TerminalV1_1\r\n        : contracts.TerminalV1,\r\n      'configure',\r\n      [\r\n        BigNumber.from(projectId).toHexString(),\r\n        properties,\r\n        fcMetadata,\r\n        payoutMods.map(m => ({\r\n          preferUnstaked: false,\r\n          percent: BigNumber.from(m.percent).toHexString(),\r\n          lockedUntil: BigNumber.from(m.lockedUntil ?? 0).toHexString(),\r\n          beneficiary: m.beneficiary || constants.AddressZero,\r\n          projectId: m.projectId || BigNumber.from(0).toHexString(),\r\n          allocator: constants.AddressZero,\r\n        })),\r\n        ticketMods.map(m => ({\r\n          preferUnstaked: false,\r\n          percent: BigNumber.from(m.percent).toHexString(),\r\n          lockedUntil: BigNumber.from(m.lockedUntil ?? 0).toHexString(),\r\n          beneficiary: m.beneficiary || constants.AddressZero,\r\n          allocator: constants.AddressZero,\r\n        })),\r\n      ],\r\n      txOpts,\r\n    )\r\n  }\r\n}\r\n","export function drawerWidth() {\r\n  return Math.min(640, window.innerWidth * 0.9)\r\n}\r\n","import { Button, Tooltip } from 'antd'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport React, { useContext, useRef, useState } from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport store, { createStore } from 'redux/store'\r\nimport { Trans } from '@lingui/macro'\r\n\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\n\r\nimport ReconfigureFCModal from '../modals/ReconfigureFCModal'\r\n\r\n// This component uses a local version of the entire Redux store\r\n// so editing within the Reconfigure Funding modal does not\r\n// conflict with existing Redux state. This is so editing a\r\n// persisted Redux state and the Reconfigure Funding modal\r\n// are independent.\r\nexport default function ReconfigureFundingModalTrigger({\r\n  fundingDuration,\r\n}: {\r\n  fundingDuration?: BigNumber\r\n}) {\r\n  const { isPreviewMode } = useContext(V1ProjectContext)\r\n\r\n  const localStoreRef = useRef<typeof store>()\r\n\r\n  const [reconfigureModalVisible, setReconfigureModalVisible] =\r\n    useState<boolean>(false)\r\n\r\n  function handleModalOpen() {\r\n    localStoreRef.current = createStore()\r\n    setReconfigureModalVisible(true)\r\n  }\r\n\r\n  return (\r\n    <div style={{ textAlign: 'right' }}>\r\n      {fundingDuration?.gt(0) ? (\r\n        <Tooltip\r\n          title={\r\n            <span>\r\n              <b>Note:</b> The current funding cycle cannot be edited.\r\n            </span>\r\n          }\r\n        >\r\n          <Button\r\n            onClick={handleModalOpen}\r\n            size=\"small\"\r\n            disabled={isPreviewMode}\r\n          >\r\n            <Trans>Reconfigure upcoming</Trans>\r\n          </Button>\r\n        </Tooltip>\r\n      ) : (\r\n        <Button onClick={handleModalOpen} size=\"small\" disabled={isPreviewMode}>\r\n          <Trans>Reconfigure</Trans>\r\n        </Button>\r\n      )}\r\n\r\n      {localStoreRef.current && (\r\n        <Provider store={localStoreRef.current}>\r\n          <ReconfigureFCModal\r\n            visible={reconfigureModalVisible}\r\n            onDone={() => setReconfigureModalVisible(false)}\r\n          />\r\n        </Provider>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import { Tooltip } from 'antd'\r\nimport { t, Trans } from '@lingui/macro'\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons'\r\nimport { CardSection } from 'components/CardSection'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport {\r\n  OperatorPermission,\r\n  useHasPermission,\r\n} from 'hooks/v1/contractReader/HasPermission'\r\nimport { useContext } from 'react'\r\n\r\nimport { fundingCycleRiskCount } from 'utils/v1/fundingCycle'\r\nimport { V1FundingCycle } from 'models/v1/fundingCycle'\r\nimport CurrentFundingCycle from 'components/v1/shared/FundingCycle/CurrentFundingCycle'\r\nimport QueuedFundingCycle from 'components/v1/shared/FundingCycle/QueuedFundingCycle'\r\n\r\nimport FundingCycleSection from 'components/Project/FundingCycleSection'\r\n\r\nimport FundingHistory from './FundingHistory'\r\nimport ReconfigureFundingModalTrigger from './ReconfigureFundingModalTrigger'\r\n\r\nexport default function FundingCycles({\r\n  showCurrentDetail,\r\n}: {\r\n  showCurrentDetail?: boolean\r\n}) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n  const { projectId, currentFC, queuedFC } = useContext(V1ProjectContext)\r\n\r\n  const tabText = ({\r\n    text,\r\n    fundingCycle,\r\n  }: {\r\n    text: string\r\n    fundingCycle: V1FundingCycle | undefined\r\n  }) => {\r\n    const hasRisks = fundingCycle && fundingCycleRiskCount(fundingCycle)\r\n    if (!hasRisks) {\r\n      return text\r\n    }\r\n\r\n    return (\r\n      <Tooltip\r\n        title={\r\n          <Trans>\r\n            This funding cycle may pose risks to contributors. Check the funding\r\n            cycle details before paying this project.\r\n          </Trans>\r\n        }\r\n      >\r\n        <span>\r\n          {text}\r\n          <ExclamationCircleOutlined\r\n            style={{\r\n              color: colors.text.warn,\r\n              marginLeft: 4,\r\n            }}\r\n          />\r\n        </span>\r\n      </Tooltip>\r\n    )\r\n  }\r\n\r\n  const tabs = [\r\n    {\r\n      key: 'current',\r\n      label: tabText({ text: t`Current`, fundingCycle: currentFC }),\r\n      content: <CurrentFundingCycle showCurrentDetail={showCurrentDetail} />,\r\n    },\r\n    {\r\n      key: 'upcoming',\r\n      label: tabText({ text: t`Upcoming`, fundingCycle: queuedFC }),\r\n      content: <QueuedFundingCycle />,\r\n    },\r\n    {\r\n      key: 'history',\r\n      label: <Trans>History</Trans>,\r\n      content: (\r\n        <CardSection>\r\n          <FundingHistory startId={currentFC?.basedOn} />\r\n        </CardSection>\r\n      ),\r\n    },\r\n  ]\r\n\r\n  const canReconfigure = useHasPermission(OperatorPermission.Configure)\r\n\r\n  if (!projectId) return null\r\n  return (\r\n    <FundingCycleSection\r\n      tabs={tabs}\r\n      reconfigureButton={\r\n        canReconfigure ? (\r\n          <ReconfigureFundingModalTrigger\r\n            fundingDuration={currentFC?.duration}\r\n          />\r\n        ) : null\r\n      }\r\n    />\r\n  )\r\n}\r\n","import { BigNumber, BigNumberish } from '@ethersproject/bignumber'\r\nimport { V1ContractName } from 'models/v1/contracts'\r\nimport { V1TerminalName } from 'models/v1/terminals'\r\nimport { bigNumbersDiff } from 'utils/bigNumbers'\r\n\r\nimport useContractReader from './ContractReader'\r\nimport useShouldUpdateTokens from './ShouldUpdateTokens'\r\n\r\n/** Returns combined ERC20 + unclaimed balance of user with `userAddress`. */\r\nexport default function useTotalBalanceOf(\r\n  userAddress: string | undefined,\r\n  projectId: BigNumberish | undefined,\r\n  terminalName: V1TerminalName | undefined,\r\n) {\r\n  return useContractReader<BigNumber>({\r\n    contract: V1ContractName.TicketBooth,\r\n    functionName: 'balanceOf',\r\n    args:\r\n      userAddress && projectId\r\n        ? [userAddress, BigNumber.from(projectId).toHexString()]\r\n        : null,\r\n    valueDidChange: bigNumbersDiff,\r\n    updateOn: useShouldUpdateTokens(projectId, terminalName, userAddress),\r\n  })\r\n}\r\n","import { ThemeContext } from 'contexts/themeContext'\r\nimport useSymbolOfERC20 from 'hooks/SymbolOfERC20'\r\nimport useTerminalOfProject from 'hooks/v1/contractReader/TerminalOfProject'\r\nimport useTokenAddressOfProject from 'hooks/v1/contractReader/TokenAddressOfProject'\r\nimport useTotalBalanceOf from 'hooks/v1/contractReader/TotalBalanceOf'\r\nimport { CSSProperties, useContext } from 'react'\r\nimport { formatWad } from 'utils/formatNumber'\r\nimport { tokenSymbolText } from 'utils/tokenSymbolText'\r\nimport { getTerminalName } from 'utils/v1/terminals'\r\n\r\nimport V1ProjectHandle from 'components/v1/shared/V1ProjectHandle'\r\n\r\nexport default function V1ProjectTokenBalance({\r\n  projectId,\r\n  wallet,\r\n  style,\r\n  precision,\r\n  hideHandle,\r\n}: {\r\n  projectId: number\r\n  wallet: string | undefined\r\n  style?: CSSProperties\r\n  precision?: number\r\n  hideHandle?: boolean\r\n}) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n  const tokenAddress = useTokenAddressOfProject(projectId)\r\n  const tokenSymbol = useSymbolOfERC20(tokenAddress)\r\n  const terminalAddress = useTerminalOfProject(projectId)\r\n  const terminalName = getTerminalName({\r\n    address: terminalAddress,\r\n  })\r\n  const balance = useTotalBalanceOf(wallet, projectId, terminalName)\r\n\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'space-between', ...style }}>\r\n      <span>\r\n        {tokenSymbol !== undefined ? (\r\n          <>\r\n            {formatWad(balance, { precision: precision ?? 0 })}{' '}\r\n            {tokenSymbolText({ tokenSymbol, plural: true })}\r\n          </>\r\n        ) : (\r\n          '--'\r\n        )}\r\n      </span>\r\n\r\n      {!hideHandle && (\r\n        <V1ProjectHandle\r\n          style={{ color: colors.text.tertiary }}\r\n          projectId={projectId}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { V1UserContext } from 'contexts/v1/userContext'\r\nimport { useContext } from 'react'\r\n\r\nimport { TransactorInstance } from '../../Transactor'\r\n\r\nexport function useSetProjectUriTx(): TransactorInstance<{\r\n  cid: string\r\n}> {\r\n  const { transactor, contracts } = useContext(V1UserContext)\r\n  const { projectId } = useContext(V1ProjectContext)\r\n\r\n  return ({ cid }, txOpts) => {\r\n    if (!transactor || !projectId || !contracts?.TicketBooth) {\r\n      txOpts?.onDone?.()\r\n      return Promise.resolve(false)\r\n    }\r\n\r\n    return transactor(\r\n      contracts.Projects,\r\n      'setUri',\r\n      [BigNumber.from(projectId).toHexString(), cid],\r\n      txOpts,\r\n    )\r\n  }\r\n}\r\n","import { SettingOutlined } from '@ant-design/icons'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { Button, Modal, Space } from 'antd'\r\nimport ERC20TokenBalance from 'components/v1/shared/ERC20TokenBalance'\r\nimport { FormItems } from 'components/formItems'\r\nimport V1ProjectTokenBalance from 'components/v1/shared/V1ProjectTokenBalance'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport {\r\n  OperatorPermission,\r\n  useHasPermission,\r\n} from 'hooks/v1/contractReader/HasPermission'\r\nimport { useSetProjectUriTx } from 'hooks/v1/transactor/SetProjectUriTx'\r\nimport { ProjectMetadataV4 } from 'models/project-metadata'\r\nimport { TokenRef } from 'models/token-ref'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport { uploadProjectMetadata } from 'utils/ipfs'\r\n\r\nimport { t, Trans } from '@lingui/macro'\r\n\r\nimport { V1_PROJECT_IDS } from 'constants/v1/projectIds'\r\n\r\nexport function V1BalancesModal({\r\n  visible,\r\n  onCancel,\r\n}: {\r\n  visible: boolean | undefined\r\n  onCancel: () => void\r\n}) {\r\n  const [editModalVisible, setEditModalVisible] = useState<boolean>()\r\n  const [loading, setLoading] = useState<boolean>()\r\n  const [editingTokenRefs, setEditingTokenRefs] = useState<TokenRef[]>([])\r\n  const { owner, metadata, handle } = useContext(V1ProjectContext)\r\n  const setProjectUriTx = useSetProjectUriTx()\r\n\r\n  useEffect(() => {\r\n    const initialTokens = metadata?.tokens ?? [{ type: 'erc20', value: '' }]\r\n    setEditingTokenRefs(initialTokens)\r\n  }, [metadata])\r\n\r\n  const hasEditPermission = useHasPermission([OperatorPermission.SetUri])\r\n\r\n  async function updateTokenRefs() {\r\n    if (!handle) return\r\n\r\n    setLoading(true)\r\n\r\n    const uploadedMetadata = await uploadProjectMetadata(\r\n      {\r\n        ...metadata,\r\n        tokens: editingTokenRefs.filter(t => t.type),\r\n      },\r\n      handle,\r\n    )\r\n\r\n    if (!uploadedMetadata.IpfsHash) {\r\n      setLoading(false)\r\n      return\r\n    }\r\n\r\n    setProjectUriTx(\r\n      { cid: uploadedMetadata.IpfsHash },\r\n      {\r\n        onDone: () => {\r\n          setLoading(false)\r\n          setEditModalVisible(false)\r\n        },\r\n      },\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      onCancel={onCancel}\r\n      footer={\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            marginTop: 20,\r\n          }}\r\n        >\r\n          {hasEditPermission ? (\r\n            <Button\r\n              type=\"text\"\r\n              size=\"small\"\r\n              icon={<SettingOutlined />}\r\n              onClick={() => setEditModalVisible(true)}\r\n            >\r\n              <Trans>Edit tracked assets</Trans>\r\n            </Button>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          <Button onClick={onCancel}>\r\n            <Trans>Done</Trans>\r\n          </Button>\r\n        </div>\r\n      }\r\n    >\r\n      <div>\r\n        <h2>\r\n          <Trans>Assets</Trans>\r\n        </h2>\r\n        <p>\r\n          <Trans>Other assets in this project's owner's wallet.</Trans>\r\n        </p>\r\n\r\n        <Space direction=\"vertical\" style={{ width: '100%', marginTop: 20 }}>\r\n          <V1ProjectTokenBalance\r\n            wallet={owner}\r\n            projectId={V1_PROJECT_IDS.JUICEBOX_DAO}\r\n          />\r\n          {(metadata as ProjectMetadataV4)?.tokens?.map(t =>\r\n            t.type === 'erc20' ? (\r\n              <ERC20TokenBalance\r\n                key={t.value}\r\n                wallet={owner}\r\n                tokenAddress={t.value}\r\n              />\r\n            ) : (\r\n              <V1ProjectTokenBalance\r\n                key={t.value}\r\n                wallet={owner}\r\n                projectId={BigNumber.from(t.value).toNumber()}\r\n              />\r\n            ),\r\n          )}\r\n        </Space>\r\n\r\n        <Modal\r\n          title={t`Edit tracked assets`}\r\n          visible={editModalVisible}\r\n          onCancel={() => setEditModalVisible(false)}\r\n          cancelText={t`Cancel`}\r\n          width={600}\r\n          confirmLoading={loading}\r\n          onOk={updateTokenRefs}\r\n          okText={t`Save tracked assets`}\r\n        >\r\n          <p style={{ marginBottom: 40 }}>\r\n            <Trans>\r\n              Display ERC-20 tokens and other Juicebox project tokens that are\r\n              in this project's owner's wallet.\r\n            </Trans>\r\n          </p>\r\n          <FormItems.TokenRefs\r\n            refs={editingTokenRefs}\r\n            onRefsChange={setEditingTokenRefs}\r\n          />\r\n        </Modal>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n","import { RightCircleOutlined } from '@ant-design/icons'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { Trans } from '@lingui/macro'\r\nimport ETHAmount from 'components/currency/ETHAmount'\r\nimport USDAmount from 'components/currency/USDAmount'\r\nimport EtherscanLink from 'components/EtherscanLink'\r\nimport FundingProgressBar from 'components/Project/FundingProgressBar'\r\nimport StatLine from 'components/Project/StatLine'\r\nimport TooltipLabel from 'components/TooltipLabel'\r\nimport V1ProjectTokenBalance from 'components/v1/shared/V1ProjectTokenBalance'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { useCurrencyConverter } from 'hooks/CurrencyConverter'\r\nimport { useEthBalanceQuery } from 'hooks/EthBalance'\r\nimport { NetworkName } from 'models/network-name'\r\nimport { V1CurrencyOption } from 'models/v1/currencyOption'\r\nimport { useContext, useState } from 'react'\r\nimport { hasFundingTarget } from 'utils/v1/fundingCycle'\r\n\r\nimport { V1CurrencyName } from 'utils/v1/currency'\r\n\r\nimport { VolumeStatLine } from 'components/Project/VolumeStatLine'\r\n\r\nimport { readNetwork } from 'constants/networks'\r\nimport { textPrimary, textSecondary } from 'constants/styles/text'\r\nimport { V1_CURRENCY_ETH, V1_CURRENCY_USD } from 'constants/v1/currency'\r\nimport { V1_PROJECT_IDS } from 'constants/v1/projectIds'\r\nimport { V1BalancesModal } from './modals/V1BalancesModal'\r\n\r\nexport default function Paid() {\r\n  const [balancesModalVisible, setBalancesModalVisible] = useState<boolean>()\r\n  const { theme } = useContext(ThemeContext)\r\n  const { colors } = theme\r\n\r\n  const {\r\n    projectId,\r\n    currentFC,\r\n    balanceInCurrency,\r\n    balance,\r\n    owner,\r\n    earned,\r\n    overflow,\r\n  } = useContext(V1ProjectContext)\r\n\r\n  const converter = useCurrencyConverter()\r\n  const { data: ownerBalance } = useEthBalanceQuery(owner)\r\n\r\n  const overflowInCurrency = converter.wadToCurrency(\r\n    overflow ?? 0,\r\n    V1CurrencyName(currentFC?.currency.toNumber() as V1CurrencyOption),\r\n    'ETH',\r\n  )\r\n\r\n  const secondaryTextStyle = textSecondary(theme)\r\n\r\n  if (!currentFC) return null\r\n\r\n  const spacing =\r\n    hasFundingTarget(currentFC) && currentFC.target.gt(0) ? 15 : 10\r\n\r\n  const formatCurrencyAmount = (amt: BigNumber | undefined) => {\r\n    if (!amt) return null\r\n\r\n    if (currentFC.currency.eq(V1_CURRENCY_ETH)) {\r\n      return <ETHAmount amount={amt} precision={2} padEnd />\r\n    }\r\n\r\n    if (currentFC.currency.eq(V1_CURRENCY_USD)) {\r\n      return <USDAmount amount={amt} precision={2} padEnd />\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  const isConstitutionDAO =\r\n    readNetwork.name === NetworkName.mainnet &&\r\n    projectId === V1_PROJECT_IDS.CONSTITUTION_DAO\r\n\r\n  return (\r\n    <>\r\n      <VolumeStatLine\r\n        totalVolume={earned}\r\n        color={\r\n          isConstitutionDAO ? colors.text.brand.primary : colors.text.primary\r\n        }\r\n        convertToCurrency={isConstitutionDAO ? 'USD' : undefined}\r\n      />\r\n      <div style={{ marginTop: spacing, marginBottom: spacing }}>\r\n        <StatLine\r\n          statLabel={<Trans>In Juicebox</Trans>}\r\n          statLabelTip={\r\n            <Trans>The balance of this project in the Juicebox contract.</Trans>\r\n          }\r\n          statValue={\r\n            <div\r\n              style={{\r\n                ...textPrimary,\r\n                color: isConstitutionDAO\r\n                  ? colors.text.primary\r\n                  : colors.text.brand.primary,\r\n                marginLeft: 10,\r\n              }}\r\n            >\r\n              {currentFC.currency.eq(V1_CURRENCY_USD) ? (\r\n                <span style={secondaryTextStyle}>\r\n                  <ETHAmount amount={balance} precision={2} padEnd={true} />{' '}\r\n                </span>\r\n              ) : (\r\n                ''\r\n              )}\r\n              {formatCurrencyAmount(balanceInCurrency)}\r\n            </div>\r\n          }\r\n        />\r\n\r\n        {hasFundingTarget(currentFC) &&\r\n          (currentFC.target.gt(0) ? (\r\n            <StatLine\r\n              statLabel={<Trans>Distributed</Trans>}\r\n              statLabelTip={\r\n                <Trans>\r\n                  The amount that has been distributed from the Juicebox balance\r\n                  in this funding cycle, out of the current funding target. No\r\n                  more than the funding target can be distributed in a single\r\n                  funding cycle—any remaining ETH in Juicebox is overflow, until\r\n                  the next cycle begins.\r\n                </Trans>\r\n              }\r\n              statValue={\r\n                <div\r\n                  style={{\r\n                    ...secondaryTextStyle,\r\n                    color: colors.text.primary,\r\n                  }}\r\n                >\r\n                  {formatCurrencyAmount(currentFC.tapped)} /{' '}\r\n                  {formatCurrencyAmount(currentFC.target)}\r\n                </div>\r\n              }\r\n            />\r\n          ) : (\r\n            <div\r\n              style={{\r\n                ...secondaryTextStyle,\r\n                textAlign: 'right',\r\n              }}\r\n            >\r\n              <TooltipLabel\r\n                tip={\r\n                  <Trans>\r\n                    The target for this funding cycle is 0, meaning all funds in\r\n                    Juicebox are currently considered overflow. Overflow can be\r\n                    redeemed by token holders, but not distributed.\r\n                  </Trans>\r\n                }\r\n                label={<Trans>100% overflow</Trans>}\r\n              />\r\n            </div>\r\n          ))}\r\n\r\n        {hasFundingTarget(currentFC) && currentFC.target.gt(0) && (\r\n          <FundingProgressBar\r\n            targetAmount={currentFC.target}\r\n            overflowAmountInTargetCurrency={overflowInCurrency}\r\n            balanceInTargetCurrency={balanceInCurrency}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <StatLine\r\n        statLabel={<Trans>In wallet</Trans>}\r\n        statLabelTip={\r\n          <>\r\n            <p>\r\n              <Trans>The balance of the project owner's wallet.</Trans>\r\n            </p>{' '}\r\n            <EtherscanLink value={owner} type=\"address\" />\r\n          </>\r\n        }\r\n        statValue={\r\n          <span>\r\n            <span style={secondaryTextStyle}>\r\n              <V1ProjectTokenBalance\r\n                style={{ display: 'inline-block' }}\r\n                wallet={owner}\r\n                projectId={V1_PROJECT_IDS.JUICEBOX_DAO}\r\n                hideHandle\r\n              />{' '}\r\n              +{' '}\r\n            </span>\r\n            <span style={textPrimary}>\r\n              <ETHAmount amount={ownerBalance} precision={2} padEnd={true} />\r\n            </span>\r\n          </span>\r\n        }\r\n      />\r\n\r\n      <div\r\n        style={{\r\n          textAlign: 'right',\r\n        }}\r\n      >\r\n        <span\r\n          style={{ ...secondaryTextStyle, cursor: 'pointer' }}\r\n          onClick={() => setBalancesModalVisible(true)}\r\n        >\r\n          <Trans>All assets</Trans> <RightCircleOutlined />\r\n        </span>\r\n      </div>\r\n\r\n      <V1BalancesModal\r\n        visible={balancesModalVisible}\r\n        onCancel={() => setBalancesModalVisible(false)}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","import { t, Trans } from '@lingui/macro'\r\nimport { Modal } from 'antd'\r\nimport InputAccessoryButton from 'components/InputAccessoryButton'\r\nimport FormattedNumberInput from 'components/inputs/FormattedNumberInput'\r\n\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { fromWad } from 'utils/formatNumber'\r\nimport { querySubgraphExhaustive } from 'utils/graph'\r\n\r\nimport { emitErrorNotification } from 'utils/notifications'\r\n\r\nimport { readProvider } from 'constants/readProvider'\r\n\r\nexport default function V1DownloadPaymentsModal({\r\n  visible,\r\n  onCancel,\r\n}: {\r\n  visible: boolean | undefined\r\n  onCancel: VoidFunction | undefined\r\n}) {\r\n  const [latestBlockNumber, setLatestBlockNumber] = useState<number>()\r\n  const [blockNumber, setBlockNumber] = useState<number>()\r\n  const [loading, setLoading] = useState<boolean>()\r\n  const { projectId, cv, handle } = useContext(V1ProjectContext)\r\n\r\n  useEffect(() => {\r\n    readProvider.getBlockNumber().then(val => {\r\n      setLatestBlockNumber(val)\r\n      setBlockNumber(val)\r\n    })\r\n  }, [])\r\n\r\n  const download = useCallback(async () => {\r\n    if (blockNumber === undefined || !projectId || !cv) return\r\n\r\n    setLoading(true)\r\n\r\n    const rows = [\r\n      [t`Amount paid`, t`Date`, t`Payer`, t`Beneficiary`, t`Note`], // CSV header row\r\n    ]\r\n\r\n    try {\r\n      const payments = await querySubgraphExhaustive({\r\n        entity: 'payEvent',\r\n        keys: ['caller', 'beneficiary', 'amount', 'timestamp', 'note'],\r\n        orderBy: 'timestamp',\r\n        orderDirection: 'desc',\r\n        block: {\r\n          number: blockNumber,\r\n        },\r\n        where: [\r\n          {\r\n            key: 'projectId',\r\n            value: projectId,\r\n          },\r\n          {\r\n            key: 'cv',\r\n            value: cv,\r\n          },\r\n        ],\r\n      })\r\n\r\n      if (!payments) {\r\n        emitErrorNotification(t`Error loading payments`)\r\n        throw new Error('No data.')\r\n      }\r\n\r\n      payments.forEach(p => {\r\n        let date = new Date((p.timestamp ?? 0) * 1000).toUTCString()\r\n\r\n        if (date.includes(',')) date = date.split(',')[1]\r\n\r\n        rows.push([fromWad(p.amount), date, p.caller, p.beneficiary, p.note])\r\n      })\r\n\r\n      const csvContent =\r\n        'data:text/csv;charset=utf-8,' + rows.map(e => e.join(',')).join('\\n')\r\n      const encodedUri = encodeURI(csvContent)\r\n      const link = document.createElement('a')\r\n      link.setAttribute('href', encodedUri)\r\n      link.setAttribute(\r\n        'download',\r\n        `@${handle}_payments-block${blockNumber}.csv`,\r\n      )\r\n      document.body.appendChild(link)\r\n\r\n      link.click()\r\n\r\n      setLoading(false)\r\n    } catch (e) {\r\n      console.error('Error downloading payments', e)\r\n      setLoading(false)\r\n    }\r\n  }, [projectId, cv, setLoading, blockNumber, handle])\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      onCancel={onCancel}\r\n      onOk={download}\r\n      okText={t`Download CSV`}\r\n      okButtonProps={{ type: 'primary' }}\r\n      cancelText={t`Close`}\r\n      confirmLoading={loading}\r\n      centered\r\n    >\r\n      <div>\r\n        <h4>\r\n          <Trans>Download CSV of payments</Trans>\r\n        </h4>\r\n\r\n        <label style={{ display: 'block', marginTop: 20, marginBottom: 5 }}>\r\n          <Trans>Block number</Trans>\r\n        </label>\r\n        <FormattedNumberInput\r\n          value={blockNumber?.toString()}\r\n          onChange={val => setBlockNumber(val ? parseInt(val) : undefined)}\r\n          accessory={\r\n            <InputAccessoryButton\r\n              content={t`Latest`}\r\n              onClick={() => setBlockNumber(latestBlockNumber)}\r\n              disabled={blockNumber === latestBlockNumber}\r\n            />\r\n          }\r\n        />\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n","import { t, Trans } from '@lingui/macro'\r\nimport { Button, Modal } from 'antd'\r\nimport { useState } from 'react'\r\n\r\nimport V1DownloadPaymentsModal from './V1DownloadPaymentsModal'\r\n\r\nexport default function V1DownloadActivityModal({\r\n  visible,\r\n  onCancel,\r\n}: {\r\n  visible: boolean | undefined\r\n  onCancel: VoidFunction | undefined\r\n}) {\r\n  const [paymentsModalVisible, setPaymentsModalVisible] = useState<boolean>()\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      onCancel={onCancel}\r\n      cancelText={t`Close`}\r\n      okButtonProps={{ hidden: true }}\r\n      centered\r\n    >\r\n      <div>\r\n        <h4>\r\n          <Trans>Download CSV of project activity</Trans>\r\n        </h4>\r\n\r\n        <div style={{ marginTop: 20 }}>\r\n          <Button block onClick={() => setPaymentsModalVisible(true)}>\r\n            Payments\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <V1DownloadPaymentsModal\r\n        visible={paymentsModalVisible}\r\n        onCancel={() => setPaymentsModalVisible(false)}\r\n      />\r\n    </Modal>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { smallHeaderStyle } from 'components/activityEventElems/styles'\r\nimport EtherscanLink from 'components/EtherscanLink'\r\nimport FormattedAddress from 'components/FormattedAddress'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport useSubgraphQuery from 'hooks/SubgraphQuery'\r\nimport { PrintReservesEvent } from 'models/subgraph-entities/v1/print-reserves-event'\r\nimport { useContext } from 'react'\r\nimport { formatHistoricalDate } from 'utils/formatDate'\r\nimport { formatWad } from 'utils/formatNumber'\r\nimport { tokenSymbolText } from 'utils/tokenSymbolText'\r\n\r\nexport default function ReservesEventElem({\r\n  event,\r\n}: {\r\n  event:\r\n    | Pick<\r\n        PrintReservesEvent,\r\n        | 'id'\r\n        | 'timestamp'\r\n        | 'txHash'\r\n        | 'caller'\r\n        | 'beneficiary'\r\n        | 'beneficiaryTicketAmount'\r\n        | 'count'\r\n      >\r\n    | undefined\r\n}) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n  const { tokenSymbol } = useContext(V1ProjectContext)\r\n\r\n  const { data: distributeEvents } = useSubgraphQuery(\r\n    event?.id\r\n      ? {\r\n          entity: 'distributeToTicketModEvent',\r\n          keys: ['id', 'timestamp', 'txHash', 'modBeneficiary', 'modCut'],\r\n          orderDirection: 'desc',\r\n          orderBy: 'modCut',\r\n          where: {\r\n            key: 'printReservesEvent',\r\n            value: event.id,\r\n          },\r\n        }\r\n      : null,\r\n  )\r\n\r\n  if (!event) return null\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n        }}\r\n      >\r\n        <div style={smallHeaderStyle(colors)}>\r\n          <Trans>\r\n            Distributed reserved{' '}\r\n            {tokenSymbolText({\r\n              tokenSymbol: tokenSymbol,\r\n              capitalize: false,\r\n              plural: true,\r\n            })}\r\n          </Trans>\r\n        </div>\r\n\r\n        <div style={{ textAlign: 'right' }}>\r\n          <div style={smallHeaderStyle(colors)}>\r\n            {event.timestamp && (\r\n              <span>{formatHistoricalDate(event.timestamp * 1000)}</span>\r\n            )}{' '}\r\n            <EtherscanLink value={event.txHash} type=\"tx\" />\r\n          </div>\r\n          <div style={smallHeaderStyle(colors)}>\r\n            <Trans>\r\n              called by <FormattedAddress address={event.caller} />\r\n            </Trans>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ marginTop: 5 }}>\r\n        {distributeEvents?.map(e => (\r\n          <div\r\n            key={e.id}\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              alignItems: 'baseline',\r\n            }}\r\n          >\r\n            <div style={{ fontWeight: 500, fontSize: '0.8rem' }}>\r\n              <FormattedAddress address={e.modBeneficiary} />:\r\n            </div>\r\n\r\n            <div\r\n              style={\r\n                distributeEvents.length > 1\r\n                  ? { color: colors.text.secondary, fontSize: '0.8rem' }\r\n                  : { fontWeight: 500 }\r\n              }\r\n            >\r\n              {formatWad(e.modCut, { precision: 0 })}\r\n            </div>\r\n          </div>\r\n        ))}\r\n\r\n        {event.beneficiaryTicketAmount?.gt(0) && (\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              alignItems: 'baseline',\r\n            }}\r\n          >\r\n            <div style={{ fontWeight: 500 }}>\r\n              <FormattedAddress address={event.beneficiary} />:\r\n            </div>\r\n            <div style={{ color: colors.text.secondary }}>\r\n              {formatWad(event.beneficiaryTicketAmount, {\r\n                precision: 0,\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {distributeEvents?.length && distributeEvents?.length > 1 ? (\r\n        <div\r\n          style={{\r\n            color: colors.text.primary,\r\n            fontWeight: 500,\r\n            textAlign: 'right',\r\n          }}\r\n        >\r\n          {formatWad(event.count, { precision: 0 })}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n","import CurrencySymbol from 'components/CurrencySymbol'\r\nimport FormattedAddress from 'components/FormattedAddress'\r\nimport V1ProjectHandle from 'components/v1/shared/V1ProjectHandle'\r\nimport EtherscanLink from 'components/EtherscanLink'\r\n\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport useSubgraphQuery from 'hooks/SubgraphQuery'\r\nimport { TapEvent } from 'models/subgraph-entities/v1/tap-event'\r\nimport { useContext } from 'react'\r\nimport { formatHistoricalDate } from 'utils/formatDate'\r\nimport { formatWad } from 'utils/formatNumber'\r\n\r\nimport { Trans } from '@lingui/macro'\r\nimport { smallHeaderStyle } from 'components/activityEventElems/styles'\r\n\r\nexport default function TapEventElem({\r\n  event,\r\n}: {\r\n  event:\r\n    | Pick<\r\n        TapEvent,\r\n        | 'id'\r\n        | 'timestamp'\r\n        | 'txHash'\r\n        | 'caller'\r\n        | 'beneficiary'\r\n        | 'beneficiaryTransferAmount'\r\n        | 'netTransferAmount'\r\n      >\r\n    | undefined\r\n}) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  const { data: payoutEvents } = useSubgraphQuery(\r\n    event?.id\r\n      ? {\r\n          entity: 'distributeToPayoutModEvent',\r\n          keys: [\r\n            'id',\r\n            'timestamp',\r\n            'txHash',\r\n            'modProjectId',\r\n            'modBeneficiary',\r\n            'modCut',\r\n            {\r\n              entity: 'tapEvent',\r\n              keys: ['id'],\r\n            },\r\n          ],\r\n          orderDirection: 'desc',\r\n          orderBy: 'modCut',\r\n          where: {\r\n            key: 'tapEvent',\r\n            value: event.id,\r\n          },\r\n        }\r\n      : null,\r\n  )\r\n\r\n  if (!event) return null\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n        }}\r\n      >\r\n        <div style={smallHeaderStyle(colors)}>\r\n          <Trans>Distributed funds</Trans>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            textAlign: 'right',\r\n          }}\r\n        >\r\n          <div style={smallHeaderStyle(colors)}>\r\n            {event.timestamp && (\r\n              <span>{formatHistoricalDate(event.timestamp * 1000)}</span>\r\n            )}{' '}\r\n            <EtherscanLink value={event.txHash} type=\"tx\" />\r\n          </div>\r\n          <div style={smallHeaderStyle(colors)}>\r\n            <Trans>\r\n              called by <FormattedAddress address={event.caller} />\r\n            </Trans>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ marginTop: 5 }}>\r\n        {payoutEvents?.map(e => (\r\n          <div\r\n            key={e.id}\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              alignItems: 'baseline',\r\n              fontSize: '0.8rem',\r\n            }}\r\n          >\r\n            <div style={{ fontWeight: 500 }}>\r\n              {e.modProjectId?.gt(0) ? (\r\n                <span>\r\n                  <V1ProjectHandle projectId={e.modProjectId} />\r\n                </span>\r\n              ) : (\r\n                <FormattedAddress address={e.modBeneficiary} />\r\n              )}\r\n              :\r\n            </div>\r\n\r\n            <div style={{ color: colors.text.secondary }}>\r\n              <CurrencySymbol currency=\"ETH\" />\r\n              {formatWad(e.modCut, { precision: 4 })}\r\n            </div>\r\n          </div>\r\n        ))}\r\n\r\n        {event.beneficiaryTransferAmount?.gt(0) && (\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              alignItems: 'baseline',\r\n              fontSize:\r\n                payoutEvents?.length && payoutEvents.length > 1\r\n                  ? '0.8rem'\r\n                  : undefined,\r\n            }}\r\n          >\r\n            <div style={{ fontWeight: 500 }}>\r\n              <FormattedAddress address={event.beneficiary} />:\r\n            </div>\r\n            <div\r\n              style={\r\n                payoutEvents?.length && payoutEvents.length > 1\r\n                  ? { color: colors.text.secondary }\r\n                  : { fontWeight: 500 }\r\n              }\r\n            >\r\n              <CurrencySymbol currency=\"ETH\" />\r\n              {formatWad(event.beneficiaryTransferAmount, { precision: 4 })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {payoutEvents?.length && payoutEvents.length > 1 ? (\r\n        <div\r\n          style={{\r\n            color: colors.text.primary,\r\n            fontWeight: 500,\r\n            textAlign: 'right',\r\n          }}\r\n        >\r\n          <CurrencySymbol currency=\"ETH\" />\r\n          {formatWad(event.netTransferAmount, { precision: 4 })}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n","import { DownloadOutlined } from '@ant-design/icons'\r\nimport { t, Trans } from '@lingui/macro'\r\nimport { Button, Select, Space } from 'antd'\r\nimport DeployedERC20EventElem from 'components/activityEventElems/DeployedERC20EventElem'\r\nimport PayEventElem from 'components/activityEventElems/PayEventElem'\r\nimport ProjectCreateEventElem from 'components/activityEventElems/ProjectCreateEventElem'\r\nimport RedeemEventElem from 'components/activityEventElems/RedeemEventElem'\r\nimport Loading from 'components/Loading'\r\nimport V1DownloadActivityModal from 'components/v1/V1Project/V1DownloadActivityModal'\r\nimport SectionHeader from 'components/SectionHeader'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { useInfiniteSubgraphQuery } from 'hooks/SubgraphQuery'\r\nimport { PrintReservesEvent } from 'models/subgraph-entities/v1/print-reserves-event'\r\nimport { TapEvent } from 'models/subgraph-entities/v1/tap-event'\r\nimport { DeployedERC20Event } from 'models/subgraph-entities/vX/deployed-erc20-event'\r\nimport { PayEvent } from 'models/subgraph-entities/vX/pay-event'\r\nimport { ProjectCreateEvent } from 'models/subgraph-entities/vX/project-create-event'\r\nimport { ProjectEvent } from 'models/subgraph-entities/vX/project-event'\r\nimport { RedeemEvent } from 'models/subgraph-entities/vX/redeem-event'\r\nimport { useContext, useMemo, useState } from 'react'\r\nimport { WhereConfig } from 'utils/graph'\r\n\r\nimport ReservesEventElem from './eventElems/ReservesEventElem'\r\nimport TapEventElem from './eventElems/TapEventElem'\r\n\r\ntype EventFilter =\r\n  | 'all'\r\n  | 'pay'\r\n  | 'redeem'\r\n  | 'withdraw'\r\n  | 'printReserves'\r\n  | 'deployERC20'\r\n  | 'projectCreate'\r\n// | 'mintTokens' TODO\r\n\r\nexport default function ProjectActivity() {\r\n  const [downloadModalVisible, setDownloadModalVisible] = useState<boolean>()\r\n\r\n  const { projectId } = useContext(V1ProjectContext)\r\n\r\n  const [eventFilter, setEventFilter] = useState<EventFilter>('all')\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  const pageSize = 50\r\n\r\n  const where: WhereConfig<'projectEvent'>[] = useMemo(() => {\r\n    const _where: WhereConfig<'projectEvent'>[] = [\r\n      {\r\n        key: 'cv',\r\n        operator: 'in',\r\n        value: ['1', '1.1'],\r\n      },\r\n      {\r\n        key: 'mintTokensEvent',\r\n        value: null, // Exclude all mintTokensEvents. One of these events is created for every Pay event, and showing both event types may lead to confusion\r\n      },\r\n      {\r\n        key: 'useAllowanceEvent',\r\n        value: null, // Exclude all useAllowanceEvents, no UI support yet\r\n      },\r\n    ]\r\n\r\n    if (projectId) {\r\n      _where.push({\r\n        key: 'projectId',\r\n        value: projectId,\r\n      })\r\n    }\r\n\r\n    let key: keyof ProjectEvent | undefined = undefined\r\n\r\n    switch (eventFilter) {\r\n      case 'deployERC20':\r\n        key = 'deployedERC20Event'\r\n        break\r\n      case 'pay':\r\n        key = 'payEvent'\r\n        break\r\n      case 'printReserves':\r\n        key = 'printReservesEvent'\r\n        break\r\n      case 'projectCreate':\r\n        key = 'projectCreateEvent'\r\n        break\r\n      case 'redeem':\r\n        key = 'redeemEvent'\r\n        break\r\n      case 'withdraw':\r\n        key = 'tapEvent'\r\n        break\r\n      // TODO\r\n      // case 'mintTokens':\r\n      //   key = 'mintTokensEvent'\r\n      //   break\r\n    }\r\n\r\n    if (key) {\r\n      _where.push({\r\n        key,\r\n        operator: 'not',\r\n        value: null,\r\n      })\r\n    }\r\n\r\n    return _where\r\n  }, [projectId, eventFilter])\r\n\r\n  const {\r\n    data: projectEvents,\r\n    fetchNextPage,\r\n    hasNextPage,\r\n    isLoading,\r\n    isFetchingNextPage,\r\n  } = useInfiniteSubgraphQuery({\r\n    pageSize,\r\n    entity: 'projectEvent',\r\n    keys: [\r\n      'id',\r\n      {\r\n        entity: 'payEvent',\r\n        keys: ['amount', 'timestamp', 'beneficiary', 'note', 'id', 'txHash'],\r\n      },\r\n      {\r\n        entity: 'deployedERC20Event',\r\n        keys: ['symbol', 'txHash', 'timestamp', 'id'],\r\n      },\r\n      {\r\n        entity: 'tapEvent',\r\n        keys: [\r\n          'id',\r\n          'timestamp',\r\n          'txHash',\r\n          'caller',\r\n          'beneficiary',\r\n          'beneficiaryTransferAmount',\r\n          'netTransferAmount',\r\n        ],\r\n      },\r\n      {\r\n        entity: 'printReservesEvent',\r\n        keys: [\r\n          'id',\r\n          'timestamp',\r\n          'txHash',\r\n          'caller',\r\n          'beneficiary',\r\n          'beneficiaryTicketAmount',\r\n          'count',\r\n        ],\r\n      },\r\n      {\r\n        entity: 'redeemEvent',\r\n        keys: [\r\n          'id',\r\n          'amount',\r\n          'beneficiary',\r\n          'txHash',\r\n          'timestamp',\r\n          'returnAmount',\r\n        ],\r\n      },\r\n      {\r\n        entity: 'projectCreateEvent',\r\n        keys: ['id', 'txHash', 'timestamp', 'caller'],\r\n      },\r\n    ],\r\n    orderDirection: 'desc',\r\n    orderBy: 'timestamp',\r\n    where,\r\n  })\r\n\r\n  const list = useMemo(\r\n    () =>\r\n      projectEvents?.pages.map(group =>\r\n        group.map((e: ProjectEvent) => {\r\n          let elem: JSX.Element | undefined = undefined\r\n\r\n          if (e.payEvent) {\r\n            elem = <PayEventElem event={e.payEvent as PayEvent} />\r\n          }\r\n          if (e.tapEvent) {\r\n            elem = <TapEventElem event={e.tapEvent as TapEvent} />\r\n          }\r\n          if (e.redeemEvent) {\r\n            elem = <RedeemEventElem event={e.redeemEvent as RedeemEvent} />\r\n          }\r\n          if (e.printReservesEvent) {\r\n            elem = (\r\n              <ReservesEventElem\r\n                event={e.printReservesEvent as PrintReservesEvent}\r\n              />\r\n            )\r\n          }\r\n          if (e.projectCreateEvent) {\r\n            elem = (\r\n              <ProjectCreateEventElem\r\n                event={e.projectCreateEvent as ProjectCreateEvent}\r\n              />\r\n            )\r\n          }\r\n          if (e.deployedERC20Event) {\r\n            elem = (\r\n              <DeployedERC20EventElem\r\n                event={e.deployedERC20Event as DeployedERC20Event}\r\n              />\r\n            )\r\n          }\r\n\r\n          if (!elem) return null\r\n\r\n          return (\r\n            <div\r\n              key={e.id}\r\n              style={{\r\n                marginBottom: 20,\r\n                paddingBottom: 20,\r\n                borderBottom: '1px solid ' + colors.stroke.tertiary,\r\n              }}\r\n            >\r\n              {elem}\r\n            </div>\r\n          )\r\n        }),\r\n      ),\r\n    [colors, projectEvents],\r\n  )\r\n\r\n  const listStatus = useMemo(() => {\r\n    const count =\r\n      projectEvents?.pages?.reduce((prev, cur) => prev + cur.length, 0) ?? 0\r\n\r\n    if (isLoading || isFetchingNextPage) {\r\n      return (\r\n        <div>\r\n          <Loading />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    if (count === 0 && !isLoading) {\r\n      return (\r\n        <div\r\n          style={{\r\n            color: colors.text.secondary,\r\n            paddingTop: 20,\r\n            borderTop: '1px solid ' + colors.stroke.tertiary,\r\n          }}\r\n        >\r\n          <Trans>No activity yet</Trans>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    if (hasNextPage) {\r\n      return (\r\n        <div\r\n          style={{\r\n            textAlign: 'center',\r\n            color: colors.text.secondary,\r\n            cursor: 'pointer',\r\n          }}\r\n          onClick={() => fetchNextPage()}\r\n        >\r\n          <Trans>Load more</Trans>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          textAlign: 'center',\r\n          padding: 10,\r\n          color: colors.text.secondary,\r\n        }}\r\n      >\r\n        <Trans>{count} total</Trans>\r\n      </div>\r\n    )\r\n  }, [\r\n    projectEvents,\r\n    isLoading,\r\n    isFetchingNextPage,\r\n    hasNextPage,\r\n    fetchNextPage,\r\n    colors,\r\n  ])\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          alignItems: 'baseline',\r\n          justifyContent: 'space-between',\r\n          marginBottom: 20,\r\n        }}\r\n      >\r\n        <SectionHeader text={t`Activity`} style={{ margin: 0 }} />\r\n\r\n        <Space direction=\"horizontal\" align=\"center\" size=\"small\">\r\n          <Button\r\n            type=\"text\"\r\n            icon={<DownloadOutlined />}\r\n            onClick={() => setDownloadModalVisible(true)}\r\n          />\r\n\r\n          <Select\r\n            className=\"small\"\r\n            style={{\r\n              width: 200,\r\n            }}\r\n            value={eventFilter}\r\n            onChange={val => setEventFilter(val)}\r\n          >\r\n            <Select.Option value=\"all\">\r\n              <Trans>All events</Trans>\r\n            </Select.Option>\r\n            <Select.Option value=\"pay\">\r\n              <Trans>Paid</Trans>\r\n            </Select.Option>\r\n            {/* TODO */}\r\n            {/* <Select.Option value=\"mintTokens\">\r\n              <Trans>Minted Tokens</Trans>\r\n            </Select.Option> */}\r\n            <Select.Option value=\"redeem\">\r\n              <Trans>Redeemed</Trans>\r\n            </Select.Option>\r\n            <Select.Option value=\"withdraw\">\r\n              <Trans>Distributed Funds</Trans>\r\n            </Select.Option>\r\n            <Select.Option value=\"printReserves\">\r\n              <Trans>Distributed Reserves</Trans>\r\n            </Select.Option>\r\n            <Select.Option value=\"deployERC20\">\r\n              <Trans>ERC20 Deployed</Trans>\r\n            </Select.Option>\r\n            <Select.Option value=\"projectCreate\">\r\n              <Trans>Project Created</Trans>\r\n            </Select.Option>\r\n          </Select>\r\n        </Space>\r\n      </div>\r\n\r\n      {list}\r\n\r\n      {listStatus}\r\n\r\n      <V1DownloadActivityModal\r\n        visible={downloadModalVisible}\r\n        onCancel={() => setDownloadModalVisible(false)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { V1UserContext } from 'contexts/v1/userContext'\r\nimport { useContext } from 'react'\r\n\r\nimport { TransactorInstance } from '../../Transactor'\r\n\r\nexport function useSafeTransferFromTx(): TransactorInstance<{\r\n  newOwnerAddress: string\r\n}> {\r\n  const { transactor, contracts } = useContext(V1UserContext)\r\n  const { projectId, owner } = useContext(V1ProjectContext)\r\n\r\n  return ({ newOwnerAddress }, txOpts) => {\r\n    if (!transactor || !projectId || !contracts?.Projects) {\r\n      txOpts?.onDone?.()\r\n      return Promise.resolve(false)\r\n    }\r\n\r\n    return transactor(\r\n      contracts.Projects,\r\n      'safeTransferFrom(address,address,uint256)',\r\n      [owner, newOwnerAddress, BigNumber.from(projectId).toHexString()],\r\n      txOpts,\r\n    )\r\n  }\r\n}\r\n","import { NetworkContext } from 'contexts/networkContext'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { V1UserContext } from 'contexts/v1/userContext'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { useContext } from 'react'\r\n\r\nimport { TransactorInstance } from '../../Transactor'\r\n\r\nexport function useTransferTokensTx(): TransactorInstance<{\r\n  amount: BigNumber\r\n  to: string\r\n}> {\r\n  const { transactor, contracts } = useContext(V1UserContext)\r\n  const { userAddress } = useContext(NetworkContext)\r\n  const { projectId } = useContext(V1ProjectContext)\r\n\r\n  return ({ amount, to }, txOpts) => {\r\n    if (!transactor || !projectId || !contracts?.Projects) {\r\n      txOpts?.onDone?.()\r\n      return Promise.resolve(false)\r\n    }\r\n\r\n    return transactor(\r\n      contracts.TicketBooth,\r\n      'transfer',\r\n      [\r\n        userAddress,\r\n        BigNumber.from(projectId).toHexString(),\r\n        amount.toHexString(),\r\n        to,\r\n      ],\r\n      txOpts,\r\n    )\r\n  }\r\n}\r\n","import { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { V1UserContext } from 'contexts/v1/userContext'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { useContext } from 'react'\r\n\r\nimport { TransactorInstance } from '../../Transactor'\r\n\r\nexport function useAddToBalanceTx(): TransactorInstance<{\r\n  value: BigNumber\r\n}> {\r\n  const { transactor, contracts } = useContext(V1UserContext)\r\n  const { projectId, terminal } = useContext(V1ProjectContext)\r\n\r\n  return ({ value }, txOpts) => {\r\n    if (\r\n      !transactor ||\r\n      !projectId ||\r\n      !contracts?.TicketBooth ||\r\n      !terminal?.version\r\n    ) {\r\n      txOpts?.onDone?.()\r\n      return Promise.resolve(false)\r\n    }\r\n\r\n    return transactor(\r\n      terminal.version === '1.1'\r\n        ? contracts.TerminalV1_1\r\n        : contracts.TerminalV1,\r\n      'addToBalance',\r\n      [BigNumber.from(projectId).toHexString()],\r\n      {\r\n        ...txOpts,\r\n        value: value.toHexString(),\r\n      },\r\n    )\r\n  }\r\n}\r\n","import { NetworkContext } from 'contexts/networkContext'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { V1ContractName } from 'models/v1/contracts'\r\nimport { useContext } from 'react'\r\nimport { bigNumbersDiff } from 'utils/bigNumbers'\r\n\r\nimport useContractReader from './ContractReader'\r\nimport useShouldUpdateTokens from './ShouldUpdateTokens'\r\n\r\n/** Returns unclaimed balance of user with `userAddress`. */\r\nexport default function useUnclaimedBalanceOfUser() {\r\n  const { userAddress } = useContext(NetworkContext)\r\n  const { projectId, terminal } = useContext(V1ProjectContext)\r\n\r\n  return useContractReader<BigNumber>({\r\n    contract: V1ContractName.TicketBooth,\r\n    functionName: 'stakedBalanceOf',\r\n    args:\r\n      userAddress && projectId\r\n        ? [userAddress, BigNumber.from(projectId).toHexString()]\r\n        : null,\r\n    valueDidChange: bigNumbersDiff,\r\n    updateOn: useShouldUpdateTokens(projectId, terminal?.name, userAddress),\r\n  })\r\n}\r\n","import { t, Trans } from '@lingui/macro'\r\nimport { Button, Divider, Form, Modal } from 'antd'\r\nimport { useForm } from 'antd/lib/form/Form'\r\nimport { FormItems } from 'components/formItems'\r\nimport { useSetProjectHandleTx } from 'hooks/v1/transactor/SetProjectHandleTx'\r\nimport { useSetProjectUriTx } from 'hooks/v1/transactor/SetProjectUriTx'\r\nimport { ProjectMetadataV4 } from 'models/project-metadata'\r\nimport { useEffect, useState } from 'react'\r\nimport {\r\n  cidFromUrl,\r\n  editMetadataForCid,\r\n  logoNameForHandle,\r\n  metadataNameForHandle,\r\n  uploadProjectMetadata,\r\n} from 'utils/ipfs'\r\n\r\nimport { PROJECT_PAY_CHARACTER_LIMIT } from 'constants/numbers'\r\n\r\ntype ProjectInfoFormFields = {\r\n  name: string\r\n  description: string\r\n  infoUri: string\r\n  logoUri: string\r\n  twitter: string\r\n  discord: string\r\n  payButton: string\r\n  payDisclosure: string\r\n  version: number\r\n}\r\n\r\ntype HandleFormFields = {\r\n  handle: string\r\n}\r\n\r\nexport default function EditProjectModal({\r\n  handle,\r\n  metadata,\r\n  visible,\r\n  onSuccess,\r\n  onCancel,\r\n}: {\r\n  handle: string | undefined\r\n  metadata: ProjectMetadataV4 | undefined\r\n  visible?: boolean\r\n  onSuccess?: VoidFunction\r\n  onCancel?: VoidFunction\r\n}) {\r\n  const [loadingSetURI, setLoadingSetURI] = useState<boolean>()\r\n  const [loadingSetHandle, setLoadingSetHandle] = useState<boolean>()\r\n  const [projectInfoForm] = useForm<ProjectInfoFormFields>()\r\n  const [handleForm] = useForm<HandleFormFields>()\r\n  const setProjectUriTx = useSetProjectUriTx()\r\n  const setHandleTx = useSetProjectHandleTx()\r\n\r\n  useEffect(() => {\r\n    if (metadata) {\r\n      projectInfoForm.setFieldsValue({\r\n        name: metadata?.name,\r\n        infoUri: metadata?.infoUri,\r\n        logoUri: metadata?.logoUri,\r\n        twitter: metadata?.twitter,\r\n        discord: metadata?.discord,\r\n        description: metadata?.description,\r\n        payButton: metadata?.payButton,\r\n        payDisclosure: metadata?.payDisclosure,\r\n      })\r\n    }\r\n\r\n    if (handle) {\r\n      handleForm.setFieldsValue({ handle })\r\n    }\r\n  }, [handleForm, handle, projectInfoForm, metadata])\r\n\r\n  async function setUri() {\r\n    if (!handle) return\r\n\r\n    setLoadingSetURI(true)\r\n\r\n    const fields = projectInfoForm.getFieldsValue(true)\r\n\r\n    const uploadedMetadata = await uploadProjectMetadata(\r\n      {\r\n        name: fields.name,\r\n        description: fields.description,\r\n        logoUri: fields.logoUri,\r\n        infoUri: fields.infoUri,\r\n        twitter: fields.twitter,\r\n        discord: fields.discord,\r\n        payButton: fields.payButton.substring(0, PROJECT_PAY_CHARACTER_LIMIT), // Enforce limit\r\n        payDisclosure: fields.payDisclosure,\r\n        tokens: metadata?.tokens ?? [],\r\n      },\r\n      handle,\r\n    )\r\n\r\n    if (!uploadedMetadata.IpfsHash) {\r\n      setLoadingSetURI(false)\r\n      return\r\n    }\r\n\r\n    setProjectUriTx(\r\n      { cid: uploadedMetadata.IpfsHash },\r\n      {\r\n        onDone: () => setLoadingSetURI(false),\r\n        onConfirmed: () => {\r\n          if (onSuccess) onSuccess()\r\n\r\n          // Set name for new metadata file\r\n          editMetadataForCid(uploadedMetadata.IpfsHash, {\r\n            name: metadataNameForHandle(handle),\r\n          })\r\n\r\n          // If logo changed\r\n          if (metadata?.logoUri !== fields.logoUri) {\r\n            // Set name for new logo file\r\n            editMetadataForCid(cidFromUrl(fields.logoUri), {\r\n              name: logoNameForHandle(handle),\r\n            })\r\n          }\r\n\r\n          projectInfoForm.resetFields()\r\n        },\r\n      },\r\n    )\r\n  }\r\n\r\n  function setHandle() {\r\n    setLoadingSetHandle(true)\r\n\r\n    setHandleTx(\r\n      { handle: handleForm.getFieldValue('handle') },\r\n      {\r\n        onDone: () => setLoadingSetHandle(false),\r\n        onConfirmed: () => handleForm.resetFields(),\r\n      },\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={t`Edit project`}\r\n      visible={visible}\r\n      onCancel={onCancel}\r\n      cancelButtonProps={{ hidden: true }}\r\n      okButtonProps={{ hidden: true }}\r\n      width={600}\r\n    >\r\n      <Form form={handleForm} layout=\"vertical\">\r\n        <FormItems.ProjectHandleFormItem\r\n          name=\"handle\"\r\n          initialValue={handleForm.getFieldValue('handle')}\r\n          requireState=\"notExist\"\r\n          required\r\n        />\r\n        <Form.Item>\r\n          <Button type=\"primary\" loading={loadingSetHandle} onClick={setHandle}>\r\n            <Trans>Save handle</Trans>\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n\r\n      <Divider />\r\n\r\n      <Form form={projectInfoForm} layout=\"vertical\">\r\n        <FormItems.ProjectName\r\n          name=\"name\"\r\n          formItemProps={{ rules: [{ required: true }] }}\r\n        />\r\n        <FormItems.ProjectDescription name=\"description\" />\r\n        <FormItems.ProjectLink name=\"infoUri\" />\r\n        <FormItems.ProjectTwitter name=\"twitter\" />\r\n        <FormItems.ProjectDiscord name=\"discord\" />\r\n        <FormItems.ProjectPayButton name=\"payButton\" />\r\n        <FormItems.ProjectPayDisclosure name=\"payDisclosure\" />\r\n        <FormItems.ProjectLogoUri\r\n          name=\"logoUri\"\r\n          initialUrl={projectInfoForm.getFieldValue('logoUri')}\r\n          onSuccess={logoUri => projectInfoForm.setFieldsValue({ logoUri })}\r\n        />\r\n        <Form.Item>\r\n          <Button type=\"primary\" loading={loadingSetURI} onClick={setUri}>\r\n            <Trans>Save changes</Trans>\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  )\r\n}\r\n","import { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { V1UserContext } from 'contexts/v1/userContext'\r\nimport { formatBytes32String } from '@ethersproject/strings'\r\nimport { useContext } from 'react'\r\n\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\n\r\nimport { TransactorInstance } from '../../Transactor'\r\n\r\nexport function useSetProjectHandleTx(): TransactorInstance<{\r\n  handle: string\r\n}> {\r\n  const { transactor, contracts } = useContext(V1UserContext)\r\n  const { projectId } = useContext(V1ProjectContext)\r\n\r\n  return ({ handle }, txOpts) => {\r\n    if (!transactor || !projectId || !contracts?.TicketBooth) {\r\n      txOpts?.onDone?.()\r\n      return Promise.resolve(false)\r\n    }\r\n\r\n    return transactor(\r\n      contracts.Projects,\r\n      'setHandle',\r\n      [BigNumber.from(projectId).toHexString(), formatBytes32String(handle)],\r\n      txOpts,\r\n    )\r\n  }\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { Button, Modal } from 'antd'\r\nimport ExternalLink from 'components/ExternalLink'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { useAddToBalanceTx } from 'hooks/v1/transactor/AddToBalanceTx'\r\nimport { useMigrateV1ProjectTx } from 'hooks/v1/transactor/MigrateV1ProjectTx'\r\nimport { useContext, useState } from 'react'\r\nimport { getTerminalAddress } from 'utils/v1/terminals'\r\n\r\nexport default function MigrateV1Pt1Modal({\r\n  visible,\r\n  onCancel,\r\n}: {\r\n  visible: boolean\r\n  onCancel: VoidFunction\r\n}) {\r\n  const [loadingAddToBalance, setLoadingAddToBalance] = useState<boolean>()\r\n  const [loadingMigrate, setLoadingMigrate] = useState<boolean>()\r\n  const { balance, handle } = useContext(V1ProjectContext)\r\n  const migrateV1ProjectTx = useMigrateV1ProjectTx()\r\n  const addToBalanceTx = useAddToBalanceTx()\r\n\r\n  const needsBalance = balance?.eq(0)\r\n\r\n  function migrate() {\r\n    const newTerminalAddress = getTerminalAddress('1.1')\r\n\r\n    if (!newTerminalAddress) return\r\n\r\n    setLoadingMigrate(true)\r\n\r\n    migrateV1ProjectTx(\r\n      { newTerminalAddress },\r\n      {\r\n        onDone: () => {\r\n          setLoadingMigrate(false)\r\n          onCancel()\r\n        },\r\n      },\r\n    )\r\n  }\r\n\r\n  function add1Wei() {\r\n    setLoadingAddToBalance(true)\r\n\r\n    addToBalanceTx(\r\n      { value: BigNumber.from(1) },\r\n      {\r\n        onDone: () => setLoadingAddToBalance(false),\r\n      },\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      onOk={migrate}\r\n      onCancel={onCancel}\r\n      okText=\"Migrate to V1.1\"\r\n      okType=\"primary\"\r\n      confirmLoading={loadingMigrate}\r\n      okButtonProps={{ disabled: needsBalance }}\r\n    >\r\n      <h2>\r\n        <Trans>Migrate to Juicebox V1.1</Trans>\r\n      </h2>\r\n      <p>\r\n        <Trans>\r\n          This project is currently using the Juicebox V1 terminal contract. New\r\n          features introduced in V1.1 allow the project owner to:\r\n        </Trans>\r\n      </p>\r\n      <ul>\r\n        <li>\r\n          <Trans>Pause received payments</Trans>\r\n        </li>\r\n        <li>\r\n          <Trans>Burn project tokens</Trans>\r\n        </li>\r\n        <li>\r\n          <Trans>Mint project tokens on demand</Trans>\r\n        </li>\r\n      </ul>\r\n      <p>\r\n        <ExternalLink href=\"https://juicebox.notion.site/Migration-plan-1a05f62d80284cb1b8df2a3b53da341a\">\r\n          <Trans>Documentation on v1.1 contracts</Trans>\r\n        </ExternalLink>\r\n      </p>\r\n\r\n      {needsBalance && (\r\n        <div>\r\n          <p>\r\n            <Trans>\r\n              <b>NOTE:</b> This project has a balance of 0. Projects cannot be\r\n              migrated without a balance. To migrate this project, first pay it\r\n              or use the button below to deposit 1 wei (0.000000000000000001 or\r\n              10<sup>-18</sup> ETH).\r\n            </Trans>\r\n          </p>\r\n          <p>\r\n            <Button block onClick={add1Wei} loading={loadingAddToBalance}>\r\n              <Trans>Deposit 1 wei to @{handle}</Trans>\r\n            </Button>\r\n          </p>\r\n        </div>\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { V1UserContext } from 'contexts/v1/userContext'\r\nimport { useContext } from 'react'\r\n\r\nimport { TransactorInstance } from '../../Transactor'\r\n\r\nexport function useMigrateV1ProjectTx(): TransactorInstance<{\r\n  newTerminalAddress: string\r\n}> {\r\n  const { transactor, contracts } = useContext(V1UserContext)\r\n  const { projectId } = useContext(V1ProjectContext)\r\n\r\n  return ({ newTerminalAddress }, txOpts) => {\r\n    if (!transactor || !projectId || !contracts?.TicketBooth) {\r\n      txOpts?.onDone?.()\r\n      return Promise.resolve(false)\r\n    }\r\n\r\n    return transactor(\r\n      contracts.TerminalV1,\r\n      'migrate',\r\n      [BigNumber.from(projectId).toHexString(), newTerminalAddress],\r\n      txOpts,\r\n    )\r\n  }\r\n}\r\n","import { t, Trans } from '@lingui/macro'\r\nimport { Button, Tooltip } from 'antd'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport {\r\n  OperatorPermission,\r\n  useHasPermission,\r\n} from 'hooks/v1/contractReader/HasPermission'\r\nimport { useContext, useState } from 'react'\r\nimport { SettingOutlined, ToolOutlined } from '@ant-design/icons'\r\n\r\nimport { useSafeTransferFromTx } from 'hooks/v1/transactor/SafeTransferFromTx'\r\nimport { useTransferTokensTx } from 'hooks/v1/transactor/TransferTokensTx'\r\nimport { useAddToBalanceTx } from 'hooks/v1/transactor/AddToBalanceTx'\r\nimport { useSetProjectUriTx } from 'hooks/v1/transactor/SetProjectUriTx'\r\nimport useUnclaimedBalanceOfUser from 'hooks/v1/contractReader/UnclaimedBalanceOfUser'\r\nimport { useIsUserAddress } from 'hooks/IsUserAddress'\r\nimport { ProjectToolsDrawer } from 'components/Project/ProjectToolsDrawer/ProjectToolsDrawer'\r\n\r\nimport EditProjectModal from './modals/EditProjectModal'\r\nimport MigrateV1Pt1Modal from './modals/MigrateV1Pt1Modal'\r\n\r\nexport default function V1ProjectHeaderActions() {\r\n  const {\r\n    projectId,\r\n    handle,\r\n    metadata,\r\n    isPreviewMode,\r\n    terminal,\r\n    owner,\r\n    tokenSymbol,\r\n  } = useContext(V1ProjectContext)\r\n  const [migrateDrawerVisible, setMigrateDrawerVisible] =\r\n    useState<boolean>(false)\r\n  const [toolDrawerVisible, setToolDrawerVisible] = useState<boolean>(false)\r\n  const [editProjectModalVisible, setEditProjectModalVisible] =\r\n    useState<boolean>(false)\r\n\r\n  const hasEditPermission = useHasPermission([\r\n    OperatorPermission.SetHandle,\r\n    OperatorPermission.SetUri,\r\n  ])\r\n\r\n  const unclaimedTokenBalance = useUnclaimedBalanceOfUser()\r\n\r\n  const isOwner = useIsUserAddress(owner)\r\n\r\n  const allowMigrate = isOwner && terminal?.version === '1'\r\n\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  if (isPreviewMode || !projectId) return null\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <span\r\n        style={{\r\n          color: colors.text.tertiary,\r\n          paddingRight: 10,\r\n        }}\r\n      >\r\n        <Trans>ID: {projectId}</Trans>{' '}\r\n        {terminal?.version && (\r\n          <Tooltip\r\n            title={t`Version of the terminal contract used by this project.`}\r\n          >\r\n            <span\r\n              style={{\r\n                padding: '2px 4px',\r\n                background: colors.background.l1,\r\n                cursor: allowMigrate ? 'pointer' : 'default',\r\n              }}\r\n              onClick={() => {\r\n                if (!allowMigrate) return\r\n                setMigrateDrawerVisible(true)\r\n              }}\r\n            >\r\n              V{terminal.version}\r\n            </span>\r\n          </Tooltip>\r\n        )}\r\n      </span>\r\n\r\n      <div>\r\n        <Tooltip title={t`Tools`} placement=\"bottom\">\r\n          <Button\r\n            onClick={() => setToolDrawerVisible(true)}\r\n            icon={<ToolOutlined />}\r\n            type=\"text\"\r\n          />\r\n        </Tooltip>\r\n        {hasEditPermission && (\r\n          <Tooltip\r\n            title={t`Reconfigure project and funding details`}\r\n            placement=\"bottom\"\r\n          >\r\n            <Button\r\n              onClick={() => setEditProjectModalVisible(true)}\r\n              icon={<SettingOutlined />}\r\n              type=\"text\"\r\n            />\r\n          </Tooltip>\r\n        )}\r\n      </div>\r\n\r\n      <MigrateV1Pt1Modal\r\n        visible={migrateDrawerVisible}\r\n        onCancel={() => setMigrateDrawerVisible(false)}\r\n      />\r\n      <ProjectToolsDrawer\r\n        visible={toolDrawerVisible}\r\n        onClose={() => setToolDrawerVisible(false)}\r\n        unclaimedTokenBalance={unclaimedTokenBalance}\r\n        tokenSymbol={tokenSymbol}\r\n        ownerAddress={owner}\r\n        useTransferProjectOwnershipTx={useSafeTransferFromTx}\r\n        useTransferUnclaimedTokensTx={useTransferTokensTx}\r\n        useAddToBalanceTx={useAddToBalanceTx}\r\n        useSetProjectUriTx={useSetProjectUriTx}\r\n        useEditV2ProjectDetailsTx={() => undefined}\r\n        useDeployProjectPayerTx={() => undefined}\r\n      />\r\n      <EditProjectModal\r\n        visible={editProjectModalVisible}\r\n        metadata={metadata}\r\n        handle={handle}\r\n        onSuccess={() => setEditProjectModalVisible(false)}\r\n        onCancel={() => setEditProjectModalVisible(false)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { V1UserContext } from 'contexts/v1/userContext'\r\nimport { useContext } from 'react'\r\n\r\nimport { TransactorInstance } from '../../Transactor'\r\n\r\nexport function useIssueTokensTx(): TransactorInstance<{\r\n  name: string\r\n  symbol: string\r\n}> {\r\n  const { transactor, contracts } = useContext(V1UserContext)\r\n  const { projectId } = useContext(V1ProjectContext)\r\n\r\n  return ({ name, symbol }, txOpts) => {\r\n    if (!transactor || !projectId || !contracts?.TicketBooth) {\r\n      txOpts?.onDone?.()\r\n      return Promise.resolve(false)\r\n    }\r\n\r\n    return transactor(\r\n      contracts.TicketBooth,\r\n      'issue',\r\n      [BigNumber.from(projectId).toHexString(), name, symbol],\r\n      txOpts,\r\n    )\r\n  }\r\n}\r\n","import { t, Trans } from '@lingui/macro'\r\nimport { Modal, Space, Form } from 'antd'\r\nimport { useForm } from 'antd/lib/form/Form'\r\n\r\nimport CurrencySymbol from 'components/CurrencySymbol'\r\nimport InputAccessoryButton from 'components/InputAccessoryButton'\r\nimport FormattedNumberInput from 'components/inputs/FormattedNumberInput'\r\n\r\nimport { NetworkContext } from 'contexts/networkContext'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport useClaimableOverflowOf from 'hooks/v1/contractReader/ClaimableOverflowOf'\r\nimport { useRedeemRate } from 'hooks/v1/contractReader/RedeemRate'\r\nimport useTotalBalanceOf from 'hooks/v1/contractReader/TotalBalanceOf'\r\nimport { useRedeemTokensTx } from 'hooks/v1/transactor/RedeemTokensTx'\r\nimport { CSSProperties, useContext, useState } from 'react'\r\nimport { formattedNum, formatWad, fromWad, parseWad } from 'utils/formatNumber'\r\nimport { decodeFundingCycleMetadata } from 'utils/v1/fundingCycle'\r\nimport { tokenSymbolText } from 'utils/tokenSymbolText'\r\n\r\nimport { V1_CURRENCY_USD } from 'constants/v1/currency'\r\n\r\n// This double as the 'Redeem' and 'Burn' modal depending on if project has overflow\r\nexport default function RedeemModal({\r\n  visible,\r\n  onOk,\r\n  onCancel,\r\n}: {\r\n  visible?: boolean\r\n  onOk?: VoidFunction\r\n  onCancel?: VoidFunction\r\n}) {\r\n  const [redeemAmount, setRedeemAmount] = useState<string>()\r\n  const [loading, setLoading] = useState<boolean>()\r\n  const redeemTokensTx = useRedeemTokensTx()\r\n\r\n  const [form] = useForm<{\r\n    redeemAmount: string\r\n  }>()\r\n\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n  const { userAddress } = useContext(NetworkContext)\r\n  const { projectId, tokenSymbol, currentFC, terminal, overflow } =\r\n    useContext(V1ProjectContext)\r\n\r\n  const fcMetadata = decodeFundingCycleMetadata(currentFC?.metadata)\r\n\r\n  const totalBalance = useTotalBalanceOf(userAddress, projectId, terminal?.name)\r\n\r\n  const maxClaimable = useClaimableOverflowOf()\r\n\r\n  const rewardAmount = useRedeemRate({\r\n    tokenAmount: redeemAmount,\r\n    fundingCycle: currentFC,\r\n  })\r\n\r\n  // 0.5% slippage for USD-denominated projects\r\n  const minAmount = currentFC?.currency.eq(V1_CURRENCY_USD)\r\n    ? rewardAmount?.mul(1000).div(1005)\r\n    : rewardAmount\r\n\r\n  async function redeem() {\r\n    await form.validateFields()\r\n    if (!minAmount) return\r\n\r\n    setLoading(true)\r\n\r\n    redeemTokensTx(\r\n      {\r\n        redeemAmount: parseWad(redeemAmount),\r\n        minAmount,\r\n        preferConverted: false, // TODO support in UI\r\n      },\r\n      {\r\n        onConfirmed: () => setRedeemAmount(undefined),\r\n        onDone: () => {\r\n          setLoading(false)\r\n          onOk?.()\r\n        },\r\n      },\r\n    )\r\n  }\r\n\r\n  const statsStyle: CSSProperties = {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'baseline',\r\n  }\r\n\r\n  const tokensTextLong = tokenSymbolText({\r\n    tokenSymbol: tokenSymbol,\r\n    capitalize: false,\r\n    plural: true,\r\n    includeTokenWord: true,\r\n  })\r\n  const tokensTextShort = tokenSymbolText({\r\n    tokenSymbol: tokenSymbol,\r\n    capitalize: false,\r\n    plural: true,\r\n  })\r\n\r\n  let modalTitle: string\r\n  // Defining whole sentence for translations\r\n  if (overflow?.gt(0)) {\r\n    modalTitle = t`Redeem ${tokensTextLong} for ETH`\r\n  } else {\r\n    modalTitle = t`Burn ${tokensTextLong}`\r\n  }\r\n\r\n  let buttonText: string\r\n  // Defining whole sentence for translations\r\n  if (overflow?.gt(0)) {\r\n    buttonText = t`Redeem ${formattedNum(redeemAmount, {\r\n      precision: 2,\r\n    })} ${tokensTextShort} for ETH`\r\n  } else {\r\n    buttonText = t`Burn ${formattedNum(redeemAmount, {\r\n      precision: 2,\r\n    })} ${tokensTextShort}`\r\n  }\r\n\r\n  const redeemBN = parseWad(redeemAmount ?? 0)\r\n\r\n  const validateRedeemAmount = () => {\r\n    if (redeemBN.eq(0)) {\r\n      return Promise.reject(t`Required`)\r\n    } else if (redeemBN.gt(totalBalance ?? 0)) {\r\n      return Promise.reject(t`Balance exceeded`)\r\n    }\r\n    return Promise.resolve()\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={modalTitle}\r\n      visible={visible}\r\n      confirmLoading={loading}\r\n      onOk={() => {\r\n        redeem()\r\n      }}\r\n      onCancel={() => {\r\n        setRedeemAmount(undefined)\r\n\r\n        if (onCancel) onCancel()\r\n      }}\r\n      okText={buttonText}\r\n      okButtonProps={{\r\n        disabled: !redeemAmount || parseInt(redeemAmount) === 0,\r\n      }}\r\n      width={540}\r\n      centered\r\n    >\r\n      <Space direction=\"vertical\" style={{ width: '100%' }}>\r\n        <div>\r\n          <p style={statsStyle}>\r\n            <Trans>Bonding curve:</Trans>{' '}\r\n            <span>\r\n              {fcMetadata?.bondingCurveRate !== undefined\r\n                ? fcMetadata.bondingCurveRate / 2\r\n                : '--'}\r\n              %\r\n            </span>\r\n          </p>\r\n          <p style={statsStyle}>\r\n            {tokenSymbolText({ tokenSymbol: tokenSymbol, capitalize: true })}{' '}\r\n            balance:{' '}\r\n            <span>\r\n              {formatWad(totalBalance ?? 0, { precision: 0 })} {tokensTextShort}\r\n            </span>\r\n          </p>\r\n          <p style={statsStyle}>\r\n            <Trans>\r\n              Currently worth:{' '}\r\n              <span>\r\n                <CurrencySymbol currency=\"ETH\" />\r\n                {formatWad(maxClaimable, { precision: 4 })}\r\n              </span>\r\n            </Trans>\r\n          </p>\r\n        </div>\r\n        <p>\r\n          {overflow?.gt(0) ? (\r\n            <Trans>\r\n              Tokens can be redeemed for a portion of this project's ETH\r\n              overflow, according to the bonding curve rate of the current\r\n              funding cycle.{' '}\r\n              <span style={{ fontWeight: 500, color: colors.text.warn }}>\r\n                Tokens are burned when they are redeemed.\r\n              </span>\r\n            </Trans>\r\n          ) : (\r\n            <Trans>\r\n              <span style={{ fontWeight: 500, color: colors.text.warn }}>\r\n                <strong>This project has no overflow</strong>, so you will not\r\n                receive any ETH for burning tokens.\r\n              </span>\r\n            </Trans>\r\n          )}\r\n        </p>\r\n        <div>\r\n          <Form\r\n            form={form}\r\n            onKeyDown={e => {\r\n              if (e.key === 'Enter') redeem()\r\n            }}\r\n          >\r\n            <FormattedNumberInput\r\n              min={0}\r\n              step={0.001}\r\n              placeholder=\"0\"\r\n              value={redeemAmount}\r\n              accessory={\r\n                <InputAccessoryButton\r\n                  content={t`MAX`}\r\n                  onClick={() => setRedeemAmount(fromWad(totalBalance))}\r\n                />\r\n              }\r\n              formItemProps={{\r\n                rules: [{ validator: validateRedeemAmount }],\r\n              }}\r\n              disabled={totalBalance?.eq(0)}\r\n              onChange={val => setRedeemAmount(val)}\r\n            />\r\n          </Form>\r\n          {overflow?.gt(0) ? (\r\n            <div style={{ fontWeight: 500, marginTop: 20 }}>\r\n              <Trans>\r\n                You will receive{' '}\r\n                {currentFC?.currency.eq(V1_CURRENCY_USD) ? 'minimum ' : ' '}\r\n                {formatWad(minAmount, { precision: 8 }) || '--'} ETH\r\n              </Trans>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </Space>\r\n    </Modal>\r\n  )\r\n}\r\n","import { NetworkContext } from 'contexts/networkContext'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { V1UserContext } from 'contexts/v1/userContext'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { useContext } from 'react'\r\n\r\nimport { TransactorInstance } from '../../Transactor'\r\n\r\nexport function useRedeemTokensTx(): TransactorInstance<{\r\n  redeemAmount: BigNumber\r\n  minAmount: BigNumber\r\n  preferConverted: boolean\r\n}> {\r\n  const { transactor, contracts } = useContext(V1UserContext)\r\n  const { userAddress } = useContext(NetworkContext)\r\n  const { projectId, terminal } = useContext(V1ProjectContext)\r\n\r\n  return ({ redeemAmount, minAmount, preferConverted }, txOpts) => {\r\n    if (\r\n      !transactor ||\r\n      !userAddress ||\r\n      !projectId ||\r\n      !contracts?.Projects ||\r\n      !terminal?.version\r\n    ) {\r\n      txOpts?.onDone?.()\r\n      return Promise.resolve(false)\r\n    }\r\n\r\n    return transactor(\r\n      terminal.version === '1.1'\r\n        ? contracts.TerminalV1_1\r\n        : contracts.TerminalV1,\r\n      'redeem',\r\n      [\r\n        userAddress,\r\n        BigNumber.from(projectId).toHexString(),\r\n        redeemAmount.toHexString(),\r\n        minAmount.toHexString(),\r\n        userAddress,\r\n        preferConverted,\r\n      ],\r\n      txOpts,\r\n    )\r\n  }\r\n}\r\n","import { NetworkContext } from 'contexts/networkContext'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { useContext, useMemo } from 'react'\r\nimport { bigNumbersDiff } from 'utils/bigNumbers'\r\n\r\nimport useContractReader from './ContractReader'\r\nimport useTotalBalanceOf from './TotalBalanceOf'\r\n\r\n/** Returns claimable amount of project tokens for user with address `userAddress` and balance `totalBalance`. */\r\nexport default function useClaimableOverflowOf() {\r\n  const { terminal, projectId } = useContext(V1ProjectContext)\r\n  const { userAddress } = useContext(NetworkContext)\r\n\r\n  const totalBalance = useTotalBalanceOf(userAddress, projectId, terminal?.name)\r\n\r\n  const _projectId = projectId\r\n    ? BigNumber.from(projectId).toHexString()\r\n    : undefined\r\n\r\n  return useContractReader<BigNumber>({\r\n    contract: terminal?.name,\r\n    functionName: 'claimableOverflowOf',\r\n    args:\r\n      userAddress && _projectId\r\n        ? [userAddress, _projectId, totalBalance?.toHexString()]\r\n        : null,\r\n    valueDidChange: bigNumbersDiff,\r\n    updateOn: useMemo(\r\n      () =>\r\n        _projectId && userAddress\r\n          ? [\r\n              {\r\n                contract: terminal?.name,\r\n                eventName: 'Pay',\r\n                topics: [[], _projectId, userAddress],\r\n              },\r\n              {\r\n                contract: terminal?.name,\r\n                eventName: 'Redeem',\r\n                topics: [_projectId, userAddress],\r\n              },\r\n            ]\r\n          : undefined,\r\n      [_projectId, userAddress, terminal?.name],\r\n    ),\r\n  })\r\n}\r\n","import { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { V1BallotState } from 'models/ballot'\r\nimport { V1ContractName } from 'models/v1/contracts'\r\nimport { V1FundingCycle } from 'models/v1/fundingCycle'\r\nimport { useContext, useMemo } from 'react'\r\nimport { bigNumbersDiff } from 'utils/bigNumbers'\r\nimport { parseWad } from 'utils/formatNumber'\r\nimport { decodeFundingCycleMetadata } from 'utils/v1/fundingCycle'\r\n\r\nimport useContractReader from './ContractReader'\r\n\r\n// Returns the value in ETH that an amount of tokens can be redeemed for\r\nexport function useRedeemRate({\r\n  tokenAmount,\r\n  fundingCycle,\r\n}: {\r\n  tokenAmount: string | undefined\r\n  fundingCycle: V1FundingCycle | undefined\r\n}) {\r\n  const { projectId, terminal } = useContext(V1ProjectContext)\r\n\r\n  const metadata = decodeFundingCycleMetadata(fundingCycle?.metadata)\r\n\r\n  const currentOverflow = useContractReader<BigNumber>({\r\n    contract: terminal?.name,\r\n    functionName: 'currentOverflowOf',\r\n    args: projectId ? [BigNumber.from(projectId).toHexString()] : null,\r\n    valueDidChange: bigNumbersDiff,\r\n  })\r\n\r\n  const reservedTicketBalance = useContractReader<BigNumber>({\r\n    contract: terminal?.name,\r\n    functionName: 'reservedTicketBalanceOf',\r\n    args:\r\n      projectId && metadata?.reservedRate\r\n        ? [projectId, metadata.reservedRate]\r\n        : null,\r\n    valueDidChange: bigNumbersDiff,\r\n  })\r\n\r\n  const totalSupply = useContractReader<BigNumber>({\r\n    contract: V1ContractName.TicketBooth,\r\n    functionName: 'totalSupplyOf',\r\n    args: projectId ? [BigNumber.from(projectId).toHexString()] : null,\r\n    valueDidChange: bigNumbersDiff,\r\n  })?.add(reservedTicketBalance ? reservedTicketBalance : BigNumber.from(0))\r\n\r\n  const currentBallotState = useContractReader<V1BallotState>({\r\n    contract: V1ContractName.FundingCycles,\r\n    functionName: 'currentBallotStateOf',\r\n    args: projectId ? [BigNumber.from(projectId).toHexString()] : null,\r\n  })\r\n\r\n  return useMemo(() => {\r\n    if (!metadata || !totalSupply?.gt(0)) return BigNumber.from(0)\r\n\r\n    const bondingCurveRate =\r\n      currentBallotState === V1BallotState.Active\r\n        ? metadata.reconfigurationBondingCurveRate\r\n        : metadata.bondingCurveRate\r\n\r\n    const base =\r\n      totalSupply && currentOverflow && tokenAmount\r\n        ? currentOverflow.mul(parseWad(tokenAmount)).div(totalSupply)\r\n        : BigNumber.from(0)\r\n\r\n    if (!bondingCurveRate || !base || !currentOverflow) return BigNumber.from(0)\r\n\r\n    const numerator = BigNumber.from(bondingCurveRate).add(\r\n      parseWad(tokenAmount ?? 0)\r\n        .mul(200 - bondingCurveRate)\r\n        .div(totalSupply),\r\n    )\r\n    const denominator = 200\r\n\r\n    // Formula: https://www.desmos.com/calculator/sp9ru6zbpk\r\n    return base.mul(numerator).div(denominator)\r\n  }, [totalSupply, currentOverflow, currentBallotState, metadata, tokenAmount])\r\n}\r\n","import { t, Trans } from '@lingui/macro'\r\nimport { Form, Modal, Space } from 'antd'\r\nimport FormattedAddress from 'components/FormattedAddress'\r\nimport InputAccessoryButton from 'components/InputAccessoryButton'\r\nimport FormattedNumberInput from 'components/inputs/FormattedNumberInput'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport * as constants from '@ethersproject/constants'\r\nimport useUnclaimedBalanceOfUser from 'hooks/v1/contractReader/UnclaimedBalanceOfUser'\r\nimport { useUnstakeTokensTx } from 'hooks/v1/transactor/UnstakeTokensTx'\r\nimport { useContext, useLayoutEffect, useState } from 'react'\r\nimport { formatWad, fromWad, parseWad } from 'utils/formatNumber'\r\nimport { tokenSymbolText } from 'utils/tokenSymbolText'\r\n\r\nexport default function ConfirmUnstakeTokensModal({\r\n  visible,\r\n  onCancel,\r\n  onConfirmed,\r\n}: {\r\n  visible?: boolean\r\n  onCancel?: VoidFunction\r\n  onConfirmed?: VoidFunction\r\n}) {\r\n  const [loading, setLoading] = useState<boolean>()\r\n  const [unstakeAmount, setUnstakeAmount] = useState<string>()\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n  const { tokenSymbol, tokenAddress } = useContext(V1ProjectContext)\r\n  const unstakeTokensTx = useUnstakeTokensTx()\r\n\r\n  const unclaimedBalance = useUnclaimedBalanceOfUser()\r\n\r\n  useLayoutEffect(() => {\r\n    setUnstakeAmount(fromWad(unclaimedBalance))\r\n  }, [unclaimedBalance])\r\n\r\n  function unstake() {\r\n    if (\r\n      !unstakeAmount ||\r\n      parseWad(unstakeAmount).eq(0) // Disable claiming 0 tokens\r\n    )\r\n      return\r\n\r\n    setLoading(true)\r\n\r\n    unstakeTokensTx(\r\n      { unstakeAmount: parseWad(unstakeAmount) },\r\n      {\r\n        onDone: () => setLoading(false),\r\n        onConfirmed,\r\n      },\r\n    )\r\n  }\r\n\r\n  const ticketsIssued = tokenAddress\r\n    ? tokenAddress !== constants.AddressZero\r\n    : false\r\n\r\n  const tokenTextPlural = tokenSymbolText({ tokenSymbol, plural: true })\r\n\r\n  return (\r\n    <Modal\r\n      title={t`Claim ${tokenTextPlural} as ERC-20 tokens`}\r\n      visible={visible}\r\n      onOk={unstake}\r\n      okText={t`Claim ${tokenTextPlural}`}\r\n      confirmLoading={loading}\r\n      okButtonProps={{ disabled: parseWad(unstakeAmount).eq(0) }}\r\n      onCancel={onCancel}\r\n      width={600}\r\n      centered\r\n    >\r\n      <Space direction=\"vertical\" size=\"large\">\r\n        {!ticketsIssued && (\r\n          <div style={{ padding: 10, background: colors.background.l1 }}>\r\n            <Trans>\r\n              <b>Note:</b> Tokens cannot be claimed because no ERC-20 token has\r\n              been issued for this project. ERC-20 tokens must be issued by the\r\n              project owner.\r\n            </Trans>\r\n          </div>\r\n        )}\r\n\r\n        <div>\r\n          <p>\r\n            <Trans>\r\n              Claiming {tokenSymbol} tokens will convert your {tokenSymbol}{' '}\r\n              balance to ERC-20 tokens and mint them to your wallet.\r\n            </Trans>\r\n          </p>\r\n          <p style={{ fontWeight: 600 }}>\r\n            <Trans>\r\n              If you're unsure if you need to claim, you probably don't.\r\n            </Trans>\r\n          </p>\r\n          <p>\r\n            <Trans>\r\n              You can still redeem your {tokenSymbol} tokens for overflow\r\n              without claiming them, and you can transfer your unclaimed{' '}\r\n              {tokenSymbol} tokens to another address from the Tools menu, which\r\n              can be accessed from the wrench icon in the upper right hand\r\n              corner of this project.\r\n            </Trans>\r\n          </p>\r\n        </div>\r\n\r\n        <div>\r\n          <div>\r\n            <Trans>\r\n              <label>Your unclaimed {tokenSymbol} tokens:</label>{' '}\r\n              {formatWad(unclaimedBalance, { precision: 8 })}\r\n            </Trans>\r\n          </div>\r\n          {ticketsIssued && (\r\n            <div>\r\n              <Trans>\r\n                <label>{tokenSymbol} ERC-20 address:</label>{' '}\r\n                <FormattedAddress address={tokenAddress} />\r\n              </Trans>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <Form layout=\"vertical\">\r\n          <Form.Item label={t`Amount of ERC-20 tokens to claim`}>\r\n            <FormattedNumberInput\r\n              min={0}\r\n              max={parseFloat(fromWad(unclaimedBalance))}\r\n              disabled={!ticketsIssued}\r\n              placeholder=\"0\"\r\n              value={unstakeAmount}\r\n              accessory={\r\n                <InputAccessoryButton\r\n                  content={t`MAX`}\r\n                  onClick={() => setUnstakeAmount(fromWad(unclaimedBalance))}\r\n                />\r\n              }\r\n              onChange={val => setUnstakeAmount(val)}\r\n            />\r\n          </Form.Item>\r\n        </Form>\r\n      </Space>\r\n    </Modal>\r\n  )\r\n}\r\n","import { NetworkContext } from 'contexts/networkContext'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { V1UserContext } from 'contexts/v1/userContext'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { useContext } from 'react'\r\n\r\nimport { TransactorInstance } from '../../Transactor'\r\n\r\nexport function useUnstakeTokensTx(): TransactorInstance<{\r\n  unstakeAmount: BigNumber\r\n}> {\r\n  const { transactor, contracts } = useContext(V1UserContext)\r\n  const { userAddress } = useContext(NetworkContext)\r\n  const { projectId } = useContext(V1ProjectContext)\r\n\r\n  return ({ unstakeAmount }, txOpts) => {\r\n    if (!transactor || !userAddress || !projectId || !contracts?.TicketBooth) {\r\n      txOpts?.onDone?.()\r\n      return Promise.resolve(false)\r\n    }\r\n\r\n    return transactor(\r\n      contracts.TicketBooth,\r\n      'unstake',\r\n      [\r\n        userAddress,\r\n        BigNumber.from(projectId).toHexString(),\r\n        unstakeAmount.toHexString(),\r\n      ],\r\n      txOpts,\r\n    )\r\n  }\r\n}\r\n","import { Form, Input, Modal, Switch } from 'antd'\r\nimport { useForm } from 'antd/lib/form/Form'\r\nimport InputAccessoryButton from 'components/InputAccessoryButton'\r\nimport FormattedNumberInput from 'components/inputs/FormattedNumberInput'\r\n\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport * as constants from '@ethersproject/constants'\r\nimport { isAddress } from '@ethersproject/address'\r\nimport { usePrintTokensTx } from 'hooks/v1/transactor/PrintTokensTx'\r\nimport { useContext, useMemo, useState } from 'react'\r\nimport { parseWad } from 'utils/formatNumber'\r\nimport { t, Trans } from '@lingui/macro'\r\nimport Callout from 'components/Callout'\r\n\r\nimport { V1_CURRENCY_ETH } from 'constants/v1/currency'\r\n\r\nexport default function PrintPreminedModal({\r\n  visible,\r\n  onCancel,\r\n  onConfirmed,\r\n}: {\r\n  visible?: boolean\r\n  onCancel?: VoidFunction\r\n  onConfirmed?: VoidFunction\r\n}) {\r\n  const { tokenSymbol, tokenAddress, terminal } = useContext(V1ProjectContext)\r\n  const printTokensTx = usePrintTokensTx()\r\n  const [form] = useForm<{\r\n    beneficiary: string\r\n    amount: string\r\n    preferUnstaked: boolean\r\n    memo: string\r\n  }>()\r\n\r\n  const [value, setValue] = useState<string>('0')\r\n  const [loading, setLoading] = useState<boolean>()\r\n\r\n  async function mint() {\r\n    const beneficiary = form.getFieldValue('beneficiary')\r\n    if (!isAddress(beneficiary)) return\r\n\r\n    setLoading(true)\r\n\r\n    await form.validateFields()\r\n\r\n    printTokensTx(\r\n      {\r\n        value: parseWad(value),\r\n        currency: V1_CURRENCY_ETH,\r\n        beneficiary,\r\n        memo: form.getFieldValue('memo'),\r\n        preferUnstaked: form.getFieldValue('preferUnstaked'),\r\n      },\r\n      {\r\n        onConfirmed: () => {\r\n          form.resetFields()\r\n          setValue('0')\r\n          onConfirmed?.()\r\n        },\r\n        onDone: () => {\r\n          setLoading(false)\r\n        },\r\n      },\r\n    )\r\n  }\r\n\r\n  const formItemProps: { label: string; extra: string } | undefined =\r\n    useMemo(() => {\r\n      if (!terminal?.version) return\r\n\r\n      const amountValidator = () => {\r\n        console.info('amountValidator: ', value)\r\n        if (!value || value === '0') {\r\n          return Promise.reject(t`Amount required`)\r\n        }\r\n        return Promise.resolve()\r\n      }\r\n\r\n      switch (terminal.version) {\r\n        case '1':\r\n          return {\r\n            label: t`Payment equivalent`,\r\n            name: 'amount',\r\n            extra: t`The amount of tokens minted to the receiver will be calculated based on if they had paid this amount to the project in the current funding cycle.`,\r\n            required: true,\r\n            rules: [{ validator: amountValidator }],\r\n          }\r\n        case '1.1':\r\n          return {\r\n            label: t`Token amount`,\r\n            name: 'amount',\r\n            extra: t`The amount of tokens to mint to the receiver.`,\r\n            required: true,\r\n            rules: [{ validator: amountValidator }],\r\n          }\r\n      }\r\n    }, [terminal?.version, value])\r\n\r\n  const erc20Issued =\r\n    tokenSymbol && tokenAddress && tokenAddress !== constants.AddressZero\r\n\r\n  return (\r\n    <Modal\r\n      title={<Trans>Mint tokens</Trans>}\r\n      visible={visible}\r\n      onOk={() => form.submit()}\r\n      confirmLoading={loading}\r\n      onCancel={onCancel}\r\n      okText={t`Mint tokens`}\r\n    >\r\n      <Callout style={{ marginBottom: 20 }}>\r\n        <Trans>\r\n          Tokens can be minted manually when allowed in the current funding\r\n          cycle. The project owner can enable or disable minting for upcoming\r\n          cycles.\r\n        </Trans>\r\n      </Callout>\r\n\r\n      <Form layout=\"vertical\" form={form} onFinish={mint}>\r\n        <Form.Item\r\n          label={<Trans>Tokens receiver</Trans>}\r\n          name=\"beneficiary\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              validator: (rule, value) => {\r\n                if (!value || !isAddress(value))\r\n                  return Promise.reject(t`Not a valid ETH address`)\r\n                else return Promise.resolve()\r\n              },\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder={constants.AddressZero} />\r\n        </Form.Item>\r\n        <div style={{ marginBottom: '1rem' }}>\r\n          <FormattedNumberInput\r\n            formItemProps={formItemProps}\r\n            value={value}\r\n            onChange={val => setValue(val ?? '0')}\r\n            accessory={\r\n              terminal?.version === '1' ? (\r\n                <InputAccessoryButton content=\"ETH\" />\r\n              ) : undefined\r\n            }\r\n          />\r\n        </div>\r\n        <Form.Item\r\n          label={<Trans>Memo</Trans>}\r\n          name=\"memo\"\r\n          extra={<Trans>Memo included on-chain</Trans>}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"preferUnstaked\"\r\n          label={<Trans>Mint as ERC-20</Trans>}\r\n          valuePropName=\"checked\"\r\n          extra={\r\n            erc20Issued\r\n              ? t`Enabling this will mint ${tokenSymbol} ERC-20 tokens. Otherwise unclaimed ${tokenSymbol} tokens will be minted, which can be claimed later as ERC-20 by the receiver.`\r\n              : t`ERC-20 tokens can only be minted once an ERC-20 token has been issued for this project.`\r\n          }\r\n          initialValue={false}\r\n        >\r\n          <Switch disabled={!erc20Issued} />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  )\r\n}\r\n","import { Contract } from '@ethersproject/contracts'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { V1UserContext } from 'contexts/v1/userContext'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { V1CurrencyOption } from 'models/v1/currencyOption'\r\nimport { useContext } from 'react'\r\n\r\nimport { TransactorInstance } from '../../Transactor'\r\n\r\nexport function usePrintTokensTx(): TransactorInstance<{\r\n  value: BigNumber\r\n  currency: V1CurrencyOption\r\n  beneficiary: string\r\n  memo: string\r\n  preferUnstaked: boolean\r\n}> {\r\n  const { transactor, contracts } = useContext(V1UserContext)\r\n  const { terminal, projectId } = useContext(V1ProjectContext)\r\n\r\n  return ({ value, currency, beneficiary, memo, preferUnstaked }, txOpts) => {\r\n    if (!transactor || !contracts || !projectId || !terminal?.version) {\r\n      txOpts?.onDone?.()\r\n      return Promise.resolve(false)\r\n    }\r\n\r\n    let terminalContract: Contract\r\n    let functionName: string\r\n    let args: any[] // eslint-disable-line @typescript-eslint/no-explicit-any\r\n\r\n    switch (terminal.version) {\r\n      case '1':\r\n        terminalContract = contracts.TerminalV1\r\n        functionName = 'printPreminedTickets'\r\n        args = [\r\n          BigNumber.from(projectId).toHexString(),\r\n          value.toHexString(),\r\n          BigNumber.from(currency).toHexString(),\r\n          beneficiary,\r\n          memo ?? '',\r\n          preferUnstaked,\r\n        ]\r\n        break\r\n      case '1.1':\r\n        terminalContract = contracts.TerminalV1_1\r\n        functionName = 'printTickets'\r\n        args = [\r\n          BigNumber.from(projectId).toHexString(),\r\n          value.toHexString(),\r\n          beneficiary,\r\n          memo ?? '',\r\n          preferUnstaked,\r\n        ]\r\n    }\r\n\r\n    return transactor(terminalContract, functionName, args, txOpts)\r\n  }\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { t, Trans } from '@lingui/macro'\r\nimport { Button, Descriptions, Space, Statistic } from 'antd'\r\n\r\nimport FormattedAddress from 'components/FormattedAddress'\r\nimport { NetworkContext } from 'contexts/networkContext'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport * as constants from '@ethersproject/constants'\r\nimport useERC20BalanceOf from 'hooks/v1/contractReader/ERC20BalanceOf'\r\nimport { useIssueTokensTx } from 'hooks/v1/transactor/IssueTokensTx'\r\nimport {\r\n  OperatorPermission,\r\n  useHasPermission,\r\n} from 'hooks/v1/contractReader/HasPermission'\r\nimport useReservedTokensOfProject from 'hooks/v1/contractReader/ReservedTokensOfProject'\r\nimport useTotalBalanceOf from 'hooks/v1/contractReader/TotalBalanceOf'\r\nimport useTotalSupplyOfProjectToken from 'hooks/v1/contractReader/TotalSupplyOfProjectToken'\r\nimport useUnclaimedBalanceOfUser from 'hooks/v1/contractReader/UnclaimedBalanceOfUser'\r\nimport { CSSProperties, useContext, useState } from 'react'\r\nimport { formatPercent, formatWad } from 'utils/formatNumber'\r\nimport { decodeFundingCycleMetadata } from 'utils/v1/fundingCycle'\r\nimport { tokenSymbolText } from 'utils/tokenSymbolText'\r\nimport IssueTokenButton from 'components/IssueTokenButton'\r\nimport SectionHeader from 'components/SectionHeader'\r\nimport useCanPrintPreminedTokens from 'hooks/v1/contractReader/CanPrintPreminedTokens'\r\nimport ParticipantsModal from 'components/modals/ParticipantsModal'\r\nimport ManageTokensModal from 'components/ManageTokensModal'\r\n\r\nimport RedeemModal from '../modals/RedeemModal'\r\nimport ConfirmUnstakeTokensModal from '../modals/ConfirmUnstakeTokensModal'\r\nimport PrintPreminedModal from '../modals/PrintPreminedModal'\r\n\r\nexport default function Rewards() {\r\n  const [manageTokensModalVisible, setManageTokensModalVisible] =\r\n    useState<boolean>()\r\n  const [participantsModalVisible, setParticipantsModalVisible] =\r\n    useState<boolean>(false)\r\n\r\n  const { userAddress } = useContext(NetworkContext)\r\n  const {\r\n    projectId,\r\n    handle,\r\n    tokenAddress,\r\n    tokenSymbol,\r\n    cv,\r\n    isPreviewMode,\r\n    currentFC,\r\n    terminal,\r\n    overflow,\r\n  } = useContext(V1ProjectContext)\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  const claimedBalance = useERC20BalanceOf(tokenAddress, userAddress)\r\n  const unclaimedBalance = useUnclaimedBalanceOfUser()\r\n  const totalBalance = useTotalBalanceOf(userAddress, projectId, terminal?.name)\r\n\r\n  const metadata = decodeFundingCycleMetadata(currentFC?.metadata)\r\n  const reservedTicketBalance = useReservedTokensOfProject(\r\n    metadata?.reservedRate,\r\n  )\r\n\r\n  const totalSupply = useTotalSupplyOfProjectToken(projectId)\r\n  const totalSupplyWithReservedTicketBalance = totalSupply?.add(\r\n    reservedTicketBalance ? reservedTicketBalance : BigNumber.from(0),\r\n  )\r\n\r\n  const share = formatPercent(\r\n    totalBalance,\r\n    totalSupplyWithReservedTicketBalance,\r\n  )\r\n\r\n  const ticketsIssued = tokenAddress\r\n    ? tokenAddress !== constants.AddressZero\r\n    : false\r\n\r\n  const hasIssueTicketsPermission = useHasPermission(OperatorPermission.Issue)\r\n\r\n  const labelStyle: CSSProperties = {\r\n    width: 128,\r\n  }\r\n\r\n  const tokensLabel = tokenSymbolText({\r\n    tokenSymbol: tokenSymbol,\r\n    capitalize: true,\r\n    plural: true,\r\n  })\r\n\r\n  const canPrintPreminedV1Tickets = Boolean(useCanPrintPreminedTokens())\r\n  const userHasMintPermission = useHasPermission(\r\n    OperatorPermission.PrintTickets,\r\n  )\r\n\r\n  const projectAllowsMint = Boolean(\r\n    metadata &&\r\n      (metadata.version === 0\r\n        ? canPrintPreminedV1Tickets\r\n        : metadata.ticketPrintingIsAllowed),\r\n  )\r\n\r\n  const hasOverflow = Boolean(overflow?.gt(0))\r\n\r\n  return (\r\n    <div>\r\n      <Space direction=\"vertical\" size=\"large\">\r\n        <Statistic\r\n          title={\r\n            <SectionHeader\r\n              text={tokensLabel}\r\n              tip={t`${tokensLabel} are distributed to anyone who pays this project. If the project has set a funding target, tokens can be redeemed for a portion of the project's overflow whether or not they have been claimed yet.`}\r\n            />\r\n          }\r\n          valueRender={() => (\r\n            <Descriptions layout=\"horizontal\" column={1}>\r\n              {ticketsIssued && (\r\n                <Descriptions.Item label={t`Address`} labelStyle={labelStyle}>\r\n                  <div style={{ width: '100%' }}>\r\n                    <FormattedAddress address={tokenAddress} />\r\n                  </div>\r\n                </Descriptions.Item>\r\n              )}\r\n              <Descriptions.Item\r\n                label={t`Total supply`}\r\n                labelStyle={labelStyle}\r\n              >\r\n                <div\r\n                  style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'baseline',\r\n                    width: '100%',\r\n                    gap: 5,\r\n                    flexWrap: 'wrap',\r\n                  }}\r\n                >\r\n                  {formatWad(totalSupplyWithReservedTicketBalance, {\r\n                    precision: 0,\r\n                  })}\r\n                  <Button\r\n                    size=\"small\"\r\n                    onClick={() => setParticipantsModalVisible(true)}\r\n                    disabled={isPreviewMode}\r\n                  >\r\n                    <Trans>Holders</Trans>\r\n                  </Button>\r\n                </div>\r\n              </Descriptions.Item>\r\n              {userAddress ? (\r\n                <Descriptions.Item\r\n                  label={t`Your balance`}\r\n                  labelStyle={labelStyle}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      flexWrap: 'wrap',\r\n                      gap: 5,\r\n                      justifyContent: 'space-between',\r\n                      width: '100%',\r\n                    }}\r\n                  >\r\n                    <div>\r\n                      {ticketsIssued && (\r\n                        <div>\r\n                          {`${formatWad(claimedBalance ?? 0, {\r\n                            precision: 0,\r\n                          })} ${tokenSymbol}`}\r\n                        </div>\r\n                      )}\r\n                      <div>\r\n                        <Trans>\r\n                          {formatWad(unclaimedBalance ?? 0, { precision: 0 })}\r\n                          {ticketsIssued ? <> claimable</> : null}\r\n                        </Trans>\r\n                      </div>\r\n\r\n                      <div\r\n                        style={{\r\n                          cursor: 'default',\r\n                          fontSize: '0.8rem',\r\n                          fontWeight: 500,\r\n                          color: colors.text.tertiary,\r\n                        }}\r\n                      >\r\n                        <Trans>{share || 0}% of supply</Trans>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <Button\r\n                      size=\"small\"\r\n                      onClick={() => setManageTokensModalVisible(true)}\r\n                    >\r\n                      <Trans>Manage</Trans>\r\n                    </Button>\r\n                  </div>\r\n                </Descriptions.Item>\r\n              ) : null}\r\n            </Descriptions>\r\n          )}\r\n        />\r\n\r\n        {!ticketsIssued && hasIssueTicketsPermission && !isPreviewMode && (\r\n          <IssueTokenButton useIssueTokensTx={useIssueTokensTx} />\r\n        )}\r\n      </Space>\r\n\r\n      <ManageTokensModal\r\n        visible={manageTokensModalVisible}\r\n        onCancel={() => setManageTokensModalVisible(false)}\r\n        projectAllowsMint={projectAllowsMint}\r\n        userHasMintPermission={userHasMintPermission}\r\n        hasOverflow={hasOverflow}\r\n        tokenSymbol={tokenSymbol}\r\n        tokenAddress={tokenAddress}\r\n        RedeemModal={RedeemModal}\r\n        ClaimTokensModal={ConfirmUnstakeTokensModal}\r\n        MintModal={PrintPreminedModal}\r\n      />\r\n      <ParticipantsModal\r\n        projectId={projectId}\r\n        projectName={handle}\r\n        tokenSymbol={tokenSymbol}\r\n        tokenAddress={tokenAddress}\r\n        cv={cv}\r\n        totalTokenSupply={totalSupply}\r\n        visible={participantsModalVisible}\r\n        onCancel={() => setParticipantsModalVisible(false)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import { BigNumber, BigNumberish } from '@ethersproject/bignumber'\r\nimport { V1ContractName } from 'models/v1/contracts'\r\nimport { bigNumbersDiff } from 'utils/bigNumbers'\r\n\r\nimport useContractReader from './ContractReader'\r\n\r\n/** Returns total supply of tokens for project with `projectId`. */\r\nexport default function useTotalSupplyOfProjectToken(\r\n  projectId: BigNumberish | undefined,\r\n) {\r\n  return useContractReader<BigNumber>({\r\n    contract: V1ContractName.TicketBooth,\r\n    functionName: 'totalSupplyOf',\r\n    args: projectId ? [BigNumber.from(projectId).toHexString()] : null,\r\n    valueDidChange: bigNumbersDiff,\r\n  })\r\n}\r\n","import { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { V1ContractName } from 'models/v1/contracts'\r\nimport { useContext } from 'react'\r\n\r\nimport useContractReader from './ContractReader'\r\n\r\n/** Returns true if premine tokens can be printed for `projectId`. */\r\nexport default function useCanPrintPreminedTokens() {\r\n  const { projectId } = useContext(V1ProjectContext)\r\n\r\n  return useContractReader<boolean>({\r\n    contract: V1ContractName.TerminalV1,\r\n    functionName: 'canPrintPreminedTickets',\r\n    args: projectId ? [BigNumber.from(projectId).toHexString()] : null,\r\n  })\r\n}\r\n","import { NetworkName } from 'models/network-name'\r\n\r\nimport { V1_PROJECT_IDS } from './projectIds'\r\n\r\n// IDs of projects with pay disabled\r\nexport const disablePayOverrides: Partial<Record<NetworkName, Set<number>>> = {\r\n  [NetworkName.mainnet]: new Set([\r\n    V1_PROJECT_IDS.PONZI_DAO,\r\n    V1_PROJECT_IDS.CONSTITUTION_DAO,\r\n  ]),\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { t, Trans } from '@lingui/macro'\r\nimport { Checkbox, Descriptions, Form, Modal, Space } from 'antd'\r\nimport { useForm } from 'antd/lib/form/Form'\r\nimport FormattedAddress from 'components/FormattedAddress'\r\nimport ImageUploader from 'components/inputs/ImageUploader'\r\nimport { emitErrorNotification } from 'utils/notifications'\r\nimport { NetworkContext } from 'contexts/networkContext'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport * as constants from '@ethersproject/constants'\r\nimport { useCurrencyConverter } from 'hooks/CurrencyConverter'\r\n\r\nimport { useContext, useState } from 'react'\r\nimport { V1CurrencyName } from 'utils/v1/currency'\r\nimport { formattedNum, formatWad } from 'utils/formatNumber'\r\nimport { weightedRate } from 'utils/math'\r\nimport { tokenSymbolText } from 'utils/tokenSymbolText'\r\nimport {\r\n  decodeFundingCycleMetadata,\r\n  fundingCycleRiskCount,\r\n  getUnsafeV1FundingCycleProperties,\r\n} from 'utils/v1/fundingCycle'\r\nimport { usePayV1ProjectTx } from 'hooks/v1/transactor/PayV1ProjectTx'\r\n\r\nimport Paragraph from 'components/Paragraph'\r\nimport ProjectRiskNotice from 'components/ProjectRiskNotice'\r\nimport MemoFormItem from 'components/inputs/Pay/MemoFormItem'\r\n\r\nimport { V1_CURRENCY_ETH, V1_CURRENCY_USD } from 'constants/v1/currency'\r\n\r\nexport default function V1ConfirmPayOwnerModal({\r\n  visible,\r\n  weiAmount,\r\n  onSuccess,\r\n  onCancel,\r\n  payButtonText,\r\n}: {\r\n  visible?: boolean\r\n  weiAmount: BigNumber | undefined\r\n  onSuccess?: VoidFunction\r\n  onCancel?: VoidFunction\r\n  payButtonText: string\r\n}) {\r\n  const [loading, setLoading] = useState<boolean>()\r\n  const [preferUnstaked, setPreferUnstaked] = useState<boolean>(false)\r\n  const [memo, setMemo] = useState<string>('')\r\n\r\n  const [form] = useForm()\r\n\r\n  const { userAddress, onSelectWallet } = useContext(NetworkContext)\r\n  const { tokenSymbol, tokenAddress, currentFC, metadata } =\r\n    useContext(V1ProjectContext)\r\n  const converter = useCurrencyConverter()\r\n\r\n  const payProjectTx = usePayV1ProjectTx()\r\n\r\n  const usdAmount = converter.weiToUsd(weiAmount)\r\n\r\n  async function pay() {\r\n    if (!weiAmount) return\r\n    await form.validateFields()\r\n\r\n    // Prompt wallet connect if no wallet connected\r\n    if (!userAddress && onSelectWallet) {\r\n      onSelectWallet()\r\n    }\r\n    setLoading(true)\r\n\r\n    payProjectTx(\r\n      {\r\n        note: memo,\r\n        preferUnstaked,\r\n        value: weiAmount,\r\n      },\r\n      {\r\n        onConfirmed: () => {\r\n          if (onSuccess) onSuccess()\r\n        },\r\n        onDone: () => setLoading(false),\r\n        onError: (error: Error) => {\r\n          setLoading(false)\r\n          emitErrorNotification(t`Transaction failed`, {\r\n            description: error.message,\r\n          })\r\n        },\r\n      },\r\n    )\r\n  }\r\n\r\n  const fcReservedRate = decodeFundingCycleMetadata(\r\n    currentFC?.metadata,\r\n  )?.reservedRate\r\n\r\n  const receivedTickets = weightedRate(\r\n    currentFC?.weight,\r\n    fcReservedRate,\r\n    weiAmount,\r\n    'payer',\r\n  )\r\n  const ownerTickets = weightedRate(\r\n    currentFC?.weight,\r\n    fcReservedRate,\r\n    weiAmount,\r\n    'reserved',\r\n  )\r\n\r\n  const hasIssuedTokens = tokenAddress && tokenAddress !== constants.AddressZero\r\n\r\n  if (!metadata) return null\r\n\r\n  const riskCount = currentFC ? fundingCycleRiskCount(currentFC) : undefined\r\n\r\n  const renderRiskNotice = () => {\r\n    if (currentFC && riskCount && riskCount > 0) {\r\n      return (\r\n        <ProjectRiskNotice\r\n          unsafeProperties={getUnsafeV1FundingCycleProperties(currentFC)}\r\n        />\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={t`Pay ${metadata.name}`}\r\n      visible={visible}\r\n      onOk={pay}\r\n      okText={userAddress ? payButtonText : t`Connect wallet to pay`}\r\n      onCancel={onCancel}\r\n      confirmLoading={loading}\r\n      width={640}\r\n      centered={true}\r\n    >\r\n      <Space direction=\"vertical\" size=\"large\" style={{ width: '100%' }}>\r\n        <p>\r\n          <Trans>\r\n            Paying <span style={{ fontWeight: 'bold' }}>{metadata.name}</span>{' '}\r\n            is not an investment — it's a way to support the project. Any value\r\n            or utility of the tokens you receive is determined by{' '}\r\n            {metadata.name}.\r\n          </Trans>\r\n        </p>\r\n\r\n        {metadata.payDisclosure && (\r\n          <div>\r\n            <h4>\r\n              <Trans>Notice from {metadata.name}:</Trans>\r\n            </h4>\r\n            <Paragraph description={metadata.payDisclosure} />\r\n          </div>\r\n        )}\r\n        {renderRiskNotice()}\r\n        <Descriptions column={1} bordered>\r\n          <Descriptions.Item label={t`Pay amount`} className=\"content-right\">\r\n            {formattedNum(usdAmount)} {V1CurrencyName(V1_CURRENCY_USD)} (\r\n            {formatWad(weiAmount)} {V1CurrencyName(V1_CURRENCY_ETH)})\r\n          </Descriptions.Item>\r\n          <Descriptions.Item\r\n            label={t`${tokenSymbolText({\r\n              tokenSymbol: tokenSymbol,\r\n              capitalize: true,\r\n              plural: true,\r\n            })} for you`}\r\n            className=\"content-right\"\r\n          >\r\n            <div>{formatWad(receivedTickets, { precision: 0 })}</div>\r\n            <div>\r\n              {userAddress ? (\r\n                <Trans>\r\n                  To: <FormattedAddress address={userAddress} />\r\n                </Trans>\r\n              ) : null}\r\n            </div>\r\n          </Descriptions.Item>\r\n          <Descriptions.Item\r\n            label={t`${tokenSymbolText({\r\n              tokenSymbol: tokenSymbol,\r\n              capitalize: true,\r\n              plural: true,\r\n            })} reserved`}\r\n            className=\"content-right\"\r\n          >\r\n            {formatWad(ownerTickets, { precision: 0 })}\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n        <Form form={form} layout=\"vertical\">\r\n          <MemoFormItem value={memo} onChange={setMemo} />\r\n\r\n          <Form.Item>\r\n            <ImageUploader\r\n              text={t`Add image`}\r\n              onSuccess={url => {\r\n                if (!url) return\r\n                const note = form.getFieldValue('note') || ''\r\n                form.setFieldsValue({\r\n                  note: note ? note + ' ' + url : url,\r\n                })\r\n              }}\r\n            />\r\n          </Form.Item>\r\n          {hasIssuedTokens && (\r\n            <Form.Item label={t`Receive ERC-20`}>\r\n              <Space align=\"start\">\r\n                <Checkbox\r\n                  style={{ padding: 20 }}\r\n                  checked={preferUnstaked}\r\n                  onChange={e => setPreferUnstaked(e.target.checked)}\r\n                />\r\n                <label htmlFor=\"preferUnstaked\">\r\n                  <Trans>\r\n                    Check this to mint {tokenSymbol} ERC-20 to your wallet.\r\n                    Leave unchecked to have your token balance tracked by\r\n                    Juicebox, saving gas on this transaction. You can always\r\n                    claim your ERC-20 tokens later.\r\n                  </Trans>\r\n                </label>\r\n              </Space>\r\n            </Form.Item>\r\n          )}\r\n        </Form>\r\n      </Space>\r\n    </Modal>\r\n  )\r\n}\r\n","import { NetworkContext } from 'contexts/networkContext'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { V1UserContext } from 'contexts/v1/userContext'\r\nimport { useContext } from 'react'\r\n\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\n\r\nimport { TransactorInstance } from '../../Transactor'\r\n\r\nexport function usePayV1ProjectTx(): TransactorInstance<{\r\n  note: string\r\n  preferUnstaked: boolean\r\n  value: BigNumber\r\n}> {\r\n  const { transactor, contracts } = useContext(V1UserContext)\r\n  const { terminal, projectId } = useContext(V1ProjectContext)\r\n  const { userAddress } = useContext(NetworkContext)\r\n\r\n  return ({ note, preferUnstaked, value }, txOpts) => {\r\n    if (\r\n      !transactor ||\r\n      !projectId ||\r\n      !contracts?.TicketBooth ||\r\n      !terminal?.version\r\n    ) {\r\n      const missingParam = !transactor\r\n        ? 'transactor'\r\n        : !projectId\r\n        ? 'projectId'\r\n        : !contracts?.TicketBooth\r\n        ? 'contracts.TicketBooth'\r\n        : !terminal?.version\r\n        ? 'terminal.version'\r\n        : null\r\n\r\n      txOpts?.onError?.(\r\n        new DOMException(\r\n          `Missing ${missingParam ?? 'parameter not found'} in v1 transactor`,\r\n        ),\r\n      )\r\n      return Promise.resolve(false)\r\n    }\r\n\r\n    return transactor(\r\n      terminal.version === '1.1'\r\n        ? contracts.TerminalV1_1\r\n        : contracts.TerminalV1,\r\n      'pay',\r\n      [\r\n        BigNumber.from(projectId).toHexString(),\r\n        userAddress,\r\n        note || '',\r\n        preferUnstaked,\r\n      ],\r\n      {\r\n        ...txOpts,\r\n        value: value.toHexString(),\r\n      },\r\n    )\r\n  }\r\n}\r\n","import { t, Trans } from '@lingui/macro'\r\nimport { Button, Tooltip } from 'antd'\r\nimport CurrencySymbol from 'components/CurrencySymbol'\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { useContext, useState } from 'react'\r\nimport { formatWad, fromWad } from 'utils/formatNumber'\r\nimport { decodeFundingCycleMetadata } from 'utils/v1/fundingCycle'\r\nimport useWeiConverter from 'hooks/WeiConverter'\r\nimport PayWarningModal from 'components/PayWarningModal'\r\nimport { V1CurrencyOption } from 'models/v1/currencyOption'\r\nimport { PayButtonProps } from 'components/inputs/Pay/PayInputGroup'\r\n\r\nimport { readNetwork } from 'constants/networks'\r\nimport { disablePayOverrides } from 'constants/v1/overrides'\r\nimport { V1_PROJECT_IDS } from 'constants/v1/projectIds'\r\nimport { V1_CURRENCY_USD } from 'constants/v1/currency'\r\nimport V1ConfirmPayOwnerModal from './modals/V1ConfirmPayOwnerModal'\r\n\r\nexport default function V1PayButton({\r\n  payAmount,\r\n  payInCurrency,\r\n  onError,\r\n  wrapperStyle,\r\n}: PayButtonProps) {\r\n  const { projectId, currentFC, metadata, isArchived, terminal } =\r\n    useContext(V1ProjectContext)\r\n\r\n  const [payModalVisible, setPayModalVisible] = useState<boolean>(false)\r\n  const [payWarningModalVisible, setPayWarningModalVisible] =\r\n    useState<boolean>(false)\r\n\r\n  const weiPayAmt = useWeiConverter<V1CurrencyOption>({\r\n    currency: payInCurrency as V1CurrencyOption,\r\n    amount: payAmount,\r\n  })\r\n\r\n  if (!metadata || !currentFC) return null\r\n\r\n  const fcMetadata = decodeFundingCycleMetadata(currentFC?.metadata)\r\n\r\n  if (!fcMetadata) return null\r\n\r\n  const payButtonText = metadata.payButton?.length ? metadata.payButton : t`Pay`\r\n\r\n  // v1 projects who still use 100% RR to disable pay\r\n  const isV1AndMaxRR =\r\n    terminal?.version === '1' && fcMetadata.reservedRate === 200\r\n\r\n  // Edge case for MoonDAO, upgraded to v1.1 but can't use payIsPaused for now\r\n  const isMoonAndMaxRR =\r\n    projectId === V1_PROJECT_IDS.MOON_DAO && fcMetadata.reservedRate === 200\r\n\r\n  const overridePayDisabled =\r\n    projectId && disablePayOverrides[readNetwork.name]?.has(projectId)\r\n\r\n  const shouldDisableButton =\r\n    (fcMetadata.payIsPaused || // v1.1 only\r\n      overridePayDisabled ||\r\n      isV1AndMaxRR || // v1 projects who still use 100% RR to disable pay\r\n      currentFC.configured.eq(0) || // Edge case, see sequoiacapitaldao\r\n      isMoonAndMaxRR || // Edge case for MoonDAO\r\n      isArchived) ??\r\n    false\r\n\r\n  let disabledMessage: string | undefined = shouldDisableButton\r\n    ? t`Paying this project is currently disabled.`\r\n    : undefined\r\n\r\n  if (isArchived) {\r\n    disabledMessage = t`This project is archived and can't be paid.`\r\n  } else if (isV1AndMaxRR || isMoonAndMaxRR) {\r\n    disabledMessage = t`Paying this project is currently disabled, because the token reserved rate is 100% and no tokens will be earned by making a payment.`\r\n  } else if (fcMetadata.payIsPaused) {\r\n    disabledMessage = t`Payments are paused for the current funding cycle.`\r\n  }\r\n\r\n  const onPayButtonClick = () => {\r\n    if (parseFloat(fromWad(weiPayAmt)) === 0) {\r\n      return onError()\r\n    }\r\n\r\n    setPayWarningModalVisible(true)\r\n  }\r\n\r\n  // Pay enabled\r\n  return (\r\n    <div style={{ textAlign: 'center', ...wrapperStyle }}>\r\n      <Tooltip\r\n        title={disabledMessage}\r\n        className=\"block\"\r\n        visible={disabledMessage ? undefined : false}\r\n      >\r\n        <Button\r\n          style={{ width: '100%' }}\r\n          type=\"primary\"\r\n          onClick={onPayButtonClick}\r\n          disabled={shouldDisableButton}\r\n        >\r\n          {payButtonText}\r\n        </Button>\r\n      </Tooltip>\r\n      {payInCurrency === V1_CURRENCY_USD && (\r\n        <div style={{ fontSize: '.7rem' }}>\r\n          <Trans>\r\n            Paid as <CurrencySymbol currency=\"ETH\" />\r\n          </Trans>\r\n          {formatWad(weiPayAmt) || '0'}\r\n        </div>\r\n      )}\r\n      <PayWarningModal\r\n        visible={payWarningModalVisible}\r\n        onOk={() => {\r\n          setPayWarningModalVisible(false)\r\n          setPayModalVisible(true)\r\n        }}\r\n        onCancel={() => setPayWarningModalVisible(false)}\r\n      />\r\n      <V1ConfirmPayOwnerModal\r\n        visible={payModalVisible}\r\n        onSuccess={() => setPayModalVisible(false)}\r\n        onCancel={() => setPayModalVisible(false)}\r\n        weiAmount={weiPayAmt}\r\n        payButtonText={payButtonText}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import { Col, Row } from 'antd'\r\nimport { LoadingOutlined } from '@ant-design/icons'\r\n\r\nimport { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { CSSProperties, useContext } from 'react'\r\nimport { decodeFundingCycleMetadata } from 'utils/v1/fundingCycle'\r\n\r\nimport ProjectHeader from 'components/Project/ProjectHeader'\r\nimport PayInputGroup from 'components/inputs/Pay/PayInputGroup'\r\n\r\nimport { Suspense, lazy } from 'react'\r\n\r\nimport { weightedRate } from 'utils/math'\r\n\r\nimport FundingCycles from './FundingCycles'\r\nimport Paid from './Paid'\r\nimport ProjectActivity from './ProjectActivity'\r\nimport V1ProjectHeaderActions from './V1ProjectHeaderActions'\r\nimport Rewards from './Rewards'\r\nimport V1PayButton from './V1PayButton'\r\n\r\nconst VolumeChart = lazy(() => import('components/VolumeChart'))\r\n\r\nexport default function V1Project({\r\n  style,\r\n  showCurrentDetail,\r\n  column,\r\n}: {\r\n  style?: CSSProperties\r\n  showCurrentDetail?: boolean\r\n  column?: boolean\r\n}) {\r\n  const {\r\n    createdAt,\r\n    currentFC,\r\n    projectId,\r\n    handle,\r\n    metadata,\r\n    isArchived,\r\n    tokenSymbol,\r\n    tokenAddress,\r\n    isPreviewMode,\r\n    cv,\r\n  } = useContext(V1ProjectContext)\r\n\r\n  const fcMetadata = decodeFundingCycleMetadata(currentFC?.metadata)\r\n  const reservedRate = fcMetadata?.reservedRate\r\n\r\n  const gutter = 40\r\n\r\n  if (projectId === undefined || !fcMetadata) return null\r\n\r\n  return (\r\n    <div style={style}>\r\n      <ProjectHeader\r\n        metadata={metadata}\r\n        handle={handle}\r\n        isArchived={isArchived}\r\n        actions={<V1ProjectHeaderActions />}\r\n      />\r\n\r\n      <Row gutter={gutter} align=\"bottom\">\r\n        <Col xs={24} md={column ? 24 : 12} style={{ marginTop: gutter }}>\r\n          <Paid />\r\n        </Col>\r\n\r\n        <Col xs={24} md={column ? 24 : 12} style={{ marginTop: gutter }}>\r\n          <PayInputGroup\r\n            PayButton={V1PayButton}\r\n            reservedRate={reservedRate}\r\n            weight={currentFC?.weight}\r\n            tokenSymbol={tokenSymbol}\r\n            tokenAddress={tokenAddress}\r\n            weightingFn={weightedRate}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row gutter={gutter} style={{ paddingBottom: gutter }}>\r\n        <Col xs={24} md={column ? 24 : 12} style={{ marginTop: gutter }}>\r\n          {projectId && (\r\n            <div style={{ marginBottom: gutter }}>\r\n              <Suspense fallback={<LoadingOutlined />}>\r\n                <VolumeChart\r\n                  style={{ height: 240 }}\r\n                  projectId={projectId}\r\n                  createdAt={createdAt}\r\n                  cv={cv ?? '1'}\r\n                />\r\n              </Suspense>\r\n            </div>\r\n          )}\r\n\r\n          <div style={{ marginBottom: gutter }}>\r\n            <Rewards />\r\n          </div>\r\n\r\n          <FundingCycles showCurrentDetail={showCurrentDetail} />\r\n        </Col>\r\n        {!isPreviewMode ? (\r\n          <Col xs={24} md={column ? 24 : 12} style={{ marginTop: gutter }}>\r\n            <ProjectActivity />\r\n          </Col>\r\n        ) : null}\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n","import { t, Trans } from '@lingui/macro'\r\nimport { Button } from 'antd'\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons'\r\n\r\nimport { NetworkContext } from 'contexts/networkContext'\r\nimport { TransactorInstance } from 'hooks/Transactor'\r\nimport { CV } from 'models/cv'\r\nimport { ProjectMetadataV4 } from 'models/project-metadata'\r\nimport { useContext, useState } from 'react'\r\nimport { uploadProjectMetadata } from 'utils/ipfs'\r\nimport { emitErrorNotification } from 'utils/notifications'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\n\r\nimport { postGitHubIssueForArchive } from './postGitHubIssueForArchive'\r\n\r\nexport default function ArchiveProject({\r\n  storeCidTx,\r\n  metadata,\r\n  projectId,\r\n  owner,\r\n  handle,\r\n  canTakePaymentsWhenArchived = false,\r\n  cv,\r\n}: {\r\n  storeCidTx: TransactorInstance<{ cid: string }>\r\n  metadata: ProjectMetadataV4 | undefined\r\n  projectId: number | undefined\r\n  owner: string | undefined\r\n  handle?: string | undefined // Used on V1 projects\r\n  canTakePaymentsWhenArchived?: boolean\r\n  cv: CV\r\n}) {\r\n  const { userAddress } = useContext(NetworkContext)\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  const [isLoadingArchive, setIsLoadingArchive] = useState<boolean>(false)\r\n\r\n  const setArchived = (archived: boolean) => async () => {\r\n    if (!userAddress || userAddress.toLowerCase() !== owner?.toLowerCase()) {\r\n      return emitErrorNotification(t`Connected wallet not authorized`)\r\n    }\r\n    setIsLoadingArchive(true)\r\n\r\n    const uploadedMetadata = await uploadProjectMetadata({\r\n      ...metadata,\r\n      archived,\r\n    })\r\n    if (!uploadedMetadata.IpfsHash) {\r\n      return emitErrorNotification(t`Failed to update project metadata`)\r\n    }\r\n    // Create github issue when archive is requested\r\n    // https://docs.github.com/en/rest/reference/issues#create-an-issue\r\n    // Do this first, in case the user closes the page before the on-chain tx completes\r\n    postGitHubIssueForArchive({ archived, projectId, metadata, handle, cv })\r\n\r\n    const txSuccessful = await storeCidTx(\r\n      { cid: uploadedMetadata.IpfsHash },\r\n      {\r\n        onConfirmed: () => {\r\n          setIsLoadingArchive(false)\r\n          window.location.reload()\r\n        },\r\n      },\r\n    )\r\n    if (!txSuccessful) {\r\n      emitErrorNotification(t`Transaction unsuccessful`)\r\n      setIsLoadingArchive(false)\r\n    }\r\n  }\r\n\r\n  if (metadata?.archived) {\r\n    return (\r\n      <section>\r\n        <h3>\r\n          <Trans>Unarchive project</Trans>\r\n        </h3>\r\n        <p>\r\n          <Trans>\r\n            Your project will immediately appear active on the juicebox.money\r\n            app. Please allow a few days for it to appear in the \"active\"\r\n            projects list on the Projects page.\r\n          </Trans>\r\n        </p>\r\n        <Button\r\n          onClick={setArchived(false)}\r\n          loading={isLoadingArchive}\r\n          size=\"small\"\r\n          type=\"primary\"\r\n        >\r\n          <span>\r\n            <Trans>Unarchive project</Trans>\r\n          </span>\r\n        </Button>\r\n      </section>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <h3>\r\n        <Trans>Archive project</Trans>\r\n      </h3>\r\n      <p>\r\n        <Trans>\r\n          Your project will appear archived, and won't be able to receive\r\n          payments through the juicebox.money app. You can unarchive a project\r\n          at any time. Allow a few days for your project to appear under the\r\n          \"archived\" filter on the Projects page.\r\n        </Trans>\r\n      </p>\r\n\r\n      <p style={{ marginTop: 10, color: colors.text.secondary }}>\r\n        <ExclamationCircleOutlined />{' '}\r\n        {canTakePaymentsWhenArchived ? (\r\n          <Trans>\r\n            Your project can still receive payments directly through the\r\n            Juicebox protocol contracts.\r\n          </Trans>\r\n        ) : (\r\n          <Trans>\r\n            Unless payments are paused in your funding cycle settings, your\r\n            project can still receive payments directly through the Juicebox\r\n            protocol contracts.\r\n          </Trans>\r\n        )}\r\n      </p>\r\n      <Button\r\n        onClick={setArchived(true)}\r\n        loading={isLoadingArchive}\r\n        size=\"small\"\r\n        type=\"primary\"\r\n      >\r\n        <span>\r\n          <Trans>Archive project</Trans>\r\n        </span>\r\n      </Button>\r\n    </section>\r\n  )\r\n}\r\n","import axios from 'axios'\r\nimport { ProjectMetadataV4 } from 'models/project-metadata'\r\nimport { CV } from 'models/cv'\r\n\r\nimport { readNetwork } from 'constants/networks'\r\n\r\nexport const postGitHubIssueForArchive = ({\r\n  archived,\r\n  projectId,\r\n  metadata,\r\n  handle,\r\n  cv,\r\n}: {\r\n  archived: boolean\r\n  projectId: number | undefined\r\n  metadata: ProjectMetadataV4 | undefined\r\n  handle: string | undefined\r\n  cv: CV\r\n}) => {\r\n  const body = `\r\n  <b>Chain:</b> ${readNetwork.name}\r\n  <b>Project ID:</b> ${projectId}\r\n  ${handle ? `<b>Handle:</b> ${handle}` : ''}\r\n  `\r\n\r\n  axios.post(\r\n    'https://api.github.com/repos/jbx-protocol/juice-interface/issues',\r\n    {\r\n      title: `[${archived ? 'ARCHIVE' : 'UNARCHIVE'}] Project: \"${\r\n        metadata?.name\r\n      }\"`,\r\n      body,\r\n      labels: [\r\n        'archive request',\r\n        cv === '2' ? 'V2' : 'V1',\r\n        'bot',\r\n        readNetwork.name === 'rinkeby' ? 'rinkeby' : undefined,\r\n        readNetwork.name === 'mainnet' ? 'mainnet' : undefined,\r\n      ].filter(Boolean),\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${process.env.REACT_APP_GITHUB_ACCESS_TOKEN}`,\r\n      },\r\n    },\r\n  )\r\n}\r\n","import { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { TransactorInstance } from 'hooks/Transactor'\r\nimport { useContext } from 'react'\r\n\r\nimport ArchiveProject from 'components/ArchiveProject'\r\n\r\n/**\r\n * V1 Wrapper around `ArchiveProject`.\r\n */\r\nexport default function ArchiveV1Project({\r\n  setUriTx,\r\n}: {\r\n  setUriTx: TransactorInstance<{\r\n    cid: string\r\n  }>\r\n}) {\r\n  const { metadata, projectId, handle, terminal, owner, cv } =\r\n    useContext(V1ProjectContext)\r\n\r\n  const canTakePaymentsWhenArchived = !(terminal?.version === '1.1')\r\n\r\n  return (\r\n    <ArchiveProject\r\n      storeCidTx={setUriTx}\r\n      metadata={metadata}\r\n      projectId={projectId}\r\n      owner={owner}\r\n      handle={handle}\r\n      canTakePaymentsWhenArchived={canTakePaymentsWhenArchived}\r\n      cv={cv ?? '1'}\r\n    />\r\n  )\r\n}\r\n","import { V2ProjectContext } from 'contexts/v2/projectContext'\r\nimport { TransactorInstance } from 'hooks/Transactor'\r\nimport { useContext } from 'react'\r\n\r\nimport ArchiveProject from 'components/ArchiveProject'\r\n\r\n/**\r\n * V2 Wrapper around `ArchiveProject`.\r\n */\r\nexport default function ArchiveV2Project({\r\n  editV2ProjectDetailsTx,\r\n}: {\r\n  editV2ProjectDetailsTx: TransactorInstance<{\r\n    cid: string\r\n  }>\r\n}) {\r\n  const { projectMetadata, projectId, projectOwnerAddress, cv } =\r\n    useContext(V2ProjectContext)\r\n\r\n  return (\r\n    <ArchiveProject\r\n      storeCidTx={editV2ProjectDetailsTx}\r\n      metadata={projectMetadata}\r\n      projectId={projectId}\r\n      owner={projectOwnerAddress}\r\n      cv={cv ?? '2'}\r\n    />\r\n  )\r\n}\r\n","import { Button, ButtonProps } from 'antd'\r\nimport { PropsWithChildren } from 'react'\r\n\r\ntype TransactorButtonProps = PropsWithChildren<\r\n  ButtonProps & {\r\n    text: string | JSX.Element\r\n    connectWalletText?: string | JSX.Element\r\n  }\r\n>\r\n\r\nexport default function TransactorButton({\r\n  connectWalletText,\r\n  text,\r\n  ...props\r\n}: TransactorButtonProps) {\r\n  const buttonText = props.disabled ? connectWalletText : text\r\n  return (\r\n    <Button {...props}>\r\n      <span>{buttonText}</span>\r\n    </Button>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { Form } from 'antd'\r\nimport InputAccessoryButton from 'components/InputAccessoryButton'\r\nimport FormattedNumberInput from 'components/inputs/FormattedNumberInput'\r\nimport TransactorButton from 'components/TransactorButton'\r\nimport { NetworkContext } from 'contexts/networkContext'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { TransactorInstance } from 'hooks/Transactor'\r\nimport { useContext, useState } from 'react'\r\nimport { parseWad } from 'utils/formatNumber'\r\n\r\nexport function AddToProjectBalanceForm({\r\n  useAddToBalanceTx,\r\n}: {\r\n  useAddToBalanceTx: () => TransactorInstance<{\r\n    value: BigNumber\r\n  }>\r\n}) {\r\n  const { userAddress } = useContext(NetworkContext)\r\n\r\n  const [addToBalanceForm] = Form.useForm<{ amount: string }>()\r\n  const [loadingAddToBalance, setLoadingAddToBalance] = useState<boolean>()\r\n\r\n  const addToBalanceTx = useAddToBalanceTx()\r\n\r\n  function addToBalance() {\r\n    setLoadingAddToBalance(true)\r\n\r\n    addToBalanceTx(\r\n      { value: parseWad(addToBalanceForm.getFieldValue('amount')) },\r\n      {\r\n        onConfirmed: () => {\r\n          setLoadingAddToBalance(false)\r\n          addToBalanceForm.resetFields()\r\n        },\r\n        onDone: () => {\r\n          setLoadingAddToBalance(false)\r\n        },\r\n      },\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Form form={addToBalanceForm} layout=\"vertical\">\r\n      <h3>\r\n        <Trans>Add to Balance</Trans>\r\n      </h3>\r\n      <p>\r\n        <Trans>\r\n          Add funds to this project's balance without minting tokens.\r\n        </Trans>\r\n      </p>\r\n\r\n      <Form.Item name=\"amount\" label={<Trans>Pay amount</Trans>}>\r\n        <FormattedNumberInput\r\n          placeholder=\"0\"\r\n          onChange={amount =>\r\n            addToBalanceForm.setFieldsValue({\r\n              amount,\r\n            })\r\n          }\r\n          accessory={<InputAccessoryButton content=\"ETH\" />}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <TransactorButton\r\n          onClick={() => addToBalance()}\r\n          loading={loadingAddToBalance}\r\n          size=\"small\"\r\n          type=\"primary\"\r\n          text={<Trans>Add to balance</Trans>}\r\n          disabled={!userAddress}\r\n          connectWalletText={<Trans>Connect wallet to pay</Trans>}\r\n        />\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { Button, Tooltip } from 'antd'\r\nimport { ButtonType } from 'antd/lib/button'\r\nimport { SizeType } from 'antd/lib/config-provider/SizeContext'\r\nimport { TransactorInstance } from 'hooks/Transactor'\r\nimport { DeployProjectPayerTxArgs } from 'hooks/v2/transactor/DeployProjectPayerTx'\r\nimport { useState } from 'react'\r\n\r\nimport LaunchProjectPayerModal from './LaunchProjectPayerModal'\r\n\r\nexport default function LaunchProjectPayerButton({\r\n  useDeployProjectPayerTx,\r\n  size,\r\n  text,\r\n  onCompleted,\r\n  disabled,\r\n  type,\r\n  tooltipText,\r\n}: {\r\n  useDeployProjectPayerTx: () =>\r\n    | TransactorInstance<DeployProjectPayerTxArgs>\r\n    | undefined\r\n  size?: SizeType\r\n  text?: JSX.Element\r\n  onCompleted?: VoidFunction\r\n  disabled?: boolean\r\n  type?: ButtonType\r\n  tooltipText?: JSX.Element\r\n}) {\r\n  const [modalVisible, setModalVisible] = useState<boolean>(false)\r\n\r\n  function DeployButton() {\r\n    return (\r\n      <Tooltip title={!disabled && tooltipText}>\r\n        <Button\r\n          onClick={() => setModalVisible(true)}\r\n          size={size ?? 'small'}\r\n          type={type ?? 'primary'}\r\n          disabled={disabled}\r\n        >\r\n          <span>{text ?? <Trans>Deploy project payer contract</Trans>}</span>\r\n        </Button>\r\n      </Tooltip>\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      <DeployButton />\r\n      <LaunchProjectPayerModal\r\n        visible={modalVisible}\r\n        onClose={() => setModalVisible(false)}\r\n        useDeployProjectPayerTx={useDeployProjectPayerTx}\r\n        onConfirmed={onCompleted}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { JBDiscordLink } from 'pages/home/QAs'\r\nimport LaunchProjectPayerButton from 'components/v2/V2Project/LaunchProjectPayer/LaunchProjectPayerButton'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { useContext } from 'react'\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons'\r\nimport { DeployProjectPayerTxArgs } from 'hooks/v2/transactor/DeployProjectPayerTx'\r\nimport { TransactorInstance } from 'hooks/Transactor'\r\n\r\nexport function PayableAddressSection({\r\n  useDeployProjectPayerTx,\r\n}: {\r\n  useDeployProjectPayerTx: () =>\r\n    | TransactorInstance<DeployProjectPayerTxArgs>\r\n    | undefined\r\n}) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <section>\r\n      <h3>\r\n        <Trans>Create payable address</Trans>\r\n      </h3>\r\n      <p>\r\n        <Trans>\r\n          Create an Ethereum address that can be used to pay your project\r\n          directly.\r\n        </Trans>\r\n      </p>\r\n      <LaunchProjectPayerButton\r\n        useDeployProjectPayerTx={useDeployProjectPayerTx}\r\n      />\r\n      <p style={{ marginTop: 10, color: colors.text.secondary }}>\r\n        <ExclamationCircleOutlined />{' '}\r\n        <Trans>\r\n          If you have already deployed a payable address and have lost it,\r\n          please contact the Juicebox team through{' '}\r\n          <JBDiscordLink>Discord.</JBDiscordLink>\r\n        </Trans>\r\n      </p>\r\n    </section>\r\n  )\r\n}\r\n","import { NetworkName } from 'models/network-name'\r\n\r\nexport const JB_V1_TOKEN_PAYMENT_TERMINAL_ADDRESS: {\r\n  [k in NetworkName]?: string\r\n} = {\r\n  mainnet: '0x88465c0a24a2e3ac55b7176beb07b3d56ec5cde1',\r\n  rinkeby: '0x349384f3ccc2045443b94b20d0af71edaf7fea36',\r\n}\r\n","import { BigNumberish, BigNumber } from '@ethersproject/bignumber'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { useEffect, useState } from 'react'\r\nimport JBV1TokenPaymentTerminal from '@jbx-protocol/juice-v1-token-terminal/out/JBV1TokenPaymentTerminal.sol/JBV1TokenPaymentTerminal.json'\r\n\r\nimport { JB_V1_TOKEN_PAYMENT_TERMINAL_ADDRESS } from 'constants/contracts'\r\n\r\nimport { readProvider } from 'constants/readProvider'\r\nimport { readNetwork } from 'constants/networks'\r\nimport { ContractReadResult } from './V2ContractReader'\r\n\r\nexport function useV1ProjectOf(\r\n  projectId: BigNumberish | undefined,\r\n): ContractReadResult<BigNumber | undefined> {\r\n  const [loading, setLoading] = useState<boolean>(false)\r\n  const [data, setData] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    const contractAddress =\r\n      JB_V1_TOKEN_PAYMENT_TERMINAL_ADDRESS[readNetwork.name]\r\n\r\n    if (!contractAddress || !projectId) return\r\n\r\n    const v1TokenPaymentTerminalContract = new Contract(\r\n      contractAddress,\r\n      JBV1TokenPaymentTerminal.abi,\r\n      readProvider,\r\n    )\r\n\r\n    async function load() {\r\n      setLoading(true)\r\n\r\n      const data = await v1TokenPaymentTerminalContract.v1ProjectIdOf(projectId)\r\n\r\n      setData(data)\r\n      setLoading(false)\r\n    }\r\n    load()\r\n  }, [projectId])\r\n\r\n  return { data, loading }\r\n}\r\n","import { Tooltip } from 'antd'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { PropsWithChildren, useContext } from 'react'\r\nimport { CheckCircleFilled } from '@ant-design/icons'\r\nimport { Trans } from '@lingui/macro'\r\n\r\nexport function StepSection({\r\n  children,\r\n  completed,\r\n  title,\r\n}: PropsWithChildren<{ completed: boolean; title: string | JSX.Element }>) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <section>\r\n      <h3\r\n        style={{\r\n          color: completed ? colors.text.secondary : colors.text.brand.primary,\r\n        }}\r\n      >\r\n        {title}{' '}\r\n        {completed && (\r\n          <Tooltip title={<Trans>You've completed this step.</Trans>}>\r\n            <CheckCircleFilled />\r\n          </Tooltip>\r\n        )}\r\n      </h3>\r\n\r\n      {!completed ? children : null}\r\n    </section>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { Button } from 'antd'\r\nimport { MinimalCollapse } from 'components/MinimalCollapse'\r\nimport { useSetProjectTerminalsTx } from 'hooks/v2/transactor/SetProjectTerminalsTx'\r\nimport { useCallback, useContext, useState } from 'react'\r\nimport { emitErrorNotification } from 'utils/notifications'\r\nimport { V2ProjectContext } from 'contexts/v2/projectContext'\r\n\r\nimport { StepSection } from './StepSection'\r\nimport { JB_V1_TOKEN_PAYMENT_TERMINAL_ADDRESS } from 'constants/contracts'\r\nimport { readNetwork } from 'constants/networks'\r\n\r\nexport function AddTerminalSection({\r\n  completed,\r\n  onCompleted,\r\n}: {\r\n  completed: boolean\r\n  onCompleted: VoidFunction\r\n}) {\r\n  const [addTerminalLoading, setAddTerminalLoading] = useState<boolean>(false)\r\n  const setProjectTerminalsTx = useSetProjectTerminalsTx()\r\n  const { terminals } = useContext(V2ProjectContext)\r\n\r\n  const onAddTerminal = useCallback(async () => {\r\n    setAddTerminalLoading(true)\r\n    const terminalAddress =\r\n      JB_V1_TOKEN_PAYMENT_TERMINAL_ADDRESS[readNetwork.name]\r\n\r\n    if (!terminalAddress) return\r\n\r\n    const newTerminals = [...(terminals || []), terminalAddress]\r\n    try {\r\n      const result = await setProjectTerminalsTx(\r\n        { terminals: newTerminals },\r\n        {\r\n          onConfirmed: () => {\r\n            setAddTerminalLoading(false)\r\n            onCompleted()\r\n          },\r\n        },\r\n      )\r\n      if (!result) throw new Error('Transaction failed.')\r\n    } catch (e) {\r\n      emitErrorNotification('Error adding migration terminal.')\r\n      setAddTerminalLoading(false)\r\n    }\r\n  }, [terminals, setProjectTerminalsTx, onCompleted])\r\n\r\n  return (\r\n    <StepSection\r\n      title={<Trans>Step 1. Add V1 token payment terminal</Trans>}\r\n      completed={completed}\r\n    >\r\n      <p>\r\n        <Trans>Add the V1 Token Payment Terminal to your project.</Trans>\r\n      </p>\r\n      <div style={{ marginBottom: '1rem' }}>\r\n        <MinimalCollapse\r\n          header={<Trans>What is the V1 Token Payment Terminal?</Trans>}\r\n        >\r\n          <Trans>\r\n            Token holders of your V1 project tokens will swap their V1 tokens\r\n            for V2 tokens at a 1-to-1 exchange rate.\r\n          </Trans>\r\n        </MinimalCollapse>\r\n      </div>\r\n      <Button\r\n        type=\"primary\"\r\n        size=\"small\"\r\n        onClick={onAddTerminal}\r\n        loading={addTerminalLoading}\r\n        disabled={completed}\r\n      >\r\n        <span>\r\n          <Trans>Add terminal</Trans>\r\n        </span>\r\n      </Button>\r\n    </StepSection>\r\n  )\r\n}\r\n","import { V2ProjectContext } from 'contexts/v2/projectContext'\r\nimport { V2UserContext } from 'contexts/v2/userContext'\r\nimport { useContext } from 'react'\r\n\r\nimport { TransactorInstance } from '../../Transactor'\r\n\r\nexport function useSetProjectTerminalsTx(): TransactorInstance<{\r\n  terminals: string[]\r\n}> {\r\n  const { transactor, contracts } = useContext(V2UserContext)\r\n  const { projectId } = useContext(V2ProjectContext)\r\n\r\n  return ({ terminals }, txOpts) => {\r\n    if (!transactor || !projectId || !contracts?.JBDirectory) {\r\n      txOpts?.onDone?.()\r\n      return Promise.resolve(false)\r\n    }\r\n\r\n    return transactor(\r\n      contracts.JBDirectory,\r\n      'setTerminalsOf',\r\n      [projectId, terminals],\r\n      txOpts,\r\n    )\r\n  }\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { Button, Form, Input } from 'antd'\r\nimport { useCallback, useState } from 'react'\r\nimport { emitErrorNotification } from 'utils/notifications'\r\nimport { useSetV1ProjectIdTx } from 'hooks/v2/transactor/SetV1ProjectIdTx'\r\n\r\nimport { StepSection } from './StepSection'\r\n\r\nexport function SetV1ProjectSection({\r\n  completed,\r\n  disabled,\r\n  onCompleted,\r\n}: {\r\n  completed: boolean\r\n  disabled: boolean\r\n  onCompleted: VoidFunction\r\n}) {\r\n  const [form] = Form.useForm<{ v1ProjectId: number }>()\r\n  const [v1ProjectIdLoading, setV1ProjectIdLoading] = useState<boolean>(false)\r\n\r\n  const setV1ProjectIdTx = useSetV1ProjectIdTx()\r\n\r\n  const onSetV1ProjectId = useCallback(async () => {\r\n    setV1ProjectIdLoading(true)\r\n\r\n    try {\r\n      const result = await setV1ProjectIdTx(\r\n        {\r\n          v1ProjectId: parseInt(form.getFieldValue('v1ProjectId')),\r\n        },\r\n        {\r\n          onConfirmed: () => {\r\n            setV1ProjectIdLoading(false)\r\n            onCompleted()\r\n          },\r\n        },\r\n      )\r\n      if (!result) throw new Error()\r\n    } catch (e) {\r\n      emitErrorNotification('Error adding migration terminal.')\r\n      setV1ProjectIdLoading(false)\r\n    }\r\n  }, [setV1ProjectIdTx, form, onCompleted])\r\n\r\n  return (\r\n    <StepSection\r\n      title={<Trans>Step 2. Link your Juicebox V1 project</Trans>}\r\n      completed={completed}\r\n    >\r\n      <p>\r\n        <Trans>\r\n          Configure which Juicebox V1 project you'd like to accept tokens for.\r\n          Token holders of this V1 project will be able to swap their V1 tokens\r\n          for V2 tokens.\r\n        </Trans>\r\n      </p>\r\n\r\n      <Form layout=\"vertical\" form={form} onFinish={onSetV1ProjectId}>\r\n        <Form.Item\r\n          name=\"v1ProjectId\"\r\n          label={<Trans>Juicebox V1 project ID</Trans>}\r\n          extra={<Trans>You must own this V1 project.</Trans>}\r\n          required\r\n        >\r\n          <Input placeholder=\"1\" type=\"number\" />\r\n        </Form.Item>\r\n\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"small\"\r\n          disabled={disabled}\r\n          loading={v1ProjectIdLoading}\r\n          htmlType=\"submit\"\r\n        >\r\n          <span>\r\n            <Trans>Link Juicebox V1 project</Trans>\r\n          </span>\r\n        </Button>\r\n      </Form>\r\n    </StepSection>\r\n  )\r\n}\r\n","import { V2ProjectContext } from 'contexts/v2/projectContext'\r\nimport { V2UserContext } from 'contexts/v2/userContext'\r\nimport { useContext } from 'react'\r\nimport JBV1TokenPaymentTerminal from '@jbx-protocol/juice-v1-token-terminal/out/JBV1TokenPaymentTerminal.sol/JBV1TokenPaymentTerminal.json'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { NetworkContext } from 'contexts/networkContext'\r\n\r\nimport { TransactorInstance } from '../../Transactor'\r\nimport { JB_V1_TOKEN_PAYMENT_TERMINAL_ADDRESS } from 'constants/contracts'\r\nimport { readNetwork } from 'constants/networks'\r\n\r\nexport function useSetV1ProjectIdTx(): TransactorInstance<{\r\n  v1ProjectId: number\r\n}> {\r\n  const { transactor } = useContext(V2UserContext)\r\n  const { projectId } = useContext(V2ProjectContext)\r\n  const { signingProvider } = useContext(NetworkContext)\r\n\r\n  return ({ v1ProjectId }, txOpts) => {\r\n    const contractAddress =\r\n      JB_V1_TOKEN_PAYMENT_TERMINAL_ADDRESS[readNetwork.name]\r\n\r\n    if (!transactor || !projectId || !contractAddress || !signingProvider) {\r\n      txOpts?.onDone?.()\r\n      return Promise.resolve(false)\r\n    }\r\n\r\n    const v1TokenPaymentTerminalContract = new Contract(\r\n      contractAddress,\r\n      JBV1TokenPaymentTerminal.abi,\r\n      signingProvider.getSigner(),\r\n    )\r\n\r\n    return transactor(\r\n      v1TokenPaymentTerminalContract,\r\n      'setV1ProjectIdOf',\r\n      [projectId, v1ProjectId],\r\n      txOpts,\r\n    )\r\n  }\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { Modal, ModalProps, Space } from 'antd'\r\nimport Callout from 'components/Callout'\r\nimport { V2ProjectContext } from 'contexts/v2/projectContext'\r\nimport { useV1ProjectOf } from 'hooks/v2/contractReader/V1ProjectOf'\r\nimport { useContext, useState } from 'react'\r\nimport { CheckCircleFilled } from '@ant-design/icons'\r\n\r\nimport { AddTerminalSection } from './AddTerminalSection'\r\nimport { SetV1ProjectSection } from './SetV1ProjectSection'\r\nimport { hasV1TokenPaymentTerminal } from './utils'\r\n\r\nexport function V1TokenMigrationModal({ ...props }: ModalProps) {\r\n  const { terminals, projectId } = useContext(V2ProjectContext)\r\n  const [\r\n    migrationTerminalSectionComplete,\r\n    setMigrationTerminalSectionComplete,\r\n  ] = useState<boolean>(false)\r\n  const [v1ProjectSectionComplete, setV1ProjectSectionComplete] =\r\n    useState<boolean>(false)\r\n\r\n  const hasMigrationTerminal =\r\n    hasV1TokenPaymentTerminal(terminals) || migrationTerminalSectionComplete\r\n  const { data: v1Project } = useV1ProjectOf(projectId)\r\n  const hasSetV1Project =\r\n    Boolean(v1Project?.toNumber()) || v1ProjectSectionComplete\r\n\r\n  const completed = hasMigrationTerminal && hasSetV1Project\r\n\r\n  return (\r\n    <Modal\r\n      title={<Trans>Set up V1 token migration</Trans>}\r\n      okButtonProps={{ hidden: true }}\r\n      cancelText={<Trans>Close</Trans>}\r\n      {...props}\r\n    >\r\n      <p style={{ marginBottom: '2rem' }}>\r\n        <Trans>\r\n          Set up your Juicebox V2 project for migration from your Juicebox V1\r\n          project.\r\n        </Trans>\r\n      </p>\r\n\r\n      <Space direction=\"vertical\" size=\"large\">\r\n        <AddTerminalSection\r\n          completed={hasMigrationTerminal}\r\n          onCompleted={() => setMigrationTerminalSectionComplete(true)}\r\n        />\r\n        <SetV1ProjectSection\r\n          completed={hasSetV1Project}\r\n          disabled={!hasMigrationTerminal}\r\n          onCompleted={() => setV1ProjectSectionComplete(true)}\r\n        />\r\n\r\n        {completed && (\r\n          <Callout iconComponent={<CheckCircleFilled />}>\r\n            <p>\r\n              <Trans>You're all set!</Trans> 🎉\r\n            </p>\r\n            <p style={{ margin: 0 }}>\r\n              <Trans>\r\n                V1 token holders can swap their tokens for your V2 tokens on\r\n                your V2 project's <strong>Tokens</strong> section.\r\n              </Trans>\r\n            </p>\r\n          </Callout>\r\n        )}\r\n      </Space>\r\n    </Modal>\r\n  )\r\n}\r\n","import { getAddress } from '@ethersproject/address'\r\n\r\nimport { readNetwork } from 'constants/networks'\r\nimport { JB_V1_TOKEN_PAYMENT_TERMINAL_ADDRESS } from 'constants/contracts'\r\n\r\nexport const hasV1TokenPaymentTerminal = (\r\n  terminals: string[] | undefined,\r\n): boolean => {\r\n  if (!terminals) return false\r\n\r\n  const terminalAddress = JB_V1_TOKEN_PAYMENT_TERMINAL_ADDRESS[readNetwork.name]\r\n  if (!terminalAddress) return false\r\n\r\n  return Boolean(\r\n    terminalAddress && terminals.includes(getAddress(terminalAddress)),\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { Button } from 'antd'\r\nimport { MinimalCollapse } from 'components/MinimalCollapse'\r\nimport { useContext, useState } from 'react'\r\nimport { useV1ProjectOf } from 'hooks/v2/contractReader/V1ProjectOf'\r\nimport { LoadingOutlined } from '@ant-design/icons'\r\nimport { V2ProjectContext } from 'contexts/v2/projectContext'\r\n\r\nimport { V1TokenMigrationModal } from './V1TokenMigrationModal/V1TokenMigrationModal'\r\n\r\nexport function V1TokenMigrationSection() {\r\n  const [migrationModalVisible, setMigrationModalVisible] =\r\n    useState<boolean>(false)\r\n  const { projectId } = useContext(V2ProjectContext)\r\n\r\n  const { data: v1Project, loading: v1ProjectLoading } = useV1ProjectOf(\r\n    !migrationModalVisible ? projectId : undefined, // reload project ID when the user closes the modal.\r\n  )\r\n  const hasV1ProjectId = Boolean(v1Project?.toNumber() ?? 0 > 0)\r\n\r\n  return (\r\n    <section>\r\n      <h3>\r\n        <Trans>V1 token migration</Trans>\r\n      </h3>\r\n      <p>\r\n        <Trans>\r\n          Allow your V1 project token holders to swap their tokens for your V2\r\n          project tokens.\r\n        </Trans>\r\n      </p>\r\n\r\n      <MinimalCollapse\r\n        header={<Trans>Do I need this?</Trans>}\r\n        style={{ marginBottom: '1rem' }}\r\n      >\r\n        <p>\r\n          <Trans>\r\n            If you have Juicebox project on Juicebox V1 and V2, we recommend you\r\n            migrate to V2 exclusively.\r\n          </Trans>\r\n        </p>\r\n        <p>\r\n          <Trans>\r\n            To do so, you need to give your V1 token holders the ability to\r\n            exchange their V1 tokens for V2 tokens. Select{' '}\r\n            <strong>Set up token migration</strong> below to get started.\r\n          </Trans>\r\n        </p>\r\n      </MinimalCollapse>\r\n\r\n      {v1ProjectLoading ? (\r\n        <p>\r\n          <LoadingOutlined spin />\r\n        </p>\r\n      ) : hasV1ProjectId ? (\r\n        <p>V1 Project ID: {v1Project?.toString()}</p>\r\n      ) : null}\r\n\r\n      <Button\r\n        onClick={() => setMigrationModalVisible(true)}\r\n        type=\"primary\"\r\n        size=\"small\"\r\n        disabled={hasV1ProjectId}\r\n      >\r\n        <Trans>Set up token migration</Trans>\r\n      </Button>\r\n\r\n      <V1TokenMigrationModal\r\n        visible={migrationModalVisible}\r\n        onOk={() => setMigrationModalVisible(false)}\r\n        onCancel={() => setMigrationModalVisible(false)}\r\n      />\r\n    </section>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { Button, Form } from 'antd'\r\nimport { FormItems } from 'components/formItems'\r\nimport { TransactorInstance } from 'hooks/Transactor'\r\nimport { useState } from 'react'\r\n\r\nexport function TransferOwnershipForm({\r\n  useTransferProjectOwnershipTx,\r\n  ownerAddress,\r\n}: {\r\n  useTransferProjectOwnershipTx: () => TransactorInstance<{\r\n    newOwnerAddress: string\r\n  }>\r\n  ownerAddress: string | undefined\r\n}) {\r\n  const transferProjectOwnershipTx = useTransferProjectOwnershipTx()\r\n\r\n  const [loadingTransferOwnership, setLoadingTransferOwnership] =\r\n    useState<boolean>()\r\n  const [transferOwnershipForm] = Form.useForm<{ to: string }>()\r\n\r\n  function transferOwnership() {\r\n    setLoadingTransferOwnership(true)\r\n\r\n    transferProjectOwnershipTx(\r\n      { newOwnerAddress: transferOwnershipForm.getFieldValue('to') },\r\n      {\r\n        onConfirmed: () => {\r\n          setLoadingTransferOwnership(false)\r\n          transferOwnershipForm.resetFields()\r\n        },\r\n      },\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Form form={transferOwnershipForm} layout=\"vertical\">\r\n      <h3>\r\n        <Trans>Transfer ownership</Trans>\r\n      </h3>\r\n      <p>\r\n        <Trans>Current owner: {ownerAddress}</Trans>\r\n      </p>\r\n\r\n      <FormItems.EthAddress\r\n        name=\"to\"\r\n        defaultValue={undefined}\r\n        onAddressChange={to => transferOwnershipForm.setFieldsValue({ to })}\r\n        formItemProps={{ label: <Trans>Recipient address</Trans> }}\r\n      />\r\n\r\n      <Form.Item>\r\n        <Button\r\n          onClick={() => transferOwnership()}\r\n          loading={loadingTransferOwnership}\r\n          size=\"small\"\r\n          type=\"primary\"\r\n        >\r\n          <span>\r\n            <Trans>Transfer ownership</Trans>\r\n          </span>\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { Form } from 'antd'\r\nimport { FormItems } from 'components/formItems'\r\nimport InputAccessoryButton from 'components/InputAccessoryButton'\r\nimport FormattedNumberInput from 'components/inputs/FormattedNumberInput'\r\nimport TransactorButton from 'components/TransactorButton'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { TransactorInstance } from 'hooks/Transactor'\r\nimport { useContext, useState } from 'react'\r\nimport { formatWad, fromWad, parseWad } from 'utils/formatNumber'\r\nimport { tokenSymbolText } from 'utils/tokenSymbolText'\r\nimport { NetworkContext } from 'contexts/networkContext'\r\n\r\nexport function TransferUnclaimedTokensForm({\r\n  tokenSymbol,\r\n  unclaimedTokenBalance,\r\n  useTransferUnclaimedTokensTx,\r\n}: {\r\n  tokenSymbol: string | undefined\r\n  unclaimedTokenBalance: BigNumber | undefined\r\n  useTransferUnclaimedTokensTx: () => TransactorInstance<{\r\n    to: string\r\n    amount: BigNumber\r\n  }>\r\n}) {\r\n  const { userAddress } = useContext(NetworkContext)\r\n\r\n  const [loadingTransferTokens, setLoadingTransferTokens] = useState<boolean>()\r\n\r\n  const [transferTokensForm] = Form.useForm<{ amount: string; to: string }>()\r\n  const transferUnclaimedTokensTx = useTransferUnclaimedTokensTx()\r\n\r\n  function transferTokens() {\r\n    setLoadingTransferTokens(true)\r\n\r\n    const fields = transferTokensForm.getFieldsValue(true)\r\n\r\n    transferUnclaimedTokensTx(\r\n      {\r\n        to: fields.to,\r\n        amount: parseWad(fields.amount),\r\n      },\r\n      {\r\n        onConfirmed: () => {\r\n          transferTokensForm.resetFields()\r\n          setLoadingTransferTokens(false)\r\n        },\r\n      },\r\n    )\r\n  }\r\n\r\n  const tokenSymbolShort = tokenSymbolText({\r\n    tokenSymbol: tokenSymbol,\r\n    capitalize: false,\r\n    plural: true,\r\n  })\r\n\r\n  return (\r\n    <Form form={transferTokensForm} layout=\"vertical\">\r\n      <h3>\r\n        <Trans>Transfer unclaimed {tokenSymbolShort}</Trans>\r\n      </h3>\r\n      <p>\r\n        <Trans>\r\n          Your unclaimed token balance:{' '}\r\n          {formatWad(unclaimedTokenBalance, { precision: 0 })}\r\n        </Trans>\r\n      </p>\r\n      <Form.Item name=\"amount\" label=\"Amount\">\r\n        <FormattedNumberInput\r\n          placeholder=\"0\"\r\n          onChange={amount =>\r\n            transferTokensForm.setFieldsValue({\r\n              amount,\r\n            })\r\n          }\r\n          accessory={\r\n            <InputAccessoryButton\r\n              content={<Trans>MAX</Trans>}\r\n              onClick={() =>\r\n                transferTokensForm.setFieldsValue({\r\n                  amount: fromWad(unclaimedTokenBalance),\r\n                })\r\n              }\r\n            />\r\n          }\r\n        />\r\n      </Form.Item>\r\n      <FormItems.EthAddress\r\n        defaultValue={undefined}\r\n        name=\"to\"\r\n        onAddressChange={to => transferTokensForm.setFieldsValue({ to })}\r\n        formItemProps={{ label: <Trans>Recipient address</Trans> }}\r\n      />\r\n      <Form.Item>\r\n        <TransactorButton\r\n          onClick={() => transferTokens()}\r\n          loading={loadingTransferTokens}\r\n          size=\"small\"\r\n          type=\"primary\"\r\n          text={<Trans>Transfer {tokenSymbolShort}</Trans>}\r\n          disabled={!userAddress}\r\n          connectWalletText={<Trans>Connect wallet to transfer</Trans>}\r\n        />\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { Trans } from '@lingui/macro'\r\nimport { Divider, Drawer, Space, Tabs } from 'antd'\r\nimport { JBDiscordLink } from 'pages/home/QAs'\r\nimport ArchiveV1Project from 'components/v1/V1Project/ArchiveV1Project'\r\nimport ArchiveV2Project from 'components/v2/V2Project/ArchiveV2Project'\r\nimport { useIsUserAddress } from 'hooks/IsUserAddress'\r\nimport { TransactorInstance } from 'hooks/Transactor'\r\nimport { DeployProjectPayerTxArgs } from 'hooks/v2/transactor/DeployProjectPayerTx'\r\n\r\nimport { AddToProjectBalanceForm } from './AddToProjectBalanceForm'\r\nimport { PayableAddressSection } from './PayableAddressSection'\r\nimport { V1TokenMigrationSection } from './V1TokenMigrationSection/V1TokenMigrationSection'\r\nimport { TransferOwnershipForm } from './TransferOwnershipForm'\r\nimport { TransferUnclaimedTokensForm } from './TransferUnclaimedTokensForm'\r\n\r\nconst { TabPane } = Tabs\r\n\r\nexport function ProjectToolsDrawer({\r\n  visible,\r\n  onClose,\r\n  unclaimedTokenBalance,\r\n  tokenSymbol,\r\n  ownerAddress,\r\n  useTransferProjectOwnershipTx,\r\n  useTransferUnclaimedTokensTx,\r\n  useAddToBalanceTx,\r\n  useSetProjectUriTx,\r\n  useEditV2ProjectDetailsTx,\r\n  useDeployProjectPayerTx,\r\n}: {\r\n  visible?: boolean\r\n  onClose?: VoidFunction\r\n  unclaimedTokenBalance: BigNumber | undefined\r\n  tokenSymbol: string | undefined\r\n  ownerAddress: string | undefined\r\n  useTransferProjectOwnershipTx: () => TransactorInstance<{\r\n    newOwnerAddress: string\r\n  }>\r\n  useTransferUnclaimedTokensTx: () => TransactorInstance<{\r\n    to: string\r\n    amount: BigNumber\r\n  }>\r\n  useAddToBalanceTx: () => TransactorInstance<{\r\n    value: BigNumber\r\n  }>\r\n  useSetProjectUriTx: () =>\r\n    | TransactorInstance<{\r\n        cid: string\r\n      }>\r\n    | undefined // Currently undefined for v2\r\n  useDeployProjectPayerTx: () =>\r\n    | TransactorInstance<DeployProjectPayerTxArgs>\r\n    | undefined // undefined for v1\r\n  useEditV2ProjectDetailsTx: () =>\r\n    | TransactorInstance<{\r\n        cid: string\r\n      }>\r\n    | undefined // undefined for v1\r\n}) {\r\n  const setUriTx = useSetProjectUriTx()\r\n  const editV2ProjectDetailsTx = useEditV2ProjectDetailsTx()\r\n  const deployProjectPayerTx = useDeployProjectPayerTx()\r\n\r\n  const isOwnerWallet = useIsUserAddress(ownerAddress)\r\n\r\n  const shouldRenderV1Archive = !!setUriTx\r\n  const shouldRenderV2Archive = !!editV2ProjectDetailsTx\r\n\r\n  const OwnerTools = (\r\n    <Space direction=\"vertical\" size=\"large\" style={{ width: '100%' }}>\r\n      <V1TokenMigrationSection />\r\n\r\n      <Divider />\r\n\r\n      <section>\r\n        <TransferOwnershipForm\r\n          ownerAddress={ownerAddress}\r\n          useTransferProjectOwnershipTx={useTransferProjectOwnershipTx}\r\n        />\r\n      </section>\r\n\r\n      <Divider />\r\n\r\n      {shouldRenderV1Archive ? (\r\n        <ArchiveV1Project setUriTx={setUriTx} />\r\n      ) : shouldRenderV2Archive ? (\r\n        <ArchiveV2Project editV2ProjectDetailsTx={editV2ProjectDetailsTx} />\r\n      ) : (\r\n        <section>\r\n          <h3>\r\n            <Trans>Archive project</Trans>\r\n          </h3>\r\n          <p>\r\n            <Trans>\r\n              Please contact the Juicebox dev team through our{' '}\r\n              <JBDiscordLink>Discord</JBDiscordLink> to have your project\r\n              archived.\r\n            </Trans>\r\n          </p>\r\n        </section>\r\n      )}\r\n    </Space>\r\n  )\r\n\r\n  return (\r\n    <Drawer\r\n      visible={visible}\r\n      onClose={onClose}\r\n      width={600}\r\n      drawerStyle={{ paddingBottom: '2rem' }}\r\n    >\r\n      <h1>\r\n        <Trans>Tools</Trans>\r\n      </h1>\r\n\r\n      <Tabs>\r\n        <TabPane tab={<Trans>General</Trans>} key=\"1\">\r\n          <Space direction=\"vertical\" size=\"middle\" style={{ width: '100%' }}>\r\n            {deployProjectPayerTx && (\r\n              <>\r\n                <PayableAddressSection\r\n                  useDeployProjectPayerTx={useDeployProjectPayerTx}\r\n                />\r\n                <Divider />\r\n              </>\r\n            )}\r\n\r\n            <section>\r\n              <TransferUnclaimedTokensForm\r\n                tokenSymbol={tokenSymbol}\r\n                unclaimedTokenBalance={unclaimedTokenBalance}\r\n                useTransferUnclaimedTokensTx={useTransferUnclaimedTokensTx}\r\n              />\r\n            </section>\r\n\r\n            <Divider />\r\n\r\n            <section>\r\n              <AddToProjectBalanceForm useAddToBalanceTx={useAddToBalanceTx} />\r\n            </section>\r\n          </Space>\r\n        </TabPane>\r\n        {isOwnerWallet && (\r\n          <TabPane tab={<Trans>Owner tools</Trans>} key=\"2\">\r\n            {OwnerTools}\r\n          </TabPane>\r\n        )}\r\n      </Tabs>\r\n    </Drawer>\r\n  )\r\n}\r\n","import { Pool } from '@uniswap/v3-sdk'\r\nimport { Token } from '@uniswap/sdk-core'\r\nimport { useQuery } from 'react-query'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport IUniswapV3PoolABI from '@uniswap/v3-core/artifacts/contracts/interfaces/IUniswapV3Pool.sol/IUniswapV3Pool.json'\r\nimport IUniswapV3FactoryABI from '@uniswap/v3-core/artifacts/contracts/interfaces/IUniswapV3Factory.sol/IUniswapV3Factory.json'\r\nimport { FACTORY_ADDRESS as UNISWAP_V3_FACTORY_ADDRESS } from '@uniswap/v3-sdk'\r\nimport * as ethersConstants from '@ethersproject/constants'\r\n\r\nimport { readProvider } from 'constants/readProvider'\r\nimport { readNetwork } from 'constants/networks'\r\nimport { WETH } from 'constants/tokens'\r\nimport { WAD_DECIMALS } from 'constants/numbers'\r\n\r\ninterface Immutables {\r\n  factory: string\r\n  token0: string\r\n  token1: string\r\n  fee: number\r\n  tickSpacing: number\r\n  maxLiquidityPerTick: BigNumber\r\n}\r\n\r\ninterface State {\r\n  liquidity: BigNumber\r\n  sqrtPriceX96: BigNumber\r\n  tick: number\r\n  observationIndex: number\r\n  observationCardinality: number\r\n  observationCardinalityNext: number\r\n  feeProtocol: number\r\n  unlocked: boolean\r\n}\r\n\r\ntype Props = {\r\n  tokenSymbol: string\r\n  tokenAddress: string\r\n}\r\n\r\n/**\r\n * Pools are created at a specific fee tier.\r\n * https://docs.uniswap.org/protocol/concepts/V3-overview/fees#pool-fees-tiers\r\n */\r\nconst UNISWAP_FEES_BPS = [10000, 3000, 500]\r\nconst networkId = readNetwork.chainId\r\n\r\n/**\r\n * Hook to fetch the Uniswap price for a given token.\r\n * Uniswap-related code inspired by https://docs.uniswap.org/sdk/guides/fetching-prices.\r\n */\r\nexport function useUniswapPriceQuery({ tokenSymbol, tokenAddress }: Props) {\r\n  const factoryContract = new Contract(\r\n    UNISWAP_V3_FACTORY_ADDRESS,\r\n    IUniswapV3FactoryABI.abi,\r\n    readProvider,\r\n  )\r\n\r\n  /**\r\n   * Recursively attempts to find liquidty pool at a given [fee].\r\n   * Recurs through each fee tier until a pool is found.\r\n   * If no pool is found, return undefined.\r\n   * @returns contract address of liquidty pool\r\n   */\r\n  const getPoolAddress = async (\r\n    fee: number | undefined = UNISWAP_FEES_BPS[0],\r\n  ): Promise<string | undefined> => {\r\n    const poolAddress = await factoryContract.getPool(tokenAddress, WETH, fee)\r\n\r\n    if (poolAddress && poolAddress !== ethersConstants.AddressZero) {\r\n      return poolAddress\r\n    }\r\n\r\n    // If we've got no more fees to search on, bail.\r\n    const feeIdx = UNISWAP_FEES_BPS.findIndex(f => f === fee)\r\n    if (feeIdx === UNISWAP_FEES_BPS.length - 1) {\r\n      return undefined\r\n    }\r\n\r\n    return getPoolAddress(UNISWAP_FEES_BPS[feeIdx + 1])\r\n  }\r\n\r\n  async function getPoolImmutables(poolContract: Contract) {\r\n    const [factory, token0, token1, fee, tickSpacing, maxLiquidityPerTick] =\r\n      await Promise.all([\r\n        poolContract.factory(),\r\n        poolContract.token0(),\r\n        poolContract.token1(),\r\n        poolContract.fee(),\r\n        poolContract.tickSpacing(),\r\n        poolContract.maxLiquidityPerTick(),\r\n      ])\r\n\r\n    const immutables: Immutables = {\r\n      factory,\r\n      token0,\r\n      token1,\r\n      fee,\r\n      tickSpacing,\r\n      maxLiquidityPerTick,\r\n    }\r\n\r\n    return immutables\r\n  }\r\n\r\n  async function getPoolState(poolContract: Contract) {\r\n    const [slot, liquidity] = await Promise.all([\r\n      poolContract.slot0(),\r\n      poolContract.liquidity(),\r\n    ])\r\n    const PoolState: State = {\r\n      liquidity,\r\n      sqrtPriceX96: slot[0],\r\n      tick: slot[1],\r\n      observationIndex: slot[2],\r\n      observationCardinality: slot[3],\r\n      observationCardinalityNext: slot[4],\r\n      feeProtocol: slot[5],\r\n      unlocked: slot[6],\r\n    }\r\n\r\n    return PoolState\r\n  }\r\n\r\n  return useQuery(\r\n    [`${tokenSymbol}-uniswap-price`],\r\n    async () => {\r\n      try {\r\n        const poolAddress = await getPoolAddress()\r\n        if (!poolAddress) {\r\n          throw new Error('No liquidity pool found.')\r\n        }\r\n\r\n        const poolContract = new Contract(\r\n          poolAddress,\r\n          IUniswapV3PoolABI.abi,\r\n          readProvider,\r\n        )\r\n\r\n        const [immutables, state] = await Promise.all([\r\n          getPoolImmutables(poolContract),\r\n          getPoolState(poolContract),\r\n        ])\r\n\r\n        const PROJECT_TOKEN = new Token(\r\n          networkId,\r\n          immutables.token0,\r\n          WAD_DECIMALS,\r\n          tokenSymbol,\r\n        )\r\n        const WETH = new Token(\r\n          networkId,\r\n          immutables.token1,\r\n          WAD_DECIMALS,\r\n          'WETH',\r\n        )\r\n\r\n        const projectTokenETHPool = new Pool(\r\n          PROJECT_TOKEN,\r\n          WETH,\r\n          immutables.fee,\r\n          state.sqrtPriceX96.toString(),\r\n          state.liquidity.toString(),\r\n          state.tick,\r\n        )\r\n\r\n        const projectTokenPrice = projectTokenETHPool.token0Price\r\n        const WETHPrice = projectTokenETHPool.token1Price\r\n        return {\r\n          tokenSymbol,\r\n          projectTokenPrice,\r\n          WETHPrice,\r\n          liquidity: projectTokenETHPool.liquidity.toString(),\r\n        }\r\n      } catch (e) {\r\n        console.error('Error fetching AMM price', e)\r\n      }\r\n    },\r\n    {\r\n      refetchInterval: 30000, // refetch every 30 seconds\r\n    },\r\n  )\r\n}\r\n","import { Token, WETH9, Route, Pair, CurrencyAmount } from '@sushiswap/sdk'\r\nimport { Contract } from '@ethersproject/contracts'\r\n\r\nimport IUniswapV2PairABI from '@uniswap/v2-core/build/IUniswapV2Pair.json'\r\n\r\nimport { useQuery } from 'react-query'\r\n\r\nimport { readNetwork } from 'constants/networks'\r\n\r\nimport { readProvider } from 'constants/readProvider'\r\nimport { WAD_DECIMALS } from 'constants/numbers'\r\n\r\n/**\r\n * Fetches information about a pair and constructs a pair from the given two tokens.\r\n * @param tokenA first token\r\n * @param tokenB second token\r\n * @param provider the provider to use to fetch the data\r\n * Source: https://github.com/Uniswap/v2-sdk/blob/a88048e9c4198a5bdaea00883ca00c8c8e582605/src/fetcher.ts\r\n */\r\nasync function fetchPairData(tokenA: Token, tokenB: Token): Promise<Pair> {\r\n  const pairAddress = Pair.getAddress(tokenA, tokenB)\r\n\r\n  const [reserves0, reserves1] = await new Contract(\r\n    pairAddress,\r\n    IUniswapV2PairABI.abi,\r\n    readProvider,\r\n  ).getReserves()\r\n\r\n  const balances = tokenA.sortsBefore(tokenB)\r\n    ? [reserves0, reserves1]\r\n    : [reserves1, reserves0]\r\n  return new Pair(\r\n    CurrencyAmount.fromRawAmount(tokenA, balances[0]),\r\n    CurrencyAmount.fromRawAmount(tokenB, balances[1]),\r\n  )\r\n}\r\n\r\ntype Props = {\r\n  tokenSymbol: string\r\n  tokenAddress: string\r\n}\r\n\r\nconst networkId = readNetwork.chainId\r\n\r\nexport function useSushiswapPriceQuery({ tokenSymbol, tokenAddress }: Props) {\r\n  const PROJECT_TOKEN = new Token(\r\n    networkId,\r\n    tokenAddress,\r\n    WAD_DECIMALS,\r\n    tokenSymbol,\r\n  )\r\n  const WETH = WETH9[networkId]\r\n\r\n  return useQuery([`${tokenSymbol}-sushiswap-price`], async () => {\r\n    // note that you may want/need to handle this async code differently,\r\n    // for example if top-level await is not an option\r\n    const pair = await fetchPairData(PROJECT_TOKEN, WETH)\r\n\r\n    const route = new Route([pair], WETH, PROJECT_TOKEN)\r\n    return {\r\n      tokenSymbol,\r\n      midPrice: route.midPrice,\r\n    }\r\n  })\r\n}\r\n","import { LinkOutlined, LoadingOutlined } from '@ant-design/icons'\r\nimport { t, Trans } from '@lingui/macro'\r\nimport { Tooltip } from 'antd'\r\nimport SushiswapLogo from 'components/icons/Sushiswap'\r\nimport UniswapLogo from 'components/icons/Uniswap'\r\nimport { CSSProperties } from 'react'\r\nimport { formattedNum } from 'utils/formatNumber'\r\n\r\nimport ExternalLink from '../ExternalLink'\r\n\r\nimport TooltipIcon from '../TooltipIcon'\r\n\r\ntype ExchangeName = 'Uniswap' | 'Sushiswap'\r\n\r\nconst LOGOS = {\r\n  Uniswap: UniswapLogo,\r\n  Sushiswap: SushiswapLogo,\r\n}\r\n\r\ntype Props = {\r\n  exchangeName: ExchangeName\r\n  tokenSymbol: string\r\n  exchangeLink?: string\r\n  WETHPrice?: string\r\n  loading?: boolean\r\n  style?: CSSProperties\r\n}\r\n\r\nconst fontStyle = {\r\n  fontSize: '0.7rem',\r\n  fontWeight: 400,\r\n}\r\n\r\nexport default function TokenAMMPriceRow({\r\n  exchangeName,\r\n  tokenSymbol,\r\n  exchangeLink,\r\n  WETHPrice,\r\n  loading,\r\n  style,\r\n}: Props) {\r\n  const LogoComponent = LOGOS[exchangeName]\r\n\r\n  const NotAvailableText = () => {\r\n    const tooltip = !WETHPrice\r\n      ? t`${exchangeName} has no market for ${tokenSymbol}.`\r\n      : ''\r\n\r\n    return (\r\n      <Tooltip title={tooltip} overlayInnerStyle={{ ...fontStyle }}>\r\n        <span style={{ cursor: 'default' }}>\r\n          {!WETHPrice ? <Trans>Unavailable</Trans> : null}\r\n          <TooltipIcon iconStyle={{ marginLeft: '0.2rem' }} />\r\n        </span>\r\n      </Tooltip>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        ...fontStyle,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        ...style,\r\n      }}\r\n    >\r\n      <div style={{ display: 'flex', alignItems: 'center' }}>\r\n        <span style={{ marginRight: '0.5rem', width: '1rem' }}>\r\n          <LogoComponent size={15} />\r\n        </span>\r\n        {exchangeName}\r\n      </div>\r\n\r\n      {loading && <LoadingOutlined />}\r\n\r\n      {!loading &&\r\n        (WETHPrice ? (\r\n          <Tooltip\r\n            title={t`${tokenSymbol}/ETH exchange rate on ${exchangeName}.`}\r\n            overlayInnerStyle={{ ...fontStyle }}\r\n          >\r\n            <ExternalLink href={exchangeLink} style={{ fontWeight: 400 }}>\r\n              {`${formattedNum(WETHPrice)} ${tokenSymbol}/1 ETH`}\r\n              <LinkOutlined style={{ marginLeft: '0.2rem' }} />\r\n            </ExternalLink>\r\n          </Tooltip>\r\n        ) : (\r\n          <NotAvailableText />\r\n        ))}\r\n    </div>\r\n  )\r\n}\r\n","type Props = {\r\n  size?: number\r\n  fill?: string\r\n}\r\n\r\nexport default function UniswapLogo({ size, fill }: Props): JSX.Element {\r\n  const widthToHeight = 168.3 / 193.8\r\n  const height = size ?? 193.8\r\n\r\n  return (\r\n    <svg\r\n      style={{ height: `${height}px`, width: `${widthToHeight * height}px` }}\r\n      width=\"168.3\"\r\n      height=\"193.8\"\r\n      enableBackground=\"new 0 0 168.3 193.8\"\r\n      viewBox=\"0 0 168.3 193.8\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <g fill={fill ?? '#ff007a'}>\r\n        <path d=\"m66 44.1c-2.1-.3-2.2-.4-1.2-.5 1.9-.3 6.3.1 9.4.8 7.2 1.7 13.7 6.1 20.6 13.8l1.8 2.1 2.6-.4c11.1-1.8 22.5-.4 32 4 2.6 1.2 6.7 3.6 7.2 4.2.2.2.5 1.5.7 2.8.7 4.7.4 8.2-1.1 10.9-.8 1.5-.8 1.9-.3 3.2.4 1 1.6 1.7 2.7 1.7 2.4 0 4.9-3.8 6.1-9.1l.5-2.1.9 1c5.1 5.7 9.1 13.6 9.7 19.2l.2 1.5-.9-1.3c-1.5-2.3-2.9-3.8-4.8-5.1-3.4-2.3-7-3-16.5-3.5-8.6-.5-13.5-1.2-18.3-2.8-8.2-2.7-12.4-6.2-22.1-19.1-4.3-5.7-7-8.8-9.7-11.4-5.9-5.7-11.8-8.7-19.5-9.9z\" />\r\n        <path d=\"m140.5 56.8c.2-3.8.7-6.3 1.8-8.6.4-.9.8-1.7.9-1.7s-.1.7-.4 1.5c-.8 2.2-.9 5.3-.4 8.8.7 4.5 1 5.1 5.8 10 2.2 2.3 4.8 5.2 5.8 6.4l1.7 2.2-1.7-1.6c-2.1-2-6.9-5.8-8-6.3-.7-.4-.8-.4-1.3.1-.4.4-.5 1-.5 3.9-.1 4.5-.7 7.3-2.2 10.2-.8 1.5-.9 1.2-.2-.5.5-1.3.6-1.9.6-6.2 0-8.7-1-10.8-7.1-14.3-1.5-.9-4.1-2.2-5.6-2.9-1.6-.7-2.8-1.3-2.7-1.3.2-.2 6.1 1.5 8.4 2.5 3.5 1.4 4.1 1.5 4.5 1.4.3-.3.5-1.1.6-3.6z\" />\r\n        <path d=\"m70.1 71.7c-4.2-5.8-6.9-14.8-6.3-21.5l.2-2.1 1 .2c1.8.3 4.9 1.5 6.4 2.4 4 2.4 5.8 5.7 7.5 13.9.5 2.4 1.2 5.2 1.5 6.1.5 1.5 2.4 5 4 7.2 1.1 1.6.4 2.4-2.1 2.2-3.8-.4-8.9-3.9-12.2-8.4z\" />\r\n        <path d=\"m135.4 115.2c-19.8-8-26.8-14.9-26.8-26.6 0-1.7.1-3.1.1-3.1.1 0 .8.6 1.7 1.3 4 3.2 8.5 4.6 21 6.4 7.3 1.1 11.5 1.9 15.3 3.2 12.1 4 19.6 12.2 21.4 23.3.5 3.2.2 9.3-.6 12.5-.7 2.5-2.7 7.1-3.2 7.2-.1 0-.3-.5-.3-1.3-.2-4.2-2.3-8.2-5.8-11.3-4.2-3.6-9.6-6.3-22.8-11.6z\" />\r\n        <path d=\"m121.4 118.5c-.2-1.5-.7-3.4-1-4.2l-.5-1.5.9 1.1c1.3 1.5 2.3 3.3 3.2 5.8.7 1.9.7 2.5.7 5.6 0 3-.1 3.7-.7 5.4-1 2.7-2.2 4.6-4.2 6.7-3.6 3.7-8.3 5.7-15 6.6-1.2.1-4.6.4-7.6.6-7.5.4-12.5 1.2-17 2.8-.6.2-1.2.4-1.3.3-.2-.2 2.9-2 5.4-3.2 3.5-1.7 7.1-2.6 15-4 3.9-.6 7.9-1.4 8.9-1.8 9.9-3.1 14.8-10.8 13.2-20.2z\" />\r\n        <path d=\"m130.5 134.6c-2.6-5.7-3.2-11.1-1.8-16.2.2-.5.4-1 .6-1s.8.3 1.4.7c1.2.8 3.7 2.2 10.1 5.7 8.1 4.4 12.7 7.8 15.9 11.7 2.8 3.4 4.5 7.3 5.3 12.1.5 2.7.2 9.2-.5 11.9-2.2 8.5-7.2 15.3-14.5 19.2-1.1.6-2 1-2.1 1s.3-1 .9-2.2c2.4-5.1 2.7-10 .9-15.5-1.1-3.4-3.4-7.5-8-14.4-5.5-8-6.8-10.1-8.2-13z\" />\r\n        <path d=\"m56 165.2c7.4-6.2 16.5-10.6 24.9-12 3.6-.6 9.6-.4 12.9.5 5.3 1.4 10.1 4.4 12.6 8.1 2.4 3.6 3.5 6.7 4.6 13.6.4 2.7.9 5.5 1 6.1.8 3.6 2.4 6.4 4.4 7.9 3.1 2.3 8.5 2.4 13.8.4.9-.3 1.7-.6 1.7-.5.2.2-2.5 2-4.3 2.9-2.5 1.3-4.5 1.7-7.2 1.7-4.8 0-8.9-2.5-12.2-7.5-.7-1-2.1-3.9-3.3-6.6-3.5-8.1-5.3-10.5-9.4-13.2-3.6-2.3-8.2-2.8-11.7-1.1-4.6 2.2-5.8 8.1-2.6 11.7 1.3 1.5 3.7 2.7 5.7 3 3.7.5 6.9-2.4 6.9-6.1 0-2.4-.9-3.8-3.3-4.9-3.2-1.4-6.7.2-6.6 3.3 0 1.3.6 2.1 1.9 2.7.8.4.8.4.2.3-2.9-.6-3.6-4.2-1.3-6.5 2.8-2.8 8.7-1.6 10.7 2.3.8 1.6.9 4.8.2 6.8-1.7 4.4-6.5 6.7-11.4 5.4-3.3-.9-4.7-1.8-8.7-5.9-7-7.2-9.7-8.6-19.7-10.1l-1.9-.3z\" />\r\n        <g clipRule=\"evenodd\" fillRule=\"evenodd\">\r\n          <path d=\"m3.4 4.3c23.3 28.3 59.2 72.3 61 74.7 1.5 2 .9 3.9-1.6 5.3-1.4.8-4.3 1.6-5.7 1.6-1.6 0-3.5-.8-4.8-2.1-.9-.9-4.8-6.6-13.6-20.3-6.7-10.5-12.4-19.2-12.5-19.3-.4-.2-.4-.2 11.8 21.6 7.7 13.7 10.2 18.6 10.2 19.2 0 1.3-.4 2-2 3.8-2.7 3-3.9 6.4-4.8 13.5-1 7.9-3.7 13.5-11.4 23-4.5 5.6-5.2 6.6-6.3 8.9-1.4 2.8-1.8 4.4-2 8-.2 3.8.2 6.2 1.3 9.8 1 3.2 2.1 5.3 4.8 9.4 2.3 3.6 3.7 6.3 3.7 7.3 0 .8.2.8 3.8 0 8.6-2 15.7-5.4 19.6-9.6 2.4-2.6 3-4 3-7.6 0-2.3-.1-2.8-.7-4.2-1-2.2-2.9-4-7-6.8-5.4-3.7-7.7-6.7-8.3-10.7-.5-3.4.1-5.7 3.1-12 3.1-6.5 3.9-9.2 4.4-15.8.3-4.2.8-5.9 2-7.2 1.3-1.4 2.4-1.9 5.5-2.3 5.1-.7 8.4-2 11-4.5 2.3-2.1 3.3-4.2 3.4-7.3l.1-2.3-1.3-1.4c-4.7-5.4-69.8-77-70.1-77-.1 0 1.5 1.9 3.4 4.3zm30.7 142.2c1.1-1.9.5-4.3-1.3-5.5-1.7-1.1-4.3-.6-4.3.9 0 .4.2.8.8 1 .9.5 1 1 .3 2.1s-.7 2.1.2 2.8c1.4 1.1 3.3.5 4.3-1.3z\" />\r\n          <path d=\"m74.6 93.9c-2.4.7-4.7 3.3-5.4 5.9-.4 1.6-.2 4.5.5 5.4 1.1 1.4 2.1 1.8 4.9 1.8 5.5 0 10.2-2.4 10.7-5.3.5-2.4-1.6-5.7-4.5-7.2-1.5-.8-4.6-1.1-6.2-.6zm6.4 5c.8-1.2.5-2.5-1-3.4-2.7-1.7-6.8-.3-6.8 2.3 0 1.3 2.1 2.7 4.1 2.7 1.3 0 3.1-.8 3.7-1.6z\" />\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  )\r\n}\r\n","type Props = {\r\n  size?: number\r\n}\r\n\r\nexport default function SushiswapLogo({ size }: Props): JSX.Element {\r\n  const widthToHeight = 24 / 24\r\n  const height = size ?? 24\r\n\r\n  return (\r\n    <svg\r\n      style={{ height: `${height}px`, width: `${widthToHeight * height}px` }}\r\n      width=\"24\"\r\n      height=\"24\"\r\n      enableBackground=\"new 0 0 24 24\"\r\n      viewBox=\"0 0 24 24\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n    >\r\n      <clipPath id=\"a\">\r\n        <path d=\"m0 0h24v24h-24z\" />\r\n      </clipPath>\r\n      <linearGradient id=\"b\">\r\n        <stop offset=\"0\" stopColor=\"#03b8ff\" />\r\n        <stop offset=\"1\" stopColor=\"#fa52a0\" />\r\n      </linearGradient>\r\n      <linearGradient\r\n        id=\"c\"\r\n        gradientTransform=\"matrix(1 0 0 -1 -12 1012)\"\r\n        gradientUnits=\"userSpaceOnUse\"\r\n        x1=\"20.6442\"\r\n        x2=\"24.3328\"\r\n        xlinkHref=\"#b\"\r\n        y1=\"1011.5057\"\r\n        y2=\"998.8395\"\r\n      />\r\n      <linearGradient\r\n        id=\"d\"\r\n        gradientTransform=\"matrix(1 0 0 -1 -12 1012)\"\r\n        gradientUnits=\"userSpaceOnUse\"\r\n        x1=\"23.6818\"\r\n        x2=\"27.3705\"\r\n        xlinkHref=\"#b\"\r\n        y1=\"1012.3904\"\r\n        y2=\"999.7241\"\r\n      />\r\n      <linearGradient\r\n        id=\"e\"\r\n        gradientTransform=\"matrix(1 0 0 -1 -12 1012)\"\r\n        gradientUnits=\"userSpaceOnUse\"\r\n        x1=\"17.616\"\r\n        x2=\"21.3047\"\r\n        xlinkHref=\"#b\"\r\n        y1=\"1010.6239\"\r\n        y2=\"997.9576\"\r\n      />\r\n      <g clipPath=\"url(#a)\">\r\n        <path d=\"m5 2.3 18.6 12.7-4.6 6.8-18.6-12.8z\" fill=\"url(#c)\" />\r\n        <path\r\n          d=\"m23.6 15c-1.6 2.3-7 1.4-12.1-2.2-5.2-3.5-8-8.2-6.5-10.5 1.6-2.3 7-1.4 12.1 2.2 5.2 3.4 8 8.2 6.5 10.5z\"\r\n          fill=\"url(#d)\"\r\n        />\r\n        <path\r\n          d=\"m19 21.7c-1.6 2.3-7 1.4-12.1-2.2s-8-8.2-6.4-10.6c1.6-2.3 7-1.4 12.1 2.2s7.9 8.3 6.4 10.6z\"\r\n          fill=\"url(#e)\"\r\n        />\r\n        <path\r\n          d=\"m23.6 15-4.6 6.8c-1.6 2.3-7 1.3-12.1-2.2-1-.7-1.9-1.4-2.8-2.2.7-.1 1.6-.5 2.5-1.5 1.6-1.7 2.4-2.1 3.1-2 .7 0 1.5.7 2.8 2.4s3.1 2.2 4.2 1.3c.1-.1.2-.1.3-.2.9-.7 1.2-1 2.9-4.2.4-.8 1.8-2.1 3.7-1.5.5 1.3.5 2.4 0 3.3z\"\r\n          fill=\"#0e0f23\"\r\n        />\r\n        <g fill=\"#fff\">\r\n          <path\r\n            clipRule=\"evenodd\"\r\n            d=\"m22.9 14.6c-1.4 2-6.3 1-11-2.3-4.8-3.3-7.6-7.5-6.2-9.5s6.3-1 11 2.3 7.5 7.5 6.2 9.5zm-4.4-3c-.7 1-3.1.5-5.5-1.1-2.3-1.6-3.7-3.7-3-4.7s3.1-.5 5.5 1.1c2.3 1.6 3.7 3.7 3 4.7z\"\r\n            fillRule=\"evenodd\"\r\n          />\r\n          <path d=\"m4.6 4.6c0-.1-.1-.2-.2-.1s-.2.1-.2.2c.1.3.2.5.2.7 0 .1.1.2.2.1.1 0 .2-.1.1-.2 0-.2 0-.4-.1-.7z\" />\r\n          <path d=\"m5.1 6.2c0-.1-.1-.2-.2-.1s-.1.1-.1.2c1.1 2.5 3.4 5.2 6.4 7.2.1.1.2 0 .3 0 .1-.1 0-.2 0-.3-3.1-2-5.3-4.6-6.4-7z\" />\r\n          <path d=\"m17.2 16c-.1 0-.2 0-.2.1s0 .2.1.2c.3.1.7.2 1 .3.1 0 .2 0 .2-.1s0-.2-.1-.2c-.3-.1-.7-.2-1-.3z\" />\r\n          <path d=\"m19 16.4c-.1 0-.2.1-.2.2s.1.2.2.2c.8.1 1.7.2 2.4.1.1 0 .2-.1.2-.2s-.1-.2-.2-.2c-.8.1-1.6 0-2.4-.1z\" />\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  )\r\n}\r\n","import { useUniswapPriceQuery } from 'hooks/ERC20UniswapPrice'\r\nimport { useSushiswapPriceQuery } from 'hooks/ERC20SushiswapPrice'\r\nimport { CSSProperties } from 'react'\r\nimport { Trans } from '@lingui/macro'\r\n\r\nimport TokenAMMPriceRow from './TokenAMMPriceRow'\r\n\r\ntype Props = {\r\n  tokenSymbol: string\r\n  tokenAddress: string\r\n  style?: CSSProperties\r\n}\r\n\r\n/**\r\n * Component for rendering a set of AMM Prices.\r\n */\r\nexport default function AMMPrices({\r\n  tokenSymbol,\r\n  tokenAddress,\r\n  style = {},\r\n}: Props) {\r\n  const { data: uniswapPriceData, isLoading: uniswapLoading } =\r\n    useUniswapPriceQuery({\r\n      tokenSymbol,\r\n      tokenAddress,\r\n    })\r\n\r\n  const { data: sushiswapPriceData, isLoading: sushiswapLoading } =\r\n    useSushiswapPriceQuery({\r\n      tokenSymbol,\r\n      tokenAddress,\r\n    })\r\n\r\n  return (\r\n    <div style={{ ...style }}>\r\n      <p style={{ fontSize: '0.7rem' }}>\r\n        <Trans>Current 3rd Party Exchange Rates</Trans>\r\n      </p>\r\n      <TokenAMMPriceRow\r\n        exchangeName=\"Uniswap\"\r\n        tokenSymbol={tokenSymbol}\r\n        exchangeLink={`https://app.uniswap.org/#/swap?inputCurrency=ETH&outputCurrency=${tokenAddress}`}\r\n        WETHPrice={uniswapPriceData?.WETHPrice.toFixed(0)}\r\n        loading={uniswapLoading}\r\n        style={{ marginBottom: '0.5rem' }}\r\n      />\r\n      <TokenAMMPriceRow\r\n        exchangeName=\"Sushiswap\"\r\n        tokenSymbol={tokenSymbol}\r\n        exchangeLink={`https://app.sushi.com/swap?inputCurrency=ETH&outputCurrency=${tokenAddress}`}\r\n        WETHPrice={sushiswapPriceData?.midPrice.toFixed(0)}\r\n        loading={sushiswapLoading}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","export const WETH = '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2' // WETH contract address\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { parseEther } from '@ethersproject/units'\r\nimport { useCurrencyConverter } from 'hooks/CurrencyConverter'\r\nimport { WeightFunction } from 'utils/math'\r\nimport { tokenSymbolText } from 'utils/tokenSymbolText'\r\nimport { Trans } from '@lingui/macro'\r\nimport { useContext, useMemo } from 'react'\r\n\r\nimport { CurrencyContext } from 'contexts/currencyContext'\r\n\r\nimport { Tooltip } from 'antd'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport AMMPrices from 'components/AMMPrices'\r\nimport TooltipIcon from 'components/TooltipIcon'\r\n\r\nimport useWeiConverter from 'hooks/WeiConverter'\r\nimport { CurrencyOption } from 'models/currencyOption'\r\nimport { formatIssuanceRate } from 'utils/v2/math'\r\nimport { formattedNum } from 'utils/formatNumber'\r\n\r\n/**\r\n * Help text shown below the Pay input field.\r\n *\r\n * If the user has entered an amount, display\r\n * the amount of project tokens they will receive.\r\n *\r\n * Else, display the exchange rate of the user selected currency to project token.\r\n */\r\nexport default function PayInputSubText({\r\n  payInCurrency,\r\n  amount,\r\n  reservedRate,\r\n  weight,\r\n  tokenSymbol,\r\n  tokenAddress,\r\n  weightingFn,\r\n}: {\r\n  payInCurrency: CurrencyOption\r\n  amount: string | undefined\r\n  reservedRate: number | undefined\r\n  weight: BigNumber | undefined\r\n  tokenSymbol: string | undefined\r\n  tokenAddress: string | undefined\r\n  weightingFn: WeightFunction\r\n}) {\r\n  const converter = useCurrencyConverter()\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  const {\r\n    currencyMetadata,\r\n    currencies: { ETH },\r\n  } = useContext(CurrencyContext)\r\n\r\n  const weiPayAmt = useWeiConverter<CurrencyOption>({\r\n    currency: payInCurrency,\r\n    amount: amount,\r\n  })\r\n\r\n  const tokenText = tokenSymbolText({\r\n    tokenSymbol,\r\n    capitalize: false,\r\n    plural: true,\r\n  })\r\n\r\n  const receiveText = useMemo(() => {\r\n    const formatReceivedTickets = (wei: BigNumber) => {\r\n      const exchangeRate = weightingFn(weight, reservedRate, wei, 'payer')\r\n      return formattedNum(formatIssuanceRate(exchangeRate))\r\n    }\r\n\r\n    if (weiPayAmt?.gt(0)) {\r\n      const receivedTickets = formatReceivedTickets(weiPayAmt)\r\n      const tokenReceiveText = tokenSymbolText({\r\n        tokenSymbol,\r\n        capitalize: false,\r\n        plural: receivedTickets !== '1',\r\n      })\r\n\r\n      return `${receivedTickets} ${tokenReceiveText}`\r\n    }\r\n\r\n    const receivedTickets = formatReceivedTickets(\r\n      (payInCurrency === ETH ? parseEther('1') : converter.usdToWei('1')) ??\r\n        BigNumber.from(0),\r\n    )\r\n\r\n    const tokenReceiveText = tokenSymbolText({\r\n      tokenSymbol,\r\n      capitalize: false,\r\n      plural: receivedTickets !== '1',\r\n    })\r\n\r\n    return `${receivedTickets} ${tokenReceiveText}/1 ${currencyMetadata[payInCurrency]?.name}`\r\n  }, [\r\n    converter,\r\n    payInCurrency,\r\n    weiPayAmt,\r\n    weight,\r\n    currencyMetadata,\r\n    ETH,\r\n    reservedRate,\r\n    tokenSymbol,\r\n    weightingFn,\r\n  ])\r\n\r\n  return (\r\n    <div style={{ fontSize: '.7rem' }}>\r\n      <Trans>Receive {receiveText}</Trans>\r\n      {tokenSymbol && tokenAddress && (\r\n        <div>\r\n          <Trans>\r\n            or{' '}\r\n            <Tooltip\r\n              title={\r\n                <AMMPrices\r\n                  tokenSymbol={tokenSymbol}\r\n                  tokenAddress={tokenAddress}\r\n                />\r\n              }\r\n              placement=\"bottomLeft\"\r\n              overlayStyle={{ minWidth: '300px' }}\r\n              overlayInnerStyle={{ padding: '1rem' }}\r\n            >\r\n              <span\r\n                style={{\r\n                  color: colors.text.action.primary,\r\n                  cursor: 'pointer',\r\n                  padding: '0.5rem 0',\r\n                }}\r\n              >\r\n                buy {tokenText} on exchange\r\n                <TooltipIcon iconStyle={{ marginLeft: '0.2rem' }} />\r\n              </span>\r\n            </Tooltip>\r\n          </Trans>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import { CSSProperties, useContext, useState } from 'react'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\n\r\nimport InputAccessoryButton from 'components/InputAccessoryButton'\r\nimport FormattedNumberInput from 'components/inputs/FormattedNumberInput'\r\nimport { CurrencyContext } from 'contexts/currencyContext'\r\n\r\nimport { CurrencyOption } from 'models/currencyOption'\r\n\r\nimport { WeightFunction } from 'utils/math'\r\n\r\nimport { ThemeContext } from 'contexts/themeContext'\r\n\r\nimport { Trans } from '@lingui/macro'\r\n\r\nimport PayInputSubText from './PayInputSubText'\r\n\r\nexport type PayButtonProps = {\r\n  payAmount: string\r\n  payInCurrency: CurrencyOption\r\n  onError: (error?: Error) => void\r\n  disabled?: boolean\r\n  wrapperStyle?: CSSProperties\r\n}\r\n\r\nexport default function PayInputGroup({\r\n  PayButton,\r\n  reservedRate,\r\n  weight,\r\n  tokenSymbol,\r\n  tokenAddress,\r\n  weightingFn,\r\n  disabled,\r\n}: {\r\n  PayButton: (props: PayButtonProps) => JSX.Element | null\r\n  reservedRate: number | undefined\r\n  weight: BigNumber | undefined\r\n  tokenSymbol: string | undefined\r\n  tokenAddress: string | undefined\r\n  weightingFn: WeightFunction\r\n  disabled?: boolean\r\n}) {\r\n  const {\r\n    currencyMetadata,\r\n    currencies: { USD, ETH },\r\n  } = useContext(CurrencyContext)\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  const [payAmount, setPayAmount] = useState<string>('0')\r\n  const [payInCurrency, setPayInCurrency] = useState<CurrencyOption>(ETH)\r\n  const [isErrorField, setIsErrorField] = useState<boolean>(false)\r\n\r\n  const togglePayInCurrency = () => {\r\n    const newPayInCurrency = payInCurrency === ETH ? USD : ETH\r\n    setPayInCurrency(newPayInCurrency)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isErrorField && (\r\n        <span style={{ color: colors.text.failure, fontSize: '0.7rem' }}>\r\n          <Trans>Pay amount must be greater than 0.</Trans>\r\n        </span>\r\n      )}\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          width: '100%',\r\n          flexWrap: 'wrap',\r\n          gap: 10,\r\n        }}\r\n      >\r\n        <div style={{ flex: 2, minWidth: '50%' }}>\r\n          <FormattedNumberInput\r\n            placeholder=\"0\"\r\n            onChange={val => {\r\n              setIsErrorField(Number(val) <= 0)\r\n              setPayAmount(val ?? '0')\r\n            }}\r\n            value={payAmount}\r\n            min={0}\r\n            disabled={disabled}\r\n            accessory={\r\n              <InputAccessoryButton\r\n                withArrow\r\n                content={currencyMetadata[payInCurrency ?? ETH].name}\r\n                onClick={togglePayInCurrency}\r\n                disabled={disabled}\r\n              />\r\n            }\r\n          />\r\n          <PayInputSubText\r\n            payInCurrency={payInCurrency ?? ETH}\r\n            amount={payAmount}\r\n            reservedRate={reservedRate}\r\n            weight={weight}\r\n            tokenSymbol={tokenSymbol}\r\n            tokenAddress={tokenAddress}\r\n            weightingFn={weightingFn}\r\n          />\r\n        </div>\r\n\r\n        <PayButton\r\n          wrapperStyle={{ flex: 1 }}\r\n          payAmount={payAmount}\r\n          payInCurrency={payInCurrency}\r\n          onError={() => setIsErrorField(true)}\r\n          disabled={disabled}\r\n        />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","export default function Discord({ size }: { size?: number }) {\r\n  const widthToHeight = 71 / 55\r\n  const height = size ?? 55\r\n\r\n  return (\r\n    <svg\r\n      style={{ height, width: widthToHeight * height }}\r\n      width=\"71\"\r\n      height=\"55\"\r\n      viewBox=\"0 0 71 55\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <g clipPath=\"url(#clip0)\">\r\n        <path\r\n          d=\"M60.1045 4.8978C55.5792 2.8214 50.7265 1.2916 45.6527 0.41542C45.5603 0.39851 45.468 0.440769 45.4204 0.525289C44.7963 1.6353 44.105 3.0834 43.6209 4.2216C38.1637 3.4046 32.7345 3.4046 27.3892 4.2216C26.905 3.0581 26.1886 1.6353 25.5617 0.525289C25.5141 0.443589 25.4218 0.40133 25.3294 0.41542C20.2584 1.2888 15.4057 2.8186 10.8776 4.8978C10.8384 4.9147 10.8048 4.9429 10.7825 4.9795C1.57795 18.7309 -0.943561 32.1443 0.293408 45.3914C0.299005 45.4562 0.335386 45.5182 0.385761 45.5576C6.45866 50.0174 12.3413 52.7249 18.1147 54.5195C18.2071 54.5477 18.305 54.5139 18.3638 54.4378C19.7295 52.5728 20.9469 50.6063 21.9907 48.5383C22.0523 48.4172 21.9935 48.2735 21.8676 48.2256C19.9366 47.4931 18.0979 46.6 16.3292 45.5858C16.1893 45.5041 16.1781 45.304 16.3068 45.2082C16.679 44.9293 17.0513 44.6391 17.4067 44.3461C17.471 44.2926 17.5606 44.2813 17.6362 44.3151C29.2558 49.6202 41.8354 49.6202 53.3179 44.3151C53.3935 44.2785 53.4831 44.2898 53.5502 44.3433C53.9057 44.6363 54.2779 44.9293 54.6529 45.2082C54.7816 45.304 54.7732 45.5041 54.6333 45.5858C52.8646 46.6197 51.0259 47.4931 49.0921 48.2228C48.9662 48.2707 48.9102 48.4172 48.9718 48.5383C50.038 50.6034 51.2554 52.5699 52.5959 54.435C52.6519 54.5139 52.7526 54.5477 52.845 54.5195C58.6464 52.7249 64.529 50.0174 70.6019 45.5576C70.6551 45.5182 70.6887 45.459 70.6943 45.3942C72.1747 30.0791 68.2147 16.7757 60.1968 4.9823C60.1772 4.9429 60.1437 4.9147 60.1045 4.8978ZM23.7259 37.3253C20.2276 37.3253 17.3451 34.1136 17.3451 30.1693C17.3451 26.225 20.1717 23.0133 23.7259 23.0133C27.308 23.0133 30.1626 26.2532 30.1066 30.1693C30.1066 34.1136 27.28 37.3253 23.7259 37.3253ZM47.3178 37.3253C43.8196 37.3253 40.9371 34.1136 40.9371 30.1693C40.9371 26.225 43.7636 23.0133 47.3178 23.0133C50.9 23.0133 53.7545 26.2532 53.6986 30.1693C53.6986 34.1136 50.9 37.3253 47.3178 37.3253Z\"\r\n          fill=\"currentColor\"\r\n        />\r\n      </g>\r\n      <defs>\r\n        <clipPath id=\"clip0\">\r\n          <rect width=\"71\" height=\"55\" fill=\"currentColor\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  )\r\n}\r\n","import { TwitterOutlined } from '@ant-design/icons'\r\nimport Discord from 'components/icons/Discord'\r\n\r\nimport ExternalLink from '../../ExternalLink'\r\n\r\nconst prettyUrl = (url: string) => {\r\n  if (url.startsWith('https://')) {\r\n    return url.split('https://')[1]\r\n  } else if (url.startsWith('http://')) {\r\n    return url.split('http://')[1]\r\n  } else return url\r\n}\r\n\r\nconst linkUrl = (url: string) => {\r\n  if (url.startsWith('http://') || url.startsWith('https://')) {\r\n    return url\r\n  }\r\n  return 'https://' + url\r\n}\r\nconst spacing = 20\r\n\r\nexport default function SocialLinks({\r\n  infoUri,\r\n  twitter,\r\n  discord,\r\n}: {\r\n  infoUri?: string\r\n  twitter?: string\r\n  discord?: string\r\n}) {\r\n  return (\r\n    <>\r\n      {infoUri && (\r\n        <ExternalLink\r\n          style={{ fontWeight: 500, marginRight: spacing }}\r\n          href={linkUrl(infoUri)}\r\n        >\r\n          {prettyUrl(infoUri)}\r\n        </ExternalLink>\r\n      )}\r\n      {twitter && (\r\n        <ExternalLink\r\n          style={{\r\n            fontWeight: 500,\r\n            marginRight: spacing,\r\n            whiteSpace: 'pre',\r\n          }}\r\n          href={'https://twitter.com/' + twitter}\r\n        >\r\n          <span style={{ marginRight: 4 }}>\r\n            <TwitterOutlined />\r\n          </span>\r\n          @{prettyUrl(twitter)}\r\n        </ExternalLink>\r\n      )}\r\n      {discord && (\r\n        <ExternalLink\r\n          style={{\r\n            fontWeight: 500,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            marginRight: spacing,\r\n            whiteSpace: 'pre',\r\n          }}\r\n          href={linkUrl(discord)}\r\n        >\r\n          <span style={{ display: 'flex', marginRight: 4 }}>\r\n            <Discord size={13} />\r\n          </span>\r\n          Discord\r\n        </ExternalLink>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import { t, Trans } from '@lingui/macro'\r\nimport { EditOutlined } from '@ant-design/icons'\r\nimport ProjectLogo from 'components/ProjectLogo'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { useContext } from 'react'\r\nimport { ProjectMetadataV4 } from 'models/project-metadata'\r\nimport Paragraph from 'components/Paragraph'\r\nimport FormattedAddress from 'components/FormattedAddress'\r\n\r\nimport { useProjectOwner } from 'hooks/v1/contractReader/ProjectOwner'\r\nimport { Button, Tooltip } from 'antd'\r\n\r\nimport SocialLinks from './SocialLinks'\r\n\r\nexport default function ProjectHeader({\r\n  handle,\r\n  metadata,\r\n  isArchived,\r\n  actions,\r\n  onClickSetHandle,\r\n}: {\r\n  metadata?: ProjectMetadataV4\r\n  isArchived?: boolean\r\n  handle?: string\r\n  actions?: JSX.Element\r\n  onClickSetHandle?: VoidFunction\r\n}) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n  const { owner } = useProjectOwner()\r\n\r\n  const headerHeight = 120\r\n\r\n  const projectTitle = metadata?.name || t`Untitled project`\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n          justifyContent: 'space-between',\r\n          alignItems: 'flex-start',\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            marginRight: '1.25rem',\r\n            marginBottom: '1.25rem',\r\n            height: '100%',\r\n          }}\r\n        >\r\n          <ProjectLogo\r\n            uri={metadata?.logoUri}\r\n            name={metadata?.name}\r\n            size={headerHeight}\r\n          />\r\n        </div>\r\n\r\n        <div style={{ flex: 1, minWidth: '70%' }}>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              flexWrap: 'wrap',\r\n              alignItems: 'flex-start',\r\n            }}\r\n          >\r\n            <h1\r\n              style={{\r\n                fontSize: '2.4rem',\r\n                lineHeight: '2.8rem',\r\n                margin: 0,\r\n                color: metadata?.name\r\n                  ? colors.text.primary\r\n                  : colors.text.placeholder,\r\n                overflow: 'hidden',\r\n                textOverflow: 'ellipsis',\r\n              }}\r\n              title={projectTitle}\r\n            >\r\n              {projectTitle}\r\n            </h1>\r\n\r\n            {actions ? actions : null}\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'baseline',\r\n              flexWrap: 'wrap',\r\n              paddingTop: 8,\r\n              paddingBottom: 4,\r\n              fontWeight: 500,\r\n              gap: 20,\r\n            }}\r\n          >\r\n            {isArchived && (\r\n              <span\r\n                style={{\r\n                  fontSize: '0.8rem',\r\n                  color: colors.text.disabled,\r\n                  textTransform: 'uppercase',\r\n                }}\r\n              >\r\n                (archived)\r\n              </span>\r\n            )}\r\n            {handle ? (\r\n              <span\r\n                style={{\r\n                  color: colors.text.secondary,\r\n                  fontWeight: 600,\r\n                }}\r\n              >\r\n                @{handle}\r\n              </span>\r\n            ) : onClickSetHandle ? (\r\n              <Tooltip\r\n                placement=\"bottom\"\r\n                title={t`A project's handle is used in its URL, and allows it to be included in search results on the projects page.`}\r\n              >\r\n                <Button\r\n                  onClick={onClickSetHandle}\r\n                  type=\"text\"\r\n                  style={{ padding: 0 }}\r\n                >\r\n                  <EditOutlined /> <Trans>Add handle</Trans>\r\n                </Button>\r\n              </Tooltip>\r\n            ) : null}\r\n            <SocialLinks\r\n              discord={metadata?.discord}\r\n              twitter={metadata?.twitter}\r\n              infoUri={metadata?.infoUri}\r\n            />\r\n          </div>\r\n          {metadata?.description && (\r\n            <Paragraph\r\n              description={metadata.description}\r\n              characterLimit={250}\r\n            />\r\n          )}\r\n          {owner && (\r\n            <span style={{ color: colors.text.secondary }}>\r\n              <Trans>\r\n                Owned by: <FormattedAddress address={owner} />\r\n              </Trans>\r\n            </span>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { V1ProjectContext } from 'contexts/v1/projectContext'\r\nimport { useContext } from 'react'\r\n\r\nimport useOwnerOfProject from './OwnerOfProject'\r\n\r\nexport function useProjectOwner() {\r\n  const { projectId } = useContext(V1ProjectContext)\r\n  const owner = useOwnerOfProject(projectId)\r\n\r\n  return { owner }\r\n}\r\n","import { CheckCircleFilled } from '@ant-design/icons'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { BallotStrategy } from 'models/ballot'\r\nimport { CSSProperties, useContext } from 'react'\r\n\r\nexport default function ReconfigurationStrategyOption({\r\n  title,\r\n  content,\r\n  strategy,\r\n  selected,\r\n  background,\r\n  onSelectBallot,\r\n}: {\r\n  title: string\r\n  content: JSX.Element\r\n  strategy: BallotStrategy\r\n  selected: boolean\r\n  background?: string\r\n  onSelectBallot: (strategy: BallotStrategy) => void\r\n}) {\r\n  const { colors, radii } = useContext(ThemeContext).theme\r\n\r\n  const cardStyles: CSSProperties = {\r\n    display: 'flex',\r\n    padding: '1rem',\r\n    borderRadius: radii.md,\r\n    cursor: 'pointer',\r\n    ...(selected\r\n      ? { border: '1px solid ' + colors.stroke.action.primary }\r\n      : { border: '1px solid ' + colors.stroke.primary }),\r\n    background: background ?? colors.background.l0,\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"clickable-border\"\r\n      style={cardStyles}\r\n      onClick={() => onSelectBallot(strategy)}\r\n    >\r\n      <div\r\n        style={{\r\n          marginRight: 10,\r\n          minWidth: 20,\r\n          color: colors.text.action.primary,\r\n        }}\r\n      >\r\n        {selected ? <CheckCircleFilled /> : null}\r\n      </div>\r\n      <div style={{ color: colors.text.primary }}>\r\n        <h3\r\n          style={{\r\n            color: selected ? colors.text.action.primary : colors.text.primary,\r\n          }}\r\n        >\r\n          {title}\r\n        </h3>\r\n        {content}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { t, Trans } from '@lingui/macro'\r\nimport { Form, Input, Space } from 'antd'\r\nimport * as constants from '@ethersproject/constants'\r\nimport { NetworkContext } from 'contexts/networkContext'\r\nimport { useContext, useState } from 'react'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\n\r\nimport ReconfigurationStrategyOption from 'components/ReconfigurationStrategy/ReconfigurationStrategyOption'\r\n\r\nimport { BallotStrategy } from 'models/ballot'\r\n\r\nimport { createCustomStrategy } from 'utils/ballot'\r\n\r\nimport ExternalLink from '../ExternalLink'\r\nimport FormItemWarningText from '../FormItemWarningText'\r\n\r\nconst CUSTOM_STRATEGY_INDEX = -1\r\n\r\nfunction CustomStrategyInput({\r\n  value,\r\n  onChange,\r\n}: {\r\n  value?: string\r\n  onChange: (address: string) => void\r\n}) {\r\n  const { signerNetwork } = useContext(NetworkContext)\r\n  return (\r\n    <div>\r\n      <Form.Item\r\n        extra={\r\n          <Trans>\r\n            The address of any smart contract deployed on{' '}\r\n            {signerNetwork ?? 'mainnet'} that implements{' '}\r\n            <ExternalLink href=\"https://github.com/jbx-protocol/juice-contracts-v1/blob/main/contracts/FundingCycles.sol\">\r\n              this interface\r\n            </ExternalLink>\r\n            .\r\n          </Trans>\r\n        }\r\n      >\r\n        <Input\r\n          style={{ width: 400 }}\r\n          value={value}\r\n          placeholder={constants.AddressZero}\r\n          onChange={e => onChange(e.target.value.toLowerCase())}\r\n        />\r\n      </Form.Item>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default function ReconfigurationStrategySelector({\r\n  selectedStrategy,\r\n  onChange,\r\n  ballotStrategies,\r\n}: {\r\n  ballotStrategies: BallotStrategy[]\r\n  selectedStrategy: BallotStrategy\r\n  onChange: (strategy: BallotStrategy) => void\r\n}) {\r\n  const { colors } = useContext(ThemeContext).theme\r\n\r\n  const selectedStrategyIndex = ballotStrategies.findIndex(s => {\r\n    return s.address?.toLowerCase() === selectedStrategy.address?.toLowerCase()\r\n  })\r\n  const selectedIsCustom = selectedStrategyIndex === CUSTOM_STRATEGY_INDEX // selected strategy is the custom strategy\r\n\r\n  const [customStrategyAddress, setCustomStrategyAddress] = useState<string>(\r\n    selectedIsCustom ? selectedStrategy.address : '', // only set if selected strategy is custom\r\n  )\r\n\r\n  const customStrategy = createCustomStrategy(customStrategyAddress)\r\n\r\n  return (\r\n    <Space direction=\"vertical\">\r\n      {ballotStrategies[selectedStrategyIndex]?.address ===\r\n        ballotStrategies[0].address && (\r\n        <FormItemWarningText>\r\n          <Trans>\r\n            Using a reconfiguration strategy is recommended. Projects with no\r\n            strategy will appear risky to contributors.\r\n          </Trans>\r\n        </FormItemWarningText>\r\n      )}\r\n      {ballotStrategies.map((strategy: BallotStrategy, idx) => (\r\n        <ReconfigurationStrategyOption\r\n          title={strategy.name}\r\n          key={strategy.address}\r\n          content={\r\n            <div>\r\n              <p>{strategy.description}</p>\r\n              <p style={{ fontSize: '0.7rem', color: colors.text.tertiary }}>\r\n                <Trans>Contract address: {strategy.address}</Trans>\r\n              </p>\r\n            </div>\r\n          }\r\n          strategy={strategy}\r\n          selected={selectedStrategyIndex === idx}\r\n          onSelectBallot={() => onChange(strategy)}\r\n        />\r\n      ))}\r\n      <ReconfigurationStrategyOption\r\n        title={t`Custom strategy`}\r\n        content={\r\n          <CustomStrategyInput\r\n            value={customStrategyAddress}\r\n            onChange={(address: string) => {\r\n              setCustomStrategyAddress(address)\r\n              onChange(createCustomStrategy(address))\r\n            }}\r\n          />\r\n        }\r\n        strategy={customStrategy}\r\n        selected={selectedIsCustom}\r\n        onSelectBallot={() => onChange(customStrategy)}\r\n      />\r\n    </Space>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport ETHAmount from 'components/currency/ETHAmount'\r\nimport CurrencySymbol from 'components/CurrencySymbol'\r\n\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { Property } from 'csstype'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { useContext, useMemo } from 'react'\r\nimport { formatWad } from 'utils/formatNumber'\r\nimport { useCurrencyConverter } from 'hooks/CurrencyConverter'\r\n\r\nimport { textPrimary, textSecondary } from 'constants/styles/text'\r\nimport { CurrencyName } from 'constants/currency'\r\nimport StatLine from '../StatLine'\r\n\r\nexport const VolumeStatLine = ({\r\n  totalVolume,\r\n  color,\r\n  convertToCurrency,\r\n}: {\r\n  totalVolume: BigNumber | undefined\r\n  color: Property.Color\r\n  convertToCurrency?: CurrencyName\r\n}) => {\r\n  const { theme } = useContext(ThemeContext)\r\n  const secondaryTextStyle = textSecondary(theme)\r\n\r\n  const converter = useCurrencyConverter()\r\n\r\n  const convertedVolume = useMemo(() => {\r\n    if (!convertToCurrency) return undefined\r\n    return formatWad(\r\n      converter.wadToCurrency(totalVolume, convertToCurrency, 'ETH'),\r\n      { precision: 2, padEnd: true },\r\n    )\r\n  }, [convertToCurrency, converter, totalVolume])\r\n\r\n  return (\r\n    <StatLine\r\n      statLabel={<Trans>Volume</Trans>}\r\n      statLabelTip={\r\n        <Trans>\r\n          The total funds this Juicebox project has received since it was\r\n          created.\r\n        </Trans>\r\n      }\r\n      statValue={\r\n        <span style={textPrimary}>\r\n          {convertedVolume && convertToCurrency ? (\r\n            <span style={secondaryTextStyle}>\r\n              <CurrencySymbol currency={convertToCurrency} />\r\n              {convertedVolume}{' '}\r\n            </span>\r\n          ) : null}\r\n          <span\r\n            style={{\r\n              color,\r\n            }}\r\n          >\r\n            <ETHAmount\r\n              amount={totalVolume ?? BigNumber.from(0)}\r\n              precision={4}\r\n            />\r\n          </span>\r\n        </span>\r\n      }\r\n    />\r\n  )\r\n}\r\n","import { t, Trans } from '@lingui/macro'\r\nimport { Modal } from 'antd'\r\nimport InputAccessoryButton from 'components/InputAccessoryButton'\r\nimport FormattedNumberInput from 'components/inputs/FormattedNumberInput'\r\nimport { emitErrorNotification } from 'utils/notifications'\r\n\r\nimport { useCallback, useEffect, useState } from 'react'\r\nimport { fromWad } from 'utils/formatNumber'\r\nimport { querySubgraphExhaustive } from 'utils/graph'\r\nimport { tokenSymbolText } from 'utils/tokenSymbolText'\r\n\r\nimport { readProvider } from 'constants/readProvider'\r\n\r\nexport default function DownloadParticipantsModal({\r\n  projectId,\r\n  tokenSymbol,\r\n  projectName,\r\n  visible,\r\n  onCancel,\r\n}: {\r\n  projectId: number | undefined\r\n  tokenSymbol: string | undefined\r\n  projectName: string | undefined\r\n  visible: boolean | undefined\r\n  onCancel: VoidFunction | undefined\r\n}) {\r\n  const [latestBlockNumber, setLatestBlockNumber] = useState<number>()\r\n  const [blockNumber, setBlockNumber] = useState<number>()\r\n  const [loading, setLoading] = useState<boolean>()\r\n\r\n  useEffect(() => {\r\n    readProvider.getBlockNumber().then(val => {\r\n      setLatestBlockNumber(val)\r\n      setBlockNumber(val)\r\n    })\r\n  }, [])\r\n\r\n  const download = useCallback(async () => {\r\n    if (blockNumber === undefined || !projectId) return\r\n    const rows = [\r\n      [\r\n        'Wallet address',\r\n        `Total ${tokenSymbolText({ tokenSymbol })} balance`,\r\n        'Unclaimed balance',\r\n        'Claimed balance',\r\n        'Total ETH paid',\r\n        'Last paid timestamp',\r\n      ], // CSV header row\r\n    ]\r\n\r\n    setLoading(true)\r\n    try {\r\n      const participants = await querySubgraphExhaustive({\r\n        entity: 'participant',\r\n        keys: [\r\n          'wallet',\r\n          'totalPaid',\r\n          'balance',\r\n          'stakedBalance',\r\n          'unstakedBalance',\r\n          'lastPaidTimestamp',\r\n        ],\r\n        orderBy: 'balance',\r\n        orderDirection: 'desc',\r\n        block: {\r\n          number: blockNumber,\r\n        },\r\n        where: {\r\n          key: 'projectId',\r\n          value: projectId,\r\n        },\r\n      })\r\n\r\n      if (!participants) {\r\n        emitErrorNotification(t`Error loading holders`)\r\n        throw new Error('No data.')\r\n      }\r\n\r\n      participants.forEach(p => {\r\n        let date = new Date((p.lastPaidTimestamp ?? 0) * 1000).toUTCString()\r\n\r\n        if (date.includes(',')) date = date.split(',')[1]\r\n\r\n        rows.push([\r\n          p.wallet ?? '--',\r\n          fromWad(p.balance),\r\n          fromWad(p.stakedBalance),\r\n          fromWad(p.unstakedBalance),\r\n          fromWad(p.totalPaid),\r\n          date,\r\n        ])\r\n      })\r\n\r\n      const csvContent =\r\n        'data:text/csv;charset=utf-8,' + rows.map(e => e.join(',')).join('\\n')\r\n      const encodedUri = encodeURI(csvContent)\r\n      const link = document.createElement('a')\r\n      link.setAttribute('href', encodedUri)\r\n      link.setAttribute(\r\n        'download',\r\n        `@${projectName}_holders-block${blockNumber}.csv`,\r\n      )\r\n      document.body.appendChild(link)\r\n\r\n      link.click()\r\n\r\n      setLoading(false)\r\n    } catch (e) {\r\n      console.error('Error downloading participants', e)\r\n      setLoading(false)\r\n    }\r\n  }, [blockNumber, projectId, tokenSymbol, projectName])\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      onCancel={onCancel}\r\n      onOk={download}\r\n      okText={t`Download CSV`}\r\n      okButtonProps={{ type: 'primary' }}\r\n      cancelText={t`Close`}\r\n      confirmLoading={loading}\r\n      centered\r\n    >\r\n      <div>\r\n        <h4>\r\n          <Trans>\r\n            Download CSV of {tokenSymbolText({ tokenSymbol })} holders\r\n          </Trans>\r\n        </h4>\r\n\r\n        <label style={{ display: 'block', marginTop: 20, marginBottom: 5 }}>\r\n          <Trans>Block number</Trans>\r\n        </label>\r\n        <FormattedNumberInput\r\n          value={blockNumber?.toString()}\r\n          onChange={val => setBlockNumber(val ? parseInt(val) : undefined)}\r\n          accessory={\r\n            <InputAccessoryButton\r\n              content={t`Latest`}\r\n              onClick={() => setBlockNumber(latestBlockNumber)}\r\n              disabled={blockNumber === latestBlockNumber}\r\n            />\r\n          }\r\n        />\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n","import {\r\n  DownloadOutlined,\r\n  SortAscendingOutlined,\r\n  SortDescendingOutlined,\r\n} from '@ant-design/icons'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport * as constants from '@ethersproject/constants'\r\nimport { t, Trans } from '@lingui/macro'\r\nimport { Button, Modal, Select } from 'antd'\r\nimport CurrencySymbol from 'components/CurrencySymbol'\r\nimport FormattedAddress from 'components/FormattedAddress'\r\nimport Loading from 'components/Loading'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { CV } from 'models/cv'\r\nimport { Participant } from 'models/subgraph-entities/vX/participant'\r\nimport { useContext, useEffect, useMemo, useState } from 'react'\r\nimport { formatPercent, formatWad } from 'utils/formatNumber'\r\nimport { OrderDirection, querySubgraph } from 'utils/graph'\r\nimport { tokenSymbolText } from 'utils/tokenSymbolText'\r\n\r\nimport DownloadParticipantsModal from './DownloadParticipantsModal'\r\n\r\nconst pageSize = 100\r\n\r\nexport default function ParticipantsModal({\r\n  projectId,\r\n  projectName,\r\n  tokenSymbol,\r\n  tokenAddress,\r\n  cv,\r\n  totalTokenSupply,\r\n  visible,\r\n  onCancel,\r\n}: {\r\n  projectId: number | undefined\r\n  projectName: string | undefined\r\n  tokenSymbol: string | undefined\r\n  tokenAddress: string | undefined\r\n  cv: CV | undefined\r\n  totalTokenSupply: BigNumber | undefined\r\n  visible: boolean | undefined\r\n  onCancel: VoidFunction | undefined\r\n}) {\r\n  const [loading, setLoading] = useState<boolean>()\r\n  const [participants, setParticipants] = useState<Participant[]>([])\r\n  const [sortPayerReports, setSortPayerReports] =\r\n    useState<keyof Participant>('balance')\r\n  const [pageNumber, setPageNumber] = useState<number>(0)\r\n  const [downloadModalVisible, setDownloadModalVisible] = useState<boolean>()\r\n  const [sortPayerReportsDirection, setSortPayerReportsDirection] =\r\n    useState<OrderDirection>('desc')\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n\r\n    if (!projectId || !visible) {\r\n      setParticipants([])\r\n      return\r\n    }\r\n\r\n    querySubgraph({\r\n      entity: 'participant',\r\n      keys: [\r\n        'wallet',\r\n        'totalPaid',\r\n        'lastPaidTimestamp',\r\n        'balance',\r\n        'stakedBalance',\r\n        'id',\r\n      ],\r\n      first: pageSize,\r\n      skip: pageNumber * pageSize,\r\n      orderBy: sortPayerReports,\r\n      orderDirection: sortPayerReportsDirection,\r\n      where:\r\n        projectId && cv\r\n          ? [\r\n              {\r\n                key: 'projectId',\r\n                value: projectId,\r\n              },\r\n              {\r\n                key: 'cv',\r\n                value: cv,\r\n              },\r\n              {\r\n                key: 'balance',\r\n                value: 0,\r\n                operator: 'gt',\r\n              },\r\n              {\r\n                key: 'wallet',\r\n                value: constants.AddressZero,\r\n                operator: 'not',\r\n              },\r\n            ]\r\n          : undefined,\r\n    }).then(res => {\r\n      setParticipants(curr => {\r\n        const newParticipants = [...curr]\r\n        newParticipants.push(...res)\r\n        return newParticipants\r\n      })\r\n      setLoading(false)\r\n    })\r\n  }, [\r\n    pageNumber,\r\n    projectId,\r\n    cv,\r\n    sortPayerReportsDirection,\r\n    sortPayerReports,\r\n    visible,\r\n  ])\r\n\r\n  const contentLineHeight = '1.4rem'\r\n\r\n  const list = useMemo(() => {\r\n    const smallHeaderStyle = {\r\n      fontSize: '.7rem',\r\n      color: colors.text.tertiary,\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            marginBottom: 20,\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <Select\r\n            style={{ flex: 1 }}\r\n            onChange={(val: keyof Participant) => {\r\n              setParticipants([])\r\n              setSortPayerReports(val)\r\n            }}\r\n            value={sortPayerReports}\r\n          >\r\n            <Select.Option value=\"balance\">\r\n              <Trans>\r\n                {tokenSymbolText({\r\n                  tokenSymbol: tokenSymbol,\r\n                  capitalize: true,\r\n                })}{' '}\r\n                balance\r\n              </Trans>\r\n            </Select.Option>\r\n            <Select.Option value=\"totalPaid\">\r\n              <Trans>Amount paid</Trans>\r\n            </Select.Option>\r\n            <Select.Option value=\"lastPaidTimestamp\">\r\n              <Trans>Last paid</Trans>\r\n            </Select.Option>\r\n          </Select>\r\n          <div\r\n            style={{ cursor: 'pointer', padding: 10 }}\r\n            onClick={() => {\r\n              setParticipants([])\r\n              setSortPayerReportsDirection(\r\n                sortPayerReportsDirection === 'asc' ? 'desc' : 'asc',\r\n              )\r\n            }}\r\n          >\r\n            {sortPayerReportsDirection === 'asc' ? (\r\n              <SortAscendingOutlined />\r\n            ) : (\r\n              <SortDescendingOutlined />\r\n            )}\r\n          </div>\r\n\r\n          <Button\r\n            type=\"text\"\r\n            icon={<DownloadOutlined />}\r\n            onClick={() => setDownloadModalVisible(true)}\r\n          />\r\n        </div>\r\n\r\n        {participants.map(p => (\r\n          <div\r\n            style={{\r\n              marginBottom: 20,\r\n              paddingBottom: 20,\r\n              borderBottom: '1px solid ' + colors.stroke.tertiary,\r\n            }}\r\n            key={p.id}\r\n          >\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignContent: 'space-between',\r\n              }}\r\n            >\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    lineHeight: contentLineHeight,\r\n                    marginRight: 10,\r\n                  }}\r\n                >\r\n                  <FormattedAddress address={p.wallet} />\r\n                </div>\r\n                <div style={smallHeaderStyle}>\r\n                  <CurrencySymbol currency=\"ETH\" />\r\n                  <Trans>\r\n                    {formatWad(p.totalPaid, { precision: 6 })} contributed\r\n                  </Trans>\r\n                </div>\r\n              </div>\r\n\r\n              <div style={{ textAlign: 'right' }}>\r\n                <div\r\n                  style={{\r\n                    lineHeight: contentLineHeight,\r\n                  }}\r\n                >\r\n                  {formatWad(p.balance, { precision: 0 })}{' '}\r\n                  {tokenSymbolText({\r\n                    tokenSymbol: tokenSymbol,\r\n                    capitalize: false,\r\n                    plural: true,\r\n                  })}{' '}\r\n                  ({formatPercent(p.balance, totalTokenSupply)}%)\r\n                </div>\r\n                <div style={smallHeaderStyle}>\r\n                  {formatWad(p.stakedBalance, { precision: 0 })}{' '}\r\n                  <Trans>\r\n                    {tokenSymbolText({\r\n                      tokenSymbol: tokenSymbol,\r\n                      capitalize: false,\r\n                      plural: true,\r\n                    })}{' '}\r\n                    unclaimed\r\n                  </Trans>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  }, [\r\n    colors.text.tertiary,\r\n    colors.stroke.tertiary,\r\n    sortPayerReports,\r\n    tokenSymbol,\r\n    sortPayerReportsDirection,\r\n    setDownloadModalVisible,\r\n    participants,\r\n    totalTokenSupply,\r\n  ])\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      onCancel={onCancel}\r\n      onOk={onCancel}\r\n      okText={t`Done`}\r\n      cancelButtonProps={{ hidden: true }}\r\n    >\r\n      <div>\r\n        <h4>\r\n          <Trans>\r\n            {tokenSymbolText({ tokenSymbol: tokenSymbol, capitalize: true })}{' '}\r\n            holders\r\n          </Trans>\r\n        </h4>\r\n\r\n        {tokenAddress && tokenAddress !== constants.AddressZero && (\r\n          <div style={{ marginBottom: 20 }}>\r\n            <Trans>\r\n              Token address: <FormattedAddress address={tokenAddress} />\r\n            </Trans>\r\n          </div>\r\n        )}\r\n\r\n        <p style={{ padding: 10, background: colors.background.l1 }}>\r\n          <Trans>\r\n            This list is using an experimental data index and may be inaccurate\r\n            for some projects.\r\n          </Trans>\r\n        </p>\r\n\r\n        {list}\r\n\r\n        {loading && (\r\n          <div>\r\n            <Loading />\r\n          </div>\r\n        )}\r\n\r\n        {participants?.length % pageSize === 0 && !loading ? (\r\n          <div\r\n            style={{\r\n              textAlign: 'center',\r\n              color: colors.text.secondary,\r\n              cursor: 'pointer',\r\n            }}\r\n            onClick={() => setPageNumber(pageNumber + 1)}\r\n          >\r\n            <Trans>Load more</Trans>\r\n          </div>\r\n        ) : loading ? null : (\r\n          <div\r\n            style={{\r\n              textAlign: 'center',\r\n              padding: 10,\r\n              color: colors.text.secondary,\r\n            }}\r\n          >\r\n            <Trans>{participants.length} total</Trans>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <DownloadParticipantsModal\r\n        projectId={projectId}\r\n        tokenSymbol={tokenSymbol}\r\n        projectName={projectName}\r\n        visible={downloadModalVisible}\r\n        onCancel={() => setDownloadModalVisible(false)}\r\n      />\r\n    </Modal>\r\n  )\r\n}\r\n","import useERC20BalanceOf from 'hooks/v1/contractReader/ERC20BalanceOf'\r\nimport useERC20DecimalsOf from 'hooks/v1/contractReader/ERC20DecimalsOf'\r\nimport useSymbolOfERC20 from 'hooks/SymbolOfERC20'\r\nimport { CSSProperties } from 'react'\r\nimport { formatWad } from 'utils/formatNumber'\r\n\r\nimport FormattedAddress from 'components/FormattedAddress'\r\n\r\nexport default function ERC20TokenBalance({\r\n  tokenAddress,\r\n  wallet,\r\n  style,\r\n  precision,\r\n}: {\r\n  tokenAddress: string | undefined\r\n  wallet: string | undefined\r\n  style?: CSSProperties\r\n  precision?: number\r\n}) {\r\n  const balance = useERC20BalanceOf(tokenAddress, wallet)\r\n  const decimals = useERC20DecimalsOf(tokenAddress)\r\n  const symbol = useSymbolOfERC20(tokenAddress)\r\n\r\n  if (balance === undefined) return null\r\n\r\n  return (\r\n    <div style={style}>\r\n      {formatWad(balance, {\r\n        precision: precision ?? 0,\r\n        decimals,\r\n      })}{' '}\r\n      <FormattedAddress label={symbol} address={tokenAddress} />\r\n    </div>\r\n  )\r\n}\r\n","import { useErc20Contract } from 'hooks/Erc20Contract'\r\n\r\nimport useContractReader from './ContractReader'\r\n\r\n/** Returns decimals used by ERC20 with `address`. */\r\nexport default function useERC20DecimalsOf(address: string | undefined) {\r\n  return useContractReader<number>({\r\n    contract: useErc20Contract(address),\r\n    functionName: 'decimals',\r\n  })\r\n}\r\n","import { t, Trans } from '@lingui/macro'\r\nimport { Collapse, Form, FormInstance, Input, Switch } from 'antd'\r\nimport CollapsePanel from 'antd/lib/collapse/CollapsePanel'\r\nimport { FormItems } from 'components/formItems'\r\nimport TooltipLabel from 'components/TooltipLabel'\r\nimport { NetworkContext } from 'contexts/networkContext'\r\nimport { V2ProjectContext } from 'contexts/v2/projectContext'\r\nimport { Dispatch, SetStateAction, useContext, useState } from 'react'\r\nimport * as constants from '@ethersproject/constants'\r\n\r\nexport default function AdvancedOptionsCollapse({\r\n  form,\r\n  tokenMintingEnabled,\r\n  setTokenMintingEnabled,\r\n  preferClaimed,\r\n  setPreferClaimed,\r\n}: {\r\n  form: FormInstance\r\n  tokenMintingEnabled: boolean\r\n  setTokenMintingEnabled: Dispatch<SetStateAction<boolean>>\r\n  preferClaimed: boolean\r\n  setPreferClaimed: Dispatch<SetStateAction<boolean>>\r\n}) {\r\n  const { userAddress } = useContext(NetworkContext)\r\n  const { tokenAddress } = useContext(V2ProjectContext)\r\n\r\n  const [activeKey, setActiveKey] = useState<number>()\r\n  const [customBeneficiaryEnabled, setCustomBeneficiaryEnabled] =\r\n    useState<boolean>(false)\r\n\r\n  const advancedSettingsMargin = '20px'\r\n  const switchMargin = '20px'\r\n\r\n  return (\r\n    <Collapse style={{ border: 'none' }} activeKey={activeKey}>\r\n      <CollapsePanel\r\n        header={\r\n          <span onClick={() => setActiveKey(activeKey === 0 ? undefined : 0)}>\r\n            <Trans>Advanced options (optional)</Trans>\r\n          </span>\r\n        }\r\n        key={0}\r\n        style={{ border: 'none', marginLeft: '-18px' }}\r\n      >\r\n        <div style={{ paddingLeft: '24px', marginTop: '-15px' }}>\r\n          <Form form={form}>\r\n            <div>\r\n              <TooltipLabel\r\n                label={t`Custom memo`}\r\n                tip={\r\n                  <Trans>\r\n                    The onchain memo for each transaction made through the\r\n                    address. It will appear in the project's payment feed when\r\n                    someone pays this address.\r\n                  </Trans>\r\n                }\r\n              />\r\n              <Form.Item name=\"memo\">\r\n                <Input\r\n                  placeholder={t`Payment made through payable address`}\r\n                  type=\"string\"\r\n                  autoComplete=\"off\"\r\n                  style={{ marginTop: 5 }}\r\n                />\r\n              </Form.Item>\r\n            </div>\r\n            <div style={{ display: 'flex', marginTop: advancedSettingsMargin }}>\r\n              <TooltipLabel\r\n                label={t`Token minting enabled`}\r\n                tip={t`Determines whether tokens will be minted from payments to this address.`}\r\n              />\r\n              <Switch\r\n                onChange={setTokenMintingEnabled}\r\n                checked={tokenMintingEnabled}\r\n                style={{ marginLeft: switchMargin }}\r\n              />\r\n            </div>\r\n            {tokenMintingEnabled ? (\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  margin: `${advancedSettingsMargin} 0 14px`,\r\n                }}\r\n              >\r\n                <TooltipLabel\r\n                  label={t`Custom token beneficiary`}\r\n                  tip={\r\n                    <Trans>\r\n                      By default, newly minted tokens will go to the wallet who\r\n                      sends funds to the address. You can enable this to set the\r\n                      token beneficiary to a custom address.\r\n                    </Trans>\r\n                  }\r\n                />\r\n                <Switch\r\n                  onChange={checked => {\r\n                    setCustomBeneficiaryEnabled(checked)\r\n                  }}\r\n                  checked={customBeneficiaryEnabled}\r\n                  style={{ marginLeft: switchMargin }}\r\n                />\r\n              </div>\r\n            ) : null}\r\n            {tokenMintingEnabled && customBeneficiaryEnabled ? (\r\n              <FormItems.EthAddress\r\n                name=\"beneficiary\"\r\n                defaultValue={userAddress}\r\n                onAddressChange={address => {\r\n                  form.setFieldsValue({\r\n                    customBeneficiaryAddress: address,\r\n                  })\r\n                }}\r\n              />\r\n            ) : null}\r\n            {tokenMintingEnabled &&\r\n            tokenAddress &&\r\n            tokenAddress !== constants.AddressZero ? (\r\n              <div\r\n                style={{ display: 'flex', marginTop: advancedSettingsMargin }}\r\n              >\r\n                <TooltipLabel\r\n                  label={t`Mint tokens as ERC-20`}\r\n                  tip={\r\n                    <Trans>\r\n                      When checked, payments to this address will mint this\r\n                      project's ERC-20 tokens to the beneficiary's wallet.\r\n                      Payments will cost more gas. When unchecked, Juicebox will\r\n                      track the beneficiary's new tokens when they pay. The\r\n                      beneficiary can claim their ERC-20 tokens at any time.\r\n                    </Trans>\r\n                  }\r\n                />\r\n                <Switch\r\n                  style={{ marginLeft: switchMargin }}\r\n                  checked={preferClaimed}\r\n                  onChange={setPreferClaimed}\r\n                />\r\n              </div>\r\n            ) : null}\r\n          </Form>\r\n        </div>\r\n      </CollapsePanel>\r\n    </Collapse>\r\n  )\r\n}\r\n","import { t, Trans } from '@lingui/macro'\r\nimport { useState } from 'react'\r\n\r\nimport { TransactionReceipt } from '@ethersproject/providers'\r\nimport { TransactorInstance } from 'hooks/Transactor'\r\n\r\nimport { Modal } from 'antd'\r\nimport { JBDiscordLink } from 'pages/home/QAs'\r\nimport EtherscanLink from 'components/EtherscanLink'\r\nimport CopyTextButton from 'components/CopyTextButton'\r\nimport TransactionModal from 'components/TransactionModal'\r\nimport { emitErrorNotification } from 'utils/notifications'\r\nimport { DeployProjectPayerTxArgs } from 'hooks/v2/transactor/DeployProjectPayerTx'\r\nimport { useForm } from 'antd/lib/form/Form'\r\n\r\nimport { readProvider } from 'constants/readProvider'\r\nimport AdvancedOptionsCollapse from './AdvancedOptionsCollapse'\r\n\r\nconst DEPLOY_EVENT_IDX = 0\r\n\r\n/**\r\n * Return the address of the project payer created from a `deployProjectPayer` transaction.\r\n * @param txReceipt receipt of `deployProjectPayer` transaction\r\n */\r\nconst getProjectPayerAddressFromReceipt = (\r\n  txReceipt: TransactionReceipt,\r\n): string => {\r\n  const newProjectPayerAddress = txReceipt?.logs[DEPLOY_EVENT_IDX]?.address\r\n  return newProjectPayerAddress\r\n}\r\n\r\nexport default function LaunchProjectPayerModal({\r\n  visible,\r\n  onClose,\r\n  useDeployProjectPayerTx,\r\n  onConfirmed,\r\n}: {\r\n  visible: boolean\r\n  onClose: VoidFunction\r\n  useDeployProjectPayerTx: () =>\r\n    | TransactorInstance<DeployProjectPayerTxArgs>\r\n    | undefined\r\n  onConfirmed?: VoidFunction\r\n}) {\r\n  const [loadingProjectPayer, setLoadingProjectPayer] = useState<boolean>()\r\n  const [transactionPending, setTransactionPending] = useState<boolean>()\r\n  const [projectPayerAddress, setProjectPayerAddress] = useState<string>()\r\n\r\n  const [tokenMintingEnabled, setTokenMintingEnabled] = useState<boolean>(true)\r\n  const [preferClaimed, setPreferClaimed] = useState<boolean>(false)\r\n\r\n  const [form] = useForm<{\r\n    memo: string\r\n    customBeneficiaryAddress: string\r\n  }>()\r\n\r\n  const [confirmedModalVisible, setConfirmedModalVisible] = useState<boolean>()\r\n  // TODO: load project payer and show different thing in this section if the project already has one\r\n  // (Issue: #897)\r\n\r\n  const deployProjectPayerTx = useDeployProjectPayerTx()\r\n\r\n  async function deployProjectPayer() {\r\n    if (!deployProjectPayerTx) return\r\n\r\n    setLoadingProjectPayer(true)\r\n\r\n    const txSuccess = await deployProjectPayerTx(\r\n      {\r\n        customBeneficiaryAddress: form.getFieldValue(\r\n          'customBeneficiaryAddress',\r\n        ),\r\n        customMemo: form.getFieldValue('memo'),\r\n        tokenMintingEnabled,\r\n        preferClaimed,\r\n      },\r\n      {\r\n        onDone() {\r\n          setTransactionPending(true)\r\n        },\r\n        async onConfirmed(result) {\r\n          const txHash = result?.transaction?.hash\r\n          if (!txHash) {\r\n            return\r\n          }\r\n\r\n          const txReceipt = await readProvider.getTransactionReceipt(txHash)\r\n          const newProjectPayerAddress =\r\n            getProjectPayerAddressFromReceipt(txReceipt)\r\n          if (newProjectPayerAddress === undefined) {\r\n            emitErrorNotification(t`Something went wrong.`)\r\n            return\r\n          }\r\n          if (onConfirmed) onConfirmed()\r\n          onClose()\r\n          setProjectPayerAddress(newProjectPayerAddress)\r\n          setLoadingProjectPayer(false)\r\n          setTransactionPending(false)\r\n          setConfirmedModalVisible(true)\r\n        },\r\n      },\r\n    )\r\n    if (!txSuccess) {\r\n      setLoadingProjectPayer(false)\r\n      setTransactionPending(false)\r\n    }\r\n    form.resetFields()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TransactionModal\r\n        visible={visible}\r\n        title={t`Create payable address`}\r\n        okText={t`Deploy project payer contract`}\r\n        connectWalletText={t`Connect wallet to deploy`}\r\n        onOk={deployProjectPayer}\r\n        onCancel={() => onClose()}\r\n        confirmLoading={loadingProjectPayer}\r\n        transactionPending={transactionPending}\r\n      >\r\n        <p>\r\n          <Trans>\r\n            Create an Ethereum address that can be used to pay your project\r\n            directly.\r\n          </Trans>\r\n        </p>\r\n        <p>\r\n          <Trans>\r\n            Tokens minted from payments to this address will belong to the payer\r\n            by default. However, if someone pays the project through a custodial\r\n            service platform such as Coinbase,{' '}\r\n            <strong>\r\n              tokens can't be issued to their personal wallets and will be lost\r\n            </strong>\r\n            .\r\n          </Trans>\r\n        </p>\r\n        <AdvancedOptionsCollapse\r\n          form={form}\r\n          tokenMintingEnabled={tokenMintingEnabled}\r\n          setTokenMintingEnabled={setTokenMintingEnabled}\r\n          preferClaimed={preferClaimed}\r\n          setPreferClaimed={setPreferClaimed}\r\n        />\r\n      </TransactionModal>\r\n      <Modal\r\n        visible={confirmedModalVisible}\r\n        onOk={() => setConfirmedModalVisible(false)}\r\n        cancelButtonProps={{ hidden: true }}\r\n        okText={t`Done`}\r\n        centered\r\n      >\r\n        <h4 style={{ marginBottom: 30 }}>\r\n          <Trans>Your new payable address:</Trans>\r\n        </h4>\r\n        <EtherscanLink\r\n          value={projectPayerAddress}\r\n          style={{ fontSize: 15 }}\r\n          type=\"address\"\r\n        />\r\n        <CopyTextButton value={projectPayerAddress} style={{ fontSize: 25 }} />\r\n        <p style={{ marginTop: 30 }}>\r\n          <Trans>\r\n            This address will disappear when you close this window.{' '}\r\n            <strong>Copy the address and save it now</strong>.\r\n          </Trans>\r\n        </p>\r\n        <p>\r\n          <Trans>\r\n            If you lose your address, please contact the Juicebox team through{' '}\r\n            <JBDiscordLink>Discord</JBDiscordLink>.\r\n          </Trans>\r\n        </p>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n","import { t } from '@lingui/macro'\r\nimport { Col, Modal, Row, Space } from 'antd'\r\n\r\ntype PaymentMemoSticker = {\r\n  filepath: string\r\n  alt: string\r\n}\r\n\r\nconst PAYMENT_MEMO_STICKERS: PaymentMemoSticker[] = [\r\n  {\r\n    filepath: '/assets/stickers/banny_blockchain.png',\r\n    alt: 'Blockchain Banny',\r\n  },\r\n  {\r\n    filepath: '/assets/stickers/banny_coder.png',\r\n    alt: 'Banny at computer smoking a blunt',\r\n  },\r\n  { filepath: '/assets/stickers/banny_dao.png', alt: 'Banny holding DAO sign' },\r\n  { filepath: '/assets/stickers/banny_lfg.png', alt: 'Banny LFG' },\r\n  { filepath: '/assets/stickers/banny_love.png', alt: 'Banny in love' },\r\n  { filepath: '/assets/stickers/banny_party_2.png', alt: 'Banny celebrating' },\r\n  { filepath: '/assets/stickers/banny_party.png', alt: 'Banny celebrating' },\r\n  {\r\n    filepath: '/assets/stickers/banny_popcorn.png',\r\n    alt: 'Banny eating popcorn',\r\n  },\r\n  { filepath: '/assets/stickers/banny_shoes.png', alt: 'Banny with shoes' },\r\n  { filepath: '/assets/stickers/banny_stoned.png', alt: 'Stoned banny' },\r\n  { filepath: '/assets/stickers/banny_yes.png', alt: 'Stoned screaming \"yes\"' },\r\n  { filepath: '/assets/quint.gif', alt: 'Quint' },\r\n]\r\n\r\nexport function AttachStickerModal({\r\n  visible,\r\n  onSelect,\r\n  onClose,\r\n}: {\r\n  visible: boolean\r\n  onSelect: (sticker: PaymentMemoSticker) => void\r\n  onClose: VoidFunction\r\n}) {\r\n  function AttachableSticker({ sticker }: { sticker: PaymentMemoSticker }) {\r\n    return (\r\n      <Col md={8}>\r\n        <div\r\n          role=\"button\"\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'middle',\r\n            padding: '20px 0',\r\n            cursor: 'pointer',\r\n          }}\r\n          className=\"hover-bg-l2\"\r\n          onClick={() => {\r\n            onSelect(sticker)\r\n            onClose()\r\n          }}\r\n        >\r\n          <img src={sticker.filepath} alt={sticker.alt} height=\"75px\" />\r\n        </div>\r\n      </Col>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={t`Attach a sticker`}\r\n      visible={visible}\r\n      onCancel={onClose}\r\n      okButtonProps={{ hidden: true }}\r\n      cancelText={t`Cancel`}\r\n      centered\r\n    >\r\n      <Space\r\n        size=\"large\"\r\n        direction=\"vertical\"\r\n        style={{ width: '100%', maxHeight: '400px', overflowY: 'scroll' }}\r\n      >\r\n        <Row style={{ width: '100%' }}>\r\n          {PAYMENT_MEMO_STICKERS.map((sticker, index) => (\r\n            <AttachableSticker sticker={sticker} key={index} />\r\n          ))}\r\n        </Row>\r\n      </Space>\r\n    </Modal>\r\n  )\r\n}\r\n","import { t } from '@lingui/macro'\r\nimport { Form, Input, Tooltip } from 'antd'\r\nimport { SmileOutlined } from '@ant-design/icons'\r\nimport { AttachStickerModal } from 'components/modals/AttachStickerModal'\r\nimport { useContext, useState } from 'react'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\n\r\nexport default function MemoFormItem({\r\n  value,\r\n  onChange,\r\n}: {\r\n  value: string\r\n  onChange: (memo: string) => void\r\n}) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  const [attachStickerModalVisible, setAttachStickerModalVisible] =\r\n    useState<boolean>(false)\r\n\r\n  return (\r\n    <Form.Item\r\n      label={t`Memo (optional)`}\r\n      className={'antd-no-number-handler'}\r\n      extra={t`Add an on-chain memo to this payment.`}\r\n    >\r\n      <div\r\n        style={{\r\n          position: 'relative',\r\n        }}\r\n      >\r\n        <Input.TextArea\r\n          placeholder={t`WAGMI!`}\r\n          maxLength={256}\r\n          value={value}\r\n          onChange={e => onChange(e.target.value)}\r\n          showCount\r\n          autoSize\r\n        />\r\n        <div\r\n          style={{\r\n            color: colors.text.secondary,\r\n            fontSize: '.8rem',\r\n            position: 'absolute',\r\n            right: 5,\r\n            top: 7,\r\n          }}\r\n        >\r\n          <Tooltip title={t`Attach a sticker`}>\r\n            <SmileOutlined onClick={() => setAttachStickerModalVisible(true)} />\r\n          </Tooltip>\r\n        </div>\r\n      </div>\r\n      <AttachStickerModal\r\n        visible={attachStickerModalVisible}\r\n        onClose={() => setAttachStickerModalVisible(false)}\r\n        onSelect={sticker => {\r\n          const url = new URL(`${window.location.origin}${sticker.filepath}`)\r\n          const urlString = url.toString()\r\n\r\n          onChange(value.length ? `${value} ${urlString}` : urlString)\r\n        }}\r\n      />\r\n    </Form.Item>\r\n  )\r\n}\r\n","import { Input } from 'antd'\r\nimport { t } from '@lingui/macro'\r\n\r\nimport { useContext, useState, useEffect, useCallback } from 'react'\r\nimport { V1UserContext } from 'contexts/v1/userContext'\r\nimport { normalizeHandle } from 'utils/formatHandle'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { isBigNumberish } from '@ethersproject/bignumber/lib/bignumber'\r\nimport { parseBytes32String } from '@ethersproject/strings'\r\n\r\ntype ProjectHandleInputValue = string | undefined\r\nexport type ProjectHandleInitialValue = string | BigNumber | undefined\r\n\r\ninterface ProjectHandleProps {\r\n  onChange?: (value: ProjectHandleInputValue) => void\r\n  suffix?: React.ReactNode\r\n  initialValue?: ProjectHandleInitialValue\r\n}\r\n\r\n/**\r\n * Custom input component for project handles.\r\n *\r\n * This input is unidirectional. It only emits events up the tree (via `onChange`),\r\n * and doesn't have a `value` prop.\r\n *\r\n * Initially, it triggers `onChange` after ensuring the input contents are a string.\r\n * Then, it will trigger `onChange` in repsonse to the input's `onChange` handler.\r\n *\r\n */\r\nexport function ProjectHandleInput({\r\n  onChange,\r\n  suffix,\r\n  initialValue,\r\n}: ProjectHandleProps) {\r\n  const { contracts } = useContext(V1UserContext)\r\n  const [inputContents, setInputContents] = useState<string>()\r\n\r\n  const triggerChange = useCallback(\r\n    (value: ProjectHandleInputValue) => {\r\n      onChange?.(value)\r\n    },\r\n    [onChange],\r\n  )\r\n\r\n  // initialValue can be a string (the human-readable handle)\r\n  // or a project ID.\r\n  useEffect(() => {\r\n    if (typeof initialValue === 'string') {\r\n      setInputContents(initialValue)\r\n      triggerChange(initialValue)\r\n    } else if (isBigNumberish(initialValue)) {\r\n      contracts?.Projects.functions\r\n        .handleOf(BigNumber.from(initialValue).toHexString())\r\n        .then(res => {\r\n          const handle = parseBytes32String(res[0])\r\n          setInputContents(handle)\r\n          triggerChange(handle)\r\n        })\r\n    }\r\n    // Note: if we make `triggerChange` a dependency, this effect will\r\n    // be triggered every re-render, we only want this to change\r\n    // when `initialValue` changes.\r\n  }, [initialValue, contracts?.Projects.functions]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const onHandleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const val = normalizeHandle(e.target.value)\r\n    setInputContents(val)\r\n    triggerChange(val)\r\n  }\r\n\r\n  return (\r\n    <Input\r\n      value={inputContents}\r\n      onChange={onHandleChange}\r\n      prefix=\"@\"\r\n      suffix={suffix}\r\n      className=\"err-suffix\"\r\n      placeholder={t`handle`}\r\n      type=\"string\"\r\n      autoComplete=\"off\"\r\n      spellCheck={false}\r\n    />\r\n  )\r\n}\r\n","import { t } from '@lingui/macro'\r\nimport { CheckCircleOutlined, LoadingOutlined } from '@ant-design/icons'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { Form } from 'antd'\r\nimport { useCallback, useContext, useEffect, useMemo, useState } from 'react'\r\nimport { formatBytes32String } from '@ethersproject/strings'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport useContractReader from 'hooks/v1/contractReader/ContractReader'\r\nimport { V1ContractName } from 'models/v1/contracts'\r\nimport { normalizeHandle } from 'utils/formatHandle'\r\nimport { FormItemExt } from 'components/formItems/formItemExt'\r\n\r\nimport {\r\n  ProjectHandleInput,\r\n  ProjectHandleInitialValue,\r\n} from './ProjectHandleInput'\r\n\r\n/**\r\n * Custom Form.Item component for project handles.\r\n */\r\nexport default function ProjectHandleFormItem({\r\n  name,\r\n  hideLabel,\r\n  formItemProps,\r\n  onValueChange,\r\n  requireState,\r\n  required,\r\n  returnValue,\r\n  initialValue,\r\n}: {\r\n  onValueChange?: (val: string) => void\r\n  requireState?: 'exists' | 'notExist'\r\n  required?: boolean\r\n  returnValue?: 'id' | 'handle'\r\n  initialValue?: ProjectHandleInitialValue\r\n} & FormItemExt) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n  const [inputContents, setInputContents] = useState<string>()\r\n  const [handleLoading, setHandleLoading] = useState<boolean>(false)\r\n\r\n  // Set the initial state.\r\n  useEffect(() => {\r\n    // If there's an existing value, set loading state\r\n    // and disable input while we wait for loading to finish.\r\n    if (initialValue) {\r\n      setHandleLoading(true)\r\n    }\r\n  }, [initialValue])\r\n\r\n  const handleHex = useMemo(() => {\r\n    if (!inputContents) return\r\n\r\n    try {\r\n      return formatBytes32String(normalizeHandle(inputContents))\r\n    } catch (e) {\r\n      console.error('Error formatting handle', inputContents, e)\r\n    }\r\n  }, [inputContents]) // 0xabc...\r\n\r\n  const idForHandle = useContractReader<BigNumber>({\r\n    contract: V1ContractName.Projects,\r\n    functionName: 'projectFor',\r\n    args: handleHex && requireState ? [handleHex] : null,\r\n    callback: useCallback(\r\n      id => {\r\n        setHandleLoading(false)\r\n\r\n        if (returnValue === 'id') {\r\n          onValueChange?.(id?.toHexString() ?? '0x00')\r\n        }\r\n      },\r\n      [onValueChange, returnValue],\r\n    ),\r\n  })\r\n\r\n  const handleExists = Boolean(idForHandle?.gt(0))\r\n\r\n  // Validator function for Form.Item\r\n  const validator = useCallback(() => {\r\n    if (handleExists && requireState === 'notExist')\r\n      return Promise.reject('Handle not available')\r\n    if (!handleExists && requireState === 'exists')\r\n      return Promise.reject(\"Project doesn't exist\")\r\n    else return Promise.resolve()\r\n  }, [handleExists, requireState])\r\n\r\n  const suffix: string | JSX.Element = useMemo(() => {\r\n    const InputCheckIcon = (\r\n      <CheckCircleOutlined style={{ color: colors.icon.success }} />\r\n    )\r\n\r\n    if (handleLoading) {\r\n      return <LoadingOutlined spin />\r\n    }\r\n    if (!inputContents) {\r\n      return ''\r\n    }\r\n    if (requireState === 'notExist') {\r\n      // In the `notExist` case,\r\n      // an existing handle is assumed valid if it hasn't changed from\r\n      // the initialValue (for example, if a project is editing their current handle).\r\n      const isExistingHandleValid =\r\n        initialValue !== undefined && inputContents === initialValue\r\n\r\n      if (handleExists && !isExistingHandleValid) {\r\n        return 'Handle already in use'\r\n      }\r\n\r\n      if (!handleExists || (handleExists && isExistingHandleValid)) {\r\n        return InputCheckIcon\r\n      }\r\n    }\r\n    if (requireState === 'exists') {\r\n      return handleExists ? InputCheckIcon : 'Handle not found'\r\n    }\r\n\r\n    return ''\r\n  }, [\r\n    inputContents,\r\n    handleLoading,\r\n    handleExists,\r\n    requireState,\r\n    initialValue,\r\n    colors.icon.success,\r\n  ])\r\n\r\n  const onChange = (val: string | undefined) => {\r\n    setInputContents(val)\r\n    if (val) {\r\n      setHandleLoading(true)\r\n    }\r\n    // Only trigger onValueChange when\r\n    // return value is not `id`.\r\n    // We handle `id` type in contract\r\n    // reader above.\r\n    if (returnValue !== 'id') {\r\n      onValueChange?.(val ?? '')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form.Item\r\n      name={name}\r\n      label={hideLabel ? undefined : formItemProps?.label ?? t`Project handle`}\r\n      {...formItemProps}\r\n      rules={[{ required }, { validator }, ...(formItemProps?.rules ?? [])]}\r\n      validateTrigger={false}\r\n      validateFirst\r\n    >\r\n      <ProjectHandleInput\r\n        onChange={onChange}\r\n        initialValue={initialValue}\r\n        suffix={suffix}\r\n      />\r\n    </Form.Item>\r\n  )\r\n}\r\n","import { Form, Switch } from 'antd'\r\nimport { Trans } from '@lingui/macro'\r\n\r\nimport { CSSProperties, useContext } from 'react'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport FormItemLabel from 'pages/create/FormItemLabel'\r\nimport { defaultFundingCycleData } from 'redux/slices/editingV2Project'\r\n\r\nimport { DISCOUNT_RATE_EXPLANATION } from 'components/v2/V2Project/V2FundingCycleSection/settingExplanations'\r\n\r\nimport { FormItemExt } from './formItemExt'\r\nimport NumberSlider from '../inputs/NumberSlider'\r\nimport FormItemWarningText from '../FormItemWarningText'\r\n\r\nfunction DiscountRateExtra({ disabled }: { disabled?: boolean }) {\r\n  return (\r\n    <div>\r\n      {disabled && (\r\n        <FormItemWarningText>\r\n          <Trans>\r\n            Disabled when your project's funding cycle duration is 0.\r\n          </Trans>\r\n        </FormItemWarningText>\r\n      )}\r\n      {DISCOUNT_RATE_EXPLANATION}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default function ProjectDiscountRate({\r\n  name,\r\n  hideLabel,\r\n  formItemProps,\r\n  value,\r\n  style = {},\r\n  onChange,\r\n  checked,\r\n  disabled,\r\n  onToggle,\r\n}: {\r\n  value: string | undefined\r\n  style?: CSSProperties\r\n  onChange: (val?: number) => void\r\n  checked?: boolean\r\n  disabled?: boolean\r\n  onToggle?: (checked: boolean) => void\r\n} & FormItemExt) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <Form.Item\r\n      extra={<DiscountRateExtra disabled={disabled} />}\r\n      name={name}\r\n      label={\r\n        hideLabel ? undefined : (\r\n          <div style={{ display: 'flex' }}>\r\n            <FormItemLabel>\r\n              <Trans>Discount rate</Trans>\r\n            </FormItemLabel>\r\n            {onToggle ? (\r\n              <>\r\n                <Switch checked={checked} onChange={onToggle} />{' '}\r\n                {!checked ? (\r\n                  <span style={{ color: colors.text.tertiary, marginLeft: 10 }}>\r\n                    <Trans>({defaultFundingCycleData.discountRate}%)</Trans>\r\n                  </span>\r\n                ) : null}\r\n              </>\r\n            ) : null}\r\n          </div>\r\n        )\r\n      }\r\n      style={style}\r\n      {...formItemProps}\r\n    >\r\n      <NumberSlider\r\n        max={20}\r\n        defaultValue={0}\r\n        sliderValue={parseFloat(value ?? '0')}\r\n        suffix=\"%\"\r\n        name={name}\r\n        onChange={onChange}\r\n        step={0.1}\r\n        disabled={disabled}\r\n      />\r\n    </Form.Item>\r\n  )\r\n}\r\n","import { ThemeContext } from 'contexts/themeContext'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { CSSProperties, useContext, useEffect, useState } from 'react'\r\nimport { perbicentToPercent } from 'utils/formatNumber'\r\n\r\nimport { Trans } from '@lingui/macro'\r\n\r\nimport FormattedNumberInput from './FormattedNumberInput'\r\nimport { CurrencyName } from 'constants/currency'\r\nimport CurrencySwitch from '../CurrencySwitch'\r\n\r\nexport default function BudgetTargetInput({\r\n  currency,\r\n  target,\r\n  targetSubFee,\r\n  onTargetChange,\r\n  onTargetSubFeeChange,\r\n  onCurrencyChange,\r\n  disabled,\r\n  placeholder,\r\n  feePerbicent,\r\n  showTargetSubFeeInput = true,\r\n}: {\r\n  currency: CurrencyName\r\n  target: string | undefined\r\n  targetSubFee: string | undefined\r\n  onTargetChange: (target?: string) => void\r\n  onTargetSubFeeChange?: (target?: string) => void\r\n  onCurrencyChange?: (currency: CurrencyName) => void\r\n  disabled?: boolean\r\n  placeholder?: string\r\n  feePerbicent: BigNumber | undefined\r\n  showTargetSubFeeInput?: boolean\r\n}) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  const targetSubFeeStyles: CSSProperties = {\r\n    color: colors.text.primary,\r\n    marginBottom: 10,\r\n    marginTop: 10,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  }\r\n\r\n  const [_currency, setCurrency] = useState<CurrencyName>()\r\n\r\n  useEffect(() => setCurrency(currency), [currency])\r\n\r\n  if (_currency === undefined) return null\r\n\r\n  const _currencySwitch = onCurrencyChange ? (\r\n    <CurrencySwitch\r\n      onCurrencyChange={(currencyName: CurrencyName) => {\r\n        setCurrency(currencyName)\r\n        onCurrencyChange(currencyName)\r\n      }}\r\n      currency={_currency}\r\n    />\r\n  ) : undefined\r\n\r\n  return (\r\n    <div>\r\n      <FormattedNumberInput\r\n        value={target}\r\n        placeholder={placeholder}\r\n        disabled={disabled}\r\n        accessory={_currencySwitch}\r\n        onChange={target => onTargetChange(target?.toString())}\r\n      />\r\n      {feePerbicent?.gt(0) && showTargetSubFeeInput && (\r\n        <div style={targetSubFeeStyles}>\r\n          <div style={{ fontWeight: 500, flexGrow: 1, marginRight: 8 }}>\r\n            <FormattedNumberInput\r\n              value={targetSubFee}\r\n              placeholder={placeholder}\r\n              disabled={disabled}\r\n              accessory={_currencySwitch}\r\n              onChange={newTargetSubFee =>\r\n                onTargetSubFeeChange?.(newTargetSubFee?.toString())\r\n              }\r\n            />\r\n          </div>\r\n          <div>\r\n            <Trans>\r\n              after {perbicentToPercent(feePerbicent?.toString())}% JBX fee\r\n            </Trans>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import ProjectHandleFormItem from 'components/v1/shared/formItems/ProjectHandle/ProjectHandleFormItem'\r\nimport TokenRefs from 'components/v1/shared/formItems/TokenRefs'\r\nimport ProjectTicketMods from 'components/v1/shared/ProjectTicketMods'\r\n\r\nimport ENSName from './ENSName'\r\nimport EthAddress from './EthAddress'\r\nimport { ItemNoInput } from './ItemNoInput'\r\nimport ProjectDescription from './ProjectDescription'\r\nimport ProjectDiscord from './ProjectDiscord'\r\nimport ProjectDiscountRate from './ProjectDiscountRate'\r\nimport ProjectDuration from './ProjectDuration'\r\nimport ProjectLink from './ProjectLink'\r\nimport ProjectLogoUri from './ProjectLogoUri'\r\nimport ProjectName from './ProjectName'\r\nimport ProjectPayButton from './ProjectPayButton'\r\nimport ProjectPayDisclosure from './ProjectPayDisclosure'\r\nimport { ProjectRedemptionRate } from './ProjectRedemptionRate'\r\nimport ProjectReserved from './ProjectReserved'\r\nimport ProjectTarget from './ProjectTarget'\r\nimport ProjectTwitter from './ProjectTwitter'\r\n\r\nexport const FormItems = {\r\n  ENSName,\r\n  EthAddress,\r\n  ItemNoInput,\r\n  ProjectRedemptionRate,\r\n  ProjectDescription,\r\n  ProjectDiscord,\r\n  ProjectDiscountRate,\r\n  ProjectDuration,\r\n  ProjectHandleFormItem,\r\n  ProjectLink,\r\n  ProjectLogoUri,\r\n  ProjectName,\r\n  ProjectPayButton,\r\n  ProjectPayDisclosure,\r\n  ProjectReserved,\r\n  ProjectTarget,\r\n  ProjectTicketMods,\r\n  ProjectTwitter,\r\n  TokenRefs,\r\n}\r\n","import { Form, Input } from 'antd'\r\n\r\nimport { t } from '@lingui/macro'\r\n\r\nimport { FormItemExt } from './formItemExt'\r\n\r\nexport default function ENSName({\r\n  name,\r\n  hideLabel,\r\n  formItemProps,\r\n  onChange,\r\n}: {\r\n  onChange?: (val?: string) => void\r\n} & FormItemExt) {\r\n  return (\r\n    <Form.Item\r\n      name={name}\r\n      label={hideLabel ? undefined : t`ENS Name`}\r\n      rules={[\r\n        ...(formItemProps?.rules ?? []),\r\n        {\r\n          validator: (rule, value: string) => {\r\n            if (value.endsWith('.eth')) {\r\n              return Promise.reject('Do not include .eth')\r\n            } else return Promise.resolve()\r\n          },\r\n        },\r\n      ]}\r\n      {...formItemProps}\r\n    >\r\n      <Input\r\n        placeholder=\"juicebox\"\r\n        type=\"string\"\r\n        autoComplete=\"off\"\r\n        onChange={onChange ? e => onChange(e.target.value) : undefined}\r\n        suffix=\".eth\"\r\n      />\r\n    </Form.Item>\r\n  )\r\n}\r\n","import { CheckCircleFilled, LoadingOutlined } from '@ant-design/icons'\r\nimport { Form, Input } from 'antd'\r\n\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport * as constants from '@ethersproject/constants'\r\nimport { isAddress } from '@ethersproject/address'\r\n\r\nimport { useCallback, useContext, useEffect, useMemo, useState } from 'react'\r\n\r\nimport { readProvider } from 'constants/readProvider'\r\n\r\nimport { FormItemExt } from './formItemExt'\r\n\r\nconst isENS = (address = '') => address.endsWith('.eth')\r\n\r\nexport default function EthAddress({\r\n  name,\r\n  formItemProps,\r\n  onAddressChange,\r\n  defaultValue,\r\n}: FormItemExt & {\r\n  onAddressChange: (address: string) => void\r\n  defaultValue: string | undefined\r\n}) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  const [value, setValue] = useState<string>()\r\n  const [addressForENSName, setAddressForENSName] = useState<string>()\r\n  const [ensName, setENSName] = useState<string>()\r\n  const [loadingENSName, setLoadingENSName] = useState<boolean>()\r\n\r\n  const onInputChange = useCallback(\r\n    // value can be ENS name *or* ETH address (0x00...)\r\n    async (value: string) => {\r\n      setValue(value)\r\n      onAddressChange(value)\r\n\r\n      setAddressForENSName(undefined)\r\n      setENSName(undefined)\r\n\r\n      if (isENS(value)) {\r\n        try {\r\n          setLoadingENSName(true)\r\n          const addressForENSName = await readProvider.resolveName(value)\r\n          if (addressForENSName) {\r\n            setAddressForENSName(addressForENSName)\r\n            onAddressChange(addressForENSName)\r\n            setENSName(value)\r\n          }\r\n          // eslint-disable-next-line no-empty\r\n        } catch (e) {\r\n        } finally {\r\n          setLoadingENSName(false)\r\n        }\r\n      }\r\n\r\n      if (isAddress(value)) {\r\n        setLoadingENSName(true)\r\n        const ENSNameForAddress = await readProvider.lookupAddress(value)\r\n        setLoadingENSName(false)\r\n\r\n        if (ENSNameForAddress) {\r\n          setENSName(ENSNameForAddress)\r\n          setAddressForENSName(value)\r\n          setValue(ENSNameForAddress)\r\n        }\r\n      }\r\n    },\r\n    [onAddressChange],\r\n  )\r\n\r\n  useEffect(() => {\r\n    onInputChange(defaultValue ?? '')\r\n  }, [defaultValue, onInputChange])\r\n\r\n  const suffix = useMemo(() => {\r\n    if (loadingENSName) return <LoadingOutlined spin />\r\n  }, [loadingENSName])\r\n\r\n  const extraText = ensName && addressForENSName ? addressForENSName : ''\r\n\r\n  return (\r\n    <Form.Item\r\n      {...formItemProps}\r\n      className={\r\n        // if we pass form.item an 'extra', need to set different padding for error message\r\n        formItemProps?.extra\r\n          ? 'ant-form-item-control-input-extra-and-error'\r\n          : ''\r\n      }\r\n    >\r\n      <Input\r\n        id=\"0xAddress\" // name it something other than address for auto fill doxxing\r\n        name=\"0xAddress\" // name it something other than address for auto fill doxxing\r\n        autoComplete=\"off\"\r\n        spellCheck={false}\r\n        placeholder={'juicebox.eth / ' + constants.AddressZero}\r\n        type=\"text\"\r\n        onChange={e => onInputChange(e.target.value)}\r\n        value={value}\r\n        suffix={suffix}\r\n      />\r\n      {extraText ? (\r\n        <div style={{ fontSize: '0.7rem', color: colors.text.secondary }}>\r\n          <CheckCircleFilled /> {extraText}\r\n        </div>\r\n      ) : null}\r\n      <Form.Item\r\n        name={name}\r\n        style={{ margin: 0 }}\r\n        rules={formItemProps?.rules ?? []} // rules weren't being applied to inner FormItem\r\n      >\r\n        {/* Hidden input allows for address value to be used in form, while visible input can display ENS name */}\r\n        <Input hidden type=\"string\" autoComplete=\"off\" />\r\n      </Form.Item>\r\n    </Form.Item>\r\n  )\r\n}\r\n","import { Form } from 'antd'\r\nimport { t } from '@lingui/macro'\r\n\r\nimport TextArea from 'antd/lib/input/TextArea'\r\n\r\nimport { FormItemExt } from './formItemExt'\r\n\r\nconst MAX_DESCRIPTION_LENGTH = 5000\r\n\r\nexport default function ProjectDescription({\r\n  name,\r\n  hideLabel,\r\n  formItemProps,\r\n  onChange,\r\n}: { onChange?: (val?: string) => void } & FormItemExt) {\r\n  return (\r\n    <Form.Item\r\n      name={name}\r\n      label={hideLabel ? undefined : t`Project description`}\r\n      {...formItemProps}\r\n      extra={t`Maximum ${MAX_DESCRIPTION_LENGTH} characters`}\r\n    >\r\n      <TextArea\r\n        autoComplete=\"off\"\r\n        maxLength={MAX_DESCRIPTION_LENGTH}\r\n        onChange={onChange ? e => onChange(e.target.value) : undefined}\r\n      />\r\n    </Form.Item>\r\n  )\r\n}\r\n","import { Form, Input } from 'antd'\r\nimport { t } from '@lingui/macro'\r\n\r\nimport { FormItemExt } from './formItemExt'\r\n\r\nexport default function ProjectDiscord({\r\n  name,\r\n  hideLabel,\r\n  formItemProps,\r\n}: FormItemExt) {\r\n  return (\r\n    <Form.Item\r\n      name={name}\r\n      label={hideLabel ? undefined : t`Discord link`}\r\n      {...formItemProps}\r\n    >\r\n      <Input type=\"url\" autoComplete=\"off\" />\r\n    </Form.Item>\r\n  )\r\n}\r\n","import { Form, Space, Switch } from 'antd'\r\nimport { Trans, t } from '@lingui/macro'\r\nimport { useEffect, useState } from 'react'\r\n\r\nimport FormattedNumberInput from '../inputs/FormattedNumberInput'\r\nimport { FormItemExt } from './formItemExt'\r\n\r\nexport default function ProjectDuration({\r\n  name,\r\n  formItemProps,\r\n  value,\r\n  isRecurring,\r\n  hideLabel,\r\n  onToggleRecurring,\r\n  onValueChange,\r\n}: {\r\n  value: string | undefined\r\n  isRecurring: boolean | undefined\r\n  onToggleRecurring: VoidFunction\r\n  onValueChange: (val?: string) => void\r\n} & FormItemExt) {\r\n  const [showDurationInput, setShowDurationInput] = useState<boolean>()\r\n\r\n  useEffect(() => {\r\n    if (value && value !== '0') setShowDurationInput(true)\r\n  }, [value])\r\n\r\n  return (\r\n    <div>\r\n      <Space direction=\"vertical\">\r\n        <div>\r\n          <Space>\r\n            <Switch\r\n              checked={showDurationInput}\r\n              onChange={checked => {\r\n                setShowDurationInput(checked)\r\n                onValueChange(checked ? '30' : '0')\r\n\r\n                // If toggling off Funding Cycle Duration when set to \"one-time\", revert it to \"recurring\"\r\n                if (!isRecurring && !checked) {\r\n                  onToggleRecurring()\r\n                }\r\n              }}\r\n            />\r\n            <label>\r\n              <Trans>Set a funding cycle duration</Trans>\r\n            </label>\r\n          </Space>\r\n        </div>\r\n\r\n        <Form.Item\r\n          extra={\r\n            <p>\r\n              <Trans>\r\n                How long one funding cycle will last. Funding cycle{' '}\r\n                <strong>reconfigurations</strong> will only take effect for{' '}\r\n                <strong>upcoming</strong> funding cycles, i.e. once a current\r\n                funding cycle has ended.\r\n              </Trans>\r\n            </p>\r\n          }\r\n          name={name}\r\n          label={hideLabel ? undefined : t`Funding cycle duration`}\r\n          {...formItemProps}\r\n          style={{ display: showDurationInput ? 'block' : 'none' }}\r\n        >\r\n          <FormattedNumberInput\r\n            placeholder=\"30\"\r\n            value={value}\r\n            suffix=\"days\"\r\n            onChange={onValueChange}\r\n            min={1}\r\n            // Disabled toggle for recurring/one-time\r\n            //\r\n            // accessory={\r\n            //   <InputAccessoryButton\r\n            //     content={isRecurring ? 'recurring' : 'one-time'}\r\n            //     withArrow={true}\r\n            //     onClick={onToggleRecurring}\r\n            //   />\r\n            // }\r\n          />\r\n        </Form.Item>\r\n      </Space>\r\n    </div>\r\n  )\r\n}\r\n","import { Form, Input } from 'antd'\r\nimport { t } from '@lingui/macro'\r\n\r\nimport { FormItemExt } from './formItemExt'\r\n\r\nexport default function ProjectLink({\r\n  name,\r\n  hideLabel,\r\n  formItemProps,\r\n}: FormItemExt) {\r\n  return (\r\n    <Form.Item\r\n      name={name}\r\n      label={hideLabel ? undefined : t`Website`}\r\n      {...formItemProps}\r\n    >\r\n      <Input type=\"text\" autoComplete=\"off\" />\r\n    </Form.Item>\r\n  )\r\n}\r\n","import { Form } from 'antd'\r\nimport { t } from '@lingui/macro'\r\n\r\nimport { IPFS_TAGS } from 'utils/ipfs'\r\n\r\nimport ImageUploader from '../inputs/ImageUploader'\r\nimport { FormItemExt } from './formItemExt'\r\n\r\nexport default function ProjectLogoUri({\r\n  name,\r\n  formItemProps,\r\n  hideLabel,\r\n  initialUrl,\r\n  onSuccess,\r\n}: FormItemExt & { initialUrl?: string; onSuccess?: (url?: string) => void }) {\r\n  return (\r\n    <Form.Item\r\n      name={name}\r\n      label={hideLabel ? undefined : t`Logo`}\r\n      {...formItemProps}\r\n    >\r\n      <ImageUploader\r\n        initialUrl={initialUrl}\r\n        onSuccess={onSuccess}\r\n        metadata={{ tag: IPFS_TAGS.LOGO }}\r\n        maxSizeKBs={1000}\r\n        text={t`Upload`}\r\n      />\r\n    </Form.Item>\r\n  )\r\n}\r\n","import { Form, Input } from 'antd'\r\n\r\nimport { t } from '@lingui/macro'\r\n\r\nimport { FormItemExt } from './formItemExt'\r\n\r\nexport default function ProjectName({\r\n  name,\r\n  hideLabel,\r\n  formItemProps,\r\n  onChange,\r\n}: { onChange?: (val?: string) => void } & FormItemExt) {\r\n  return (\r\n    <Form.Item\r\n      name={name}\r\n      label={hideLabel ? undefined : t`Project name`}\r\n      {...formItemProps}\r\n    >\r\n      <Input\r\n        type=\"string\"\r\n        autoComplete=\"off\"\r\n        onChange={onChange ? e => onChange(e.target.value) : undefined}\r\n      />\r\n    </Form.Item>\r\n  )\r\n}\r\n","import { Form, Input } from 'antd'\r\nimport { t } from '@lingui/macro'\r\n\r\nimport { FormItemExt } from './formItemExt'\r\nimport { PROJECT_PAY_CHARACTER_LIMIT } from 'constants/numbers'\r\n\r\nexport default function ProjectPayButton({\r\n  name,\r\n  hideLabel,\r\n  formItemProps,\r\n}: FormItemExt) {\r\n  return (\r\n    <Form.Item\r\n      name={name}\r\n      label={hideLabel ? undefined : t`Pay button text`}\r\n      extra={t`Customize your project's \"pay\" button. Leave blank to use the default.`}\r\n      {...formItemProps}\r\n    >\r\n      <Input\r\n        placeholder={t`Pay`}\r\n        type=\"string\"\r\n        autoComplete=\"off\"\r\n        maxLength={PROJECT_PAY_CHARACTER_LIMIT}\r\n        showCount\r\n      />\r\n    </Form.Item>\r\n  )\r\n}\r\n","import { Form } from 'antd'\r\nimport { t } from '@lingui/macro'\r\n\r\nimport TextArea from 'antd/lib/input/TextArea'\r\n\r\nimport { FormItemExt } from './formItemExt'\r\n\r\nexport default function ProjectPayDisclosure({\r\n  name,\r\n  hideLabel,\r\n  formItemProps,\r\n}: FormItemExt) {\r\n  return (\r\n    <Form.Item\r\n      name={name}\r\n      label={hideLabel ? undefined : t`Pay disclosure`}\r\n      extra={t`Disclose any details to your contributors before they pay your project.`}\r\n      {...formItemProps}\r\n    >\r\n      <TextArea autoComplete=\"off\" />\r\n    </Form.Item>\r\n  )\r\n}\r\n","import { Form } from 'antd'\r\nimport { t, Trans } from '@lingui/macro'\r\nimport { CSSProperties, useContext, useState } from 'react'\r\nimport FormItemLabel from 'pages/create/FormItemLabel'\r\nimport { formattedNum } from 'utils/formatNumber'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { defaultFundingCycleMetadata } from 'redux/slices/editingV2Project'\r\nimport { DEFAULT_MINT_RATE } from 'utils/v2/math'\r\nimport { round } from 'lodash'\r\n\r\nimport NumberSlider from '../inputs/NumberSlider'\r\nimport { FormItemExt } from './formItemExt'\r\nimport {\r\n  FUNDING_CYCLE_WARNING_TEXT,\r\n  RESERVED_RATE_WARNING_THRESHOLD_PERCENT,\r\n} from 'constants/fundingWarningText'\r\nimport FundingCycleDetailWarning from '../Project/FundingCycleDetailWarning'\r\nimport FormItemWarningText from '../FormItemWarningText'\r\nimport SwitchHeading from '../SwitchHeading'\r\nimport TooltipLabel from '../TooltipLabel'\r\n\r\nexport default function ProjectReserved({\r\n  name,\r\n  hideLabel,\r\n  formItemProps,\r\n  value,\r\n  style = {},\r\n  onChange,\r\n  checked,\r\n  onToggled,\r\n  issuanceRate,\r\n}: {\r\n  value: number | undefined\r\n  style?: CSSProperties\r\n  onChange: (val?: number) => void\r\n  checked?: boolean\r\n  onToggled?: (checked: boolean) => void\r\n  issuanceRate?: number\r\n} & FormItemExt) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  const [showRiskWarning, setShowRiskWarning] = useState<boolean>(\r\n    (value ?? 0) > RESERVED_RATE_WARNING_THRESHOLD_PERCENT,\r\n  )\r\n\r\n  const riskNotice = (\r\n    <FormItemWarningText>\r\n      <Trans>\r\n        A reserved rate of more than 90% is risky for contributors. Contributors\r\n        won't receive many tokens for their contribution.\r\n      </Trans>\r\n    </FormItemWarningText>\r\n  )\r\n  const effectiveIssuanceRate = issuanceRate ?? DEFAULT_MINT_RATE\r\n\r\n  // Reserved tokens received by project per ETH\r\n  const initialReservedTokensPerEth =\r\n    effectiveIssuanceRate * ((value ?? 0) / 100)\r\n\r\n  // Tokens received by contributor's per ETH\r\n  const contributorIssuanceRate = round(\r\n    effectiveIssuanceRate - initialReservedTokensPerEth,\r\n    4,\r\n  )\r\n\r\n  return (\r\n    <Form.Item\r\n      extra={\r\n        <div style={{ fontSize: '0.9rem' }}>\r\n          <p>\r\n            <Trans>\r\n              Reserve a percentage of freshly minted tokens for your project to\r\n              use.\r\n            </Trans>\r\n          </p>\r\n          <div\r\n            style={{\r\n              backgroundColor: colors.background.l1,\r\n              width: '100%',\r\n              padding: '1rem',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                width: '100%',\r\n                marginBottom: '5px',\r\n              }}\r\n            >\r\n              <span>\r\n                <TooltipLabel\r\n                  label={t`Contributor rate`}\r\n                  tip={\r\n                    <Trans>\r\n                      Tokens <strong>contributors will receive</strong> when\r\n                      they contribute 1 ETH.\r\n                    </Trans>\r\n                  }\r\n                />\r\n                :\r\n              </span>\r\n              {formattedNum(contributorIssuanceRate)} tokens / 1 ETH\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                width: '100%',\r\n              }}\r\n            >\r\n              <span>\r\n                <TooltipLabel\r\n                  label={t`Reserved rate`}\r\n                  tip={\r\n                    <Trans>\r\n                      Tokens <strong>reserved for the project</strong> when 1\r\n                      ETH is contributed.\r\n                    </Trans>\r\n                  }\r\n                />\r\n                :\r\n              </span>\r\n              {formattedNum(round(initialReservedTokensPerEth, 4))} tokens / 1\r\n              ETH\r\n            </div>\r\n          </div>\r\n        </div>\r\n      }\r\n      name={name}\r\n      label={\r\n        hideLabel ? undefined : (\r\n          <>\r\n            {onToggled ? (\r\n              <SwitchHeading checked={Boolean(checked)} onChange={onToggled}>\r\n                <Trans>Reserved tokens</Trans>\r\n                {!checked && (\r\n                  <span\r\n                    style={{\r\n                      color: colors.text.tertiary,\r\n                    }}\r\n                  >\r\n                    {' '}\r\n                    ({defaultFundingCycleMetadata.reservedRate}%)\r\n                  </span>\r\n                )}\r\n              </SwitchHeading>\r\n            ) : (\r\n              <FormItemLabel>\r\n                <Trans>Reserved rate</Trans>\r\n              </FormItemLabel>\r\n            )}\r\n            <div style={{ paddingBottom: 11, paddingLeft: 14 }}>\r\n              <FundingCycleDetailWarning\r\n                showWarning={showRiskWarning}\r\n                tooltipTitle={FUNDING_CYCLE_WARNING_TEXT().metadataReservedRate}\r\n              />\r\n            </div>\r\n          </>\r\n        )\r\n      }\r\n      style={style}\r\n      {...formItemProps}\r\n    >\r\n      {checked && (\r\n        <NumberSlider\r\n          sliderValue={value}\r\n          defaultValue={value ?? 0}\r\n          suffix=\"%\"\r\n          onChange={value => {\r\n            setShowRiskWarning(\r\n              (value ?? 0) > RESERVED_RATE_WARNING_THRESHOLD_PERCENT,\r\n            )\r\n            onChange(value)\r\n          }}\r\n          name={name}\r\n          step={0.5}\r\n          formItemProps={showRiskWarning ? { extra: riskNotice } : {}}\r\n          disabled={!checked}\r\n        />\r\n      )}\r\n    </Form.Item>\r\n  )\r\n}\r\n","import { Form } from 'antd'\r\n\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\n\r\nimport { Trans } from '@lingui/macro'\r\n\r\nimport BudgetTargetInput from '../inputs/BudgetTargetInput'\r\nimport { FormItemExt } from './formItemExt'\r\nimport { CurrencyName } from 'constants/currency'\r\n\r\nexport default function ProjectTarget({\r\n  hideLabel,\r\n  target,\r\n  targetSubFee,\r\n  currency,\r\n  onTargetChange,\r\n  onTargetSubFeeChange,\r\n  onCurrencyChange,\r\n  disabled,\r\n  formItemProps,\r\n  feePerbicent,\r\n}: {\r\n  target: string | undefined\r\n  targetSubFee: string | undefined\r\n  onTargetChange: (val: string | undefined) => void\r\n  onTargetSubFeeChange: (val: string | undefined) => void\r\n  currency: CurrencyName\r\n  onCurrencyChange: (val: CurrencyName) => void\r\n  disabled?: boolean\r\n  feePerbicent?: BigNumber\r\n} & FormItemExt) {\r\n  return (\r\n    <Form.Item\r\n      extra={\r\n        <Trans>\r\n          The maximum amount of funds that can be distributed from this project\r\n          in one funding cycle. Funds will be withdrawn in ETH no matter the\r\n          currency you choose.\r\n        </Trans>\r\n      }\r\n      label={hideLabel ? undefined : <Trans>Funding target</Trans>}\r\n      {...formItemProps}\r\n    >\r\n      <BudgetTargetInput\r\n        target={target}\r\n        targetSubFee={targetSubFee}\r\n        onTargetChange={onTargetChange}\r\n        onTargetSubFeeChange={onTargetSubFeeChange}\r\n        currency={currency}\r\n        onCurrencyChange={onCurrencyChange}\r\n        disabled={disabled}\r\n        placeholder=\"0\"\r\n        feePerbicent={feePerbicent}\r\n      />\r\n    </Form.Item>\r\n  )\r\n}\r\n","import { Form, Input } from 'antd'\r\nimport { t } from '@lingui/macro'\r\n\r\nimport { FormItemExt } from './formItemExt'\r\n\r\nexport default function ProjectTwitter({\r\n  name,\r\n  hideLabel,\r\n  formItemProps,\r\n}: FormItemExt) {\r\n  return (\r\n    <Form.Item\r\n      name={name}\r\n      label={hideLabel ? undefined : t`Twitter handle`}\r\n      {...formItemProps}\r\n    >\r\n      <Input\r\n        prefix={t`@`}\r\n        placeholder={t`juiceboxETH`}\r\n        type=\"string\"\r\n        autoComplete=\"off\"\r\n      />\r\n    </Form.Item>\r\n  )\r\n}\r\n","import { CaretDownFilled, CloseCircleOutlined } from '@ant-design/icons'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { Button, Form, Input } from 'antd'\r\nimport * as constants from '@ethersproject/constants'\r\nimport { TokenRef } from 'models/token-ref'\r\n\r\nimport ProjectHandleFormItem from './ProjectHandle/ProjectHandleFormItem'\r\n\r\nexport default function TokenRefs({\r\n  refs,\r\n  onRefsChange,\r\n}: {\r\n  refs: TokenRef[]\r\n  onRefsChange: (x: TokenRef[]) => void\r\n}) {\r\n  return (\r\n    <div>\r\n      {refs.map((r, i) => (\r\n        <div key={`token_${r.value}`}>\r\n          <div style={{ display: 'flex', alignItems: 'baseline', height: 40 }}>\r\n            <Button\r\n              style={{ marginRight: 20, width: 100 }}\r\n              type=\"text\"\r\n              icon={<CaretDownFilled />}\r\n              onClick={() =>\r\n                onRefsChange(\r\n                  refs.map((_r, _i) =>\r\n                    i === _i\r\n                      ? {\r\n                          type: _r.type === 'erc20' ? 'project' : 'erc20',\r\n                          value: '',\r\n                        }\r\n                      : _r,\r\n                  ),\r\n                )\r\n              }\r\n            >\r\n              {r.type === 'erc20' ? 'ERC-20' : 'Project'}\r\n            </Button>\r\n\r\n            <div style={{ flex: 1 }}>\r\n              {r.type === 'erc20' ? (\r\n                <Form.Item>\r\n                  <Input\r\n                    value={r.value}\r\n                    placeholder={constants.AddressZero}\r\n                    onChange={e =>\r\n                      onRefsChange(\r\n                        refs.map((_r, _i) =>\r\n                          i === _i ? { ..._r, value: e.target.value } : _r,\r\n                        ),\r\n                      )\r\n                    }\r\n                  />\r\n                </Form.Item>\r\n              ) : (\r\n                <ProjectHandleFormItem\r\n                  formItemProps={{\r\n                    label: null,\r\n                    initialValue: r.value ? BigNumber.from(r.value) : '',\r\n                  }}\r\n                  requireState=\"exists\"\r\n                  returnValue=\"id\"\r\n                  onValueChange={value =>\r\n                    onRefsChange(\r\n                      refs.map((_r, _i) => (i === _i ? { ..._r, value } : _r)),\r\n                    )\r\n                  }\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            {refs.length > 1 && (\r\n              <CloseCircleOutlined\r\n                style={{ marginLeft: 10, flexShrink: 1 }}\r\n                onClick={() => onRefsChange(refs.filter((_r, _i) => _i !== i))}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      ))}\r\n\r\n      <Button\r\n        style={{ marginTop: 10 }}\r\n        size=\"small\"\r\n        block\r\n        onClick={() => onRefsChange([...refs, { type: 'erc20', value: '' }])}\r\n      >\r\n        Add\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n","export const WAD_DECIMALS = 18\r\n\r\nexport const SECONDS_IN_DAY = 24 * 60 * 60\r\nexport const SECONDS_IN_HOUR = 60 * 60\r\n\r\nexport const PROJECT_PAY_CHARACTER_LIMIT = 16\r\n","import {\r\n  V1CurrencyETH,\r\n  V1CurrencyOption,\r\n  V1CurrencyUSD,\r\n} from 'models/v1/currencyOption'\r\n\r\nimport { CurrencyMetadata, CURRENCY_METADATA } from 'constants/currency'\r\n\r\nexport const V1_CURRENCY_ETH: V1CurrencyETH = 0\r\nexport const V1_CURRENCY_USD: V1CurrencyUSD = 1\r\n\r\nexport const V1_CURRENCY_METADATA: Record<V1CurrencyOption, CurrencyMetadata> =\r\n  {\r\n    [V1_CURRENCY_ETH]: CURRENCY_METADATA.ETH,\r\n    [V1_CURRENCY_USD]: CURRENCY_METADATA.USD,\r\n  }\r\n\r\nexport const V1_CURRENCY_CONTEXT = {\r\n  currencyMetadata: V1_CURRENCY_METADATA,\r\n  currencies: { ETH: V1_CURRENCY_ETH, USD: V1_CURRENCY_USD },\r\n}\r\n","import { SemanticColors } from 'models/semantic-theme/colors'\r\nimport { CSSProperties } from 'react'\r\n\r\nexport const smallHeaderStyle = (colors: SemanticColors) => ({\r\n  fontSize: '.7rem',\r\n  color: colors.text.tertiary,\r\n})\r\n\r\nexport const contentLineHeight: CSSProperties['lineHeight'] = '1.4rem'\r\n\r\nexport const primaryContentFontSize: CSSProperties['fontSize'] = '1rem'\r\n","import { TooltipProps } from 'antd'\r\nimport { CSSProperties } from 'react'\r\n\r\nimport TooltipIcon from './TooltipIcon'\r\n\r\nexport default function TooltipLabel({\r\n  label,\r\n  tip,\r\n  placement,\r\n  style,\r\n}: {\r\n  label: string | JSX.Element\r\n  tip?: string | JSX.Element\r\n  placement?: TooltipProps['placement']\r\n  style?: CSSProperties\r\n}) {\r\n  return (\r\n    <span style={style}>\r\n      <span style={{ marginRight: tip ? 5 : 0 }}>{label}</span>\r\n      {tip && <TooltipIcon tip={tip} placement={placement} />}\r\n    </span>\r\n  )\r\n}\r\n","import { BigNumber, BigNumberish } from '@ethersproject/bignumber'\r\nimport { t } from '@lingui/macro'\r\n\r\nimport { Tooltip } from 'antd'\r\n\r\nimport moment from 'moment'\r\n\r\nexport const formatDate = (\r\n  dateMillis: BigNumberish,\r\n  format = 'YYYY-MM-DD h:mma',\r\n) => moment(BigNumber.from(dateMillis).toNumber()).format(format)\r\n\r\nexport function formatHistoricalDate(dateMillis: BigNumberish) {\r\n  return (\r\n    <Tooltip title={`${formatDate(dateMillis)} UTC`}>\r\n      {t`${moment(BigNumber.from(dateMillis).toNumber()).fromNow(true)} ago`}\r\n    </Tooltip>\r\n  )\r\n}\r\n\r\n/**\r\n * Convert a date to Epoch time in seconds.\r\n * @param date\r\n * @returns Epoch time in seconds\r\n */\r\nexport const toDateSeconds = (date: Date) => {\r\n  return Math.floor(date.valueOf() / 1000)\r\n}\r\n","import { LoadingOutlined } from '@ant-design/icons'\r\nimport { Spin } from 'antd'\r\n\r\nexport default function Loading({ size }: { size?: number }) {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100%',\r\n      }}\r\n    >\r\n      <Spin\r\n        size=\"large\"\r\n        indicator={<LoadingOutlined style={size ? { fontSize: size } : {}} />}\r\n      ></Spin>\r\n    </div>\r\n  )\r\n}\r\n","import { JsonRpcBatchProvider } from '@ethersproject/providers'\r\n\r\nimport { readNetwork } from './networks'\r\n\r\nexport const readProvider = new JsonRpcBatchProvider(readNetwork.rpcUrl)\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\n\r\nimport { parseWad } from './formatNumber'\r\n\r\nexport const bigNumbersDiff = (a?: BigNumber, b?: BigNumber) => {\r\n  if ((a && !b) || (!a && b)) return true\r\n\r\n  return a && b ? !a.eq(b) : false\r\n}\r\n\r\nexport const betweenZeroAndOne = (amount: BigNumber) => {\r\n  return amount?.lt(parseWad('1')) && amount.gt(0)\r\n}\r\n\r\n// permyriad: x/10000\r\n/**\r\n * Return value subtracted from 10,000 (1 permyriad).\r\n * Useful for when contracts store inverse values to save storage.\r\n * permyriad: x/10000\r\n * @param permyriad\r\n * @returns\r\n */\r\nexport const invertPermyriad = (permyriad: BigNumber) => {\r\n  return BigNumber.from(10000).sub(permyriad)\r\n}\r\n","export interface BaseEventEntity {\r\n  id: string\r\n  timestamp: number\r\n  txHash: string\r\n  caller: string\r\n}\r\n\r\nexport type BaseEventEntityJson = Partial<Record<keyof BaseEventEntity, string>>\r\n\r\nexport const parseBaseEventEntityJson = (\r\n  j: BaseEventEntityJson,\r\n): Partial<BaseEventEntity> => ({\r\n  id: j.id,\r\n  timestamp: j.timestamp ? parseInt(j.timestamp) : undefined,\r\n  txHash: j.txHash,\r\n  caller: j.caller,\r\n})\r\n","var map = {\n\t\"./mainnet/Active7DaysFundingCycleBallot.json\": 581,\n\t\"./mainnet/FundingCycles.json\": 582,\n\t\"./mainnet/Governance.json\": 583,\n\t\"./mainnet/ModStore.json\": 584,\n\t\"./mainnet/OperatorStore.json\": 585,\n\t\"./mainnet/Prices.json\": 586,\n\t\"./mainnet/Projects.json\": 587,\n\t\"./mainnet/ProxyPaymentAddressManager.json\": 588,\n\t\"./mainnet/TerminalDirectory.json\": 589,\n\t\"./mainnet/TerminalV1.json\": 590,\n\t\"./mainnet/TerminalV1_1.json\": 591,\n\t\"./mainnet/TicketBooth.json\": 592,\n\t\"./mainnet/solcInputs/05c1f0a0e112f0b120e3660168d72443.json\": 593,\n\t\"./rinkeby/Active7DaysFundingCycleBallot.json\": 594,\n\t\"./rinkeby/FundingCycles.json\": 595,\n\t\"./rinkeby/Governance.json\": 596,\n\t\"./rinkeby/ModStore.json\": 597,\n\t\"./rinkeby/OperatorStore.json\": 598,\n\t\"./rinkeby/Prices.json\": 599,\n\t\"./rinkeby/Projects.json\": 600,\n\t\"./rinkeby/ProxyPaymentAddressManager.json\": 601,\n\t\"./rinkeby/TerminalDirectory.json\": 602,\n\t\"./rinkeby/TerminalV1.json\": 603,\n\t\"./rinkeby/TerminalV1_1.json\": 604,\n\t\"./rinkeby/TicketBooth.json\": 605,\n\t\"./rinkeby/solcInputs/05c1f0a0e112f0b120e3660168d72443.json\": 606,\n\t\"./rinkeby/solcInputs/30b294d4f7eadf1043c10986577f5b53.json\": 607,\n\t\"./rinkeby/solcInputs/5509453439d529cff4e20a2257a2f278.json\": 608,\n\t\"./rinkeby/solcInputs/88dbfc480dccb1a36446303a84f5dfeb.json\": 609\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 902;","import { BigNumber } from '@ethersproject/bignumber'\r\n\r\nimport { fromWad, percentToPerbicent } from './formatNumber'\r\n\r\nexport type WeightFunction = (\r\n  weight: BigNumber | undefined,\r\n  reservedRate: number | undefined,\r\n  wadAmount: BigNumber | undefined,\r\n  outputType: 'payer' | 'reserved',\r\n) => string\r\n\r\n/**\r\n * Return a given [amountWad] weighted by a given [weight] and [reservedRatePerbicent].\r\n *\r\n * Typically only used by Juicebox V1 projects.\r\n *\r\n * @param weight - scalar value for weighting. Typically funding cycle weight.\r\n * @param reservedRatePerbicent - reserve rate, as a perbicent (x/200)\r\n * @param amountWad - amount to weight, as a wad.\r\n * @param outputType\r\n */\r\nexport const weightedRate: WeightFunction = (\r\n  weight: BigNumber | undefined,\r\n  reservedRatePerbicent: number | undefined,\r\n  wadAmount: BigNumber | undefined,\r\n  outputType: 'payer' | 'reserved',\r\n) => {\r\n  if (!weight || !wadAmount) return '0'\r\n\r\n  if (reservedRatePerbicent === undefined) return '0'\r\n\r\n  return fromWad(\r\n    weight\r\n      .mul(wadAmount)\r\n      .mul(\r\n        outputType === 'reserved'\r\n          ? reservedRatePerbicent\r\n          : percentToPerbicent(100).sub(reservedRatePerbicent),\r\n      )\r\n      .div(percentToPerbicent(100)),\r\n  )\r\n}\r\n\r\n// Determines if a string value contains only digits\r\nexport const stringIsDigit = (value: string) => {\r\n  return /^\\d+$/.test(value)\r\n}\r\n\r\nexport const feeForAmount = (\r\n  amount: BigNumber | undefined,\r\n  feePerbicent: BigNumber | undefined,\r\n) => {\r\n  if (!feePerbicent || !amount) return\r\n  return amount.sub(amount.mul(200).div(feePerbicent.add(200)))\r\n}\r\n\r\nexport const amountSubFee = (amount?: BigNumber, feePerbicent?: BigNumber) => {\r\n  if (!feePerbicent || !amount) return\r\n  return amount.sub(feeForAmount(amount, feePerbicent) ?? 0)\r\n}\r\n\r\n/**\r\n * new amount = old amount / (1 - fee)\r\n */\r\nexport const amountAddFee = (amount?: string, feePerbicent?: BigNumber) => {\r\n  if (!feePerbicent || !amount) return\r\n\r\n  const inverseFeePerbicent = percentToPerbicent(100).sub(feePerbicent)\r\n  const amountPerbicent = BigNumber.from(amount).mul(percentToPerbicent(100))\r\n  // new amount is in regular decimal units\r\n  const newAmount = amountPerbicent.div(inverseFeePerbicent)\r\n\r\n  return newAmount.toString()\r\n}\r\n","var map = {\n\t\"./1/run-latest.json\": [\n\t\t980,\n\t\t155\n\t],\n\t\"./4/run-latest.json\": [\n\t\t981,\n\t\t156\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 953;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./contracts-v2-4.0.0/deployments/mainnet/JBChainlinkV3PriceFeed.json\": [\n\t\t982,\n\t\t80\n\t],\n\t\"./contracts-v2-4.0.0/deployments/mainnet/JBController.json\": [\n\t\t983,\n\t\t81\n\t],\n\t\"./contracts-v2-4.0.0/deployments/mainnet/JBCurrencies.json\": [\n\t\t984,\n\t\t82\n\t],\n\t\"./contracts-v2-4.0.0/deployments/mainnet/JBDirectory.json\": [\n\t\t985,\n\t\t83\n\t],\n\t\"./contracts-v2-4.0.0/deployments/mainnet/JBETHERC20ProjectPayerDeployer.json\": [\n\t\t986,\n\t\t84\n\t],\n\t\"./contracts-v2-4.0.0/deployments/mainnet/JBETHERC20SplitsPayerDeployer.json\": [\n\t\t987,\n\t\t85\n\t],\n\t\"./contracts-v2-4.0.0/deployments/mainnet/JBETHPaymentTerminal.json\": [\n\t\t988,\n\t\t86\n\t],\n\t\"./contracts-v2-4.0.0/deployments/mainnet/JBFundingCycleStore.json\": [\n\t\t989,\n\t\t87\n\t],\n\t\"./contracts-v2-4.0.0/deployments/mainnet/JBOperatorStore.json\": [\n\t\t990,\n\t\t88\n\t],\n\t\"./contracts-v2-4.0.0/deployments/mainnet/JBPrices.json\": [\n\t\t991,\n\t\t89\n\t],\n\t\"./contracts-v2-4.0.0/deployments/mainnet/JBProjects.json\": [\n\t\t992,\n\t\t90\n\t],\n\t\"./contracts-v2-4.0.0/deployments/mainnet/JBReconfigurationBufferBallot.json\": [\n\t\t993,\n\t\t91\n\t],\n\t\"./contracts-v2-4.0.0/deployments/mainnet/JBSingleTokenPaymentTerminalStore.json\": [\n\t\t994,\n\t\t92\n\t],\n\t\"./contracts-v2-4.0.0/deployments/mainnet/JBSplitsStore.json\": [\n\t\t995,\n\t\t93\n\t],\n\t\"./contracts-v2-4.0.0/deployments/mainnet/JBTokenStore.json\": [\n\t\t996,\n\t\t94\n\t],\n\t\"./contracts-v2-4.0.0/deployments/mainnet/solcInputs/87acdcf5deeaa43ae3ecf62f45455645.json\": [\n\t\t997,\n\t\t95\n\t],\n\t\"./contracts-v2-4.0.0/deployments/rinkeby/JBChainlinkV3PriceFeed.json\": [\n\t\t998,\n\t\t96\n\t],\n\t\"./contracts-v2-4.0.0/deployments/rinkeby/JBController.json\": [\n\t\t999,\n\t\t97\n\t],\n\t\"./contracts-v2-4.0.0/deployments/rinkeby/JBCurrencies.json\": [\n\t\t1000,\n\t\t98\n\t],\n\t\"./contracts-v2-4.0.0/deployments/rinkeby/JBDirectory.json\": [\n\t\t1001,\n\t\t99\n\t],\n\t\"./contracts-v2-4.0.0/deployments/rinkeby/JBETHERC20ProjectPayerDeployer.json\": [\n\t\t1002,\n\t\t100\n\t],\n\t\"./contracts-v2-4.0.0/deployments/rinkeby/JBETHERC20SplitsPayerDeployer.json\": [\n\t\t1003,\n\t\t101\n\t],\n\t\"./contracts-v2-4.0.0/deployments/rinkeby/JBETHPaymentTerminal.json\": [\n\t\t1004,\n\t\t102\n\t],\n\t\"./contracts-v2-4.0.0/deployments/rinkeby/JBFundingCycleStore.json\": [\n\t\t1005,\n\t\t103\n\t],\n\t\"./contracts-v2-4.0.0/deployments/rinkeby/JBOperatorStore.json\": [\n\t\t1006,\n\t\t104\n\t],\n\t\"./contracts-v2-4.0.0/deployments/rinkeby/JBPrices.json\": [\n\t\t1007,\n\t\t105\n\t],\n\t\"./contracts-v2-4.0.0/deployments/rinkeby/JBProjects.json\": [\n\t\t1008,\n\t\t106\n\t],\n\t\"./contracts-v2-4.0.0/deployments/rinkeby/JBReconfigurationBufferBallot.json\": [\n\t\t1009,\n\t\t107\n\t],\n\t\"./contracts-v2-4.0.0/deployments/rinkeby/JBSingleTokenPaymentTerminalStore.json\": [\n\t\t1010,\n\t\t108\n\t],\n\t\"./contracts-v2-4.0.0/deployments/rinkeby/JBSplitsStore.json\": [\n\t\t1011,\n\t\t109\n\t],\n\t\"./contracts-v2-4.0.0/deployments/rinkeby/JBTokenStore.json\": [\n\t\t1012,\n\t\t110\n\t],\n\t\"./contracts-v2-4.0.0/deployments/rinkeby/solcInputs/87acdcf5deeaa43ae3ecf62f45455645.json\": [\n\t\t1013,\n\t\t111\n\t],\n\t\"./contracts-v2-latest/deployments/mainnet/JB3DayReconfigurationBufferBallot.json\": [\n\t\t1014,\n\t\t112\n\t],\n\t\"./contracts-v2-latest/deployments/mainnet/JB7DayReconfigurationBufferBallot.json\": [\n\t\t1015,\n\t\t113\n\t],\n\t\"./contracts-v2-latest/deployments/mainnet/JBChainlinkV3PriceFeed.json\": [\n\t\t1016,\n\t\t114\n\t],\n\t\"./contracts-v2-latest/deployments/mainnet/JBController.json\": [\n\t\t1017,\n\t\t115\n\t],\n\t\"./contracts-v2-latest/deployments/mainnet/JBCurrencies.json\": [\n\t\t1018,\n\t\t116\n\t],\n\t\"./contracts-v2-latest/deployments/mainnet/JBDirectory.json\": [\n\t\t1019,\n\t\t117\n\t],\n\t\"./contracts-v2-latest/deployments/mainnet/JBETHERC20ProjectPayerDeployer.json\": [\n\t\t1020,\n\t\t118\n\t],\n\t\"./contracts-v2-latest/deployments/mainnet/JBETHERC20SplitsPayerDeployer.json\": [\n\t\t1021,\n\t\t119\n\t],\n\t\"./contracts-v2-latest/deployments/mainnet/JBETHPaymentTerminal.json\": [\n\t\t1022,\n\t\t120\n\t],\n\t\"./contracts-v2-latest/deployments/mainnet/JBFundingCycleStore.json\": [\n\t\t1023,\n\t\t121\n\t],\n\t\"./contracts-v2-latest/deployments/mainnet/JBOperatorStore.json\": [\n\t\t1024,\n\t\t122\n\t],\n\t\"./contracts-v2-latest/deployments/mainnet/JBPrices.json\": [\n\t\t1025,\n\t\t123\n\t],\n\t\"./contracts-v2-latest/deployments/mainnet/JBProjects.json\": [\n\t\t1026,\n\t\t124\n\t],\n\t\"./contracts-v2-latest/deployments/mainnet/JBSingleTokenPaymentTerminalStore.json\": [\n\t\t1027,\n\t\t125\n\t],\n\t\"./contracts-v2-latest/deployments/mainnet/JBSplitsStore.json\": [\n\t\t1028,\n\t\t126\n\t],\n\t\"./contracts-v2-latest/deployments/mainnet/JBTokenStore.json\": [\n\t\t1029,\n\t\t127\n\t],\n\t\"./contracts-v2-latest/deployments/mainnet/solcInputs/153d6bc38185326110a6246705507380.json\": [\n\t\t1030,\n\t\t128\n\t],\n\t\"./contracts-v2-latest/deployments/mainnet/solcInputs/36426b5abae189028f71abc80f5dc8b7.json\": [\n\t\t1031,\n\t\t129\n\t],\n\t\"./contracts-v2-latest/deployments/mainnet/solcInputs/4138c0c854528929e18f6ccc34d600b0.json\": [\n\t\t1032,\n\t\t130\n\t],\n\t\"./contracts-v2-latest/deployments/mainnet/solcInputs/87acdcf5deeaa43ae3ecf62f45455645.json\": [\n\t\t1033,\n\t\t131\n\t],\n\t\"./contracts-v2-latest/deployments/mainnet/solcInputs/a1f674e02c4866a16e5bde886a31b82e.json\": [\n\t\t1034,\n\t\t132\n\t],\n\t\"./contracts-v2-latest/deployments/rinkeby/JB3DayReconfigurationBufferBallot.json\": [\n\t\t1035,\n\t\t133\n\t],\n\t\"./contracts-v2-latest/deployments/rinkeby/JB7DayReconfigurationBufferBallot.json\": [\n\t\t1036,\n\t\t134\n\t],\n\t\"./contracts-v2-latest/deployments/rinkeby/JBChainlinkV3PriceFeed.json\": [\n\t\t1037,\n\t\t135\n\t],\n\t\"./contracts-v2-latest/deployments/rinkeby/JBController.json\": [\n\t\t1038,\n\t\t136\n\t],\n\t\"./contracts-v2-latest/deployments/rinkeby/JBCurrencies.json\": [\n\t\t1039,\n\t\t137\n\t],\n\t\"./contracts-v2-latest/deployments/rinkeby/JBDirectory.json\": [\n\t\t1040,\n\t\t138\n\t],\n\t\"./contracts-v2-latest/deployments/rinkeby/JBETHERC20ProjectPayerDeployer.json\": [\n\t\t1041,\n\t\t139\n\t],\n\t\"./contracts-v2-latest/deployments/rinkeby/JBETHERC20SplitsPayerDeployer.json\": [\n\t\t1042,\n\t\t140\n\t],\n\t\"./contracts-v2-latest/deployments/rinkeby/JBETHPaymentTerminal.json\": [\n\t\t1043,\n\t\t141\n\t],\n\t\"./contracts-v2-latest/deployments/rinkeby/JBFundingCycleStore.json\": [\n\t\t1044,\n\t\t142\n\t],\n\t\"./contracts-v2-latest/deployments/rinkeby/JBOperatorStore.json\": [\n\t\t1045,\n\t\t143\n\t],\n\t\"./contracts-v2-latest/deployments/rinkeby/JBPrices.json\": [\n\t\t1046,\n\t\t144\n\t],\n\t\"./contracts-v2-latest/deployments/rinkeby/JBProjects.json\": [\n\t\t1047,\n\t\t145\n\t],\n\t\"./contracts-v2-latest/deployments/rinkeby/JBSingleTokenPaymentTerminalStore.json\": [\n\t\t1048,\n\t\t146\n\t],\n\t\"./contracts-v2-latest/deployments/rinkeby/JBSplitsStore.json\": [\n\t\t1049,\n\t\t147\n\t],\n\t\"./contracts-v2-latest/deployments/rinkeby/JBTokenStore.json\": [\n\t\t1050,\n\t\t148\n\t],\n\t\"./contracts-v2-latest/deployments/rinkeby/solcInputs/142966ac46606d4b06fc726df52b60c2.json\": [\n\t\t1051,\n\t\t149\n\t],\n\t\"./contracts-v2-latest/deployments/rinkeby/solcInputs/153d6bc38185326110a6246705507380.json\": [\n\t\t1052,\n\t\t150\n\t],\n\t\"./contracts-v2-latest/deployments/rinkeby/solcInputs/36426b5abae189028f71abc80f5dc8b7.json\": [\n\t\t1053,\n\t\t151\n\t],\n\t\"./contracts-v2-latest/deployments/rinkeby/solcInputs/4138c0c854528929e18f6ccc34d600b0.json\": [\n\t\t1054,\n\t\t152\n\t],\n\t\"./contracts-v2-latest/deployments/rinkeby/solcInputs/87acdcf5deeaa43ae3ecf62f45455645.json\": [\n\t\t1055,\n\t\t153\n\t],\n\t\"./contracts-v2-latest/deployments/rinkeby/solcInputs/a1f674e02c4866a16e5bde886a31b82e.json\": [\n\t\t1056,\n\t\t154\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 954;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./en/messages\": [\n\t\t491\n\t],\n\t\"./es/messages\": [\n\t\t1057,\n\t\t158\n\t],\n\t\"./fr/messages\": [\n\t\t1058,\n\t\t159\n\t],\n\t\"./pt/messages\": [\n\t\t1059,\n\t\t160\n\t],\n\t\"./ru/messages\": [\n\t\t1060,\n\t\t161\n\t],\n\t\"./tr/messages\": [\n\t\t1061,\n\t\t162\n\t],\n\t\"./zh/messages\": [\n\t\t1062,\n\t\t163\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 958;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./mainnet/Active7DaysFundingCycleBallot.json\": 581,\n\t\"./mainnet/FundingCycles.json\": 582,\n\t\"./mainnet/Governance.json\": 583,\n\t\"./mainnet/ModStore.json\": 584,\n\t\"./mainnet/OperatorStore.json\": 585,\n\t\"./mainnet/Prices.json\": 586,\n\t\"./mainnet/Projects.json\": 587,\n\t\"./mainnet/ProxyPaymentAddressManager.json\": 588,\n\t\"./mainnet/TerminalDirectory.json\": 589,\n\t\"./mainnet/TerminalV1.json\": 590,\n\t\"./mainnet/TerminalV1_1.json\": 591,\n\t\"./mainnet/TicketBooth.json\": 592,\n\t\"./mainnet/solcInputs/05c1f0a0e112f0b120e3660168d72443.json\": 593,\n\t\"./rinkeby/Active7DaysFundingCycleBallot.json\": 594,\n\t\"./rinkeby/FundingCycles.json\": 595,\n\t\"./rinkeby/Governance.json\": 596,\n\t\"./rinkeby/ModStore.json\": 597,\n\t\"./rinkeby/OperatorStore.json\": 598,\n\t\"./rinkeby/Prices.json\": 599,\n\t\"./rinkeby/Projects.json\": 600,\n\t\"./rinkeby/ProxyPaymentAddressManager.json\": 601,\n\t\"./rinkeby/TerminalDirectory.json\": 602,\n\t\"./rinkeby/TerminalV1.json\": 603,\n\t\"./rinkeby/TerminalV1_1.json\": 604,\n\t\"./rinkeby/TicketBooth.json\": 605,\n\t\"./rinkeby/solcInputs/05c1f0a0e112f0b120e3660168d72443.json\": 606,\n\t\"./rinkeby/solcInputs/30b294d4f7eadf1043c10986577f5b53.json\": 607,\n\t\"./rinkeby/solcInputs/5509453439d529cff4e20a2257a2f278.json\": 608,\n\t\"./rinkeby/solcInputs/88dbfc480dccb1a36446303a84f5dfeb.json\": 609\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 959;\nmodule.exports = webpackAsyncContext;","import FormattedAddress from 'components/FormattedAddress'\r\nimport { LogoutOutlined } from '@ant-design/icons'\r\nimport { Trans } from '@lingui/macro'\r\n\r\nimport { NetworkContext } from 'contexts/networkContext'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { useContext } from 'react'\r\nimport { Dropdown, Menu } from 'antd'\r\n\r\nimport EtherscanLink from 'components/EtherscanLink'\r\nimport CopyTextButton from 'components/CopyTextButton'\r\nimport useMobile from 'hooks/Mobile'\r\n\r\nimport Balance from './Balance'\r\n\r\nexport default function Wallet({ userAddress }: { userAddress: string }) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  const isMobile = useMobile()\r\n\r\n  const height = 45\r\n\r\n  const { onLogOut } = useContext(NetworkContext)\r\n\r\n  const menuItemPadding = '10px 15px'\r\n\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item style={{ padding: menuItemPadding }} key={0}>\r\n        <EtherscanLink value={userAddress} type=\"address\" truncated={true} />{' '}\r\n        <CopyTextButton value={userAddress} style={{ zIndex: 1 }} />\r\n      </Menu.Item>\r\n      {!isMobile && (\r\n        <Menu.Item\r\n          onClick={onLogOut}\r\n          style={{\r\n            padding: menuItemPadding,\r\n            color: colors.text.primary,\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n          }}\r\n          key={1}\r\n        >\r\n          <Trans>Disconnect</Trans>\r\n          <LogoutOutlined />\r\n        </Menu.Item>\r\n      )}\r\n    </Menu>\r\n  )\r\n\r\n  return (\r\n    <Dropdown\r\n      overlay={menu}\r\n      placement={!isMobile ? 'bottomRight' : 'topCenter'}\r\n      overlayStyle={{ padding: 0 }}\r\n    >\r\n      <div\r\n        style={{\r\n          height,\r\n          borderRadius: 2,\r\n          padding: '4px 19px 7px',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          background: colors.background.l2,\r\n          cursor: 'default',\r\n          userSelect: 'all',\r\n        }}\r\n      >\r\n        <FormattedAddress address={userAddress} tooltipDisabled={true} />\r\n        <Balance address={userAddress} />\r\n      </div>\r\n    </Dropdown>\r\n  )\r\n}\r\n","import { Button } from 'antd'\r\nimport { NetworkContext } from 'contexts/networkContext'\r\n\r\nimport { useContext } from 'react'\r\nimport { Trans } from '@lingui/macro'\r\n\r\nimport Wallet from './Wallet'\r\n\r\nexport default function Account() {\r\n  const { userAddress, signingProvider, onSelectWallet } =\r\n    useContext(NetworkContext)\r\n\r\n  if (!signingProvider) {\r\n    return (\r\n      <Button onClick={onSelectWallet}>\r\n        <Trans>Connect</Trans>\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  if (!userAddress) return null\r\n\r\n  return <Wallet userAddress={userAddress} />\r\n}\r\n","import { ThemeContext } from 'contexts/themeContext'\r\n\r\nimport { Trans } from '@lingui/macro'\r\nimport { Tooltip } from 'antd'\r\nimport { MessageOutlined } from '@ant-design/icons'\r\n\r\nimport { useContext } from 'react'\r\n\r\nimport { feedbackFormURL } from 'utils/feedbackFormURL'\r\nimport { NetworkContext } from 'contexts/networkContext'\r\n\r\nimport ExternalLink from './ExternalLink'\r\n\r\nexport default function FeedbackFormButton({\r\n  mobile,\r\n  projectHandle,\r\n}: {\r\n  mobile?: boolean\r\n  projectHandle?: string\r\n}) {\r\n  const { isDarkMode } = useContext(ThemeContext)\r\n  const { userAddress } = useContext(NetworkContext)\r\n\r\n  const formUrl = feedbackFormURL({\r\n    referrer: 'stoned-banny',\r\n    projectHandle,\r\n    userAddress,\r\n  })\r\n\r\n  const iconSize = 16\r\n\r\n  if (mobile) {\r\n    return (\r\n      <div>\r\n        <MessageOutlined size={iconSize} />\r\n        <ExternalLink\r\n          style={{ margin: '0 0 2px 12px', fontWeight: 400 }}\r\n          className=\"quiet\"\r\n          href={formUrl}\r\n        >\r\n          <Trans>Give feedback</Trans>\r\n        </ExternalLink>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Tooltip\r\n      title={\r\n        <ExternalLink className=\"quiet hover-action\" href={formUrl}>\r\n          <Trans>Give feedback</Trans>\r\n        </ExternalLink>\r\n      }\r\n    >\r\n      <ExternalLink\r\n        className={`feedback-button hide-mobile ${isDarkMode ? 'dark' : ''}`}\r\n        href={formUrl}\r\n      >\r\n        <img src=\"/assets/stoned_banny.png\" alt=\"Stoned banny\" />\r\n      </ExternalLink>\r\n    </Tooltip>\r\n  )\r\n}\r\n","// Builds URL to feedbackForm given parametres\r\nexport const feedbackFormURL = ({\r\n  referrer,\r\n  projectHandle,\r\n  userAddress,\r\n}: {\r\n  referrer: 'deploy' | 'stoned-banny'\r\n  projectHandle?: string\r\n  userAddress?: string\r\n}) => {\r\n  const url = new URL(`https://auditor.typeform.com/to/REMUTIbQ#`)\r\n  if (projectHandle) {\r\n    url.searchParams.set('project', projectHandle)\r\n  }\r\n  if (userAddress) {\r\n    url.searchParams.set('address', userAddress)\r\n  }\r\n  url.searchParams.set(\r\n    'resolution',\r\n    `${window.innerWidth}x${window.innerHeight}`,\r\n  )\r\n  url.searchParams.set('referrer', referrer)\r\n\r\n  return url.toString()\r\n}\r\n","import { ThemeContext } from 'contexts/themeContext'\r\nimport { useContext } from 'react'\r\n\r\nimport { ThemeOption } from 'constants/theme/theme-option'\r\n\r\nexport default function Logo({ height }: { height?: number }) {\r\n  const { forThemeOption } = useContext(ThemeContext)\r\n\r\n  if (!height) {\r\n    height = 40\r\n  }\r\n\r\n  return (\r\n    <img\r\n      style={{ height }}\r\n      src={\r\n        forThemeOption &&\r\n        forThemeOption({\r\n          [ThemeOption.light]: '/assets/juice_logo-ol.png',\r\n          [ThemeOption.dark]: '/assets/juice_logo-od.png',\r\n        })\r\n      }\r\n      alt=\"Juicebox logo\"\r\n    />\r\n  )\r\n}\r\n","type Language = Record<string, Record<string, string>>\r\n\r\n// List of languages supported on Juicebox\r\nexport const Languages: Language = {\r\n  en: { code: 'en', name: 'english', short: 'EN', long: 'English' },\r\n  zh: { code: 'zh', name: 'chinese', short: '中文', long: '中文' },\r\n  ru: { code: 'ru', name: 'russian', short: 'RU', long: 'Pусский' },\r\n  tr: { code: 'tr', name: 'turkish', short: 'TR', long: 'Türkçe' },\r\n  pt: { code: 'pt', name: 'portuguese', short: 'PT', long: 'Português' },\r\n  es: { code: 'es', name: 'spanish', short: 'ES', long: 'Español' },\r\n  fr: { code: 'fr', name: 'french', short: 'FR', long: 'Français' },\r\n}\r\n","import { CSSProperties, useContext, useEffect, useState } from 'react'\r\nimport { Select } from 'antd'\r\nimport { GlobalOutlined } from '@ant-design/icons'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\n\r\nimport { Languages } from 'constants/languages/language-options'\r\n\r\n// Language select tool seen in top nav\r\nexport default function NavLanguageSelector({\r\n  disableLang,\r\n  mobile,\r\n}: {\r\n  disableLang?: string\r\n  mobile?: boolean\r\n}) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n  const selectStyle: CSSProperties = {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-evenly',\r\n    cursor: 'pointer',\r\n    height: 30,\r\n    fontWeight: 500,\r\n  }\r\n\r\n  const [dropdownOpen, setDropdownOpen] = useState<boolean>(false)\r\n\r\n  // Renders Select Option for each language available on Juicebox\r\n  const renderLanguageOption = (lang: string) => {\r\n    if (disableLang === lang) {\r\n      return null\r\n    }\r\n    return (\r\n      <Select.Option key={lang} value={lang}>\r\n        <div>{mobile ? Languages[lang].long : Languages[lang].short}</div>\r\n      </Select.Option>\r\n    )\r\n  }\r\n\r\n  let currentSelectedLanguage = localStorage.getItem('lang') || 'en'\r\n\r\n  // Sets the new language with localStorage and reloads the page\r\n  const setLanguage = (newLanguage: string) => {\r\n    currentSelectedLanguage = newLanguage\r\n    localStorage.setItem('lang', newLanguage)\r\n    window.location.reload()\r\n  }\r\n\r\n  const desktopDropdownStyle: CSSProperties = {\r\n    border: '1px solid ' + colors.stroke.tertiary,\r\n    marginRight: 20,\r\n    boxShadow: '0px 8px 12px var(--boxShadow-primary)',\r\n  }\r\n\r\n  const selectHeader = mobile\r\n    ? Languages[currentSelectedLanguage].long\r\n    : Languages[currentSelectedLanguage].short\r\n\r\n  // Close dropdown when clicking anywhere in the window except the collapse items\r\n  useEffect(() => {\r\n    function handleClick() {\r\n      setDropdownOpen(false)\r\n    }\r\n    window.addEventListener('click', handleClick)\r\n    return () => window.removeEventListener('click', handleClick)\r\n  }, [])\r\n\r\n  return (\r\n    <div\r\n      className=\"language-selector\"\r\n      style={{ cursor: 'pointer' }}\r\n      onClick={e => {\r\n        e.stopPropagation()\r\n        setDropdownOpen(!dropdownOpen)\r\n      }}\r\n    >\r\n      <GlobalOutlined style={{ marginBottom: 2 }} />\r\n      <Select\r\n        className=\"medium\"\r\n        style={{\r\n          ...selectStyle,\r\n        }}\r\n        dropdownStyle={mobile ? {} : desktopDropdownStyle}\r\n        open={dropdownOpen}\r\n        value={selectHeader ?? 'EN'}\r\n        onChange={newLanguage => {\r\n          setLanguage(newLanguage)\r\n        }}\r\n        dropdownMatchSelectWidth={false}\r\n      >\r\n        {Object.keys(Languages).map(renderLanguageOption)}\r\n      </Select>\r\n    </div>\r\n  )\r\n}\r\n","import { CSSProperties } from 'react'\r\n\r\nexport const topNavStyles: CSSProperties = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  background: 'var(--background-l0)',\r\n}\r\n\r\nexport const topRightNavStyles: CSSProperties = {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n}\r\n\r\nexport const topLeftNavStyles: CSSProperties = {\r\n  flex: 1,\r\n}\r\n\r\nexport const navMenuItemStyles: CSSProperties = {\r\n  cursor: 'pointer',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  fontWeight: 600,\r\n  color: 'var(--text-primary)',\r\n}\r\n\r\nexport const navDropdownItem: CSSProperties = {\r\n  color: 'var(--text-primary)',\r\n  fontWeight: 500,\r\n}\r\n","import { t } from '@lingui/macro'\r\n\r\ntype ResourceItem = {\r\n  text: string\r\n  key: string\r\n  link: string\r\n}\r\n\r\nexport const resourcesMenuItems = (): ResourceItem[] => {\r\n  return [\r\n    {\r\n      text: t`Docs`,\r\n      key: 'docs',\r\n      link: 'https://info.juicebox.money/',\r\n    },\r\n    {\r\n      text: t`Blog`,\r\n      key: 'blog',\r\n      link: 'https://info.juicebox.money/blog',\r\n    },\r\n    {\r\n      key: 'workspace',\r\n      text: t`Workspace`,\r\n      link: 'https://juicebox.notion.site/',\r\n    },\r\n    {\r\n      key: 'podcast',\r\n      text: t`Podcast`,\r\n      link: 'https://open.spotify.com/show/4G8ji7vofcOx2acXcjXIa4?si=1e5e6e171ed744e8',\r\n    },\r\n    {\r\n      key: 'peel',\r\n      text: t`Peel`,\r\n      link: 'https://discord.gg/XvmfY4Hkcz',\r\n    },\r\n  ]\r\n}\r\n","import { t, Trans } from '@lingui/macro'\r\nimport { CSSProperties, useEffect, useState } from 'react'\r\nimport { Dropdown, Menu, Space } from 'antd'\r\nimport { DownOutlined, UpOutlined } from '@ant-design/icons'\r\nimport ExternalLink from 'components/ExternalLink'\r\n\r\nimport Logo from './Logo'\r\nimport {\r\n  navDropdownItem,\r\n  navMenuItemStyles,\r\n  topLeftNavStyles,\r\n} from './navStyles'\r\nimport { resourcesMenuItems } from './constants'\r\n\r\nfunction NavMenuItem({\r\n  text,\r\n  route,\r\n  onClick,\r\n}: {\r\n  text: string\r\n  route?: string\r\n  onClick?: VoidFunction\r\n}) {\r\n  const external = route?.startsWith('http')\r\n  return (\r\n    <a\r\n      className=\"nav-menu-item hover-opacity\"\r\n      href={route}\r\n      onClick={onClick}\r\n      {...(external\r\n        ? {\r\n            target: '_blank',\r\n            rel: 'noreferrer',\r\n          }\r\n        : {})}\r\n      style={navMenuItemStyles}\r\n    >\r\n      {text}\r\n    </a>\r\n  )\r\n}\r\n\r\nconst resourcesMenu = (\r\n  <Menu style={{ marginTop: -16, marginLeft: -6 }}>\r\n    {resourcesMenuItems().map(r => (\r\n      <Menu.Item key={r.key}>\r\n        <ExternalLink\r\n          className=\"nav-dropdown-item\"\r\n          href={r.link}\r\n          style={navDropdownItem}\r\n        >\r\n          {r.text}\r\n        </ExternalLink>\r\n      </Menu.Item>\r\n    ))}\r\n  </Menu>\r\n)\r\n\r\nexport function TopLeftNavItems({\r\n  mobile,\r\n  onClickMenuItems,\r\n}: {\r\n  mobile?: boolean\r\n  onClickMenuItems?: VoidFunction\r\n}) {\r\n  const [resourcesOpen, setResourcesOpen] = useState<boolean>(false)\r\n  const dropdownIconStyle: CSSProperties = {\r\n    fontSize: 13,\r\n    marginLeft: 7,\r\n  }\r\n\r\n  // Close resources dropdown when clicking anywhere in the window except the dropdown items\r\n  useEffect(() => {\r\n    function handleClick() {\r\n      setResourcesOpen(false)\r\n    }\r\n    window.addEventListener('click', handleClick)\r\n    return () => window.removeEventListener('click', handleClick)\r\n  }, [])\r\n\r\n  return (\r\n    <Space\r\n      size={mobile ? 0 : 'large'}\r\n      style={{ ...topLeftNavStyles }}\r\n      direction={mobile ? 'vertical' : 'horizontal'}\r\n    >\r\n      {!mobile && (\r\n        <a href=\"/\" style={{ display: 'inline-block' }}>\r\n          {<Logo />}\r\n        </a>\r\n      )}\r\n      <NavMenuItem\r\n        text={t`Projects`}\r\n        onClick={onClickMenuItems}\r\n        route=\"/#/projects\"\r\n      />\r\n      <NavMenuItem\r\n        text={t`FAQ`}\r\n        route={undefined}\r\n        onClick={() => {\r\n          if (onClickMenuItems) onClickMenuItems()\r\n          window.location.hash = '/'\r\n          setTimeout(() => {\r\n            document\r\n              .getElementById('faq')\r\n              ?.scrollIntoView({ behavior: 'smooth' })\r\n          }, 0)\r\n        }}\r\n      />\r\n      <NavMenuItem\r\n        text={t`Discord`}\r\n        onClick={onClickMenuItems}\r\n        route=\"https://discord.gg/6jXrJSyDFf\"\r\n      />\r\n\r\n      {!mobile && (\r\n        <Dropdown\r\n          overlay={resourcesMenu}\r\n          overlayStyle={{ padding: 0 }}\r\n          visible={resourcesOpen}\r\n        >\r\n          <div\r\n            className=\"nav-menu-item hover-opacity\"\r\n            onClick={e => {\r\n              setResourcesOpen(!resourcesOpen)\r\n              e.stopPropagation()\r\n            }}\r\n            style={{ ...navMenuItemStyles }}\r\n          >\r\n            <Trans>Resources</Trans>\r\n            {resourcesOpen ? (\r\n              <UpOutlined style={dropdownIconStyle} />\r\n            ) : (\r\n              <DownOutlined style={dropdownIconStyle} />\r\n            )}\r\n          </div>\r\n        </Dropdown>\r\n      )}\r\n    </Space>\r\n  )\r\n}\r\n","export default function Moon({ size }: { size?: number }) {\r\n  return (\r\n    <svg\r\n      viewBox=\"0 0 24 24\"\r\n      width={size || 24}\r\n      height={size || 24}\r\n      fill=\"currentColor\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        clipRule=\"evenodd\"\r\n        d=\"M4.1534 13.6089L4.15362 13.61C4.77322 16.8113 7.42207 19.3677 10.647 19.8853L10.6502 19.8858C13.0412 20.2736 15.2625 19.6103 16.9422 18.2833C11.3549 16.2878 7.9748 10.3524 9.26266 4.48816C5.69846 5.77194 3.35817 9.51245 4.1534 13.6089ZM10.0083 2.21054C4.76622 3.2533 1.09895 8.36947 2.19006 13.9901C2.97006 18.0201 6.28006 21.2101 10.3301 21.8601C13.8512 22.4311 17.0955 21.1608 19.2662 18.8587C19.2765 18.8478 19.2866 18.837 19.2968 18.8261C19.4385 18.6745 19.5757 18.5184 19.7079 18.3581C19.7105 18.355 19.713 18.3519 19.7156 18.3487C19.8853 18.1426 20.0469 17.9295 20.2001 17.7101C20.4101 17.4001 20.2401 16.9601 19.8701 16.9201C19.5114 16.8796 19.1602 16.8209 18.817 16.7452C18.7964 16.7406 18.7758 16.736 18.7552 16.7313C18.6676 16.7114 18.5804 16.6903 18.4938 16.6681C18.4919 16.6676 18.4901 16.6672 18.4882 16.6667C13.0234 15.2647 9.72516 9.48006 11.4542 4.03417C11.4549 4.03214 11.4555 4.03012 11.4562 4.0281C11.4875 3.92954 11.5205 3.83109 11.5552 3.73278C11.5565 3.72911 11.5578 3.72543 11.5591 3.72175C11.6768 3.38921 11.8136 3.05829 11.9701 2.73005C12.1301 2.39005 11.8501 2.01005 11.4701 2.03005C11.1954 2.04379 10.924 2.06848 10.6561 2.10368C10.6517 2.10427 10.6472 2.10486 10.6428 2.10545C10.4413 2.13221 10.2418 2.16492 10.0446 2.2034C10.0325 2.20576 10.0204 2.20814 10.0083 2.21054Z\"\r\n      ></path>\r\n    </svg>\r\n  )\r\n}\r\n","export default function Sun({ size }: { size?: number }) {\r\n  return (\r\n    <svg\r\n      viewBox=\"0 0 24 24\"\r\n      width={size || 24}\r\n      height={size || 24}\r\n      fill=\"currentColor\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path d=\"M5.66 4.2L6.05 4.59C6.44 4.97 6.44 5.61 6.05 5.99L6.04 6C5.65 6.39 5.03 6.39 4.64 6L4.25 5.61C3.86 5.23 3.86 4.6 4.25 4.21L4.26 4.2C4.64 3.82 5.27 3.81 5.66 4.2Z\"></path>\r\n      <path d=\"M1.99 10.95H3.01C3.56 10.95 4 11.39 4 11.95V11.96C4 12.51 3.56 12.95 3 12.94H1.99C1.44 12.94 1 12.5 1 11.95V11.94C1 11.39 1.44 10.95 1.99 10.95Z\"></path>\r\n      <path d=\"M12 1H12.01C12.56 1 13 1.44 13 1.99V2.96C13 3.51 12.56 3.95 12 3.94H11.99C11.44 3.94 11 3.5 11 2.95V1.99C11 1.44 11.44 1 12 1Z\"></path>\r\n      <path d=\"M18.34 4.2C18.73 3.82 19.36 3.82 19.75 4.21C20.14 4.6 20.14 5.22 19.75 5.61L19.36 6C18.98 6.39 18.35 6.39 17.96 6L17.95 5.99C17.56 5.61 17.56 4.98 17.95 4.59L18.34 4.2Z\"></path>\r\n      <path d=\"M18.33 19.7L17.94 19.31C17.55 18.92 17.55 18.3 17.95 17.9C18.33 17.52 18.96 17.51 19.35 17.9L19.74 18.29C20.13 18.68 20.13 19.31 19.74 19.7C19.35 20.09 18.72 20.09 18.33 19.7Z\"></path>\r\n      <path d=\"M20 11.95V11.94C20 11.39 20.44 10.95 20.99 10.95H22C22.55 10.95 22.99 11.39 22.99 11.94V11.95C22.99 12.5 22.55 12.94 22 12.94H20.99C20.44 12.94 20 12.5 20 11.95Z\"></path>\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        clipRule=\"evenodd\"\r\n        d=\"M6 11.95C6 8.64 8.69 5.95 12 5.95C15.31 5.95 18 8.64 18 11.95C18 15.26 15.31 17.95 12 17.95C8.69 17.95 6 15.26 6 11.95ZM12 16C14.2091 16 16 14.2091 16 12C16 9.79086 14.2091 8 12 8C9.79086 8 8 9.79086 8 12C8 14.2091 9.79086 16 12 16Z\"\r\n      ></path>\r\n      <path d=\"M12 22.9H11.99C11.44 22.9 11 22.46 11 21.91V20.95C11 20.4 11.44 19.96 11.99 19.96H12C12.55 19.96 12.99 20.4 12.99 20.95V21.91C12.99 22.46 12.55 22.9 12 22.9Z\"></path>\r\n      <path d=\"M5.66 19.69C5.27 20.08 4.64 20.08 4.25 19.69C3.86 19.3 3.86 18.68 4.24 18.28L4.63 17.89C5.02 17.5 5.65 17.5 6.04 17.89L6.05 17.9C6.43 18.28 6.44 18.91 6.05 19.3L5.66 19.69Z\"></path>\r\n    </svg>\r\n  )\r\n}\r\n","import Moon from 'components/icons/Moon'\r\nimport Sun from 'components/icons/Sun'\r\nimport { Trans } from '@lingui/macro'\r\n\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport React, { useContext } from 'react'\r\n\r\nimport { ThemeOption } from 'constants/theme/theme-option'\r\n\r\nexport default function ThemePickerMobile() {\r\n  const { themeOption, setThemeOption } = useContext(ThemeContext)\r\n\r\n  return (\r\n    <div\r\n      style={{ display: 'flex', cursor: 'pointer', alignItems: 'center' }}\r\n      onClick={() =>\r\n        setThemeOption(\r\n          themeOption === ThemeOption.dark\r\n            ? ThemeOption.light\r\n            : ThemeOption.dark,\r\n        )\r\n      }\r\n    >\r\n      {themeOption === ThemeOption.dark ? (\r\n        <React.Fragment>\r\n          <Sun size={16} />\r\n          <div style={{ margin: '0 0 2px 10px' }}>\r\n            <Trans>Light theme</Trans>\r\n          </div>\r\n        </React.Fragment>\r\n      ) : (\r\n        <React.Fragment>\r\n          <Moon size={16} />\r\n          <div style={{ margin: '0 0 2px 10px' }}>\r\n            <Trans>Dark theme</Trans>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import { t } from '@lingui/macro'\r\nimport { Menu } from 'antd'\r\nimport ExternalLink from 'components/ExternalLink'\r\n\r\nimport { navMenuItemStyles } from '../navStyles'\r\nimport { resourcesMenuItems } from '../constants'\r\n\r\nconst { SubMenu } = Menu\r\n\r\nexport default function ResourcesDropdownMobile() {\r\n  return (\r\n    <SubMenu\r\n      key=\"resources\"\r\n      title={t`Resources`}\r\n      style={{\r\n        marginLeft: 15,\r\n      }}\r\n    >\r\n      {resourcesMenuItems().map(r => (\r\n        <Menu.Item key={r.key}>\r\n          <ExternalLink\r\n            className=\"nav-dropdown-item\"\r\n            href={r.link}\r\n            style={{ ...navMenuItemStyles, fontWeight: 400 }}\r\n          >\r\n            {r.text}\r\n          </ExternalLink>\r\n        </Menu.Item>\r\n      ))}\r\n    </SubMenu>\r\n  )\r\n}\r\n","import { useState, useContext, useEffect } from 'react'\r\nimport { Collapse, Space, Button, Menu } from 'antd'\r\nimport { Header } from 'antd/lib/layout/layout'\r\n\r\nimport { Trans } from '@lingui/macro'\r\n\r\nimport CollapsePanel from 'antd/lib/collapse/CollapsePanel'\r\n\r\nimport { MenuOutlined } from '@ant-design/icons'\r\n\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { NetworkContext } from 'contexts/networkContext'\r\n\r\nimport FeedbackFormButton from 'components/FeedbackFormButton'\r\n\r\nimport Logo from '../Logo'\r\nimport Account from '../Account'\r\nimport NavLanguageSelector from '../NavLanguageSelector'\r\nimport { TopLeftNavItems } from '../MenuItems'\r\nimport ThemePickerMobile from './ThemePickerMobile'\r\nimport { topNavStyles } from '../navStyles'\r\nimport ResourcesDropdownMobile from './ResourcesDropdownMobile'\r\n\r\nexport default function MobileCollapse() {\r\n  const [activeKey, setActiveKey] = useState<0 | undefined>()\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n  const { signingProvider, onLogOut } = useContext(NetworkContext)\r\n\r\n  const isNavOpen = activeKey === 0\r\n\r\n  // Close collapse when clicking anywhere in the window except the collapse items\r\n  useEffect(() => {\r\n    function handleClick() {\r\n      setActiveKey(undefined)\r\n    }\r\n    window.addEventListener('click', handleClick)\r\n    return () => window.removeEventListener('click', handleClick)\r\n  }, [])\r\n\r\n  return (\r\n    <Header\r\n      className=\"top-nav top-nav-mobile\"\r\n      onClick={e => {\r\n        e.stopPropagation()\r\n      }}\r\n      style={{\r\n        ...topNavStyles,\r\n        padding: '16px 8px',\r\n        width: '100%',\r\n        position: 'fixed',\r\n      }}\r\n    >\r\n      <Collapse style={{ border: 'none' }} activeKey={activeKey}>\r\n        <CollapsePanel\r\n          style={{ border: 'none' }}\r\n          key={0}\r\n          showArrow={false}\r\n          header={\r\n            <Space\r\n              onClick={e => {\r\n                setActiveKey(isNavOpen ? undefined : 0)\r\n                e.stopPropagation()\r\n              }}\r\n            >\r\n              <a href=\"/\" style={{ display: 'inline-block' }}>\r\n                {<Logo height={30} />}\r\n              </a>\r\n              <MenuOutlined\r\n                style={{\r\n                  color: colors.icon.primary,\r\n                  fontSize: 20,\r\n                  paddingTop: 6,\r\n                  paddingLeft: 10,\r\n                }}\r\n              />\r\n            </Space>\r\n          }\r\n        >\r\n          <Menu mode=\"inline\" defaultSelectedKeys={['resources']}>\r\n            <TopLeftNavItems\r\n              mobile\r\n              onClickMenuItems={() => setActiveKey(isNavOpen ? undefined : 0)}\r\n            />\r\n\r\n            <ResourcesDropdownMobile />\r\n\r\n            <div style={{ marginLeft: 15 }}>\r\n              <Menu.Item key=\"language-selector\">\r\n                <NavLanguageSelector mobile />\r\n              </Menu.Item>\r\n              <Menu.Item key=\"theme-picker\">\r\n                <ThemePickerMobile />\r\n              </Menu.Item>\r\n              <Menu.Item key=\"feedback\">\r\n                <FeedbackFormButton mobile />\r\n              </Menu.Item>\r\n            </div>\r\n          </Menu>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Account />\r\n            {signingProvider ? (\r\n              <Button onClick={onLogOut} style={{ marginTop: 10 }}>\r\n                <Trans>Disconnect</Trans>\r\n              </Button>\r\n            ) : null}\r\n          </div>\r\n        </CollapsePanel>\r\n      </Collapse>\r\n    </Header>\r\n  )\r\n}\r\n","import Moon from 'components/icons/Moon'\r\nimport Sun from 'components/icons/Sun'\r\n\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport React, { CSSProperties, useContext } from 'react'\r\n\r\nimport { ThemeOption } from 'constants/theme/theme-option'\r\n\r\nexport default function ThemePicker() {\r\n  const {\r\n    themeOption,\r\n    setThemeOption,\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  const iconSize = 18\r\n  const padding = 6\r\n  const height = iconSize + padding * 2\r\n  const selectedColor = colors.icon.primary\r\n  const unselectedColor = colors.icon.tertiary\r\n\r\n  const iconStyle: CSSProperties = {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingTop: padding,\r\n    paddingBottom: padding,\r\n  }\r\n\r\n  const switchStyle: CSSProperties = {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-evenly',\r\n    cursor: 'pointer',\r\n    width: iconSize * 2 + padding * 4,\r\n    marginRight: 10,\r\n    height,\r\n    borderRadius: height / 2,\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"clickable-border\"\r\n      style={switchStyle}\r\n      role=\"switch\"\r\n      aria-checked={themeOption === ThemeOption.dark}\r\n      onClick={() =>\r\n        setThemeOption(\r\n          themeOption === ThemeOption.dark\r\n            ? ThemeOption.light\r\n            : ThemeOption.dark,\r\n        )\r\n      }\r\n    >\r\n      <div\r\n        style={{\r\n          ...iconStyle,\r\n          color:\r\n            themeOption === ThemeOption.light ? selectedColor : unselectedColor,\r\n        }}\r\n      >\r\n        <Sun size={iconSize} />\r\n      </div>\r\n      <div\r\n        style={{\r\n          ...iconStyle,\r\n          color:\r\n            themeOption === ThemeOption.dark ? selectedColor : unselectedColor,\r\n        }}\r\n      >\r\n        <Moon size={iconSize} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { Space } from 'antd'\r\nimport { Header } from 'antd/lib/layout/layout'\r\nimport useMobile from 'hooks/Mobile'\r\n\r\nimport Account from './Account'\r\nimport MobileCollapse from './Mobile/MobileCollapse'\r\nimport { TopLeftNavItems } from './MenuItems'\r\nimport NavLanguageSelector from './NavLanguageSelector'\r\nimport ThemePicker from './ThemePicker'\r\nimport { topNavStyles, topRightNavStyles } from './navStyles'\r\n\r\nexport default function Navbar() {\r\n  const isMobile = useMobile()\r\n  return !isMobile ? (\r\n    <Header className=\"top-nav\" style={{ ...topNavStyles }}>\r\n      <TopLeftNavItems />\r\n\r\n      <Space size=\"middle\" style={{ ...topRightNavStyles }}>\r\n        <NavLanguageSelector />\r\n        <ThemePicker />\r\n        <Account />\r\n      </Space>\r\n    </Header>\r\n  ) : (\r\n    <MobileCollapse />\r\n  )\r\n}\r\n","export const fathom = (window as any)?.fathom // eslint-disable-line @typescript-eslint/no-explicit-any\r\n","import { Collapse } from 'antd'\r\nimport CollapsePanel from 'antd/lib/collapse/CollapsePanel'\r\n\r\nimport QAs from './QAs'\r\n\r\nexport default function Faq() {\r\n  return (\r\n    <Collapse defaultActiveKey={QAs.length ? 0 : undefined} accordion>\r\n      {QAs().map((qa, i) => (\r\n        <CollapsePanel header={qa.q} key={i}>\r\n          {qa.a && <div>{qa.a}</div>}\r\n          {qa.img && (\r\n            <img\r\n              src={qa.img.src}\r\n              alt={qa.img.alt}\r\n              style={{ maxWidth: '100%' }}\r\n            />\r\n          )}\r\n        </CollapsePanel>\r\n      ))}\r\n    </Collapse>\r\n  )\r\n}\r\n","import { ThemeContext } from 'contexts/themeContext'\r\nimport { useContext } from 'react'\r\nimport { CSSProperties } from 'react'\r\nimport { Button } from 'antd'\r\nimport ExternalLink from 'components/ExternalLink'\r\n\r\nimport { Languages } from 'constants/languages/language-options'\r\n\r\nexport default function Footer() {\r\n  const { colors } = useContext(ThemeContext).theme\r\n\r\n  const footerLinksStyles: CSSProperties = {\r\n    display: 'grid',\r\n    rowGap: 10,\r\n    justifyContent: 'center',\r\n    marginBottom: 30,\r\n  }\r\n\r\n  const link = (text: string, link: string) => (\r\n    <a\r\n      style={{\r\n        color: colors.text.action.primary,\r\n        marginLeft: 10,\r\n        marginRight: 10,\r\n      }}\r\n      href={link}\r\n    >\r\n      {text}\r\n    </a>\r\n  )\r\n\r\n  // Renders language links\r\n  const languageLink = (lang: string) => (\r\n    <Button key={lang} onClick={() => setLanguage(lang)} type=\"link\">\r\n      {Languages[lang].long}\r\n    </Button>\r\n  )\r\n\r\n  // Sets the new language with localStorage and reloads the page\r\n  const setLanguage = (newLanguage: string) => {\r\n    localStorage.setItem('lang', newLanguage)\r\n    window.location.reload()\r\n    window.scrollTo(0, 0) // scroll to top of page after reload\r\n  }\r\n\r\n  const gitCommit = process.env.REACT_APP_VERSION\r\n  const gitCommitLink = `https://github.com/jbx-protocol/juice-interface/commit/${gitCommit}`\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'grid',\r\n        rowGap: 20,\r\n        padding: 30,\r\n        background: 'black',\r\n        textAlign: 'center',\r\n      }}\r\n    >\r\n      <div style={{ ...footerLinksStyles, display: 'flex', flexWrap: 'wrap' }}>\r\n        {Object.keys(Languages).map(languageLink)}\r\n      </div>\r\n      <div style={{ ...footerLinksStyles, display: 'flex' }}>\r\n        {link('Discord', 'https://discord.gg/6jXrJSyDFf')}\r\n        {link('GitHub', 'https://github.com/jbx-protocol/juice-interface')}\r\n        {link('Twitter', 'https://twitter.com/juiceboxETH')}\r\n        {link('Privacy Policy', '/#/privacy')}\r\n      </div>\r\n\r\n      {gitCommit ? (\r\n        <span style={{ color: 'white' }}>\r\n          Version:{' '}\r\n          <ExternalLink href={gitCommitLink} style={{ fontSize: '0.8rem' }}>\r\n            #{gitCommit}\r\n          </ExternalLink>\r\n        </span>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport ExternalLink from 'components/ExternalLink'\r\n\r\n// Explains how trending projects rankings are calculated\r\nexport default function RankingExplanation({\r\n  trendingWindow,\r\n}: {\r\n  trendingWindow: number\r\n}) {\r\n  const trendingRankingExplanationCodeURL =\r\n    'https://github.com/jbx-protocol/juice-interface/blob/main/src/hooks/Projects.ts#L275'\r\n  return (\r\n    <Trans>\r\n      Rankings based on number of contributions and volume gained in the last{' '}\r\n      {trendingWindow} days.{' '}\r\n      <ExternalLink href={trendingRankingExplanationCodeURL}>\r\n        See code\r\n      </ExternalLink>\r\n    </Trans>\r\n  )\r\n}\r\n","import Loading from 'components/Loading'\r\nimport ProjectLogo from 'components/ProjectLogo'\r\nimport ETHAmount from 'components/currency/ETHAmount'\r\n\r\nimport { t, Trans, Plural } from '@lingui/macro'\r\n\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport * as constants from '@ethersproject/constants'\r\nimport { useProjectMetadata } from 'hooks/ProjectMetadata'\r\nimport { TrendingProject } from 'models/subgraph-entities/vX/project'\r\nimport { CSSProperties, useContext, useMemo } from 'react'\r\nimport { getTerminalVersion } from 'utils/v1/terminals'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Skeleton } from 'antd'\r\n\r\nimport { v2ProjectRoute } from 'utils/routes'\r\n\r\nimport { SECONDS_IN_DAY } from 'constants/numbers'\r\n\r\nexport default function TrendingProjectCard({\r\n  project,\r\n  size,\r\n  rank,\r\n  trendingWindowDays,\r\n}: {\r\n  project: TrendingProject\r\n  size?: 'sm' | 'lg'\r\n  rank: number\r\n  trendingWindowDays: number\r\n}) {\r\n  const {\r\n    theme: { colors, radii },\r\n  } = useContext(ThemeContext)\r\n\r\n  const cardStyle: CSSProperties = {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    whiteSpace: 'pre',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    padding: '25px 20px',\r\n  }\r\n\r\n  const rankStyle: CSSProperties = {\r\n    fontSize: 22,\r\n    color: colors.text.primary,\r\n    fontWeight: 400,\r\n    marginRight: 15,\r\n    width: 25,\r\n    textAlign: 'center',\r\n  }\r\n\r\n  const { data: metadata } = useProjectMetadata(project?.metadataUri)\r\n\r\n  const terminalVersion = getTerminalVersion(project?.terminal)\r\n\r\n  // If the total paid is greater than 0, but less than 10 ETH, show two decimal places.\r\n  const precision =\r\n    project.trendingVolume?.gt(0) &&\r\n    project.trendingVolume.lt(constants.WeiPerEther)\r\n      ? 2\r\n      : 0\r\n\r\n  const percentGainText = useMemo(() => {\r\n    if (\r\n      project.createdAt &&\r\n      project.createdAt >\r\n        new Date().valueOf() / 1000 - trendingWindowDays * SECONDS_IN_DAY\r\n    ) {\r\n      return t`New`\r\n    }\r\n\r\n    const preTrendingVolume = project.totalPaid?.sub(project.trendingVolume)\r\n\r\n    if (!preTrendingVolume?.gt(0)) return '+∞'\r\n\r\n    const percentGain = project.trendingVolume\r\n      .mul(10000)\r\n      .div(preTrendingVolume)\r\n      .toNumber()\r\n\r\n    let percentRounded: number\r\n\r\n    // If percentGain > 1, round to int\r\n    if (percentGain >= 100) {\r\n      percentRounded = Math.round(percentGain / 100)\r\n      // If 0.1 <= percentGain < 1, round to 1dp\r\n    } else if (percentGain >= 10) {\r\n      percentRounded = Math.round(percentGain / 10) / 10\r\n      // If percentGain < 0.1, round to 2dp\r\n    } else {\r\n      percentRounded = percentGain / 100\r\n    }\r\n\r\n    return `+${percentRounded}%`\r\n  }, [project, trendingWindowDays])\r\n\r\n  const paymentCount = project.trendingPaymentsCount\r\n\r\n  return (\r\n    <Link\r\n      style={{\r\n        borderRadius: radii.lg,\r\n        cursor: 'pointer',\r\n        overflow: 'hidden',\r\n      }}\r\n      key={project.handle}\r\n      to={\r\n        project.cv === '2' ? v2ProjectRoute(project) : `/p/${project?.handle}`\r\n      }\r\n    >\r\n      <div style={cardStyle} className=\"clickable-border\">\r\n        <div style={{ marginRight: 20, display: 'flex', alignItems: 'center' }}>\r\n          <div style={rankStyle}>{rank}</div>\r\n          <ProjectLogo\r\n            uri={metadata?.logoUri}\r\n            name={metadata?.name}\r\n            size={size === 'sm' ? 70 : 110}\r\n          />\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            flex: 1,\r\n            minWidth: 0,\r\n            fontWeight: 400,\r\n          }}\r\n        >\r\n          {metadata ? (\r\n            <h2\r\n              style={{\r\n                color: colors.text.primary,\r\n                margin: 0,\r\n                overflow: 'hidden',\r\n                textOverflow: 'ellipsis',\r\n                fontSize: size === 'sm' ? 16 : 21,\r\n              }}\r\n            >\r\n              {metadata.name}\r\n            </h2>\r\n          ) : (\r\n            <Skeleton paragraph={false} title={{ width: 120 }} active />\r\n          )}\r\n\r\n          {size === 'sm' ? null : (\r\n            <div>\r\n              {project.handle && (\r\n                <span\r\n                  style={{\r\n                    color: colors.text.primary,\r\n                    fontWeight: 500,\r\n                    marginRight: 10,\r\n                  }}\r\n                >\r\n                  @{project.handle}\r\n                </span>\r\n              )}\r\n              <span\r\n                style={{\r\n                  color: colors.text.tertiary,\r\n                  fontSize: '0.7rem',\r\n                  fontWeight: 500,\r\n                }}\r\n              >\r\n                V{terminalVersion ?? project.cv}\r\n              </span>\r\n            </div>\r\n          )}\r\n\r\n          <div\r\n            style={{\r\n              color: colors.text.primary,\r\n              display: 'flex',\r\n              flexWrap: 'wrap',\r\n              width: '100%',\r\n            }}\r\n          >\r\n            <span\r\n              style={{\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                alignItems: 'baseline',\r\n              }}\r\n            >\r\n              <span style={{ fontWeight: 600, marginTop: 3 }}>\r\n                <ETHAmount\r\n                  amount={project.trendingVolume}\r\n                  precision={precision}\r\n                />{' '}\r\n              </span>\r\n              <span style={{ fontWeight: 400, color: colors.text.secondary }}>\r\n                <Trans>last {trendingWindowDays} days</Trans>{' '}\r\n              </span>\r\n              <span style={{ fontWeight: 600, color: colors.text.header }}>\r\n                {percentGainText && <>{percentGainText}</>}\r\n              </span>\r\n            </span>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              fontWeight: 400,\r\n              color: colors.text.secondary,\r\n              fontSize: 13,\r\n              marginTop: 2,\r\n            }}\r\n          >\r\n            <Plural value={paymentCount} one=\"# payment\" other=\"# payments\" />\r\n          </div>\r\n        </div>\r\n\r\n        {!metadata && <Loading />}\r\n      </div>\r\n    </Link>\r\n  )\r\n}\r\n","import { Col, ColProps, Row, Space } from 'antd'\r\nimport { PropsWithChildren } from 'react'\r\nimport { isReactNodeArray } from 'utils/isReactNodeArray'\r\n\r\nconst DEFAULT_GUTTER = 20\r\n\r\nexport default function Grid({\r\n  children,\r\n  list,\r\n  gutter,\r\n}: PropsWithChildren<{\r\n  list?: boolean\r\n  gutter?: number\r\n}>) {\r\n  const colProps: ColProps = {\r\n    xs: 24,\r\n    md: 12,\r\n    style: { marginBottom: gutter ?? DEFAULT_GUTTER },\r\n  }\r\n\r\n  if (!children) return <></>\r\n  if (!isReactNodeArray(children)) return <>{children}</>\r\n\r\n  return list ? (\r\n    <Space style={{ width: '100%' }} direction=\"vertical\">\r\n      {children}\r\n    </Space>\r\n  ) : (\r\n    <div>\r\n      {children.map(\r\n        (child, i) =>\r\n          i % 2 === 0 && (\r\n            <Row gutter={gutter ?? DEFAULT_GUTTER} key={i}>\r\n              <Col {...colProps}>{child}</Col>\r\n              {i + 1 < children.length && (\r\n                <Col {...colProps}>{children[i + 1]}</Col>\r\n              )}\r\n            </Row>\r\n          ),\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import { ReactNode, ReactNodeArray } from 'react'\r\n\r\nexport const isReactNodeArray = (\r\n  node: ReactNode | undefined,\r\n): node is ReactNodeArray => {\r\n  return node instanceof Array\r\n}\r\n","import RichNote from 'components/RichNote'\r\nimport FormattedAddress from 'components/FormattedAddress'\r\nimport Loading from 'components/Loading'\r\nimport V1ProjectHandle from 'components/v1/shared/V1ProjectHandle'\r\n\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport useSubgraphQuery from 'hooks/SubgraphQuery'\r\nimport { useContext } from 'react'\r\nimport { formatHistoricalDate } from 'utils/formatDate'\r\n\r\nimport ETHAmount from 'components/currency/ETHAmount'\r\nimport { Project } from 'models/subgraph-entities/vX/project'\r\nimport V2ProjectHandle from 'components/v2/shared/V2ProjectHandle'\r\n\r\nexport default function Payments() {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  const { data: events, isLoading } = useSubgraphQuery({\r\n    entity: 'payEvent',\r\n    keys: [\r\n      'amount',\r\n      'beneficiary',\r\n      'note',\r\n      'timestamp',\r\n      'id',\r\n      { entity: 'project', keys: ['id', 'projectId', 'cv'] },\r\n    ],\r\n    first: 20,\r\n    orderDirection: 'desc',\r\n    orderBy: 'timestamp',\r\n  })\r\n\r\n  const ProjectHandle = ({ project }: { project: Partial<Project> }) => {\r\n    if (!project?.projectId) return null\r\n\r\n    return (\r\n      <div style={{ color: colors.text.action.primary, fontWeight: 500 }}>\r\n        {project.cv === '2' ? (\r\n          <V2ProjectHandle\r\n            projectId={project.projectId}\r\n            handle={project.handle}\r\n          />\r\n        ) : (\r\n          <V1ProjectHandle projectId={project.projectId} />\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {events || !isLoading ? (\r\n        <div>\r\n          {events?.map((e, i) => (\r\n            <div\r\n              key={e.id}\r\n              style={{\r\n                paddingTop: i === 0 ? 0 : 10,\r\n                paddingBottom: 20,\r\n                marginBottom: 10,\r\n                borderBottom: '1px solid ' + colors.stroke.tertiary,\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between',\r\n                  alignItems: 'baseline',\r\n                }}\r\n              >\r\n                <ProjectHandle project={e.project} />\r\n\r\n                <div\r\n                  style={{ fontSize: '.7rem', color: colors.text.secondary }}\r\n                >\r\n                  {e.timestamp && formatHistoricalDate(e.timestamp * 1000)}\r\n                </div>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between',\r\n                  alignItems: 'baseline',\r\n                }}\r\n              >\r\n                <span style={{ fontSize: '1rem', fontWeight: 500 }}>\r\n                  <ETHAmount amount={e.amount} precision={4} />\r\n                </span>\r\n                <span>\r\n                  <FormattedAddress address={e.beneficiary} />\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <RichNote note={e.note} />\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <Loading />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import { Row, Col, Tooltip, Space } from 'antd'\r\nimport { InfoCircleOutlined } from '@ant-design/icons'\r\n\r\nimport { CSSProperties, useContext } from 'react'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport RankingExplanation from 'pages/projects/RankingExplanation'\r\nimport { Trans } from '@lingui/macro'\r\n\r\nimport { useTrendingProjects } from 'hooks/Projects'\r\nimport TrendingProjectCard from 'pages/projects/TrendingProjectCard'\r\nimport Grid from 'components/Grid'\r\n\r\nimport Payments from './Payments'\r\n\r\nexport default function TrendingSection() {\r\n  const {\r\n    theme: { colors },\r\n    isDarkMode,\r\n  } = useContext(ThemeContext)\r\n\r\n  const trendingProjectsStyle: CSSProperties = {\r\n    // Light theme uses a slightly lighter background than background-l1\r\n    backgroundColor: isDarkMode ? colors.background.l1 : '#faf7f5',\r\n    padding: '2rem',\r\n    margin: '0 auto',\r\n  }\r\n\r\n  const SmallHeader = ({ text }: { text: string | JSX.Element }) => (\r\n    <h3 style={{ fontWeight: 600, margin: 0, fontSize: '1.3rem' }}>{text}</h3>\r\n  )\r\n\r\n  const { data: projects } = useTrendingProjects(6, 7)\r\n\r\n  return (\r\n    <section style={trendingProjectsStyle}>\r\n      <Row style={{ maxWidth: 1200, margin: '0 auto' }} gutter={40}>\r\n        <Col xs={24} md={12}>\r\n          <Space direction=\"vertical\" style={{ width: '100%' }} size=\"middle\">\r\n            <SmallHeader\r\n              text={\r\n                <span>\r\n                  <Trans>Trending projects</Trans>{' '}\r\n                  <Tooltip\r\n                    title={<RankingExplanation trendingWindow={7} />}\r\n                    placement=\"bottom\"\r\n                  >\r\n                    <InfoCircleOutlined style={{ fontSize: 20 }} />\r\n                  </Tooltip>\r\n                </span>\r\n              }\r\n            />\r\n\r\n            <Grid list>\r\n              {projects?.map((p, i) => (\r\n                <TrendingProjectCard\r\n                  project={p}\r\n                  size={'sm'}\r\n                  rank={i + 1}\r\n                  key={`${p.id}_${p.cv}`}\r\n                  trendingWindowDays={7}\r\n                />\r\n              ))}\r\n            </Grid>\r\n          </Space>\r\n        </Col>\r\n        <Col xs={24} md={12}>\r\n          <Space direction=\"vertical\" style={{ width: '100%' }} size=\"middle\">\r\n            <SmallHeader text={<Trans>Latest payments</Trans>} />\r\n            <div style={{ maxHeight: 600, overflow: 'auto' }}>\r\n              <Payments />\r\n            </div>\r\n          </Space>\r\n        </Col>\r\n      </Row>\r\n    </section>\r\n  )\r\n}\r\n","import useMobile from 'hooks/Mobile'\r\nimport { CSSProperties } from 'react'\r\n\r\nexport const SectionHeading: React.FC<{ style?: CSSProperties }> = ({\r\n  children,\r\n  style,\r\n}) => {\r\n  const isMobile = useMobile()\r\n\r\n  return (\r\n    <h2\r\n      style={{\r\n        fontSize: isMobile ? '1.8rem' : '2.5rem',\r\n        textAlign: 'center',\r\n        fontWeight: 600,\r\n        marginBottom: '0.8rem',\r\n        ...style,\r\n      }}\r\n    >\r\n      {children}\r\n    </h2>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { Button, Skeleton, Space } from 'antd'\r\nimport ETHAmount from 'components/currency/ETHAmount'\r\nimport Loading from 'components/Loading'\r\nimport { ProjectCardProject } from 'components/ProjectCard'\r\nimport ProjectLogo from 'components/ProjectLogo'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { useProjectMetadata } from 'hooks/ProjectMetadata'\r\nimport { useProjectsQuery } from 'hooks/Projects'\r\nimport { RightCircleOutlined } from '@ant-design/icons'\r\nimport { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport useMobile from 'hooks/Mobile'\r\n\r\nimport { SectionHeading } from './SectionHeading'\r\n\r\nconst SmallProjectCardMobile = ({\r\n  project,\r\n}: {\r\n  project: ProjectCardProject\r\n}) => {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n  const { data: metadata } = useProjectMetadata(project?.metadataUri)\r\n\r\n  return (\r\n    <Link\r\n      style={{\r\n        cursor: 'pointer',\r\n        overflow: 'hidden',\r\n        width: '100%',\r\n        padding: '0.5rem 1rem',\r\n        textAlign: 'center',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        gap: 10,\r\n      }}\r\n      key={`${project.id}_${project.cv}`}\r\n      to={\r\n        project.cv === '2'\r\n          ? `/v2/p/${project.projectId}`\r\n          : `/p/${project?.handle}`\r\n      }\r\n      className=\"clickable-border\"\r\n    >\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        <ProjectLogo uri={metadata?.logoUri} name={metadata?.name} size={60} />\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          fontWeight: 400,\r\n          width: '100%',\r\n        }}\r\n      >\r\n        {metadata ? (\r\n          <span\r\n            style={{\r\n              color: colors.text.primary,\r\n              margin: 0,\r\n              overflow: 'hidden',\r\n              textOverflow: 'ellipsis',\r\n            }}\r\n          >\r\n            {metadata.name}\r\n          </span>\r\n        ) : (\r\n          <Skeleton paragraph={false} title={{ width: 120 }} active />\r\n        )}\r\n\r\n        <div\r\n          style={{\r\n            color: colors.text.primary,\r\n            fontWeight: 500,\r\n          }}\r\n        >\r\n          <ETHAmount amount={project?.totalPaid} precision={0} /> raised\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  )\r\n}\r\n\r\nconst SmallProjectCard = ({ project }: { project: ProjectCardProject }) => {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n  const { data: metadata } = useProjectMetadata(project?.metadataUri)\r\n\r\n  return (\r\n    <Link\r\n      style={{\r\n        cursor: 'pointer',\r\n        overflow: 'hidden',\r\n        width: 180,\r\n        padding: '1rem',\r\n        textAlign: 'center',\r\n      }}\r\n      key={`${project.id}_${project.cv}`}\r\n      to={\r\n        project.cv === '2'\r\n          ? `/v2/p/${project.projectId}`\r\n          : `/p/${project?.handle}`\r\n      }\r\n      className=\"clickable-border\"\r\n    >\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          marginBottom: '0.5rem',\r\n        }}\r\n      >\r\n        <ProjectLogo uri={metadata?.logoUri} name={metadata?.name} size={90} />\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          flex: 1,\r\n          minWidth: 0,\r\n          fontWeight: 400,\r\n        }}\r\n      >\r\n        {metadata ? (\r\n          <span\r\n            style={{\r\n              color: colors.text.primary,\r\n              margin: 0,\r\n              overflow: 'hidden',\r\n              textOverflow: 'ellipsis',\r\n            }}\r\n          >\r\n            {metadata.name}\r\n          </span>\r\n        ) : (\r\n          <Skeleton paragraph={false} title={{ width: 120 }} active />\r\n        )}\r\n\r\n        <div>\r\n          <span\r\n            style={{\r\n              color: colors.text.primary,\r\n              fontSize: '1rem',\r\n              fontWeight: 500,\r\n            }}\r\n          >\r\n            <ETHAmount amount={project?.totalPaid} precision={0} /> raised\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport function TopProjectsSection() {\r\n  const {\r\n    theme: { colors },\r\n    isDarkMode,\r\n  } = useContext(ThemeContext)\r\n  const isMobile = useMobile()\r\n\r\n  const { data: previewProjects } = useProjectsQuery({\r\n    pageSize: 4,\r\n  })\r\n\r\n  return (\r\n    <section\r\n      style={{\r\n        backgroundColor: isDarkMode ? colors.background.l1 : '#faf7f5',\r\n        padding: '2rem',\r\n      }}\r\n    >\r\n      <div style={{ margin: '40px auto', maxWidth: 1080 }}>\r\n        <Space direction=\"vertical\" style={{ width: '100%' }} size=\"large\">\r\n          <div>\r\n            <SectionHeading>\r\n              <Trans>Fund and operate your thing, your way.</Trans>\r\n            </SectionHeading>\r\n\r\n            <p\r\n              style={{\r\n                textAlign: 'center',\r\n                fontSize: '1rem',\r\n                marginBottom: '0.3rem',\r\n                color: colors.text.primary,\r\n              }}\r\n            >\r\n              <Trans>\r\n                Juicebox puts the fun back in funding so you can focus on\r\n                building.\r\n              </Trans>\r\n            </p>\r\n            <p\r\n              style={{\r\n                textAlign: 'center',\r\n                fontSize: '1rem',\r\n                marginBottom: '0.8rem',\r\n              }}\r\n            >\r\n              <Trans>\r\n                Join{' '}\r\n                <Link\r\n                  to=\"/projects\"\r\n                  className=\"text-primary hover-text-decoration-underline\"\r\n                >\r\n                  hundreds of projects\r\n                </Link>{' '}\r\n                sippin' the Juice.\r\n              </Trans>\r\n            </p>\r\n          </div>\r\n\r\n          <div style={{ marginBottom: '0.8rem' }}>\r\n            {previewProjects ? (\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  gap: 10,\r\n                  width: '80%',\r\n                  justifyContent: 'space-between',\r\n                  margin: '0 auto',\r\n                  flexWrap: 'wrap',\r\n                }}\r\n              >\r\n                {previewProjects.map(p =>\r\n                  isMobile ? (\r\n                    <SmallProjectCardMobile key={p.metadataUri} project={p} />\r\n                  ) : (\r\n                    <SmallProjectCard key={p.metadataUri} project={p} />\r\n                  ),\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <Loading />\r\n            )}\r\n          </div>\r\n\r\n          <div style={{ textAlign: 'center' }}>\r\n            <Space direction=\"vertical\" style={{ width: '100%' }} size=\"large\">\r\n              <Button\r\n                size=\"large\"\r\n                type=\"primary\"\r\n                href=\"/#/create\"\r\n                block={isMobile}\r\n              >\r\n                <Trans>Start raising funds</Trans>\r\n              </Button>\r\n\r\n              <div\r\n                role=\"button\"\r\n                style={{\r\n                  fontSize: '0.9rem',\r\n                  color: colors.text.secondary,\r\n                  cursor: 'pointer',\r\n                }}\r\n                className=\"hover-text-decoration-underline\"\r\n                onClick={() => {\r\n                  document\r\n                    .getElementById('how-it-works')\r\n                    ?.scrollIntoView({ behavior: 'smooth' })\r\n                }}\r\n              >\r\n                <Space size=\"small\">\r\n                  <Trans>How does it work?</Trans>\r\n                  <RightCircleOutlined />\r\n                </Space>\r\n              </div>\r\n            </Space>\r\n          </div>\r\n        </Space>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport ETHAmount from 'components/currency/ETHAmount'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport useMobile from 'hooks/Mobile'\r\nimport useSubgraphQuery from 'hooks/SubgraphQuery'\r\nimport { useContext } from 'react'\r\nimport { formattedNum } from 'utils/formatNumber'\r\n\r\nconst Stat = ({\r\n  value,\r\n  label,\r\n}: {\r\n  value: string | number | JSX.Element | undefined\r\n  label: string | JSX.Element\r\n}) => {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n  const isMobile = useMobile()\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        textAlign: 'center',\r\n        width: '100%',\r\n        maxWidth: '200px',\r\n        margin: '0 auto',\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          fontSize: isMobile ? '1.8rem' : '2.5rem',\r\n          fontWeight: 600,\r\n          color: colors.text.brand.primary,\r\n        }}\r\n      >\r\n        {value}\r\n      </div>\r\n      <div style={{ fontSize: '1rem' }}>{label}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function StatsSection() {\r\n  const { data: protocolLogs } = useSubgraphQuery({\r\n    entity: 'protocolLog',\r\n    keys: ['erc20Count', 'paymentsCount', 'projectsCount', 'volumePaid'],\r\n  })\r\n\r\n  const stats = protocolLogs?.[0]\r\n\r\n  return (\r\n    <section\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        maxWidth: 1200,\r\n        margin: '0 auto',\r\n        padding: '4rem 2rem',\r\n        flexWrap: 'wrap',\r\n        gap: '1rem',\r\n      }}\r\n    >\r\n      <Stat\r\n        value={stats?.projectsCount}\r\n        label={<Trans>Projects on Juicebox</Trans>}\r\n      />\r\n      <Stat\r\n        value={<ETHAmount amount={stats?.volumePaid} />}\r\n        label={<Trans>Raised on Juicebox</Trans>}\r\n      />\r\n      <Stat\r\n        value={formattedNum(stats?.paymentsCount)}\r\n        label={<Trans>Payments made</Trans>}\r\n      />\r\n    </section>\r\n  )\r\n}\r\n","import { t, Trans } from '@lingui/macro'\r\nimport { Button, Col, Divider, Row } from 'antd'\r\nimport ExternalLink from 'components/ExternalLink'\r\nimport { CSSProperties } from 'react'\r\nimport { InfoCircleOutlined } from '@ant-design/icons'\r\nimport useMobile from 'hooks/Mobile'\r\n\r\nimport { OverflowVideoLink } from './QAs'\r\nimport { SectionHeading } from './SectionHeading'\r\n\r\nconst SmallHeader = ({ text }: { text: string }) => (\r\n  <h3 style={{ fontWeight: 600, margin: 0 }}>{text}</h3>\r\n)\r\n\r\nconst FourthCol = ({\r\n  header,\r\n  children,\r\n}: React.PropsWithChildren<{ header: string }>) => (\r\n  <div>\r\n    <SmallHeader text={header} />\r\n    <p style={{ marginBottom: 0, marginTop: 5 }}>{children}</p>\r\n  </div>\r\n)\r\n\r\nexport function HowItWorksSection() {\r\n  const isMobile = useMobile()\r\n  const totalMaxWidth = 1080\r\n\r\n  const wrapper: CSSProperties = {\r\n    maxWidth: totalMaxWidth,\r\n    margin: '0 auto',\r\n  }\r\n  return (\r\n    <section\r\n      id=\"how-it-works\"\r\n      style={{\r\n        margin: '40px 0',\r\n        padding: '2rem',\r\n      }}\r\n    >\r\n      <SectionHeading\r\n        style={{\r\n          marginBottom: '4rem',\r\n        }}\r\n      >\r\n        <Trans>How to Juice.</Trans>\r\n      </SectionHeading>\r\n\r\n      <div\r\n        style={{\r\n          ...wrapper,\r\n        }}\r\n      >\r\n        <Row align=\"middle\">\r\n          {!isMobile && (\r\n            <Col xs={24} sm={11}>\r\n              <img\r\n                style={{\r\n                  maxHeight: 480,\r\n                  maxWidth: '100%',\r\n                  objectFit: 'contain',\r\n                  marginBottom: 40,\r\n                }}\r\n                src=\"/assets/pina.png\"\r\n                alt=\"Pinepple geek artist holding a paintbrush\"\r\n                loading=\"lazy\"\r\n              />\r\n            </Col>\r\n          )}\r\n\r\n          <Col xs={24} sm={13}>\r\n            <div style={{ display: 'grid', rowGap: 20, marginBottom: 40 }}>\r\n              <FourthCol header={t`1. Get funded.`}>\r\n                <Trans>\r\n                  Crowdfund your project with ETH. Set a funding target to cover\r\n                  predictable expenses, and any extra funds (\r\n                  <OverflowVideoLink>overflow</OverflowVideoLink>) can be\r\n                  claimed by anyone holding your project's tokens alongside you.\r\n                </Trans>\r\n              </FourthCol>\r\n              <FourthCol header={t`2. Give ownership`}>\r\n                <Trans>\r\n                  When someone pays your project, they'll receive your project's\r\n                  tokens in return. Tokens can be redeemed for a portion of your\r\n                  project's overflow funds; when you win, your community wins\r\n                  with you. Leverage your project's token to grant governance\r\n                  rights, community access, or other membership perks.\r\n                </Trans>\r\n              </FourthCol>\r\n              <FourthCol header={t`3. Manage your funds`}>\r\n                <Trans>\r\n                  Commit portions of your funds to the people or projects you\r\n                  want to support, or the contributors you want to pay. When you\r\n                  get paid, so do they.\r\n                </Trans>\r\n              </FourthCol>\r\n              <FourthCol header={t`4. Build trust.`}>\r\n                <Trans>\r\n                  Changes to your project's funding configuration require a\r\n                  community-approved period to take effect, which acts as a\r\n                  safeguard against rug pulls. Your supporters don't have to\r\n                  trust you — even though they already do.\r\n                </Trans>\r\n              </FourthCol>\r\n\r\n              <Divider\r\n                style={{ width: '50px', margin: '0 auto', minWidth: 'unset' }}\r\n              />\r\n\r\n              <p>\r\n                <InfoCircleOutlined />{' '}\r\n                <Trans>\r\n                  Juicebox is new, unaudited, and not guaranteed to work\r\n                  perfectly. Before spending money, do your own research:{' '}\r\n                  <ExternalLink href=\"https://discord.gg/6jXrJSyDFf\">\r\n                    ask questions\r\n                  </ExternalLink>\r\n                  ,{' '}\r\n                  <ExternalLink href=\"https://github.com/jbx-protocol/juice-interface\">\r\n                    check out the code\r\n                  </ExternalLink>\r\n                  , and understand the risks!\r\n                </Trans>\r\n              </p>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <div style={{ textAlign: 'center' }}>\r\n          <Button size=\"large\" type=\"primary\" href=\"/#/create\" block={isMobile}>\r\n            <Trans>Design your project</Trans>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import { t, Trans } from '@lingui/macro'\r\nimport { Button, Col, Row, Space } from 'antd'\r\nimport FeedbackFormButton from 'components/FeedbackFormButton'\r\n\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { CSSProperties, useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport useMobile from 'hooks/Mobile'\r\nimport { fathom } from 'lib/fathom'\r\n\r\nimport { ThemeOption } from 'constants/theme/theme-option'\r\n\r\nimport Faq from './home/Faq'\r\nimport Footer from './home/Footer'\r\nimport TrendingSection from './home/TrendingSection'\r\nimport { TopProjectsSection } from './home/TopProjectsSection'\r\nimport { StatsSection } from './home/StatsSection'\r\nimport { HowItWorksSection } from './home/HowItWorksSection'\r\n\r\nconst BigHeader = ({\r\n  text,\r\n  style,\r\n}: {\r\n  text: string\r\n  style?: CSSProperties\r\n}) => {\r\n  return (\r\n    <h1\r\n      style={{\r\n        fontSize: '2.4rem',\r\n        fontWeight: 600,\r\n        lineHeight: 1.2,\r\n        margin: 0,\r\n        ...style,\r\n      }}\r\n    >\r\n      {text}\r\n    </h1>\r\n  )\r\n}\r\n\r\nexport default function Landing() {\r\n  const { theme, forThemeOption } = useContext(ThemeContext)\r\n  const colors = theme.colors\r\n  const isMobile = useMobile()\r\n\r\n  const totalMaxWidth = 1080\r\n\r\n  const wrapper: CSSProperties = {\r\n    maxWidth: totalMaxWidth,\r\n    margin: '0 auto',\r\n  }\r\n\r\n  const BuiltForList = () => (\r\n    <div\r\n      style={{\r\n        display: 'grid',\r\n        gridAutoFlow: 'row',\r\n        rowGap: 8,\r\n        fontWeight: 500,\r\n      }}\r\n    >\r\n      <p\r\n        style={{\r\n          marginBottom: 4,\r\n        }}\r\n      >\r\n        <Trans>Built for:</Trans>\r\n      </p>\r\n      {[\r\n        t`DAOs`,\r\n        t`Crowdfunding`,\r\n        t`NFT projects`,\r\n        t`Indie creators and builders`,\r\n      ].map((data, i) => (\r\n        <Space\r\n          style={{ fontStyle: 'italic', paddingLeft: 8 }}\r\n          key={i}\r\n          size=\"middle\"\r\n        >\r\n          <img src=\"/assets/bolt.svg\" alt=\"⚡️\" />\r\n          {data}\r\n        </Space>\r\n      ))}\r\n    </div>\r\n  )\r\n\r\n  const CallToAction = () => {\r\n    const isMobile = useMobile()\r\n\r\n    return (\r\n      <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"large\"\r\n          block={isMobile}\r\n          href={'/#/create'}\r\n          onClick={() => {\r\n            fathom?.trackGoal('IIYVJKNC', 0)\r\n          }}\r\n          style={{\r\n            marginRight: isMobile ? 0 : '0.8rem',\r\n            marginBottom: isMobile ? '0.8rem' : 0,\r\n          }}\r\n        >\r\n          <Trans>Launch your project</Trans>\r\n        </Button>\r\n\r\n        <Button size=\"large\" block={isMobile} href=\"/#/projects\">\r\n          <Trans>Explore projects</Trans>\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <section\r\n        style={{\r\n          paddingLeft: 40,\r\n          paddingRight: 40,\r\n          marginTop: 40,\r\n          marginBottom: 100,\r\n        }}\r\n      >\r\n        <div style={wrapper}>\r\n          <Row gutter={30} align=\"middle\">\r\n            <Col\r\n              xs={24}\r\n              md={13}\r\n              style={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                paddingBottom: 25,\r\n              }}\r\n            >\r\n              <div>\r\n                <Space direction=\"vertical\" size=\"large\">\r\n                  <BigHeader\r\n                    text={t`Fund anything. Grow together.`}\r\n                    style={{ fontSize: !isMobile ? '3.8rem' : '2.3rem' }}\r\n                  />\r\n                  <div\r\n                    style={{\r\n                      marginBottom: '1rem',\r\n                    }}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        fontWeight: 500,\r\n                        fontSize: '1rem',\r\n                        marginBottom: '1rem',\r\n                      }}\r\n                    >\r\n                      <Trans>\r\n                        The Decentralized Funding Platform. Light enough for a\r\n                        group of friends, powerful enough for a global network\r\n                        of anons.{' '}\r\n                        <Link\r\n                          className=\"text-primary hover-text-decoration-underline\"\r\n                          to=\"/p/juicebox\"\r\n                          style={{\r\n                            textDecoration: 'underline',\r\n                            fontWeight: 'inherit',\r\n                          }}\r\n                        >\r\n                          Community-owned\r\n                        </Link>\r\n                        , on Ethereum.\r\n                      </Trans>\r\n                    </div>\r\n\r\n                    <BuiltForList />\r\n                  </div>\r\n                  <CallToAction />\r\n                </Space>\r\n              </div>\r\n            </Col>\r\n\r\n            <Col xs={24} md={11}>\r\n              <img\r\n                className=\"hide-mobile\"\r\n                style={{\r\n                  minHeight: 300,\r\n                  width: '100%',\r\n                  maxWidth: '50vw',\r\n                  objectFit: 'contain',\r\n                }}\r\n                src={\r\n                  forThemeOption &&\r\n                  forThemeOption({\r\n                    [ThemeOption.dark]: '/assets/banana-od.png',\r\n                    [ThemeOption.light]: '/assets/banana-ol.png',\r\n                  })\r\n                }\r\n                alt=\"Chill banana drinking juice\"\r\n                loading=\"lazy\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </section>\r\n\r\n      <TopProjectsSection />\r\n\r\n      <StatsSection />\r\n\r\n      <TrendingSection />\r\n\r\n      <HowItWorksSection />\r\n\r\n      <section\r\n        style={{\r\n          padding: 30,\r\n          paddingTop: 80,\r\n          paddingBottom: 80,\r\n          background: colors.background.brand.secondary,\r\n          color: colors.text.over.brand.secondary,\r\n        }}\r\n      >\r\n        <div style={wrapper}>\r\n          <Row align=\"middle\" gutter={40}>\r\n            <Col xs={24} md={14}>\r\n              <div style={{ display: 'grid', rowGap: 20 }}>\r\n                <BigHeader text={t`Should you Juicebox?`} />\r\n                <div style={{ color: colors.text.over.brand.secondary }}>\r\n                  <p className=\"ol\">\r\n                    <Trans>Almost definitely.</Trans>\r\n                  </p>\r\n                  <p className=\"ol\">\r\n                    <Trans>\r\n                      With Juicebox, projects are built and maintained by\r\n                      motivated punks getting paid transparently, and funded by\r\n                      a community of users and patrons who are rewarded as the\r\n                      projects they support succeed.\r\n                    </Trans>\r\n                  </p>\r\n                  <p className=\"ol\">\r\n                    <Trans>\r\n                      The future will be led by creators, and owned by\r\n                      communities.\r\n                    </Trans>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n\r\n            <Col xs={24} md={10}>\r\n              <img\r\n                style={{ maxWidth: '100%' }}\r\n                src=\"/assets/blueberry-ol.png\"\r\n                alt=\"Sexy blueberry with bright pink lipstick spraying a can of spraypaint\"\r\n                loading=\"lazy\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </section>\r\n\r\n      <section>\r\n        <div\r\n          id=\"faq\"\r\n          style={{\r\n            ...wrapper,\r\n            paddingTop: 80,\r\n            paddingBottom: 80,\r\n            maxWidth: 800,\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: 'grid',\r\n              rowGap: 60,\r\n              padding: '0 1.5rem',\r\n            }}\r\n          >\r\n            <BigHeader text={t`FAQs`} />\r\n            <Faq />\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        <img\r\n          style={{\r\n            height: '40vh',\r\n            maxHeight: 400,\r\n            minHeight: 300,\r\n            maxWidth: '100%',\r\n            objectFit: 'contain',\r\n            objectPosition: 'center',\r\n            marginBottom: -10,\r\n          }}\r\n          src={\r\n            forThemeOption &&\r\n            forThemeOption({\r\n              [ThemeOption.dark]: '/assets/orange_lady-od.png',\r\n              [ThemeOption.light]: '/assets/orange_lady-ol.png',\r\n            })\r\n          }\r\n          alt=\"Powerlifting orange hitting an olympic deadlift\"\r\n          loading=\"lazy\"\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          background: 'black',\r\n          padding: 40,\r\n          textAlign: 'center',\r\n        }}\r\n      >\r\n        <div style={{ fontSize: 20, marginBottom: 20 }}>🧃⚡️</div>\r\n        <p style={{ color: 'white', margin: 0 }}>\r\n          <Trans>\r\n            Big ups to the Ethereum community for crafting the infrastructure\r\n            and economy to make Juicebox possible.\r\n          </Trans>\r\n        </p>\r\n      </div>\r\n      <FeedbackFormButton />\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n","import ExternalLink from '../components/ExternalLink'\r\n\r\nexport default function PrivacyPolicy() {\r\n  return (\r\n    <div style={{ padding: '40px', maxWidth: '1080px', margin: '0 auto' }}>\r\n      <h1>Privacy Policy</h1>\r\n      <p>\r\n        We want to process as little personal information as possible when you\r\n        use our website. That's why we've chosen Fathom Analytics for our\r\n        website analytics, which doesn't use cookies and complies with the GDPR,\r\n        ePrivacy (including PECR), COPPA and CCPA. Using this privacy-friendly\r\n        website analytics software, your IP address is only briefly processed,\r\n        and we (running this website) have no way of identifying you. As per the\r\n        CCPA, your personal information is de-identified. You can read more\r\n        about this on{' '}\r\n        <ExternalLink href=\"https://usefathom.com/\">\r\n          Fathom Analytics\r\n        </ExternalLink>\r\n        ' website.\r\n      </p>\r\n      <p>\r\n        The purpose of us using this software is to understand our website\r\n        traffic in the most privacy-friendly way possible so that we can\r\n        continually improve our website and business. The lawful basis as per\r\n        the GDPR is \"where our legitimate interests are to improve our website\r\n        and business continually.\" As per the explanation, no personal data is\r\n        stored over time.\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n","import { Skeleton, Tooltip } from 'antd'\r\n\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport * as constants from '@ethersproject/constants'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { useProjectMetadata } from 'hooks/ProjectMetadata'\r\nimport { Project } from 'models/subgraph-entities/vX/project'\r\nimport { CSSProperties, useContext } from 'react'\r\nimport { formatDate } from 'utils/formatDate'\r\n\r\nimport { getTerminalVersion } from 'utils/v1/terminals'\r\n\r\nimport useSubgraphQuery from 'hooks/SubgraphQuery'\r\nimport { Trans } from '@lingui/macro'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { v2ProjectRoute } from 'utils/routes'\r\n\r\nimport ProjectLogo from './ProjectLogo'\r\nimport ETHAmount from './currency/ETHAmount'\r\nimport { V1ArchivedProjectIds } from '../constants/v1/archivedProjects'\r\nimport Loading from './Loading'\r\nimport { V2ArchivedProjectIds } from 'constants/v2/archivedProjects'\r\n\r\nexport type ProjectCardProject = Pick<\r\n  Project,\r\n  | 'id'\r\n  | 'handle'\r\n  | 'metadataUri'\r\n  | 'totalPaid'\r\n  | 'createdAt'\r\n  | 'terminal'\r\n  | 'projectId'\r\n  | 'cv'\r\n>\r\n\r\nexport default function ProjectCard({\r\n  project,\r\n}: {\r\n  project?: ProjectCardProject | BigNumber\r\n}) {\r\n  const {\r\n    theme: { colors, radii },\r\n  } = useContext(ThemeContext)\r\n\r\n  const cardStyle: CSSProperties = {\r\n    display: 'flex',\r\n    position: 'relative',\r\n    alignItems: 'center',\r\n    whiteSpace: 'pre',\r\n    overflow: 'hidden',\r\n    padding: '25px 20px',\r\n  }\r\n\r\n  // Get ProjectCardProject object if this component was passed a projectId (bigNumber)\r\n  const projectQuery: ProjectCardProject[] | undefined = useSubgraphQuery(\r\n    BigNumber.isBigNumber(project)\r\n      ? {\r\n          entity: 'project',\r\n          keys: [\r\n            'id',\r\n            'handle',\r\n            'metadataUri',\r\n            'totalPaid',\r\n            'createdAt',\r\n            'terminal',\r\n            'projectId',\r\n            'cv',\r\n          ],\r\n          where: {\r\n            key: 'projectId',\r\n            value: project.toString(),\r\n          },\r\n        }\r\n      : null,\r\n  ).data\r\n\r\n  // Must use any to convert (ProjectCardProject | bigNumber) to ProjectCardProject\r\n  const projectObj: any = project // eslint-disable-line @typescript-eslint/no-explicit-any\r\n  let _project: ProjectCardProject\r\n\r\n  // If we were given projectId (BN) and therefore projectQuery returned something,\r\n  // we assign _project to that. Otherwise assign it to the initial\r\n  // project passed to this component which must be ProjectCardProject\r\n  if (projectQuery?.length) {\r\n    _project = projectQuery[0]\r\n  } else {\r\n    _project = projectObj\r\n  }\r\n\r\n  const { data: metadata } = useProjectMetadata(_project?.metadataUri)\r\n  // If the total paid is greater than 0, but less than 10 ETH, show two decimal places.\r\n  const precision =\r\n    _project?.totalPaid?.gt(0) && _project?.totalPaid.lt(constants.WeiPerEther)\r\n      ? 2\r\n      : 0\r\n\r\n  const terminalVersion = getTerminalVersion(_project?.terminal)\r\n\r\n  const isArchived =\r\n    ((_project.cv === '1' || _project.cv === '1.1') &&\r\n      V1ArchivedProjectIds.includes(_project.projectId)) ||\r\n    (_project.cv === '2' &&\r\n      V2ArchivedProjectIds.includes(_project.projectId)) ||\r\n    metadata?.archived\r\n\r\n  return (\r\n    <Link\r\n      style={{\r\n        borderRadius: radii.lg,\r\n        cursor: 'pointer',\r\n        overflow: 'hidden',\r\n      }}\r\n      key={`${_project.id}_${_project.cv}`}\r\n      to={\r\n        _project.cv === '2'\r\n          ? v2ProjectRoute(_project)\r\n          : `/p/${_project?.handle}`\r\n      }\r\n    >\r\n      <div style={cardStyle} className=\"clickable-border\">\r\n        <div style={{ marginRight: 20 }}>\r\n          <ProjectLogo\r\n            uri={metadata?.logoUri}\r\n            name={metadata?.name}\r\n            size={110}\r\n          />\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            flex: 1,\r\n            minWidth: 0,\r\n            fontWeight: 400,\r\n          }}\r\n        >\r\n          {metadata ? (\r\n            <h2\r\n              style={{\r\n                color: colors.text.primary,\r\n                margin: 0,\r\n                overflow: 'hidden',\r\n                textOverflow: 'ellipsis',\r\n                fontSize: 21,\r\n              }}\r\n            >\r\n              {metadata.name}\r\n            </h2>\r\n          ) : (\r\n            <Skeleton paragraph={false} title={{ width: 120 }} active />\r\n          )}\r\n\r\n          <div>\r\n            {_project?.handle && (\r\n              <span\r\n                style={{\r\n                  color: colors.text.primary,\r\n                  fontWeight: 500,\r\n                  marginRight: 10,\r\n                }}\r\n              >\r\n                @{_project?.handle}\r\n              </span>\r\n            )}\r\n            <span\r\n              style={{\r\n                color: colors.text.tertiary,\r\n                fontSize: '0.7rem',\r\n                fontWeight: 500,\r\n              }}\r\n            >\r\n              V{terminalVersion ?? _project.cv}\r\n            </span>\r\n          </div>\r\n\r\n          <div>\r\n            <span style={{ color: colors.text.primary, fontWeight: 500 }}>\r\n              <ETHAmount amount={_project?.totalPaid} precision={precision} />{' '}\r\n            </span>\r\n\r\n            <span style={{ color: colors.text.secondary }}>\r\n              since{' '}\r\n              {!!_project?.createdAt &&\r\n                formatDate(_project?.createdAt * 1000, 'yyyy-MM-DD')}\r\n            </span>\r\n          </div>\r\n\r\n          {metadata?.description && (\r\n            <Tooltip title={metadata.description} placement=\"bottom\">\r\n              <div\r\n                style={{\r\n                  maxHeight: 20,\r\n                  color: colors.text.tertiary,\r\n                  overflow: 'hidden',\r\n                  textOverflow: 'ellipsis',\r\n                }}\r\n              >\r\n                {metadata.description}\r\n              </div>\r\n            </Tooltip>\r\n          )}\r\n        </div>\r\n\r\n        {isArchived && (\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              top: 0,\r\n              right: 0,\r\n              padding: '2px 4px',\r\n              background: colors.background.l1,\r\n              fontSize: '0.7rem',\r\n              color: colors.text.tertiary,\r\n              fontWeight: 500,\r\n            }}\r\n          >\r\n            <Trans>ARCHIVED</Trans>\r\n          </div>\r\n        )}\r\n\r\n        {!metadata && <Loading />}\r\n      </div>\r\n    </Link>\r\n  )\r\n}\r\n","import { InfoCircleOutlined } from '@ant-design/icons'\r\nimport Grid from 'components/Grid'\r\nimport Loading from 'components/Loading'\r\nimport { useTrendingProjects } from 'hooks/Projects'\r\n\r\nimport RankingExplanation from './RankingExplanation'\r\nimport TrendingProjectCard from './TrendingProjectCard'\r\n\r\nexport default function TrendingProjects({\r\n  count, // number of trending project cards to show\r\n  trendingWindowDays,\r\n}: {\r\n  count: number\r\n  trendingWindowDays: number\r\n}) {\r\n  const { data: projects, isLoading } = useTrendingProjects(\r\n    count,\r\n    trendingWindowDays,\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      {projects && projects.length > 0 && (\r\n        <Grid>\r\n          {projects.map((p, i) => (\r\n            <TrendingProjectCard\r\n              project={p}\r\n              size={'lg'}\r\n              rank={i + 1}\r\n              key={`${p.id}_${p.cv}`}\r\n              trendingWindowDays={trendingWindowDays}\r\n            />\r\n          ))}\r\n        </Grid>\r\n      )}\r\n\r\n      {(!projects?.length || isLoading) && (\r\n        <div style={{ marginTop: 40 }}>\r\n          <Loading />\r\n        </div>\r\n      )}\r\n\r\n      <p style={{ marginBottom: 40, marginTop: 40, maxWidth: 800 }}>\r\n        <InfoCircleOutlined />{' '}\r\n        <RankingExplanation trendingWindow={trendingWindowDays} />\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n","import { t } from '@lingui/macro'\r\nimport { Space } from 'antd'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { ProjectCategory } from 'models/project-visibility'\r\nimport { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst TAB_TYPE_NAMES: { [k in ProjectCategory]: string } = {\r\n  all: t`All`,\r\n  holdings: t`Holdings`,\r\n  myprojects: t`My Projects`,\r\n  trending: t`Trending`,\r\n}\r\n\r\nexport default function ProjectsTabs({\r\n  selectedTab,\r\n}: {\r\n  selectedTab: ProjectCategory\r\n}) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  const Tab = ({ type }: { type: ProjectCategory }) => {\r\n    return (\r\n      <Link\r\n        to={`/projects?tab=${type}`}\r\n        style={{\r\n          textTransform: 'uppercase',\r\n          cursor: 'pointer',\r\n          borderBottom: '2px solid transparent',\r\n          paddingBottom: 6,\r\n          fontWeight: 500,\r\n          ...(type === selectedTab\r\n            ? {\r\n                color: colors.text.primary,\r\n                borderColor: colors.text.primary,\r\n              }\r\n            : {\r\n                color: colors.text.secondary,\r\n                borderColor: 'transparent',\r\n              }),\r\n        }}\r\n      >\r\n        {TAB_TYPE_NAMES[type]}\r\n      </Link>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: 40, marginTop: 15 }}>\r\n      <Space direction=\"horizontal\" size=\"large\">\r\n        <Tab type=\"trending\" />\r\n        <Tab type=\"holdings\" />\r\n        <Tab type=\"myprojects\" />\r\n        <Tab type=\"all\" />\r\n      </Space>\r\n    </div>\r\n  )\r\n}\r\n","import { t, Trans } from '@lingui/macro'\r\nimport Grid from 'components/Grid'\r\nimport Loading from 'components/Loading'\r\nimport ProjectCard from 'components/ProjectCard'\r\nimport { NetworkContext } from 'contexts/networkContext'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { useHoldingsProjectsQuery } from 'hooks/Projects'\r\nimport React, { useContext } from 'react'\r\nimport { InfoCircleOutlined } from '@ant-design/icons'\r\n\r\nexport default function HoldingsProjects() {\r\n  const { userAddress } = useContext(NetworkContext)\r\n\r\n  const { data: projects, isLoading } = useHoldingsProjectsQuery(userAddress)\r\n\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  if (!userAddress) {\r\n    return (\r\n      <div\r\n        style={{\r\n          textAlign: 'center',\r\n          padding: 20,\r\n        }}\r\n        hidden={isLoading}\r\n      >\r\n        <Trans>Connect your wallet to see your holdings.</Trans>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {projects && projects.length > 0 && (\r\n        <Grid>\r\n          {projects.map(p => (\r\n            <ProjectCard key={`${p.id}_${p.cv}`} project={p} />\r\n          ))}\r\n        </Grid>\r\n      )}\r\n\r\n      {!isLoading &&\r\n        projects &&\r\n        (projects.length === 0 ? (\r\n          <div\r\n            style={{\r\n              textAlign: 'center',\r\n              color: colors.text.disabled,\r\n              padding: 20,\r\n            }}\r\n            hidden={isLoading}\r\n          >\r\n            <Trans>You don't hold tokens for any Juicebox project.</Trans>\r\n          </div>\r\n        ) : (\r\n          <div\r\n            style={{\r\n              textAlign: 'center',\r\n              color: colors.text.disabled,\r\n              padding: 20,\r\n            }}\r\n          >\r\n            {projects.length} {projects.length === 1 ? t`project` : t`projects`}{' '}\r\n          </div>\r\n        ))}\r\n\r\n      {isLoading && (\r\n        <div style={{ marginTop: 40 }}>\r\n          <Loading />\r\n        </div>\r\n      )}\r\n\r\n      {projects?.length !== 0 && (\r\n        <p style={{ marginBottom: 40, marginTop: 40, maxWidth: 800 }}>\r\n          <InfoCircleOutlined />{' '}\r\n          <Trans>Projects that you hold tokens for.</Trans>\r\n        </p>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import { Trans } from '@lingui/macro'\r\nimport { Checkbox } from 'antd'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { CSSProperties, useContext } from 'react'\r\n\r\nimport { CheckboxOnChange } from './ProjectsFilterAndSort'\r\n\r\nexport default function FilterCheckboxItem({\r\n  label,\r\n  checked,\r\n  onChange,\r\n  disabled,\r\n}: {\r\n  label: string\r\n  checked: boolean\r\n  onChange: CheckboxOnChange\r\n  disabled?: boolean\r\n}) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  const filterDropdownItemStyles: CSSProperties = {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    height: 40,\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        ...filterDropdownItemStyles,\r\n        color: disabled ? colors.text.tertiary : '',\r\n        cursor: 'pointer',\r\n      }}\r\n      onClick={() => onChange(!checked)}\r\n    >\r\n      <Checkbox\r\n        style={{ marginRight: 10 }}\r\n        checked={checked}\r\n        onChange={() => onChange(!checked)}\r\n        disabled={disabled}\r\n      />\r\n      <Trans>{label}</Trans>\r\n    </div>\r\n  )\r\n}\r\n","import { t, Trans } from '@lingui/macro'\r\nimport { Collapse, Select } from 'antd'\r\nimport CollapsePanel from 'antd/lib/collapse/CollapsePanel'\r\nimport { CSSProperties, useContext, useEffect, useState } from 'react'\r\n\r\nimport { FilterOutlined } from '@ant-design/icons'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\n\r\nimport FilterCheckboxItem from './FilterCheckboxItem'\r\n\r\ntype OrderByOption = 'createdAt' | 'totalPaid'\r\n\r\nexport type CheckboxOnChange = (checked: boolean) => void\r\n\r\nexport default function ProjectsFilterAndSort({\r\n  includeV1,\r\n  setIncludeV1,\r\n  includeV1_1,\r\n  setIncludeV1_1,\r\n  includeV2,\r\n  setIncludeV2,\r\n  showArchived,\r\n  setShowArchived,\r\n  orderBy,\r\n  setOrderBy,\r\n}: {\r\n  includeV1: boolean\r\n  setIncludeV1: CheckboxOnChange\r\n  includeV1_1: boolean\r\n  setIncludeV1_1: CheckboxOnChange\r\n  includeV2: boolean\r\n  setIncludeV2: CheckboxOnChange\r\n  showArchived: boolean\r\n  setShowArchived: CheckboxOnChange\r\n  orderBy: OrderByOption\r\n  setOrderBy: any // eslint-disable-line @typescript-eslint/no-explicit-any\r\n}) {\r\n  const {\r\n    theme: { colors },\r\n    isDarkMode,\r\n  } = useContext(ThemeContext)\r\n\r\n  const [activeKey, setActiveKey] = useState<0 | undefined>()\r\n\r\n  const filterCollapseStyle: CSSProperties = {\r\n    border: 'none',\r\n    marginTop: 0,\r\n    marginBottom: 0,\r\n    marginRight: 15,\r\n  }\r\n\r\n  // Close collapse when clicking anywhere in the window except the collapse items\r\n  useEffect(() => {\r\n    function handleClick() {\r\n      setActiveKey(undefined)\r\n    }\r\n    window.addEventListener('click', handleClick)\r\n    return () => window.removeEventListener('click', handleClick)\r\n  }, [])\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        whiteSpace: 'pre',\r\n        flexWrap: 'wrap',\r\n        maxWidth: '100vw',\r\n      }}\r\n    >\r\n      <Collapse\r\n        className={`projects-filter-collapse ${isDarkMode ? 'dark' : ''}`}\r\n        style={filterCollapseStyle}\r\n        activeKey={activeKey}\r\n      >\r\n        <CollapsePanel\r\n          style={{\r\n            border: 'none',\r\n          }}\r\n          key={0}\r\n          showArrow={false}\r\n          header={\r\n            <span\r\n              style={{ color: colors.text.secondary }}\r\n              onClick={e => {\r\n                setActiveKey(activeKey === 0 ? undefined : 0)\r\n                e.stopPropagation()\r\n              }}\r\n            >\r\n              <FilterOutlined />{' '}\r\n              <label style={{ cursor: 'pointer' }}>Filter</label>\r\n            </span>\r\n          }\r\n        >\r\n          {/* onClick: Do not close collapse when clicking its items*/}\r\n          <div onClick={e => e.stopPropagation()}>\r\n            <FilterCheckboxItem\r\n              label={t`V1`}\r\n              checked={includeV1}\r\n              onChange={setIncludeV1}\r\n            />\r\n            <FilterCheckboxItem\r\n              label={t`V1.1`}\r\n              checked={includeV1_1}\r\n              onChange={setIncludeV1_1}\r\n            />\r\n            <FilterCheckboxItem\r\n              label={t`V2`}\r\n              checked={includeV2}\r\n              onChange={setIncludeV2}\r\n            />\r\n            <FilterCheckboxItem\r\n              label={t`Archived`}\r\n              checked={showArchived}\r\n              onChange={setShowArchived}\r\n            />\r\n          </div>\r\n        </CollapsePanel>\r\n      </Collapse>\r\n\r\n      <Select\r\n        value={orderBy}\r\n        onChange={setOrderBy}\r\n        style={{\r\n          width: 180,\r\n          marginTop: 10,\r\n          marginBottom: 10,\r\n        }}\r\n      >\r\n        <Select.Option value=\"totalPaid\">\r\n          <Trans>Total raised</Trans>\r\n        </Select.Option>\r\n        <Select.Option value=\"createdAt\">\r\n          <Trans>Date created</Trans>\r\n        </Select.Option>\r\n      </Select>\r\n    </div>\r\n  )\r\n}\r\n","import { InfoCircleOutlined } from '@ant-design/icons'\r\nimport { t, Trans } from '@lingui/macro'\r\nimport { Tooltip } from 'antd'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { useContext } from 'react'\r\n\r\nexport default function ArchivedProjectsMessage({\r\n  hidden,\r\n}: {\r\n  hidden: boolean\r\n}) {\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  if (!hidden) {\r\n    return (\r\n      <p style={{ marginBottom: 40, marginTop: 20, maxWidth: 800 }}>\r\n        <Trans>\r\n          <InfoCircleOutlined /> Archived projects have not been modified or\r\n          deleted on the blockchain, and can still be interacted with directly\r\n          through the Juicebox contracts.\r\n        </Trans>\r\n        <Tooltip\r\n          title={t`A project can be archived by its owner from the tools menu on the project page.`}\r\n        >\r\n          <span\r\n            style={{\r\n              color: colors.text.action.primary,\r\n              fontWeight: 500,\r\n              cursor: 'default',\r\n            }}\r\n          >\r\n            {' '}\r\n            <Trans>How do I archive a project?</Trans>\r\n          </span>\r\n        </Tooltip>\r\n      </p>\r\n    )\r\n  }\r\n  return null\r\n}\r\n","import { InfoCircleOutlined } from '@ant-design/icons'\r\nimport { t, Trans } from '@lingui/macro'\r\nimport { Button } from 'antd'\r\nimport Grid from 'components/Grid'\r\nimport Loading from 'components/Loading'\r\nimport ProjectCard from 'components/ProjectCard'\r\nimport { NetworkContext } from 'contexts/networkContext'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\nimport { useMyProjectsQuery } from 'hooks/Projects'\r\nimport { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function MyProjects() {\r\n  const { userAddress } = useContext(NetworkContext)\r\n\r\n  const { data: projects, isLoading } = useMyProjectsQuery(userAddress)\r\n\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div style={{ marginTop: 40 }}>\r\n        <Loading />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (!userAddress) {\r\n    return (\r\n      <div\r\n        style={{\r\n          textAlign: 'center',\r\n          padding: 20,\r\n        }}\r\n      >\r\n        <Trans>Connect your wallet to see your projects.</Trans>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {projects && projects.length > 0 && (\r\n        <Grid>\r\n          {projects.map(p => (\r\n            <ProjectCard key={`${p.id}_${p.cv}`} project={p} />\r\n          ))}\r\n        </Grid>\r\n      )}\r\n\r\n      {projects &&\r\n        (projects.length === 0 ? (\r\n          <div\r\n            style={{\r\n              textAlign: 'center',\r\n              padding: 20,\r\n            }}\r\n          >\r\n            <p>\r\n              <Trans>You haven't created any projects yet.</Trans>\r\n            </p>\r\n\r\n            <Link to=\"/create\">\r\n              <Button type=\"primary\">\r\n                <Trans>Create project</Trans>\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div\r\n            style={{\r\n              textAlign: 'center',\r\n              color: colors.text.disabled,\r\n              padding: 20,\r\n            }}\r\n          >\r\n            {projects.length} {projects.length === 1 ? t`project` : t`projects`}{' '}\r\n          </div>\r\n        ))}\r\n\r\n      {projects?.length !== 0 && (\r\n        <p style={{ marginBottom: 40, marginTop: 40, maxWidth: 800 }}>\r\n          <InfoCircleOutlined /> <Trans>Projects that you have created.</Trans>\r\n        </p>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import { InfoCircleOutlined } from '@ant-design/icons'\r\nimport { t, Trans } from '@lingui/macro'\r\nimport { Button } from 'antd'\r\nimport Search from 'antd/lib/input/Search'\r\nimport FeedbackFormButton from 'components/FeedbackFormButton'\r\nimport Loading from 'components/Loading'\r\n\r\nimport { ProjectCategory } from 'models/project-visibility'\r\nimport React, { useContext, useEffect, useMemo, useRef, useState } from 'react'\r\n\r\nimport Grid from 'components/Grid'\r\nimport ProjectCard, { ProjectCardProject } from 'components/ProjectCard'\r\n\r\nimport { Link, useHistory, useLocation } from 'react-router-dom'\r\n\r\nimport { useInfiniteProjectsQuery, useProjectsSearch } from 'hooks/Projects'\r\n\r\nimport { NetworkContext } from 'contexts/networkContext'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\n\r\nimport { CV } from 'models/cv'\r\n\r\nimport { layouts } from 'constants/styles/layouts'\r\nimport TrendingProjects from './TrendingProjects'\r\nimport ProjectsTabs from './ProjectsTabs'\r\nimport HoldingsProjects from './HoldingsProjects'\r\nimport ProjectsFilterAndSort from './ProjectsFilterAndSort'\r\nimport ArchivedProjectsMessage from './ArchivedProjectsMessage'\r\nimport MyProjects from './MyProjects'\r\n\r\ntype OrderByOption = 'createdAt' | 'totalPaid'\r\n\r\nconst pageSize = 20\r\n\r\nconst defaultTab: ProjectCategory = 'trending'\r\n\r\nexport default function Projects() {\r\n  const [selectedTab, setSelectedTab] = useState<ProjectCategory>(defaultTab)\r\n\r\n  // Checks URL to see if tab has been set\r\n  const location = useLocation()\r\n  const history = useHistory()\r\n\r\n  const { userAddress } = useContext(NetworkContext)\r\n\r\n  const params = useMemo(\r\n    () => new URLSearchParams(location.search),\r\n    [location.search],\r\n  )\r\n\r\n  useEffect(() => {\r\n    setSelectedTab(() => {\r\n      switch (params.get('tab')) {\r\n        case 'trending':\r\n          return 'trending'\r\n        case 'all':\r\n          return 'all'\r\n        case 'holdings':\r\n          return 'holdings'\r\n        case 'myprojects':\r\n          return 'myprojects'\r\n        default:\r\n          return defaultTab\r\n      }\r\n    })\r\n  }, [userAddress, params])\r\n\r\n  const [searchText, setSearchText] = useState<string>(\r\n    params.get('search') ?? '',\r\n  )\r\n\r\n  const [orderBy, setOrderBy] = useState<OrderByOption>('totalPaid')\r\n  const [includeV1, setIncludeV1] = useState<boolean>(true)\r\n  const [includeV1_1, setIncludeV1_1] = useState<boolean>(true)\r\n  const [includeV2, setIncludeV2] = useState<boolean>(true)\r\n  const [showArchived, setShowArchived] = useState<boolean>(false)\r\n\r\n  const loadMoreContainerRef = useRef<HTMLDivElement>(null)\r\n\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(ThemeContext)\r\n\r\n  const cv: CV[] | undefined = useMemo(() => {\r\n    const _cv: CV[] = []\r\n    if (includeV1) _cv.push('1')\r\n    if (includeV1_1) _cv.push('1.1')\r\n    if (includeV2) _cv.push('2')\r\n    return _cv.length ? _cv : ['1', '1.1', '2']\r\n  }, [includeV1, includeV1_1, includeV2])\r\n\r\n  const {\r\n    data: pages,\r\n    isLoading: isLoadingProjects,\r\n    isFetchingNextPage,\r\n    hasNextPage,\r\n    fetchNextPage,\r\n  } = useInfiniteProjectsQuery({\r\n    orderBy,\r\n    pageSize,\r\n    orderDirection: 'desc',\r\n    state: showArchived ? 'archived' : 'active',\r\n    cv,\r\n  })\r\n\r\n  const { data: searchPages, isLoading: isLoadingSearch } =\r\n    useProjectsSearch(searchText)\r\n\r\n  // When we scroll within 200px of our loadMoreContainerRef, fetch the next page.\r\n  useEffect(() => {\r\n    if (loadMoreContainerRef.current && selectedTab !== 'trending') {\r\n      const observer = new IntersectionObserver(\r\n        entries => {\r\n          if (entries.find(e => e.isIntersecting) && hasNextPage) {\r\n            fetchNextPage()\r\n          }\r\n        },\r\n        {\r\n          rootMargin: '200px',\r\n        },\r\n      )\r\n      observer.observe(loadMoreContainerRef.current)\r\n\r\n      return () => observer.disconnect()\r\n    }\r\n  }, [selectedTab, fetchNextPage, hasNextPage])\r\n\r\n  const isLoading = isLoadingProjects || isLoadingSearch\r\n\r\n  const concatenatedPages = searchText?.length\r\n    ? searchPages\r\n    : pages?.pages?.reduce((prev, group) => [...prev, ...group], [])\r\n\r\n  return (\r\n    <div style={{ ...layouts.maxWidth }}>\r\n      <div style={{ marginBottom: 20 }}>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'baseline',\r\n          }}\r\n        >\r\n          <h1>\r\n            <Trans>Projects on Juicebox</Trans>\r\n          </h1>\r\n\r\n          <Link to=\"/create\">\r\n            <Button type=\"primary\" size=\"large\">\r\n              <Trans>Create project</Trans>\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n\r\n        <div>\r\n          <p style={{ maxWidth: 800, marginBottom: 20 }}>\r\n            <Trans>\r\n              <InfoCircleOutlined /> The Juicebox protocol is open to anyone,\r\n              and project configurations can vary widely. There are risks\r\n              associated with interacting with all projects on the protocol.\r\n              Projects built on the protocol are not endorsed or vetted by\r\n              JuiceboxDAO or Peel. Do your own research and understand the risks\r\n              before committing your funds.\r\n            </Trans>\r\n          </p>\r\n        </div>\r\n\r\n        <Search\r\n          autoFocus\r\n          style={{ flex: 1, marginBottom: 20, marginRight: 20 }}\r\n          prefix=\"@\"\r\n          placeholder={t`Search projects by handle`}\r\n          onSearch={val => {\r\n            setSearchText(val)\r\n            history.push(`/projects?tab=all${val ? `&search=${val}` : ''}`)\r\n          }}\r\n          defaultValue={searchText}\r\n          allowClear\r\n        />\r\n\r\n        <div\r\n          hidden={!!searchText}\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'flex-start',\r\n            flexWrap: 'wrap',\r\n            maxWidth: '100vw',\r\n          }}\r\n        >\r\n          <ProjectsTabs selectedTab={selectedTab} />\r\n\r\n          {selectedTab === 'all' ? (\r\n            <ProjectsFilterAndSort\r\n              includeV1={includeV1}\r\n              includeV1_1={includeV1_1}\r\n              includeV2={includeV2}\r\n              setIncludeV1={setIncludeV1}\r\n              setIncludeV1_1={setIncludeV1_1}\r\n              setIncludeV2={setIncludeV2}\r\n              showArchived={showArchived}\r\n              setShowArchived={setShowArchived}\r\n              orderBy={orderBy}\r\n              setOrderBy={setOrderBy}\r\n            />\r\n          ) : null}\r\n        </div>\r\n        <ArchivedProjectsMessage\r\n          hidden={!showArchived || selectedTab !== 'all'}\r\n        />\r\n      </div>\r\n\r\n      {selectedTab === 'all' ? (\r\n        <React.Fragment>\r\n          {concatenatedPages && (\r\n            <Grid>\r\n              {concatenatedPages.map(p => (\r\n                <ProjectCard\r\n                  key={`${p.id}_${p.cv}`}\r\n                  project={p as ProjectCardProject}\r\n                />\r\n              ))}\r\n            </Grid>\r\n          )}\r\n\r\n          {(isLoading || isFetchingNextPage) && <Loading />}\r\n\r\n          {/* Place a div below the grid that we can connect to an intersection observer */}\r\n          <div ref={loadMoreContainerRef} />\r\n\r\n          {hasNextPage &&\r\n          !isFetchingNextPage &&\r\n          (concatenatedPages?.length || 0) > pageSize ? (\r\n            <div\r\n              role=\"button\"\r\n              style={{\r\n                textAlign: 'center',\r\n                color: colors.text.secondary,\r\n                cursor: 'pointer',\r\n                padding: 20,\r\n              }}\r\n              onClick={() => fetchNextPage()}\r\n            >\r\n              <Trans>Load more</Trans>\r\n            </div>\r\n          ) : (\r\n            !isLoadingSearch &&\r\n            !isLoadingProjects && (\r\n              <div\r\n                style={{\r\n                  textAlign: 'center',\r\n                  color: colors.text.disabled,\r\n                  padding: 20,\r\n                  paddingTop: concatenatedPages?.length === 0 ? 0 : 20,\r\n                }}\r\n              >\r\n                {concatenatedPages?.length}{' '}\r\n                {concatenatedPages?.length === 1 ? t`project` : t`projects`}{' '}\r\n                {searchText ? t`matching \"${searchText}\"` : ''}\r\n              </div>\r\n            )\r\n          )}\r\n        </React.Fragment>\r\n      ) : selectedTab === 'holdings' ? (\r\n        <div style={{ paddingBottom: 50 }}>\r\n          <HoldingsProjects />\r\n        </div>\r\n      ) : selectedTab === 'myprojects' ? (\r\n        <div style={{ paddingBottom: 50 }}>\r\n          <MyProjects />\r\n        </div>\r\n      ) : selectedTab === 'trending' ? (\r\n        <div style={{ paddingBottom: 50 }}>\r\n          <TrendingProjects count={12} trendingWindowDays={7} />\r\n        </div>\r\n      ) : null}\r\n\r\n      <FeedbackFormButton />\r\n    </div>\r\n  )\r\n}\r\n","import { CurrencyContext } from 'contexts/currencyContext'\r\n\r\nimport React from 'react'\r\n\r\nimport { V1_CURRENCY_CONTEXT } from 'constants/v1/currency'\r\n\r\nexport const V1CurrencyProvider: React.FC = ({ children }) => {\r\n  return (\r\n    <CurrencyContext.Provider value={V1_CURRENCY_CONTEXT}>\r\n      {children}\r\n    </CurrencyContext.Provider>\r\n  )\r\n}\r\n","import { NetworkName } from 'models/network-name'\r\nimport { ProjectType } from 'models/project-type'\r\n\r\nimport { readNetwork } from 'constants/networks'\r\nimport { V1_PROJECT_IDS } from './projectIds'\r\n\r\nconst { SHARK_DAO, SVSPOOL002, DEFI_DAO, CONSTITUTION_DAO } = V1_PROJECT_IDS\r\n\r\nconst projectTypesByNetwork: Partial<\r\n  Record<NetworkName, Record<number, ProjectType>>\r\n> = {\r\n  [NetworkName.mainnet]: {\r\n    [SHARK_DAO]: 'bidpool',\r\n    [SVSPOOL002]: 'bidpool',\r\n    [DEFI_DAO]: 'bidpool',\r\n    [CONSTITUTION_DAO]: 'bidpool',\r\n  },\r\n  [NetworkName.rinkeby]: {\r\n    12: 'bidpool',\r\n  },\r\n}\r\n\r\nexport const projectTypes = projectTypesByNetwork[readNetwork.name] ?? {}\r\n","import FeedbackFormButton from 'components/FeedbackFormButton'\r\nimport ScrollToTopButton from 'components/ScrollToTopButton'\r\n\r\nimport {\r\n  V1ProjectContext,\r\n  V1ProjectContextType,\r\n} from 'contexts/v1/projectContext'\r\nimport { useProjectMetadata } from 'hooks/ProjectMetadata'\r\nimport { useProjectsQuery } from 'hooks/Projects'\r\nimport useBalanceOfProject from 'hooks/v1/contractReader/BalanceOfProject'\r\nimport useCurrentFundingCycleOfProject from 'hooks/v1/contractReader/CurrentFundingCycleOfProject'\r\nimport useCurrentPayoutModsOfProject from 'hooks/v1/contractReader/CurrentPayoutModsOfProject'\r\nimport useCurrentTicketModsOfProject from 'hooks/v1/contractReader/CurrentTicketModsOfProject'\r\nimport useOverflowOfProject from 'hooks/v1/contractReader/OverflowOfProject'\r\nimport useProjectIdForHandle from 'hooks/v1/contractReader/ProjectIdForHandle'\r\nimport useQueuedFundingCycleOfProject from 'hooks/v1/contractReader/QueuedFundingCycleOfProject'\r\nimport useQueuedPayoutModsOfProject from 'hooks/v1/contractReader/QueuedPayoutModsOfProject'\r\nimport useQueuedTicketModsOfProject from 'hooks/v1/contractReader/QueuedTicketModsOfProject'\r\nimport useSymbolOfERC20 from 'hooks/SymbolOfERC20'\r\nimport useTerminalOfProject from 'hooks/v1/contractReader/TerminalOfProject'\r\nimport useTokenAddressOfProject from 'hooks/v1/contractReader/TokenAddressOfProject'\r\nimport useUriOfProject from 'hooks/v1/contractReader/UriOfProject'\r\nimport { useCurrencyConverter } from 'hooks/CurrencyConverter'\r\nimport { V1CurrencyOption } from 'models/v1/currencyOption'\r\nimport { useMemo } from 'react'\r\nimport { useLocation, useParams } from 'react-router-dom'\r\nimport { getTerminalName, getTerminalVersion } from 'utils/v1/terminals'\r\nimport { V1CurrencyProvider } from 'providers/v1/V1CurrencyProvider'\r\nimport { V1CurrencyName } from 'utils/v1/currency'\r\nimport NewDeployNotAvailable from 'components/NewDeployNotAvailable'\r\nimport Project404 from 'components/Project404'\r\nimport { usePageTitle } from 'hooks/PageTitle'\r\n\r\nimport useOwnerOfProject from 'hooks/v1/contractReader/OwnerOfProject'\r\n\r\nimport { layouts } from 'constants/styles/layouts'\r\nimport { projectTypes } from 'constants/v1/projectTypes'\r\nimport { V1ArchivedProjectIds } from 'constants/v1/archivedProjects'\r\n\r\nimport Loading from '../../components/Loading'\r\nimport V1Project from '../../components/v1/V1Project'\r\n\r\nexport default function V1Dashboard() {\r\n  const { handle }: { handle?: string } = useParams()\r\n  // Checks URL to see if user was just directed from project deploy\r\n  const location = useLocation()\r\n  const params = new URLSearchParams(location.search)\r\n  const isNewDeploy = Boolean(params.get('newDeploy'))\r\n\r\n  const projectId = useProjectIdForHandle(handle)\r\n  const owner = useOwnerOfProject(projectId)\r\n  const terminalAddress = useTerminalOfProject(projectId)\r\n  const terminalName = getTerminalName({\r\n    address: terminalAddress,\r\n  })\r\n  const terminalVersion = getTerminalVersion(terminalAddress)\r\n  const currentFC = useCurrentFundingCycleOfProject(\r\n    projectId?.toNumber(),\r\n    terminalName,\r\n  )\r\n  const queuedFC = useQueuedFundingCycleOfProject(projectId)\r\n  const currentPayoutMods = useCurrentPayoutModsOfProject(\r\n    projectId,\r\n    currentFC?.configured,\r\n  )\r\n  const queuedPayoutMods = useQueuedPayoutModsOfProject(\r\n    projectId,\r\n    queuedFC?.configured,\r\n  )\r\n  const currentTicketMods = useCurrentTicketModsOfProject(\r\n    projectId,\r\n    currentFC?.configured,\r\n  )\r\n  const queuedTicketMods = useQueuedTicketModsOfProject(\r\n    projectId,\r\n    queuedFC?.configured,\r\n  )\r\n  const tokenAddress = useTokenAddressOfProject(projectId)\r\n  const tokenSymbol = useSymbolOfERC20(tokenAddress)\r\n  const balance = useBalanceOfProject(projectId?.toNumber(), terminalName)\r\n  const converter = useCurrencyConverter()\r\n  const balanceInCurrency = useMemo(\r\n    () =>\r\n      balance &&\r\n      converter.wadToCurrency(\r\n        balance,\r\n        V1CurrencyName(currentFC?.currency.toNumber() as V1CurrencyOption),\r\n        'ETH',\r\n      ),\r\n    [balance, converter, currentFC],\r\n  )\r\n  const overflow = useOverflowOfProject(projectId, terminalName)\r\n  const uri = useUriOfProject(projectId)\r\n  const { data: metadata } = useProjectMetadata(uri)\r\n\r\n  usePageTitle({\r\n    title: metadata?.name ? `${metadata.name} | Juicebox` : undefined,\r\n  })\r\n\r\n  const { data: projects } = useProjectsQuery({\r\n    projectId: projectId?.toNumber(),\r\n    keys: ['createdAt', 'totalPaid'],\r\n  })\r\n\r\n  const createdAt = projects?.[0]?.createdAt\r\n  const earned = projects?.[0]?.totalPaid\r\n\r\n  const project = useMemo<V1ProjectContextType>(() => {\r\n    const projectType = projectId\r\n      ? projectTypes[projectId.toNumber()]\r\n      : 'standard'\r\n    const isPreviewMode = false\r\n    const isArchived = projectId\r\n      ? V1ArchivedProjectIds.includes(projectId.toNumber()) ||\r\n        metadata?.archived\r\n      : false\r\n\r\n    return {\r\n      createdAt,\r\n      projectId: projectId?.toNumber(),\r\n      projectType,\r\n      owner,\r\n      earned,\r\n      handle,\r\n      metadata,\r\n      currentFC,\r\n      queuedFC,\r\n      currentPayoutMods,\r\n      currentTicketMods,\r\n      queuedPayoutMods,\r\n      queuedTicketMods,\r\n      tokenAddress,\r\n      tokenSymbol,\r\n      balance,\r\n      balanceInCurrency,\r\n      overflow,\r\n      isPreviewMode,\r\n      isArchived,\r\n      cv: terminalVersion,\r\n      terminal: {\r\n        address: terminalAddress,\r\n        name: terminalName,\r\n        version: terminalVersion,\r\n      },\r\n    }\r\n  }, [\r\n    balance,\r\n    balanceInCurrency,\r\n    overflow,\r\n    createdAt,\r\n    currentFC,\r\n    currentPayoutMods,\r\n    currentTicketMods,\r\n    earned,\r\n    handle,\r\n    metadata,\r\n    owner,\r\n    projectId,\r\n    queuedFC,\r\n    queuedPayoutMods,\r\n    queuedTicketMods,\r\n    tokenAddress,\r\n    tokenSymbol,\r\n    terminalVersion,\r\n    terminalName,\r\n    terminalAddress,\r\n  ])\r\n\r\n  if (!projectId) return <Loading />\r\n\r\n  if (projectId?.eq(0)) {\r\n    if (isNewDeploy) {\r\n      return <NewDeployNotAvailable handleOrId={handle} />\r\n    }\r\n    return <Project404 projectId={handle} />\r\n  }\r\n\r\n  if (!projectId || !handle || !metadata) return null\r\n\r\n  return (\r\n    <V1ProjectContext.Provider value={project}>\r\n      <V1CurrencyProvider>\r\n        <div style={layouts.maxWidth}>\r\n          <V1Project />\r\n          <div style={{ textAlign: 'center', padding: 20 }}>\r\n            <ScrollToTopButton />\r\n          </div>\r\n          <FeedbackFormButton projectHandle={handle} />\r\n        </div>\r\n      </V1CurrencyProvider>\r\n    </V1ProjectContext.Provider>\r\n  )\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { formatBytes32String } from '@ethersproject/strings'\r\n\r\nimport { V1ContractName } from 'models/v1/contracts'\r\nimport { normalizeHandle } from 'utils/formatHandle'\r\n\r\nimport useContractReader from './ContractReader'\r\n\r\n/** Returns ID of project with `handle`. */\r\nexport default function useProjectIdForHandle(handle: string | undefined) {\r\n  return useContractReader<BigNumber>({\r\n    contract: V1ContractName.Projects,\r\n    functionName: 'projectFor',\r\n    args: handle ? [formatBytes32String(normalizeHandle(handle))] : null,\r\n  })\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { V1ContractName } from 'models/v1/contracts'\r\nimport { V1FundingCycle } from 'models/v1/fundingCycle'\r\nimport { V1TerminalName } from 'models/v1/terminals'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { deepEqFundingCycles } from 'utils/v1/deepEqFundingCycles'\r\n\r\nimport useContractReader from './ContractReader'\r\n\r\n/** Returns current funding cycle for project. */\r\nexport default function useCurrentFundingCycleOfProject(\r\n  projectId: number | undefined,\r\n  terminalName: V1TerminalName | undefined,\r\n) {\r\n  return useContractReader<V1FundingCycle>({\r\n    contract: V1ContractName.FundingCycles,\r\n    functionName: 'currentOf',\r\n    args: projectId ? [BigNumber.from(projectId).toHexString()] : null,\r\n    valueDidChange: useCallback((a, b) => !deepEqFundingCycles(a, b), []),\r\n    updateOn: useMemo(\r\n      () =>\r\n        projectId\r\n          ? [\r\n              {\r\n                contract: V1ContractName.FundingCycles,\r\n                eventName: 'Configure',\r\n                topics: [[], BigNumber.from(projectId).toHexString()],\r\n              },\r\n              {\r\n                contract: terminalName,\r\n                eventName: 'Pay',\r\n                topics: [[], BigNumber.from(projectId).toHexString()],\r\n              },\r\n              {\r\n                contract: terminalName,\r\n                eventName: 'Tap',\r\n                topics: [[], BigNumber.from(projectId).toHexString()],\r\n              },\r\n            ]\r\n          : undefined,\r\n      [projectId, terminalName],\r\n    ),\r\n  })\r\n}\r\n","import { BigNumber, BigNumberish } from '@ethersproject/bignumber'\r\nimport { V1ContractName } from 'models/v1/contracts'\r\nimport { V1FundingCycle } from 'models/v1/fundingCycle'\r\n\r\nimport useContractReader from './ContractReader'\r\n\r\n/** Returns queued funding cycle for project. */\r\nexport default function useQueuedFundingCycleOfProject(\r\n  projectId: BigNumberish | undefined,\r\n) {\r\n  return useContractReader<V1FundingCycle>({\r\n    contract: V1ContractName.FundingCycles,\r\n    functionName: 'queuedOf',\r\n    args: projectId ? [BigNumber.from(projectId).toHexString()] : null,\r\n    updateOn: projectId\r\n      ? [\r\n          {\r\n            contract: V1ContractName.FundingCycles,\r\n            eventName: 'Configure',\r\n            topics: [[], BigNumber.from(projectId).toHexString()],\r\n          },\r\n        ]\r\n      : undefined,\r\n  })\r\n}\r\n","import { BigNumber, BigNumberish } from '@ethersproject/bignumber'\r\nimport { V1ContractName } from 'models/v1/contracts'\r\nimport { PayoutMod } from 'models/mods'\r\nimport { useMemo } from 'react'\r\n\r\nimport useContractReader from './ContractReader'\r\n\r\n/** Returns current payout mods for project with `projectId`. `currentConfigured`: configured property of current funding cycle. */\r\nexport default function useCurrentPayoutModsOfProject(\r\n  projectId: BigNumberish | undefined,\r\n  currentConfigured: BigNumberish | undefined,\r\n) {\r\n  return useContractReader<PayoutMod[]>({\r\n    contract: V1ContractName.ModStore,\r\n    functionName: 'payoutModsOf',\r\n    args:\r\n      projectId && currentConfigured\r\n        ? [\r\n            BigNumber.from(projectId).toHexString(),\r\n            BigNumber.from(currentConfigured).toHexString(),\r\n          ]\r\n        : null,\r\n    updateOn: useMemo(\r\n      () =>\r\n        projectId && currentConfigured\r\n          ? [\r\n              {\r\n                contract: V1ContractName.ModStore,\r\n                eventName: 'SetPayoutMod',\r\n                topics: [\r\n                  BigNumber.from(projectId).toHexString(),\r\n                  BigNumber.from(currentConfigured).toHexString(),\r\n                ],\r\n              },\r\n            ]\r\n          : [],\r\n      [projectId, currentConfigured],\r\n    ),\r\n  })\r\n}\r\n","import { BigNumber, BigNumberish } from '@ethersproject/bignumber'\r\nimport { V1ContractName } from 'models/v1/contracts'\r\nimport { PayoutMod } from 'models/mods'\r\nimport { useMemo } from 'react'\r\n\r\nimport useContractReader from './ContractReader'\r\n\r\n/** Returns queued payout mods for project with `projectId`. `queuedConfigured`: configured property of queued funding cycle. */\r\nexport default function useQueuedPayoutModsOfProject(\r\n  projectId: BigNumberish | undefined,\r\n  queuedConfigured: BigNumberish | undefined,\r\n) {\r\n  return useContractReader<PayoutMod[]>({\r\n    contract: V1ContractName.ModStore,\r\n    functionName: 'payoutModsOf',\r\n    args:\r\n      projectId && queuedConfigured\r\n        ? [\r\n            BigNumber.from(projectId).toHexString(),\r\n            BigNumber.from(queuedConfigured).toHexString(),\r\n          ]\r\n        : null,\r\n    updateOn: useMemo(\r\n      () =>\r\n        projectId && queuedConfigured\r\n          ? [\r\n              {\r\n                contract: V1ContractName.ModStore,\r\n                eventName: 'SetPayoutMod',\r\n                topics: [\r\n                  BigNumber.from(projectId).toHexString(),\r\n                  BigNumber.from(queuedConfigured).toHexString(),\r\n                ],\r\n              },\r\n            ]\r\n          : [],\r\n      [projectId, queuedConfigured],\r\n    ),\r\n  })\r\n}\r\n","import { BigNumber, BigNumberish } from '@ethersproject/bignumber'\r\nimport { V1ContractName } from 'models/v1/contracts'\r\nimport { TicketMod } from 'models/mods'\r\nimport { useMemo } from 'react'\r\n\r\nimport useContractReader from './ContractReader'\r\n\r\n/** Returns current ticket mods for project with `projectId`. `currentConfigured`: configured property of current funding cycle. */\r\nexport default function useCurrentTicketModsOfProject(\r\n  projectId: BigNumberish | undefined,\r\n  currentConfigured: BigNumberish | undefined,\r\n) {\r\n  return useContractReader<TicketMod[]>({\r\n    contract: V1ContractName.ModStore,\r\n    functionName: 'ticketModsOf',\r\n    args:\r\n      projectId && currentConfigured\r\n        ? [\r\n            BigNumber.from(projectId).toHexString(),\r\n            BigNumber.from(currentConfigured).toHexString(),\r\n          ]\r\n        : null,\r\n    updateOn: useMemo(\r\n      () =>\r\n        projectId && currentConfigured\r\n          ? [\r\n              {\r\n                contract: V1ContractName.ModStore,\r\n                eventName: 'SetTicketMod',\r\n                topics: [\r\n                  BigNumber.from(projectId).toHexString(),\r\n                  BigNumber.from(currentConfigured).toHexString(),\r\n                ],\r\n              },\r\n            ]\r\n          : [],\r\n      [projectId, currentConfigured],\r\n    ),\r\n  })\r\n}\r\n","import { BigNumber, BigNumberish } from '@ethersproject/bignumber'\r\nimport { V1ContractName } from 'models/v1/contracts'\r\nimport { TicketMod } from 'models/mods'\r\nimport { useMemo } from 'react'\r\n\r\nimport useContractReader from './ContractReader'\r\n\r\n/** Returns queued ticket mods for project with `projectId`. `queuedConfigured`: configured property of queued funding cycle. */\r\nexport default function useQueuedTicketModsOfProject(\r\n  projectId: BigNumberish | undefined,\r\n  queuedConfigured: BigNumberish | undefined,\r\n) {\r\n  return useContractReader<TicketMod[]>({\r\n    contract: V1ContractName.ModStore,\r\n    functionName: 'ticketModsOf',\r\n    args:\r\n      projectId && queuedConfigured\r\n        ? [\r\n            BigNumber.from(projectId).toHexString(),\r\n            BigNumber.from(queuedConfigured).toHexString(),\r\n          ]\r\n        : null,\r\n    updateOn: useMemo(\r\n      () =>\r\n        projectId && queuedConfigured\r\n          ? [\r\n              {\r\n                contract: V1ContractName.ModStore,\r\n                eventName: 'SetTicketMod',\r\n                topics: [\r\n                  BigNumber.from(projectId).toHexString(),\r\n                  BigNumber.from(queuedConfigured).toHexString(),\r\n                ],\r\n              },\r\n            ]\r\n          : [],\r\n      [projectId, queuedConfigured],\r\n    ),\r\n  })\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { V1TerminalName } from 'models/v1/terminals'\r\nimport { useMemo } from 'react'\r\nimport { bigNumbersDiff } from 'utils/bigNumbers'\r\n\r\nimport useContractReader from './ContractReader'\r\n\r\n/** Returns balance in ETH of project with `projectId`. */\r\nexport default function useBalanceOfProject(\r\n  projectId: number | undefined,\r\n  terminalName: V1TerminalName | undefined,\r\n) {\r\n  return useContractReader<BigNumber>({\r\n    contract: terminalName,\r\n    functionName: 'balanceOf',\r\n    args: projectId ? [projectId] : null,\r\n    valueDidChange: bigNumbersDiff,\r\n    updateOn: useMemo(\r\n      () =>\r\n        projectId\r\n          ? [\r\n              {\r\n                contract: terminalName,\r\n                eventName: 'Pay',\r\n                topics: [[], BigNumber.from(projectId).toHexString()],\r\n              },\r\n              {\r\n                contract: terminalName,\r\n                eventName: 'Tap',\r\n                topics: [[], BigNumber.from(projectId).toHexString()],\r\n              },\r\n            ]\r\n          : undefined,\r\n      [projectId, terminalName],\r\n    ),\r\n  })\r\n}\r\n","import { BigNumber, BigNumberish } from '@ethersproject/bignumber'\r\nimport { V1TerminalName } from 'models/v1/terminals'\r\nimport { useMemo } from 'react'\r\nimport { bigNumbersDiff } from 'utils/bigNumbers'\r\n\r\nimport useContractReader from './ContractReader'\r\n\r\n/** Returns overflow in ETH of project with `projectId`. */\r\nexport default function useOverflowOfProject(\r\n  projectId: BigNumberish | undefined,\r\n  terminalName: V1TerminalName | undefined,\r\n) {\r\n  return useContractReader<BigNumber>({\r\n    contract: terminalName,\r\n    functionName: 'currentOverflowOf',\r\n    args: projectId ? [BigNumber.from(projectId).toHexString()] : null,\r\n    valueDidChange: bigNumbersDiff,\r\n    updateOn: useMemo(\r\n      () =>\r\n        projectId\r\n          ? [\r\n              {\r\n                contract: terminalName,\r\n                eventName: 'Pay',\r\n                topics: [[], BigNumber.from(projectId).toHexString()],\r\n              },\r\n              {\r\n                contract: terminalName,\r\n                eventName: 'Tap',\r\n                topics: [[], BigNumber.from(projectId).toHexString()],\r\n              },\r\n            ]\r\n          : undefined,\r\n      [projectId, terminalName],\r\n    ),\r\n  })\r\n}\r\n","import { BigNumber, BigNumberish } from '@ethersproject/bignumber'\r\nimport { V1ContractName } from 'models/v1/contracts'\r\n\r\nimport useContractReader from './ContractReader'\r\n\r\n/** Returns URI for project with `projectId`. */\r\nexport default function useUriOfProject(projectId: BigNumberish | undefined) {\r\n  return useContractReader<string>({\r\n    contract: V1ContractName.Projects,\r\n    functionName: 'uriOf',\r\n    args: projectId ? [BigNumber.from(projectId).toHexString()] : null,\r\n  })\r\n}\r\n","import { v2ProjectRoute } from 'utils/routes'\r\n\r\nexport default function V2BugUpdates() {\r\n  return (\r\n    <div style={{ maxWidth: 800, margin: '0 auto', padding: 20 }}>\r\n      <h1>Juicebox V2 Contracts Bug</h1>\r\n      <p>\r\n        A minor bug has been identified in the Juicebox protocol V2 contracts.\r\n        No funds are in danger, and projects are unlikely to be affected. Link\r\n        to bug description and fix:{' '}\r\n        <a\r\n          href=\"https://github.com/jbx-protocol/juice-contracts-v2/pull/265\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          github.com/jbx-protocol/juice-contracts-v2/pull/265\r\n        </a>\r\n      </p>\r\n      <p>The bug has no impact on Juicebox V1 projects. </p>\r\n      <br />\r\n      <br />\r\n      <section>\r\n        <h2>Roadmap</h2>\r\n        <h4>(Done) Disable project creation + V2 payments</h4>\r\n        <p>\r\n          To make project migration easier, creating projects on juicebox.money\r\n          will be temporarily disabled along with payments to existing V2\r\n          projects with a 0 treasury balance.\r\n        </p>\r\n        <h4>(Done) Redeploy Juicebox V2 protocol contracts</h4>\r\n        <p>\r\n          Redeployed contracts will include a fix, but will otherwise be\r\n          functionally identical to the current protocol contracts.\r\n        </p>\r\n        <h4>(Done) Update juicebox.money app to use new contracts</h4>\r\n        <p>\r\n          Once the contracts have been redeployed, the app will be updated to\r\n          use these contracts, and to provide an interface for existing V2\r\n          projects to reconfigure their funding cycles with the new contracts.\r\n        </p>\r\n        <h4>(Done) Enabling new projects and project migration.</h4>\r\n        <p>\r\n          To re-enable project creation, the JuiceboxDAO multisig members must\r\n          migrate the JuiceboxDAO project (https://juicebox.money/#\r\n          {v2ProjectRoute({ projectId: 1 })}) as soon as possible, so that it\r\n          can start accepting fees from new projects.\r\n        </p>\r\n        <h4>(In progress) Project migration.</h4>\r\n        <p>\r\n          JuiceboxDAO and Peel will support existing V2 projects to reconfigure\r\n          on the new V2 contracts as needed, and ensure all token balances are\r\n          migrated.\r\n        </p>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n","import Landing from 'pages'\r\nimport PrivacyPolicy from 'pages/privacy'\r\nimport Projects from 'pages/projects'\r\nimport Loading from 'components/Loading'\r\nimport V1Dashboard from 'pages/p'\r\nimport V2BugUpdates from 'pages/v2-bug-updates'\r\n\r\nimport { fathom } from 'lib/fathom'\r\nimport { V1CurrencyProvider } from 'providers/v1/V1CurrencyProvider'\r\nimport { V2UserProvider } from 'providers/v2/UserProvider'\r\nimport { usePageTitle } from 'hooks/PageTitle'\r\nimport { lazy, Suspense, useEffect } from 'react'\r\nimport { Redirect, useParams } from 'react-router'\r\nimport { HashRouter, Route, Switch, useLocation } from 'react-router-dom'\r\n\r\nconst V1Create = lazy(() => import('pages/v1/create'))\r\nconst V2Create = lazy(() => import('pages/create'))\r\nconst V2DashboardGateway = lazy(() => import('pages/v2/p/V2DashboardGateway'))\r\n\r\nfunction CatchallRedirect() {\r\n  const route = useParams<{ route: string }>()['route']\r\n  return <Redirect to={'/p/' + route} />\r\n}\r\n\r\nfunction usePageViews() {\r\n  const location = useLocation()\r\n\r\n  useEffect(() => {\r\n    fathom?.trackPageview({\r\n      url: location.pathname,\r\n    })\r\n  }, [location])\r\n}\r\n\r\nfunction JuiceboxSwitch() {\r\n  usePageViews()\r\n  usePageTitle()\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        <V1CurrencyProvider>\r\n          <Landing />\r\n        </V1CurrencyProvider>\r\n      </Route>\r\n\r\n      <Route path=\"/create\">\r\n        <Suspense fallback={<Loading />}>\r\n          <V2Create />\r\n        </Suspense>\r\n      </Route>\r\n      <Route path=\"/v1/create\">\r\n        <V1CurrencyProvider>\r\n          <Suspense fallback={<Loading />}>\r\n            <V1Create />\r\n          </Suspense>\r\n        </V1CurrencyProvider>{' '}\r\n      </Route>\r\n\r\n      <Route path=\"/projects/:owner\">\r\n        <Projects />\r\n      </Route>\r\n      <Route path=\"/projects\">\r\n        <Projects />\r\n      </Route>\r\n\r\n      <Route path=\"/@:handle\">\r\n        <Suspense fallback={<Loading />}>\r\n          <V2UserProvider>\r\n            <V2DashboardGateway />\r\n          </V2UserProvider>\r\n        </Suspense>\r\n      </Route>\r\n\r\n      <Route path=\"/p/:handle\">\r\n        <V1Dashboard />\r\n      </Route>\r\n\r\n      <Route path=\"/v2/p/:projectId\">\r\n        <Suspense fallback={<Loading />}>\r\n          <V2UserProvider>\r\n            <V2DashboardGateway />\r\n          </V2UserProvider>\r\n        </Suspense>\r\n      </Route>\r\n\r\n      <Route path=\"/privacy\">\r\n        <PrivacyPolicy />\r\n      </Route>\r\n      <Route path=\"/v2-bug-updates\">\r\n        <V2BugUpdates />\r\n      </Route>\r\n      <Route path=\"/:route\">\r\n        <CatchallRedirect />\r\n      </Route>\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default function Router() {\r\n  return (\r\n    <HashRouter>\r\n      <JuiceboxSwitch />\r\n    </HashRouter>\r\n  )\r\n}\r\n","import { Layout, Modal, Space } from 'antd'\r\nimport { Content } from 'antd/lib/layout/layout'\r\n\r\nimport { NetworkContext } from 'contexts/networkContext'\r\nimport { NetworkName } from 'models/network-name'\r\nimport { useContext, useLayoutEffect, useState } from 'react'\r\n\r\nimport Navbar from 'components/Navbar'\r\n\r\nimport useMobile from 'hooks/Mobile'\r\n\r\nimport { readNetwork } from 'constants/networks'\r\n\r\nimport Router from './Router'\r\n\r\nfunction App() {\r\n  const [switchNetworkModalVisible, setSwitchNetworkModalVisible] =\r\n    useState<boolean>()\r\n\r\n  const { signerNetwork } = useContext(NetworkContext)\r\n  // eslint-disable-next-line no-console\r\n  console.log(signerNetwork)\r\n  const isMobile = useMobile()\r\n  const networkName = readNetwork.name\r\n  // eslint-disable-next-line no-console\r\n  console.log( readNetwork.name)\r\n  const supportedNetworks: NetworkName[] = [\r\n    NetworkName.mainnet,\r\n    NetworkName.rinkeby,\r\n    NetworkName.kovan\r\n  ]\r\n\r\n  useLayoutEffect(() => {\r\n    if (!signerNetwork) return\r\n\r\n    setSwitchNetworkModalVisible(signerNetwork !== networkName)\r\n  }, [networkName, signerNetwork])\r\n\r\n  return (\r\n    <>\r\n      <Layout\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          height: '100%',\r\n          background: 'transparent',\r\n        }}\r\n      >\r\n        <Navbar />\r\n        <Content style={isMobile ? { paddingTop: 40 } : {}}>\r\n          <Router />\r\n        </Content>\r\n      </Layout>\r\n\r\n      <Modal\r\n        visible={switchNetworkModalVisible}\r\n        centered\r\n        closable={false}\r\n        footer={null}\r\n      >\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            height: 200,\r\n          }}\r\n        >\r\n          <Space direction=\"vertical\">\r\n            <h2>Connect wallet to {networkName}</h2>\r\n            <div>Or, go to:</div>\r\n            {supportedNetworks\r\n              .filter(n => process.env.REACT_APP_INFURA_NETWORK !== n)\r\n              .map(_n => {\r\n                const subDomain = _n === NetworkName.mainnet ? '' : _n + '.'\r\n\r\n                return (\r\n                  <a key={_n} href={`https://${subDomain}juicebox.money`}>\r\n                    {subDomain}juicebox.money\r\n                  </a>\r\n                )\r\n              })}\r\n          </Space>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","export const SUPPORTED_LOCALES = ['en', 'zh', 'ru', 'tr', 'es', 'pt', 'fr']\r\ntype SupportedLocale = typeof SUPPORTED_LOCALES[number]\r\n\r\nexport const DEFAULT_LOCALE: SupportedLocale = 'en'\r\n","import { i18n } from '@lingui/core'\r\nimport {\r\n  detect,\r\n  fromUrl,\r\n  fromStorage,\r\n  fromNavigator,\r\n} from '@lingui/detect-locale'\r\nimport { I18nProvider } from '@lingui/react'\r\nimport { ReactNode, useEffect } from 'react'\r\nimport { en, zh, ru, tr, es, pt, fr } from 'make-plural/plurals'\r\nimport defaultLocale from 'locales/en/messages'\r\n\r\nimport { SUPPORTED_LOCALES, DEFAULT_LOCALE } from 'constants/locale'\r\n\r\n// load plural configs\r\ni18n.loadLocaleData({\r\n  en: { plurals: en },\r\n  zh: { plurals: zh },\r\n  ru: { plurals: ru },\r\n  tr: { plurals: tr },\r\n  pt: { plurals: pt },\r\n  es: { plurals: es },\r\n  fr: { plurals: fr },\r\n})\r\n\r\nconst getLocale = (): string => {\r\n  let locale =\r\n    detect(fromUrl('lang'), fromStorage('lang'), fromNavigator()) ??\r\n    DEFAULT_LOCALE\r\n\r\n  if (!SUPPORTED_LOCALES.includes(locale)) {\r\n    locale = DEFAULT_LOCALE\r\n  }\r\n\r\n  return locale\r\n}\r\n\r\nconst activateDefaultLocale = () => {\r\n  const { messages } = defaultLocale\r\n  i18n.load(DEFAULT_LOCALE, messages)\r\n  i18n.activate(DEFAULT_LOCALE)\r\n}\r\n\r\nconst dynamicActivate = async (locale: string) => {\r\n  try {\r\n    const { messages } = await import(`../locales/${locale}/messages`)\r\n\r\n    i18n.load(locale, messages)\r\n    i18n.activate(locale)\r\n  } catch (e) {\r\n    console.error(`Error loading locale \"${locale}:\"`, e)\r\n    // fall back to default locale\r\n    activateDefaultLocale()\r\n  }\r\n}\r\n\r\nexport default function LanguageProvider({\r\n  children,\r\n}: {\r\n  children: ReactNode\r\n}) {\r\n  useEffect(() => {\r\n    const locale = getLocale()\r\n    if (locale === DEFAULT_LOCALE) {\r\n      return activateDefaultLocale()\r\n    }\r\n\r\n    dynamicActivate(locale)\r\n  }, [])\r\n\r\n  return <I18nProvider i18n={i18n}>{children}</I18nProvider>\r\n}\r\n","import React from 'react'\r\nimport { QueryClient, QueryClientProvider } from 'react-query'\r\nimport { ReactQueryDevtools } from 'react-query/devtools'\r\n\r\nconst queryClient = new QueryClient()\r\n\r\nconst ReactQueryProvider: React.FC = ({ children }) => (\r\n  <QueryClientProvider client={queryClient}>\r\n    {children}\r\n    <ReactQueryDevtools initialIsOpen={false} />\r\n  </QueryClientProvider>\r\n)\r\n\r\nexport default ReactQueryProvider\r\n","import Onboard from 'bnc-onboard'\r\nimport { Subscriptions } from 'bnc-onboard/dist/src/interfaces'\r\n\r\nimport { readNetwork } from 'constants/networks'\r\n\r\nconst appName = 'Juicebox'\r\nconst networkId = readNetwork.chainId\r\nconst rpcUrl = readNetwork.rpcUrl\r\nconst dappId = process.env.REACT_APP_BLOCKNATIVE_API_KEY\r\n\r\n// TODO(odd-amphora): Add support for Formatic, Portis, etc. if requested.\r\nexport function initOnboard(subscriptions: Subscriptions, darkMode: boolean) {\r\n  return Onboard({\r\n    dappId,\r\n    hideBranding: true,\r\n    networkId,\r\n    darkMode,\r\n    subscriptions,\r\n    walletSelect: {\r\n      wallets: [\r\n        { walletName: 'metamask' },\r\n        {\r\n          walletName: 'trezor',\r\n          appUrl: 'https://juicebox.money/#/',\r\n          email: 'me.jango@protonmail.com',\r\n          rpcUrl,\r\n        },\r\n        {\r\n          walletName: 'ledger',\r\n          rpcUrl,\r\n        },\r\n        {\r\n          walletName: 'walletConnect',\r\n          infuraKey: `${process.env.REACT_APP_INFURA_ID}`,\r\n        },\r\n        { walletName: 'coinbase' },\r\n        { walletName: 'status' },\r\n        { walletName: 'walletLink', rpcUrl },\r\n        { walletName: 'gnosis' },\r\n        { walletName: 'keystone', appName: 'React Demo', rpcUrl },\r\n        {\r\n          walletName: 'lattice',\r\n          appName,\r\n          rpcUrl,\r\n        },\r\n        { walletName: 'trust', rpcUrl },\r\n        { walletName: 'opera' },\r\n        { walletName: 'operaTouch' },\r\n        { walletName: 'imToken', rpcUrl },\r\n        { walletName: 'meetone' },\r\n        { walletName: 'tally' },\r\n        { walletName: 'authereum', disableNotifications: true },\r\n      ],\r\n    },\r\n    walletCheck: [\r\n      { checkName: 'derivationPath' },\r\n      { checkName: 'connect' },\r\n      { checkName: 'accounts' },\r\n      { checkName: 'network' },\r\n    ],\r\n  })\r\n}\r\n","import { Web3Provider } from '@ethersproject/providers'\r\n\r\nimport { NetworkContext } from 'contexts/networkContext'\r\nimport { NetworkName } from 'models/network-name'\r\nimport { useCallback, useContext, useEffect, useState } from 'react'\r\n\r\nimport { initOnboard } from 'utils/onboard'\r\nimport { API, Subscriptions, Wallet } from 'bnc-onboard/dist/src/interfaces'\r\nimport { ThemeContext } from 'contexts/themeContext'\r\n\r\nimport { readNetwork } from 'constants/networks'\r\nimport { NETWORKS } from 'constants/networks'\r\n\r\nconst KEY_SELECTED_WALLET = 'selectedWallet'\r\n\r\nexport const NetworkProvider: React.FC = ({ children }) => {\r\n  const { isDarkMode } = useContext(ThemeContext)\r\n\r\n  const [signingProvider, setSigningProvider] = useState<Web3Provider>()\r\n  const [previousNetwork, setPreviousNetwork] = useState<NetworkName>()\r\n  const [network, setNetwork] = useState<NetworkName>()\r\n  const [account, setAccount] = useState<string>()\r\n  const [onboard, setOnboard] = useState<API>()\r\n\r\n  const resetWallet = useCallback(() => {\r\n    onboard?.walletReset()\r\n    setSigningProvider(undefined)\r\n    window.localStorage.setItem(KEY_SELECTED_WALLET, '')\r\n  }, [onboard])\r\n\r\n  const selectWallet = async () => {\r\n    resetWallet()\r\n\r\n    // Open select wallet modal.\r\n    const selectedWallet = await onboard?.walletSelect()\r\n\r\n    // User quit modal.\r\n    if (!selectedWallet) {\r\n      return\r\n    }\r\n\r\n    // Wait for wallet selection initialization\r\n    await onboard?.walletCheck()\r\n  }\r\n\r\n  const logOut = async () => {\r\n    resetWallet()\r\n  }\r\n\r\n  const onNetworkChanged = useCallback(\r\n    (newNetwork: NetworkName | undefined) => {\r\n      setPreviousNetwork(network)\r\n      setNetwork(newNetwork)\r\n    },\r\n    [network],\r\n  )\r\n\r\n  // Initialize Network\r\n  useEffect(() => {\r\n    if (onboard) return\r\n\r\n    const selectWallet = async (newWallet: Wallet) => {\r\n      if (newWallet.provider) {\r\n        // Reset the account when a new wallet is connected, as it will be resolved by the provider.\r\n        setAccount(undefined)\r\n        window.localStorage.setItem(KEY_SELECTED_WALLET, newWallet.name || '')\r\n        setSigningProvider(new Web3Provider(newWallet.provider))\r\n      } else {\r\n        resetWallet()\r\n      }\r\n    }\r\n    const config: Subscriptions = {\r\n      address: setAccount,\r\n      wallet: selectWallet,\r\n      network: networkId => onNetworkChanged(NETWORKS[networkId]?.name),\r\n    }\r\n    setOnboard(initOnboard(config, isDarkMode))\r\n  }, [isDarkMode, onNetworkChanged, onboard, resetWallet])\r\n\r\n  // On darkmode changed\r\n  useEffect(() => {\r\n    if (onboard) {\r\n      onboard.config({ darkMode: isDarkMode })\r\n    }\r\n  }, [isDarkMode, onboard])\r\n\r\n  // Refresh Network\r\n  useEffect(() => {\r\n    async function getNetwork() {\r\n      await signingProvider?.ready\r\n\r\n      const network = signingProvider?.network?.chainId\r\n        ? NETWORKS[signingProvider.network.chainId]\r\n        : undefined\r\n\r\n      onNetworkChanged(network?.name)\r\n    }\r\n    getNetwork()\r\n  }, [onNetworkChanged, signingProvider])\r\n\r\n  // Reconnect Wallet\r\n  useEffect(() => {\r\n    const previouslySelectedWallet =\r\n      window.localStorage.getItem(KEY_SELECTED_WALLET)\r\n    if (previouslySelectedWallet && onboard) {\r\n      onboard.walletSelect(previouslySelectedWallet)\r\n    }\r\n  }, [onboard])\r\n\r\n  // Refresh when network changes\r\n  useEffect(() => {\r\n    if (!previousNetwork || !network) return\r\n    if (previousNetwork === network) return\r\n    window.location.reload()\r\n  }, [network, previousNetwork])\r\n\r\n  return (\r\n    <NetworkContext.Provider\r\n      value={{\r\n        signerNetwork: network,\r\n        signingProvider:\r\n          signingProvider && network === readNetwork.name && account\r\n            ? signingProvider\r\n            : undefined,\r\n        userAddress: account,\r\n        onSelectWallet: selectWallet,\r\n        onLogOut: logOut,\r\n      }}\r\n    >\r\n      {children}\r\n    </NetworkContext.Provider>\r\n  )\r\n}\r\n","import type { ThemeContextType } from 'contexts/themeContext'\r\n\r\nimport { useEffect, useState } from 'react'\r\n\r\nimport { juiceTheme } from 'constants/theme'\r\nimport { ThemeOption } from 'constants/theme/theme-option'\r\n\r\nconst flattenNestedObject = (\r\n  nestedObj: Record<string, any>, // eslint-disable-line @typescript-eslint/no-explicit-any\r\n  prefix?: string,\r\n): Record<string, string> =>\r\n  Object.keys(nestedObj).reduce((acc, key) => {\r\n    const name = prefix ? prefix + '-' + key : key\r\n    return {\r\n      ...acc,\r\n      ...(typeof nestedObj[key] === 'string'\r\n        ? { [name]: nestedObj[key] }\r\n        : flattenNestedObject(nestedObj[key], name)),\r\n    }\r\n  }, {})\r\n\r\nexport function useJuiceTheme(storageKey = 'jb_theme'): ThemeContextType {\r\n  const initialThemeOption =\r\n    (localStorage.getItem(storageKey) as ThemeOption) || ThemeOption.light\r\n\r\n  const [currentThemeOption, setCurrentThemeOption] =\r\n    useState<ThemeOption>(initialThemeOption)\r\n\r\n  const [isDarkMode, setIsDarkMode] = useState<boolean>(\r\n    initialThemeOption === ThemeOption.dark,\r\n  )\r\n\r\n  const setRootVarsForThemeOption = (themeOption: ThemeOption) => {\r\n    Object.entries(flattenNestedObject(juiceTheme(themeOption).colors)).forEach(\r\n      ([key, value]) =>\r\n        document.documentElement.style.setProperty('--' + key, value),\r\n    )\r\n\r\n    Object.entries(juiceTheme(themeOption).radii).forEach(([key, value]) => {\r\n      if (!value) return\r\n      document.documentElement.style.setProperty(\r\n        '--radius-' + key,\r\n        value.toString(),\r\n      )\r\n    })\r\n  }\r\n\r\n  useEffect(\r\n    () => setRootVarsForThemeOption(initialThemeOption),\r\n    [initialThemeOption],\r\n  )\r\n\r\n  useEffect(\r\n    () => setIsDarkMode(currentThemeOption === ThemeOption.dark),\r\n    [currentThemeOption],\r\n  )\r\n\r\n  return {\r\n    themeOption: currentThemeOption,\r\n    theme: juiceTheme(currentThemeOption),\r\n    isDarkMode: isDarkMode,\r\n    forThemeOption: map => map[currentThemeOption],\r\n    setThemeOption: (themeOption: ThemeOption) => {\r\n      setRootVarsForThemeOption(themeOption)\r\n      setCurrentThemeOption(themeOption)\r\n      localStorage.setItem(storageKey, themeOption)\r\n    },\r\n  }\r\n}\r\n","import { ThemeContext } from 'contexts/themeContext'\r\nimport { useJuiceTheme } from 'hooks/JuiceTheme'\r\n\r\nexport const ThemeProvider: React.FC = ({ children }) => {\r\n  const juiceTheme = useJuiceTheme()\r\n\r\n  return (\r\n    <ThemeContext.Provider value={juiceTheme}>{children}</ThemeContext.Provider>\r\n  )\r\n}\r\n","import { Contract } from '@ethersproject/contracts'\r\nimport { JsonRpcProvider, JsonRpcSigner } from '@ethersproject/providers'\r\n\r\nimport { NetworkContext } from 'contexts/networkContext'\r\nimport { V1ContractName } from 'models/v1/contracts'\r\nimport { V1Contracts } from 'models/v1/contracts'\r\nimport { NetworkName } from 'models/network-name'\r\nimport { useContext, useEffect, useState } from 'react'\r\n\r\nimport { readProvider } from 'constants/readProvider'\r\nimport { readNetwork } from 'constants/networks'\r\n\r\nexport function useV1ContractLoader() {\r\n  const [contracts, setContracts] = useState<V1Contracts>()\r\n\r\n  const { signingProvider } = useContext(NetworkContext)\r\n\r\n  useEffect(() => {\r\n    async function loadContracts() {\r\n      try {\r\n        const network = readNetwork.name\r\n\r\n        // Contracts can be used read-only without a signer, but require a signer to create transactions.\r\n        const signerOrProvider = signingProvider?.getSigner() ?? readProvider\r\n\r\n        const loadContractKeyPair = async (contractName: V1ContractName) => ({\r\n          key: contractName,\r\n          val: await loadContract(contractName, network, signerOrProvider),\r\n        })\r\n\r\n        const newContracts = (\r\n          await Promise.all(\r\n            Object.values(V1ContractName).map(loadContractKeyPair),\r\n          )\r\n        ).reduce(\r\n          (acc, { key, val }) => ({\r\n            ...acc,\r\n            [key]: val,\r\n          }),\r\n          {} as V1Contracts,\r\n        )\r\n\r\n        setContracts(newContracts)\r\n      } catch (e) {\r\n        console.error('CONTRACT LOADER ERROR:', e)\r\n      }\r\n    }\r\n\r\n    loadContracts()\r\n  }, [signingProvider, setContracts])\r\n\r\n  return contracts\r\n}\r\n\r\nconst loadContract = async (\r\n  contractName: keyof typeof V1ContractName,\r\n  network: NetworkName,\r\n  signerOrProvider: JsonRpcSigner | JsonRpcProvider,\r\n): Promise<Contract> => {\r\n  const contract = await import(\r\n    `@jbx-protocol/contracts-v1/deployments/${network}/${contractName}.json`\r\n  )\r\n  return new Contract(contract.address, contract.abi, signerOrProvider)\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { V1UserContext } from 'contexts/v1/userContext'\r\nimport { useV1ContractLoader } from 'hooks/v1/V1ContractLoader'\r\nimport { useGasPriceQuery } from 'hooks/GasPrice'\r\nimport { useTransactor } from 'hooks/Transactor'\r\n\r\nexport const V1UserProvider: React.FC = ({ children }) => {\r\n  const contracts = useV1ContractLoader()\r\n\r\n  const { data: gasPrice } = useGasPriceQuery('average')\r\n\r\n  const transactor = useTransactor({\r\n    gasPrice: gasPrice ? BigNumber.from(gasPrice) : undefined,\r\n  })\r\n\r\n  return (\r\n    <V1UserContext.Provider\r\n      value={{\r\n        contracts,\r\n        transactor,\r\n      }}\r\n    >\r\n      {children}\r\n    </V1UserContext.Provider>\r\n  )\r\n}\r\n","import './styles/antd.css'\r\nimport './styles/index.scss'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport App from 'App'\r\nimport LanguageProvider from 'providers/LanguageProvider'\r\nimport ReactQueryProvider from 'providers/ReactQueryProvider'\r\n\r\nimport { NetworkProvider } from 'providers/NetworkProvider'\r\nimport { ThemeProvider } from 'providers/ThemeProvider'\r\nimport { V1UserProvider } from 'providers/v1/UserProvider'\r\n\r\nimport store from './redux/store'\r\nimport initSentry from './lib/sentry'\r\n\r\ninitSentry()\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ReactQueryProvider>\r\n      <Provider store={store}>\r\n        <LanguageProvider>\r\n          <ThemeProvider>\r\n            <NetworkProvider>\r\n              <V1UserProvider>\r\n                <App />\r\n              </V1UserProvider>\r\n            </NetworkProvider>\r\n          </ThemeProvider>\r\n        </LanguageProvider>\r\n      </Provider>\r\n    </ReactQueryProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n","import { InputNumber, Form } from 'antd'\r\nimport { CSSProperties } from 'react'\r\nimport { formattedNum } from 'utils/formatNumber'\r\n\r\nimport { FormItemExt } from 'components/formItems/formItemExt'\r\n\r\nexport default function FormattedNumberInput({\r\n  style,\r\n  min,\r\n  max,\r\n  step,\r\n  value,\r\n  disabled,\r\n  placeholder,\r\n  suffix,\r\n  prefix,\r\n  accessory,\r\n  formItemProps,\r\n  onChange,\r\n  isInteger,\r\n}: {\r\n  style?: CSSProperties\r\n  min?: number\r\n  max?: number\r\n  step?: number\r\n  value?: string\r\n  placeholder?: string\r\n  disabled?: boolean\r\n  suffix?: string\r\n  prefix?: string\r\n  accessory?: JSX.Element\r\n  onChange?: (val?: string) => void\r\n  isInteger?: boolean\r\n} & FormItemExt) {\r\n  const thousandsSeparator = ','\r\n  const decimalSeparator = '.'\r\n  const _suffix = suffix ? ` ${suffix}` : ''\r\n  const _prefix = prefix ? `${prefix}` : ''\r\n  const allowedValueChars = [\r\n    '0',\r\n    '1',\r\n    '2',\r\n    '3',\r\n    '4',\r\n    '5',\r\n    '6',\r\n    '7',\r\n    '8',\r\n    '9',\r\n    thousandsSeparator,\r\n  ]\r\n  if (!isInteger) {\r\n    allowedValueChars.push(decimalSeparator)\r\n  }\r\n\r\n  return (\r\n    <div className=\"formatted-number-input\">\r\n      <Form.Item {...formItemProps}>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            position: 'relative',\r\n            ...style,\r\n          }}\r\n        >\r\n          <InputNumber\r\n            className={accessory ? 'antd-no-number-handler' : ''}\r\n            min={min}\r\n            max={max}\r\n            style={{ width: '100%' }}\r\n            value={value !== undefined ? parseFloat(value) : undefined}\r\n            step={step ?? 1}\r\n            stringMode={true}\r\n            placeholder={placeholder}\r\n            formatter={(val?: string | number | undefined) =>\r\n              _prefix +\r\n              (val\r\n                ? formattedNum(val, {\r\n                    thousandsSeparator,\r\n                    decimalSeparator,\r\n                  })\r\n                : '') +\r\n              _suffix\r\n            }\r\n            parser={(val?: string) =>\r\n              parseFloat(\r\n                (val !== undefined ? val : '0')\r\n                  .replace(new RegExp(thousandsSeparator, 'g'), '')\r\n                  .replace(_prefix, '')\r\n                  .replace(_suffix, '')\r\n                  .split('')\r\n                  .filter(char => allowedValueChars.includes(char))\r\n                  .join('') || '0',\r\n              )\r\n            }\r\n            disabled={disabled}\r\n            onChange={_value => {\r\n              onChange?.(_value?.toString())\r\n            }}\r\n          />\r\n          <div\r\n            style={{\r\n              zIndex: 1,\r\n              fontSize: '.8rem',\r\n              position: 'absolute',\r\n              right: 5,\r\n            }}\r\n          >\r\n            {accessory && <div>{accessory}</div>}\r\n          </div>\r\n        </div>\r\n      </Form.Item>\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}